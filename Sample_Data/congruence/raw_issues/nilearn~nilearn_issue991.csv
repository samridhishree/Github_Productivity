"rectype","issueid","project_owner","project_name","actor","time","text","action","title"
"issue_title","991","nilearn","nilearn","aabadie","2016-02-17 09:56:03","This should fix #986 by performing 3 measures and return the max value.
","start issue","[MRG+1] Make memory profiling tests more robust"
"issue_closed","991","nilearn","nilearn","AlexandreAbraham","2016-02-17 14:38:07","","closed issue","[MRG+1] Make memory profiling tests more robust"
"pull_request_title","991","nilearn","nilearn","aabadie","2016-02-17 09:56:03","This should fix #986 by performing 3 measures and return the max value.
","f0668bceb079fb1786d1b43e4fb48d7174786692","[MRG+1] Make memory profiling tests more robust"
"pull_request_merged","991","nilearn","nilearn","AlexandreAbraham","2016-02-17 14:38:07","[MRG+1] Make memory profiling tests more robust","b0d3ed7f060b480172fc530ff4f358f30656c828","Pull request merge from aabadie/nilearn:better_mem_profiling to nilearn/nilearn:master"
"issue_comment","991","nilearn","nilearn","GaelVaroquaux","2016-02-17 10:23:36","Another option would be to have the function that we are benching do it's operations three times. Indeed, I suspect that the reason that we are witnessing zero memory usage is that the function is too fast and memory is cleared before. Thus the strategy of running the function 3 times inside the memory_usage might be more reliable.
","",""
"issue_comment","991","nilearn","nilearn","aabadie","2016-02-17 10:37:58","> Thus the strategy of running the function 3 times inside the memory_usage might be more reliable.

Yes, but this would require to apply the change upstream.
","",""
"issue_comment","991","nilearn","nilearn","GaelVaroquaux","2016-02-17 10:45:49","> Yes, but this would require to apply the change upstream.

Or just to do:

<pre>
def func_3_times(args, **kwargs):
   for _ in range(3):
        func(args, **kwargs)
</pre>

and to bench func_3_times instead of func. No?
","",""
"issue_comment","991","nilearn","nilearn","aabadie","2016-02-17 11:00:56","> Or just to do:
> 
> <pre>
> def func_3_times(args, **kwargs):
>    for _ in range(3):
>         func(args, **kwargs)
> </pre>
> 
> and to bench func_3_times instead of func. No?

Nice suggestion which makes sense and works as well. I pushed a commit with it.
","",""
"issue_comment","991","nilearn","nilearn","aabadie","2016-02-17 13:05:38","@GaelVaroquaux, are you fine with this PR ?
","",""
"issue_comment","991","nilearn","nilearn","GaelVaroquaux","2016-02-17 13:07:54","LGTM. +1 for merge
","",""
"pull_request_commit","991","nilearn","nilearn","aabadie","2016-02-17 09:54:29","performing 3 memory consumption measure and keep the max to make memory profiling more robust","50d2eef83336ce967bebd69cba582b2bc892cd3e",""
"pull_request_commit","991","nilearn","nilearn","aabadie","2016-02-17 10:58:13","compute memory usage of 3 calls of func","f0668bceb079fb1786d1b43e4fb48d7174786692",""
