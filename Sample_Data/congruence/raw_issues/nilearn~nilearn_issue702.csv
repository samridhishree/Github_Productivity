"rectype","issueid","project_owner","project_name","actor","time","text","action","title"
"issue_title","702","nilearn","nilearn","arthurmensch","2015-07-17 13:35:54","This PR adds an utility function check_embedded_nifti_masker, that retrieves a MultiNiftiMasker / NiftiMasker from the parameters of a given estimator instance.

This would be useful in decomposition module, spacenet module, spectral clustering module, and would help sorting issue #688 

Ping @dohmatob @ahoyosid @AlexandreAbraham @GaelVaroquaux 
","start issue","[MRG] Added check_embedded_nifti_masker"
"issue_closed","702","nilearn","nilearn","lesteve","2015-08-20 11:40:45","","closed issue","[MRG] Added check_embedded_nifti_masker"
"pull_request_title","702","nilearn","nilearn","arthurmensch","2015-07-17 13:35:54","This PR adds an utility function check_embedded_nifti_masker, that retrieves a MultiNiftiMasker / NiftiMasker from the parameters of a given estimator instance.

This would be useful in decomposition module, spacenet module, spectral clustering module, and would help sorting issue #688 

Ping @dohmatob @ahoyosid @AlexandreAbraham @GaelVaroquaux 
","5fbbde46c6815b39c917b8f40486f1e28e349a16","[MRG] Added check_embedded_nifti_masker"
"pull_request_merged","702","nilearn","nilearn","lesteve","2015-08-20 11:40:45","[MRG] Added check_embedded_nifti_masker","7e964de2bca2fbcb1a58aea1d5ff48e2c39482e7","Pull request merge from arthurmensch/nilearn:check_embedded_nifti_masker to nilearn/nilearn:master"
"issue_comment","702","nilearn","nilearn","bthirion","2015-08-18 21:55:32","Besides syntactic trifle, looks good.
","",""
"issue_comment","702","nilearn","nilearn","arthurmensch","2015-08-19 07:07:03","Should I add some kind of developer note in the documentation ?
","",""
"issue_comment","702","nilearn","nilearn","lesteve","2015-08-20 09:24:26","> Should I add some kind of developer note in the documentation ?

I reckon the docstring is probably good enough.
","",""
"issue_comment","702","nilearn","nilearn","lesteve","2015-08-20 11:40:43","Merging, thanks!
","",""
"issue_comment","702","nilearn","nilearn","AlexandreAbraham","2015-07-17 14:14:43","Good job in un-spaghettying stuff.
","",""
"issue_comment","702","nilearn","nilearn","AlexandreAbraham","2015-07-17 14:59:52","Once comments are addressed, :+1:
","",""
"pull_request_commit_comment","702","nilearn","nilearn","GaelVaroquaux","2015-07-17 14:04:23","You need to be a bit more explicit about what this does:
- This creates a masker object if it does not exist
- Propagates the parameters (list them explicitly) to this masker.
","5fbbde46c6815b39c917b8f40486f1e28e349a16","(None, '', u'nilearn/input_data/masker_validation.py')"
"pull_request_commit_comment","702","nilearn","nilearn","GaelVaroquaux","2015-07-17 14:05:49","You should always inherit from object.

Also, please use a slightly more explicit name, like ""TestClass"".
","5fbbde46c6815b39c917b8f40486f1e28e349a16","(None, '', u'nilearn/input_data/tests/test_masker_validation.py')"
"pull_request_commit_comment","702","nilearn","nilearn","AlexandreAbraham","2015-07-17 14:13:47","Why do you pop it?
","5fbbde46c6815b39c917b8f40486f1e28e349a16","(None, '', u'nilearn/input_data/masker_validation.py')"
"pull_request_commit_comment","702","nilearn","nilearn","lesteve","2015-07-17 14:32:56","Also this is not a base class but a function ...
","5fbbde46c6815b39c917b8f40486f1e28e349a16","(None, '', u'nilearn/input_data/masker_validation.py')"
"pull_request_commit_comment","702","nilearn","nilearn","lesteve","2015-07-17 14:38:13","I guess MockMasker or MaskerMock might be the name you want to use.
","5fbbde46c6815b39c917b8f40486f1e28e349a16","(None, '', u'nilearn/input_data/tests/test_masker_validation.py')"
"pull_request_commit_comment","702","nilearn","nilearn","lesteve","2015-07-17 14:39:51","Should you check in the code that `isinstance(instance, BaseEstimator)` ?

Also you could call it estimator rather than instance.
","5fbbde46c6815b39c917b8f40486f1e28e349a16","(None, '', u'nilearn/input_data/masker_validation.py')"
"pull_request_commit_comment","702","nilearn","nilearn","lesteve","2015-07-17 14:47:56","You probably want to check identity here i.e. `masker.mask_img is mask`
","5fbbde46c6815b39c917b8f40486f1e28e349a16","(None, '', u'nilearn/input_data/tests/test_masker_validation.py')"
"pull_request_commit_comment","702","nilearn","nilearn","lesteve","2015-07-17 14:48:39","You probably want to check strict type equality rather than inheritance: `type(masker) == MultiNiftiMasker`
","5fbbde46c6815b39c917b8f40486f1e28e349a16","(None, '', u'nilearn/input_data/tests/test_masker_validation.py')"
"pull_request_commit_comment","702","nilearn","nilearn","lesteve","2015-07-17 14:49:11","same comment about checking the type rather than isinstance
","5fbbde46c6815b39c917b8f40486f1e28e349a16","(None, '', u'nilearn/input_data/tests/test_masker_validation.py')"
"pull_request_commit_comment","702","nilearn","nilearn","AlexandreAbraham","2015-07-17 14:56:56","Since this function will be used internally, I don't think that checking it is necessary.
","5fbbde46c6815b39c917b8f40486f1e28e349a16","(None, '', u'nilearn/input_data/masker_validation.py')"
"pull_request_commit_comment","702","nilearn","nilearn","AlexandreAbraham","2015-07-17 14:59:06","Do you really need to zip that ? You can just reorder the variables. It will make things clearer too.
","5fbbde46c6815b39c917b8f40486f1e28e349a16","(None, '', u'nilearn/input_data/tests/test_masker_validation.py')"
"pull_request_commit_comment","702","nilearn","nilearn","lesteve","2015-07-17 15:16:31","Comment half-lying: masker_type is not necessarily a MultiNiftiMasker
","5fbbde46c6815b39c917b8f40486f1e28e349a16","(None, '', u'nilearn/input_data/masker_validation.py')"
"pull_request_commit_comment","702","nilearn","nilearn","lesteve","2015-07-17 15:20:34","Copying is a bit misleading, given that it takes a reference ...
","5fbbde46c6815b39c917b8f40486f1e28e349a16","(None, '', u'nilearn/input_data/masker_validation.py')"
"pull_request_commit_comment","702","nilearn","nilearn","lesteve","2015-07-17 15:21:02","Again masker_type is not necessarily MultiNiftiMasker
","5fbbde46c6815b39c917b8f40486f1e28e349a16","(None, '', u'nilearn/input_data/masker_validation.py')"
"pull_request_commit_comment","702","nilearn","nilearn","arthurmensch","2015-07-20 11:48:44","In case instance has both mask and mask_img parameters. I will remove it so that it raises ArgumentError in this case
","5fbbde46c6815b39c917b8f40486f1e28e349a16","(None, '', u'nilearn/input_data/masker_validation.py')"
"pull_request_commit_comment","702","nilearn","nilearn","AlexandreAbraham","2015-07-20 12:10:10","I don't get your comment
","5fbbde46c6815b39c917b8f40486f1e28e349a16","(None, '', u'nilearn/input_data/masker_validation.py')"
"pull_request_commit_comment","702","nilearn","nilearn","AlexandreAbraham","2015-07-20 12:15:05","What happens in the MultiPCA is the opposite : we override user's parameter with our defaults values. Or maybe I misunderstood something.
","5fbbde46c6815b39c917b8f40486f1e28e349a16","(None, '', u'nilearn/input_data/masker_validation.py')"
"pull_request_commit_comment","702","nilearn","nilearn","arthurmensch","2015-07-20 12:28:10","This is true. However, doing the opposite is difficult to do in a clean way as we would need to check if user has explicitly provided non default argument.

The bottom line is that I don't think that it makes any sense to allow the user to create a masker and override its parameters in an estimator class.

This warning is especially useful to warn the user that he provided a masker that diverges from default masker embedded within an estimator class (providing 'detrend' = False in MultiPCA for instance)
","5fbbde46c6815b39c917b8f40486f1e28e349a16","(None, '', u'nilearn/input_data/masker_validation.py')"
"pull_request_commit_comment","702","nilearn","nilearn","AlexandreAbraham","2015-07-23 15:06:27","@GaelVaroquaux This remark is the only barrier between my finger and the big green button. Your thoughts on this?
","5fbbde46c6815b39c917b8f40486f1e28e349a16","(None, '', u'nilearn/input_data/masker_validation.py')"
"pull_request_commit_comment","702","nilearn","nilearn","GaelVaroquaux","2015-07-23 15:09:39","Arthur and you can come in my office right now to discuss it, please?
","5fbbde46c6815b39c917b8f40486f1e28e349a16","(None, '', u'nilearn/input_data/masker_validation.py')"
"pull_request_commit_comment","702","nilearn","nilearn","AlexandreAbraham","2015-07-23 15:24:44","I can't right now because I left early to do the groceries.
","5fbbde46c6815b39c917b8f40486f1e28e349a16","(None, '', u'nilearn/input_data/masker_validation.py')"
"pull_request_commit_comment","702","nilearn","nilearn","GaelVaroquaux","2015-07-23 15:25:42","> I can't right now because I left early to do the groceries.

Tomorrow, coffee break?
","5fbbde46c6815b39c917b8f40486f1e28e349a16","(None, '', u'nilearn/input_data/masker_validation.py')"
"pull_request_commit_comment","702","nilearn","nilearn","arthurmensch","2015-07-23 18:41:14","Sorry i missed your mail, tomorrow coffee break?
On 23 Jul 2015 17:25, ""Gael Varoquaux"" notifications@github.com wrote:

> In nilearn/input_data/masker_validation.py
> https://github.com/nilearn/nilearn/pull/702#discussion_r35333806:
> 
> > -    if isinstance(mask, (NiftiMasker, MultiNiftiMasker)):
> > -        # Creating (Multi)NiftiMasker from mask
> > -        params = get_params(masker_type, mask)
> > -        if multi and hasattr(estimator, 'n_jobs'):
> > -            params['n_jobs'] = estimator.n_jobs
> > -        masker = masker_type(memory=estimator.memory,
> > -                             memory_level=estimator.memory_level,
> > -                             verbose=estimator.verbose,
> > -                             **params
> > -                             )
> > -        # Raising warning if providing user has provided a masker
> > -        for param_key in masker.get_params():
> > -            if param_key in parameters and getattr(masker, param_key)\
> > -                    != parameters[param_key]:
> > -                warnings.warn(""Provided mask overrides""
> > -                              "" default/provided parameter %s"" % param_key)
> 
>  I can't right now because I left early to do the groceries.
> Tomorrow, coffee break?
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/nilearn/nilearn/pull/702/files#r35333806.
","5fbbde46c6815b39c917b8f40486f1e28e349a16","(None, '', u'nilearn/input_data/masker_validation.py')"
"pull_request_commit_comment","702","nilearn","nilearn","AlexandreAbraham","2015-07-23 20:24:07","Tomorrow, :coffee: break.
","5fbbde46c6815b39c917b8f40486f1e28e349a16","(None, '', u'nilearn/input_data/masker_validation.py')"
"pull_request_commit_comment","702","nilearn","nilearn","banilo","2015-07-24 04:22:08","turn `multi` into `multi_subject`or `multi_block` to be more explicit? ;) 
","5fbbde46c6815b39c917b8f40486f1e28e349a16","(None, '', u'nilearn/input_data/masker_validation.py')"
"pull_request_commit_comment","702","nilearn","nilearn","banilo","2015-07-24 04:28:05","Isn't it a bit confusing to have a `parameters`and `params` variable in the same namespace?
","5fbbde46c6815b39c917b8f40486f1e28e349a16","(None, '', u'nilearn/input_data/masker_validation.py')"
"pull_request_commit_comment","702","nilearn","nilearn","banilo","2015-07-24 04:30:20","Good point.
","5fbbde46c6815b39c917b8f40486f1e28e349a16","(None, '', u'nilearn/input_data/masker_validation.py')"
"pull_request_commit_comment","702","nilearn","nilearn","banilo","2015-07-24 04:31:40","Isn't nose.\* more basic than sklearn.*? Move up?
","5fbbde46c6815b39c917b8f40486f1e28e349a16","(None, '', u'nilearn/input_data/tests/test_masker_validation.py')"
"pull_request_commit_comment","702","nilearn","nilearn","lesteve","2015-07-27 12:53:21","Not sure this is good practice to rely on `__init__.py` for these imports. I would rather import from their real home, i.e. `.multi_nifti_masker` and `.nifti_masker`.
","5fbbde46c6815b39c917b8f40486f1e28e349a16","(None, '', u'nilearn/input_data/masker_validation.py')"
"pull_request_commit_comment","702","nilearn","nilearn","lesteve","2015-07-27 12:55:15","This doesn't follow PEP 258 or whatever number the docstring PEP is. In particular you should have a short description on one line, then a newline and then a longer description.
","5fbbde46c6815b39c917b8f40486f1e28e349a16","(None, '', u'nilearn/input_data/masker_validation.py')"
"pull_request_commit_comment","702","nilearn","nilearn","lesteve","2015-07-27 12:57:41","It seems like the usual thing is to use `-------` for docstrings, although I agree this is not completely consistent within nilearn. Reference for numpy documentation conventions: https://github.com/numpy/numpy/blob/master/doc/HOWTO_DOCUMENT.rst.txt
","5fbbde46c6815b39c917b8f40486f1e28e349a16","(None, '', u'nilearn/input_data/masker_validation.py')"
"pull_request_commit_comment","702","nilearn","nilearn","lesteve","2015-07-27 12:58:00","Not consistent with parameter name. Same thing for `multi` a few lines below.
","5fbbde46c6815b39c917b8f40486f1e28e349a16","(None, '', u'nilearn/input_data/masker_validation.py')"
"pull_request_commit_comment","702","nilearn","nilearn","lesteve","2015-07-27 13:01:52","typo: overriding
","5fbbde46c6815b39c917b8f40486f1e28e349a16","(None, '', u'nilearn/input_data/masker_validation.py')"
"pull_request_commit_comment","702","nilearn","nilearn","lesteve","2015-07-27 13:05:05","You can get away from using backslashes in a lot of cases in Python:

``` python
conflict_string += (""Parameter {0:s} :\n""
                    ""    Masker parameter {1:s}""
                    ""..."").format(...)
```
","5fbbde46c6815b39c917b8f40486f1e28e349a16","(None, '', u'nilearn/input_data/masker_validation.py')"
"pull_request_commit_comment","702","nilearn","nilearn","lesteve","2015-07-27 13:05:26","Similar comment about backslashes.
","5fbbde46c6815b39c917b8f40486f1e28e349a16","(None, '', u'nilearn/input_data/masker_validation.py')"
"pull_request_commit_comment","702","nilearn","nilearn","lesteve","2015-07-27 13:06:59","Dictionaries are iterated by key by default in python, so you don't need the `.keys()`.
","5fbbde46c6815b39c917b8f40486f1e28e349a16","(None, '', u'nilearn/input_data/masker_validation.py')"
"pull_request_commit_comment","702","nilearn","nilearn","GaelVaroquaux","2015-07-27 13:09:48","> Dictionaries are iterated by key by default in python, so you don't need the
> .keys().

But we should use 'sorted(params)', to avoir having non reproducible
displays / tests (order is not reproducible in the dicts).
","5fbbde46c6815b39c917b8f40486f1e28e349a16","(None, '', u'nilearn/input_data/masker_validation.py')"
"pull_request_commit_comment","702","nilearn","nilearn","lesteve","2015-07-27 13:11:09","Still picking on poor old backslashes ... you can do:

``` python

for mask, multi_subject in (
    (MultiNiftiMasker(), True), (NiftiMasker(), False)):
    ...
```
","5fbbde46c6815b39c917b8f40486f1e28e349a16","(None, '', u'nilearn/input_data/tests/test_masker_validation.py')"
"pull_request_commit_comment","702","nilearn","nilearn","lesteve","2015-07-27 13:11:23","assert_equal gives sligthly nicer error messages.
","5fbbde46c6815b39c917b8f40486f1e28e349a16","(None, '', u'nilearn/input_data/tests/test_masker_validation.py')"
"pull_request_commit_comment","702","nilearn","nilearn","lesteve","2015-07-27 13:11:44","same comment about assert_equal 
","5fbbde46c6815b39c917b8f40486f1e28e349a16","(None, '', u'nilearn/input_data/tests/test_masker_validation.py')"
"pull_request_commit_comment","702","nilearn","nilearn","lesteve","2015-07-27 13:20:27","I don't think you are supposed to end the line with a comma but I may be wrong about that.

Interestingly, looks like the numpy doc is encouraging to put optional in the type but the default value in the parameter description rather than the type, see https://github.com/numpy/numpy/blob/master/doc/HOWTO_DOCUMENT.rst.txt#sections. I don't think that's something which we applied very broadly in nilearn though.
","5fbbde46c6815b39c917b8f40486f1e28e349a16","(None, '', u'nilearn/input_data/masker_validation.py')"
"pull_request_commit_comment","702","nilearn","nilearn","lesteve","2015-07-27 13:35:07","Looks like you have some error with python 2.6 related to these lines but I would have thought that you don't need the `str` here since {0:s} in the template string is going to do it for you. Why am I wrong?
","5fbbde46c6815b39c917b8f40486f1e28e349a16","(None, '', u'nilearn/input_data/masker_validation.py')"
"pull_request_commit_comment","702","nilearn","nilearn","lesteve","2015-07-27 13:37:05","You may want to group nilearn imports together, after the sklearn would make sense.
","5fbbde46c6815b39c917b8f40486f1e28e349a16","(None, '', u'nilearn/input_data/tests/test_masker_validation.py')"
"pull_request_commit_comment","702","nilearn","nilearn","lesteve","2015-07-27 13:41:35","`type(masker) is MultiNiftiMasker`
","5fbbde46c6815b39c917b8f40486f1e28e349a16","(None, '', u'nilearn/input_data/tests/test_masker_validation.py')"
"pull_request_commit_comment","702","nilearn","nilearn","lesteve","2015-07-27 13:41:49","For consistency use `type(masker) is type(mask)`
","5fbbde46c6815b39c917b8f40486f1e28e349a16","(None, '', u'nilearn/input_data/tests/test_masker_validation.py')"
"pull_request_commit_comment","702","nilearn","nilearn","lesteve","2015-07-27 13:41:56","Again check for identity rather than equality: `masker.mask_img is mask.mask_img_`
","5fbbde46c6815b39c917b8f40486f1e28e349a16","(None, '', u'nilearn/input_data/tests/test_masker_validation.py')"
"pull_request_commit_comment","702","nilearn","nilearn","arthurmensch","2015-07-31 13:31:48","Python 2.6 don't automatically convert non string type to string when using this pattern. From 2.7 you can use `r` instead of `s`, which avoid this problem
","5fbbde46c6815b39c917b8f40486f1e28e349a16","(None, '', u'nilearn/input_data/masker_validation.py')"
"pull_request_commit_comment","702","nilearn","nilearn","GaelVaroquaux","2015-07-31 13:51:41","> Python 2.6 don't automatically convert non string type to string when using
> this pattern. From 2.7 you can use r instead of s, which avoid this problem

I am OK with dropping Python 2.6 compat. We just need to update travis
accordingly.
","5fbbde46c6815b39c917b8f40486f1e28e349a16","(None, '', u'nilearn/input_data/masker_validation.py')"
"pull_request_commit_comment","702","nilearn","nilearn","lesteve","2015-07-31 14:11:28","> I am OK with dropping Python 2.6 compat

Wow, now that's a surprise albeit a good one ;-).

@arthurmensch about the original technical issue, I tried to reproduce the problem in Python 2.6 and I couldn't:

```
Python 2.6.9 |Continuum Analytics, Inc.| (unknown, Aug 21 2014, 18:28:52) 
[GCC 4.4.7 20120313 (Red Hat 4.4.7-1)] on linux2
Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.
>>> '{0:s}'.format({'a': 1, 'b': 2})
""{'a': 1, 'b': 2}""
>>> '{0:s}'.format(object())
'<object object at 0x7f075bd31090>'
```

Do you have a particular example of an object for which this fails?
","5fbbde46c6815b39c917b8f40486f1e28e349a16","(None, '', u'nilearn/input_data/masker_validation.py')"
"pull_request_commit_comment","702","nilearn","nilearn","lesteve","2015-07-31 15:31:11","People, please look at your diff before or even after pushing ...
","5fbbde46c6815b39c917b8f40486f1e28e349a16","(None, '', u'.idea/dictionaries/arthur.xml')"
"pull_request_commit_comment","702","nilearn","nilearn","arthurmensch","2015-07-31 15:43:44","Sorry about that !
On 31 Jul 2015 17:31, ""Loïc Estève"" notifications@github.com wrote:

> In .idea/dictionaries/arthur.xml
> https://github.com/nilearn/nilearn/pull/702#discussion_r35984580:
> 
> > @@ -0,0 +1,3 @@
> > +<component name=""ProjectDictionaryState"">
> 
> People, please look at your diff before or even after pushing ...
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/nilearn/nilearn/pull/702/files#r35984580.
","5fbbde46c6815b39c917b8f40486f1e28e349a16","(None, '', u'.idea/dictionaries/arthur.xml')"
"pull_request_commit_comment","702","nilearn","nilearn","arthurmensch","2015-07-31 15:45:09","It fails on some nilearn objects that do not have a **repr** field I
believe.
","5fbbde46c6815b39c917b8f40486f1e28e349a16","(None, '', u'nilearn/input_data/masker_validation.py')"
"pull_request_commit_comment","702","nilearn","nilearn","lesteve","2015-08-03 13:14:15","Hmm, anything more specific? I tried removing the `str(...)` and the tests are still passing with python 2.6.
","5fbbde46c6815b39c917b8f40486f1e28e349a16","(None, '', u'nilearn/input_data/masker_validation.py')"
"pull_request_commit_comment","702","nilearn","nilearn","banilo","2015-08-04 18:16:25","out of interest: why do we need `sorted` here?
","5fbbde46c6815b39c917b8f40486f1e28e349a16","(58, '', u'nilearn/input_data/masker_validation.py')"
"pull_request_commit_comment","702","nilearn","nilearn","banilo","2015-08-04 18:17:51","nice, very elegant!
","5fbbde46c6815b39c917b8f40486f1e28e349a16","(72, '', u'nilearn/input_data/masker_validation.py')"
"pull_request_commit_comment","702","nilearn","nilearn","lesteve","2015-08-04 21:58:28","To ensure the reproducibility of the error message in Python 3, since dictionaries order is arbritrary. Try to run `python -c ""print({'a': 1, 'b': 2})""` a few times with Python 3.

Also even with Python 2 it just makes for a nicer error message if keys are sorted alphabetically.
","5fbbde46c6815b39c917b8f40486f1e28e349a16","(58, '', u'nilearn/input_data/masker_validation.py')"
"pull_request_commit_comment","702","nilearn","nilearn","arthurmensch","2015-08-17 09:32:07","I removed `str()`, let's see what Travis is saying
","5fbbde46c6815b39c917b8f40486f1e28e349a16","(None, '', u'nilearn/input_data/masker_validation.py')"
"pull_request_commit_comment","702","nilearn","nilearn","bthirion","2015-08-18 21:42:44","This indentation is non-standard
","5fbbde46c6815b39c917b8f40486f1e28e349a16","(None, '', u'nilearn/input_data/masker_validation.py')"
"pull_request_commit_comment","702","nilearn","nilearn","bthirion","2015-08-18 21:44:00","------- (7 \* '-')
","5fbbde46c6815b39c917b8f40486f1e28e349a16","(None, '', u'nilearn/input_data/masker_validation.py')"
"pull_request_commit_comment","702","nilearn","nilearn","bthirion","2015-08-18 21:45:18","MultiNiftiMasker or NiftiMasker
","5fbbde46c6815b39c917b8f40486f1e28e349a16","(None, '', u'nilearn/input_data/masker_validation.py')"
"pull_request_commit","702","nilearn","nilearn","arthurmensch","2015-08-20 10:56:18","Masker extraction tool for estimators","5fbbde46c6815b39c917b8f40486f1e28e349a16",""
