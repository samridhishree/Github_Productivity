"rectype","issueid","project_owner","project_name","actor","time","text","action","title"
"issue_title","1306","nilearn","nilearn","alexsavio","2016-10-07 13:53:10","/home/alexandre/envs/pytre/lib/python3.5/site-packages/scipy/ndimage/interpolation.py:430: UserWarning: The behaviour of affine_transform with a one-dimensional array supplied for the matrix parameter has changed in scipy 0.18.0

This is the comment in Scipy [documentation](http://docs.scipy.org/doc/scipy/reference/generated/scipy.ndimage.affine_transform.html):

> A diagonal matrix can be specified by supplying a one-dimensional array-like to the matrix parameter, in which case a more efficient algorithm is applied.
> 
> **Changed in version 0.18.0**: Previously, the exact interpretation of the affine transformation depended on whether the matrix was supplied as a one-dimensional or two-dimensional array. If a one-dimensional array was supplied to the matrix parameter, the output pixel value at index o was determined from the input image at position matrix \* (o + offset).
","start issue","New warning from scipy 0.18.0 when using nilearn.image.resample_to_img"
"issue_closed","1306","nilearn","nilearn","KamalakerDadi","2017-08-13 08:13:02","","closed issue","New warning from scipy 0.18.0 when using nilearn.image.resample_to_img"
"issue_comment","1306","nilearn","nilearn","GaelVaroquaux","2016-10-07 15:26:07","Yes, they changed behavior without a deprecation cycle, which caused a
bug in our code. I was very unahappy. The bug has been fixed in the new
version of nilearn.
","",""
"issue_comment","1306","nilearn","nilearn","GaelVaroquaux","2016-10-07 16:21:46","Keep us posted.
","",""
"issue_comment","1306","nilearn","nilearn","AlexandreAbraham","2016-10-07 15:11:54","This should be fixed in the latest released version. Which version of nilearn are you using?
","",""
"issue_comment","1306","nilearn","nilearn","alexsavio","2016-10-07 15:35:14","Ok. I didn't know it was fixed already, couldn't find a related issue here. I will pull a newer version. Thanks!
","",""
"issue_comment","1306","nilearn","nilearn","scottfleming","2017-08-13 05:28:44","As a follow-up to this thread, I recently was running into a similar problem with nilearn. In particular, I was trying to map a mask (91,109,91) onto lower-resolution statistical map (65,77,49) and when I ran the resample_to_img method the transformed mask I obtained as a result was all zeros. It turns out I was using nilearn v0.2.5, which is the version still hanging out on conda-forge (oops!). So I used the guide posted for installing nilearn on Windows (http://nilearn.github.io/introduction.html#installation) to update to version 0.3.1. Now I don't have the problem with an all-zero resampled image, but I still get the warning:

![image](https://user-images.githubusercontent.com/11773823/29246369-a3f3f94a-7fac-11e7-8157-e7b0262a0d6b.png)

![image](https://user-images.githubusercontent.com/11773823/29246384-264f0de4-7fad-11e7-8135-082a8d6c03e1.png)

Thank you for an amazing package and for all your help!","",""
