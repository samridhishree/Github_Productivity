"rectype","issueid","project_owner","project_name","actor","time","text","action","title"
"issue_title","173","pycqa","astroid","pylint-bot","2015-08-20 15:14:44","Originally reported by: **Claudiu Popa (BitBucket: [PCManticore](http://bitbucket.org/PCManticore), GitHub: @PCManticore)**

---

There's a big potential of improvements regarding the metaclasses. We should definitely have some sort of evaluation, for code such as the following:

```
#!python

import six

class A(type):
   def __call__(cls):
        return 42

@six.add_metaclass(A)
class B(object):
   pass

b = B()
print(b.f) # b is an integer

```

---
- Bitbucket: https://bitbucket.org/logilab/astroid/issue/173
","start issue","Metaclass evaluation"
"issue_comment","173","pycqa","astroid","pylint-bot","2015-08-20 13:15:41","_Original comment by_ **Claudiu Popa (BitBucket: [PCManticore](http://bitbucket.org/PCManticore), GitHub: @PCManticore)**:

---

We could try to respect this as much as possible: https://docs.python.org/3/reference/datamodel.html?highlight=metaclass#customizing-class-creation
","",""
