"rectype","issueid","project_owner","project_name","actor","time","text","action","title"
"issue_title","515","nilearn","nilearn","AlexandreAbraham","2015-03-20 13:11:22","","start issue","Totally remove six"
"issue_closed","515","nilearn","nilearn","AlexandreAbraham","2015-03-20 14:26:43","","closed issue","Totally remove six"
"pull_request_title","515","nilearn","nilearn","AlexandreAbraham","2015-03-20 13:11:22","","385d3b227fb5daed4349bc63d7fff4a893b8fff5","Totally remove six"
"pull_request_merged","515","nilearn","nilearn","AlexandreAbraham","2015-03-20 14:26:43","Totally remove six","e94266dbb083ae84b0699c0af520911768c19dcd","Pull request merge from AlexandreAbraham/nilearn:more_remove_six to nilearn/nilearn:master"
"issue_comment","515","nilearn","nilearn","GaelVaroquaux","2015-03-20 14:06:10",":+1: for merge. Nice work!
","",""
"pull_request_commit_comment","515","nilearn","nilearn","AlexandreAbraham","2015-03-20 13:32:18","This is a very ugly hack. But:
- it works for all functions
- it exposes the nice urllib refactoring made in P3
- it is inefficient because name resolution is made at runtime. It can be fastened using cache (typically a dictionary) but this is wasting time considering that we make 10 calls to urllib to download a dataset.
- it is developper friendly (meaning, no additional work is required to make things work if a new feature of urllib is used)

I'm opened to comments ;)
","385d3b227fb5daed4349bc63d7fff4a893b8fff5","(48, '', u'nilearn/_utils/compat.py')"
"pull_request_commit_comment","515","nilearn","nilearn","GaelVaroquaux","2015-03-20 14:05:44","I like this. It's simple and compact.
","385d3b227fb5daed4349bc63d7fff4a893b8fff5","(48, '', u'nilearn/_utils/compat.py')"
"pull_request_commit","515","nilearn","nilearn","AlexandreAbraham","2015-03-20 13:07:56","Remove six","5310b88bdda592e77f912e5f8d9a36c8c0b3d40c",""
"pull_request_commit","515","nilearn","nilearn","AlexandreAbraham","2015-03-20 13:21:48","Try to fix test","385d3b227fb5daed4349bc63d7fff4a893b8fff5",""
