"rectype","issueid","project_owner","project_name","actor","time","text","action","title"
"issue_title","1088","nilearn","nilearn","alexsavio","2016-04-18 16:10:54","Hi,
I have done a few nipype interface nodes that use nilearn and have plans to create more.
I would like to push these to nipype source in a month or two, when I have them tested and repeatedly used. 
I was wondering if you have any concern/comment or if you know of anyone working on this to join efforts.
One example is here: https://github.com/Neurita/pypes/blob/master/pypes/postproc/decompose.py
Thanks!
","start issue","nilearn in nipype"
"issue_closed","1088","nilearn","nilearn","GaelVaroquaux","2016-06-13 14:14:47","","closed issue","nilearn in nipype"
"issue_comment","1088","nilearn","nilearn","GaelVaroquaux","2016-04-22 08:08:58","No opposition on this, but it should be clearly said the natural way of using nilearn is via its Python API. Nipype is useful for combining multiple tools, but it comes with inherent clunckiness due to that. Nilearn strives to make things simpler via its API.
","",""
"issue_comment","1088","nilearn","nilearn","GaelVaroquaux","2016-04-22 11:19:15","> I think the most valuable contribution would be adding the plotting
> sub-module to plot internal pipeline results,

Agreed. When I was using nipype heavily, I was mixing it a lot with
plotting (a bit like what's currently in pypreprocess)
","",""
"issue_comment","1088","nilearn","nilearn","GaelVaroquaux","2016-06-13 14:14:47","Closing this issue, as closing the issue does not prevent discussion.
","",""
"issue_comment","1088","nilearn","nilearn","alexsavio","2016-04-22 09:37:14","I agree with you. I think the most valuable contribution would be adding the plotting sub-module to plot internal pipeline results, for me they are quite handy.
","",""
