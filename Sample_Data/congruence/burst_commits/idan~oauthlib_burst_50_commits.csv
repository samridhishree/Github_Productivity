,rectype,issueid,project_owner,project_name,actor,time,text,action,title,provenance,paths,plus_1,urls,issues,userref,code,formatted_time
615,commit_messages,,idan,oauthlib,bjmc,2016-12-20 21:37:13,Do not split() request.prompt value if already a list,8d217d0b1f3ec3772e20c8847050278eccaa10b1,,"api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/grant_types/openid_connect.py""]']",False,[],[],[],[],2016-12-20
705,commit_messages,,idan,oauthlib,bjmc,2016-12-20 11:15:44,Helper for implicit grant custom validators,a33c82e7be21429b5c376f2912a6a553cf87018b,,"api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/grant_types/implicit.py""]']",False,[],[],[],[],2016-12-20
840,commit_messages,,idan,oauthlib,bjmc,2016-12-20 14:55:04,"Per code review, _run_custom_validators() doesn't mutate request_info",c6d84da649789151a274e091df3f23e99e92dd0c,,"api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/grant_types/implicit.py""]']",False,[],[],[],[],2016-12-20
909,commit_messages,,idan,oauthlib,bjmc,2016-12-20 20:01:49,Adds failing test,d37f361aa0efd7565ac3eebb31cb38f25be70abc,,"api.github.com,git_clone","[u'[""tests/oauth2/rfc6749/endpoints/test_prompt_handling.py""]']",False,[],[],[],[],2016-12-20
1701,pull_request_commit,449.0,idan,oauthlib,bjmc,2016-12-20 11:15:44,Helper for implicit grant custom validators,a33c82e7be21429b5c376f2912a6a553cf87018b,,api.github.com,,False,[],[],[],[],2016-12-20
1702,pull_request_commit,449.0,idan,oauthlib,bjmc,2016-12-20 14:55:04,"Per code review, _run_custom_validators() doesn't mutate request_info",c6d84da649789151a274e091df3f23e99e92dd0c,,api.github.com,,False,[],[],[],[],2016-12-20
1717,pull_request_commit,455.0,idan,oauthlib,bjmc,2016-12-20 20:01:49,Adds failing test,d37f361aa0efd7565ac3eebb31cb38f25be70abc,,api.github.com,,False,[],[],[],[],2016-12-20
1718,pull_request_commit,455.0,idan,oauthlib,bjmc,2016-12-20 21:37:13,Do not split() request.prompt value if already a list,8d217d0b1f3ec3772e20c8847050278eccaa10b1,,api.github.com,,False,[],[],[],[],2016-12-20
