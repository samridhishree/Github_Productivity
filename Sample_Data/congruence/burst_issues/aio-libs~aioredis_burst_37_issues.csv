,rectype,issueid,project_owner,project_name,actor,time,text,action,title
0,issue_title,273,aio-libs,aioredis,pfreixes,2017-07-25 12:44:40,"The connection opened with the server uses a customized StreamReader
that get rid of the double buffering between the operating system and
the Redis parser. This also allows _aioredis_ to get rid of a current bug
with abruptly terminated connections.

Current implementation does not allow to keep giving support with
pause/resume the transport if some watermark has been overflowed,
the current implementation of hiredis does not publish the length of the
buffer.

Worth mentioning that doing a micro benchmark [1] the performance gains
observed is a 5%. This has been tested only with the default Asyncio loop. IMHO will worth it a discussion if a _cython_ implementation will help for environments with _uvloop_ ( I think so ).

[1] https://gist.github.com/pfreixes/e320b6f398aa7644c19188ccf2f443b1",start issue,Use a custom StreamrReader #271
1,issue_closed,273,aio-libs,aioredis,popravich,2017-09-26 07:01:00,,closed issue,Use a custom StreamrReader #271
2,pull_request_title,273,aio-libs,aioredis,pfreixes,2017-07-25 12:44:40,"The connection opened with the server uses a customized StreamReader
that get rid of the double buffering between the operating system and
the Redis parser. This also allows _aioredis_ to get rid of a current bug
with abruptly terminated connections.

Current implementation does not allow to keep giving support with
pause/resume the transport if some watermark has been overflowed,
the current implementation of hiredis does not publish the length of the
buffer.

Worth mentioning that doing a micro benchmark [1] the performance gains
observed is a 5%. This has been tested only with the default Asyncio loop. IMHO will worth it a discussion if a _cython_ implementation will help for environments with _uvloop_ ( I think so ).

[1] https://gist.github.com/pfreixes/e320b6f398aa7644c19188ccf2f443b1",b57e753339504e23ea365d59924c56fc6c1e72cc,Use a custom StreamrReader #271
3,pull_request_merged,273,aio-libs,aioredis,popravich,2017-09-26 07:01:00,Use a custom StreamrReader #271,3ad42bc37f9032113c63aae7bb62cb1075c25c40,Pull request merge from pfreixes/aioredis:custom_stream_reader to aio-libs/aioredis:master
4,issue_comment,273,aio-libs,aioredis,pfreixes,2017-07-25 13:15:55,"weird error with CI              
> PermissionError: [WinError 32] The process cannot access the file because it is being used by another process: 'C:\\Users\\appveyor\\AppData\\Local\\Temp\\1\\aioredis.1712.stdout'

Any clues @popravich?",,
5,issue_comment,273,aio-libs,aioredis,popravich,2017-07-25 13:47:17,"Hmm...
It seems that redis server process did not shut down clearly.
I guess we can change this [line](https://github.com/aio-libs/aioredis/blob/master/tests/conftest.py#L492) to catch `OSError` instead of `FileNotFoundError`. Hopefully we won't consume whole worker's tmp space.",,
6,issue_comment,273,aio-libs,aioredis,codecov[bot],2017-07-25 13:56:02,"# [Codecov](https://codecov.io/gh/aio-libs/aioredis/pull/273?src=pr&el=h1) Report
> Merging [#273](https://codecov.io/gh/aio-libs/aioredis/pull/273?src=pr&el=desc) into [master](https://codecov.io/gh/aio-libs/aioredis/commit/b5604b7d0f1557ca2f6d1a036e675fd7ce69a592?src=pr&el=desc) will **decrease** coverage by `0.03%`.
> The diff coverage is `96.72%`.

[![Impacted file tree graph](https://codecov.io/gh/aio-libs/aioredis/pull/273/graphs/tree.svg?height=150&width=650&token=THCDhqngRB&src=pr)](https://codecov.io/gh/aio-libs/aioredis/pull/273?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##           master     #273      +/-   ##
==========================================
- Coverage   96.88%   96.85%   -0.04%     
==========================================
  Files          57       59       +2     
  Lines        7450     7503      +53     
  Branches      587      594       +7     
==========================================
+ Hits         7218     7267      +49     
- Misses        172      173       +1     
- Partials       60       63       +3
```


| [Impacted Files](https://codecov.io/gh/aio-libs/aioredis/pull/273?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [tests/pool\_test.py](https://codecov.io/gh/aio-libs/aioredis/pull/273?src=pr&el=tree#diff-dGVzdHMvcG9vbF90ZXN0LnB5) | `98.29% <100%> (ø)` | :arrow_up: |
| [tests/transaction\_commands\_test.py](https://codecov.io/gh/aio-libs/aioredis/pull/273?src=pr&el=tree#diff-dGVzdHMvdHJhbnNhY3Rpb25fY29tbWFuZHNfdGVzdC5weQ==) | `100% <100%> (ø)` | :arrow_up: |
| [tests/connection\_test.py](https://codecov.io/gh/aio-libs/aioredis/pull/273?src=pr&el=tree#diff-dGVzdHMvY29ubmVjdGlvbl90ZXN0LnB5) | `100% <100%> (ø)` | :arrow_up: |
| [tests/stream\_test.py](https://codecov.io/gh/aio-libs/aioredis/pull/273?src=pr&el=tree#diff-dGVzdHMvc3RyZWFtX3Rlc3QucHk=) | `100% <100%> (ø)` | |
| [aioredis/stream.py](https://codecov.io/gh/aio-libs/aioredis/pull/273?src=pr&el=tree#diff-YWlvcmVkaXMvc3RyZWFtLnB5) | `92.3% <92.3%> (ø)` | |
| [tests/sentinel\_failover\_test.py](https://codecov.io/gh/aio-libs/aioredis/pull/273?src=pr&el=tree#diff-dGVzdHMvc2VudGluZWxfZmFpbG92ZXJfdGVzdC5weQ==) | `86.46% <0%> (-1.51%)` | :arrow_down: |
| [examples/py34/connection.py](https://codecov.io/gh/aio-libs/aioredis/pull/273?src=pr&el=tree#diff-ZXhhbXBsZXMvcHkzNC9jb25uZWN0aW9uLnB5) | `92.92% <0%> (-0.26%)` | :arrow_down: |
| [aioredis/locks.py](https://codecov.io/gh/aio-libs/aioredis/pull/273?src=pr&el=tree#diff-YWlvcmVkaXMvbG9ja3MucHk=) | `100% <0%> (+4.34%)` | :arrow_up: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/aio-libs/aioredis/pull/273?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/aio-libs/aioredis/pull/273?src=pr&el=footer). Last update [b5604b7...e0a5d68](https://codecov.io/gh/aio-libs/aioredis/pull/273?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",,
7,issue_comment,273,aio-libs,aioredis,codecov[bot],2017-07-25 13:56:03,"# [Codecov](https://codecov.io/gh/aio-libs/aioredis/pull/273?src=pr&el=h1) Report
> Merging [#273](https://codecov.io/gh/aio-libs/aioredis/pull/273?src=pr&el=desc) into [master](https://codecov.io/gh/aio-libs/aioredis/commit/b5604b7d0f1557ca2f6d1a036e675fd7ce69a592?src=pr&el=desc) will **increase** coverage by `0.06%`.
> The diff coverage is `100%`.

[![Impacted file tree graph](https://codecov.io/gh/aio-libs/aioredis/pull/273/graphs/tree.svg?width=650&height=150&src=pr&token=THCDhqngRB)](https://codecov.io/gh/aio-libs/aioredis/pull/273?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##           master     #273      +/-   ##
==========================================
+ Coverage   96.88%   96.94%   +0.06%     
==========================================
  Files          57       59       +2     
  Lines        7450     7505      +55     
  Branches      587      594       +7     
==========================================
+ Hits         7218     7276      +58     
+ Misses        172      171       -1     
+ Partials       60       58       -2
```


| [Impacted Files](https://codecov.io/gh/aio-libs/aioredis/pull/273?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [tests/pool\_test.py](https://codecov.io/gh/aio-libs/aioredis/pull/273?src=pr&el=tree#diff-dGVzdHMvcG9vbF90ZXN0LnB5) | `98.29% <100%> (ø)` | :arrow_up: |
| [tests/transaction\_commands\_test.py](https://codecov.io/gh/aio-libs/aioredis/pull/273?src=pr&el=tree#diff-dGVzdHMvdHJhbnNhY3Rpb25fY29tbWFuZHNfdGVzdC5weQ==) | `100% <100%> (ø)` | :arrow_up: |
| [aioredis/stream.py](https://codecov.io/gh/aio-libs/aioredis/pull/273?src=pr&el=tree#diff-YWlvcmVkaXMvc3RyZWFtLnB5) | `100% <100%> (ø)` | |
| [tests/connection\_test.py](https://codecov.io/gh/aio-libs/aioredis/pull/273?src=pr&el=tree#diff-dGVzdHMvY29ubmVjdGlvbl90ZXN0LnB5) | `100% <100%> (ø)` | :arrow_up: |
| [tests/conftest.py](https://codecov.io/gh/aio-libs/aioredis/pull/273?src=pr&el=tree#diff-dGVzdHMvY29uZnRlc3QucHk=) | `89.97% <100%> (ø)` | :arrow_up: |
| [tests/stream\_test.py](https://codecov.io/gh/aio-libs/aioredis/pull/273?src=pr&el=tree#diff-dGVzdHMvc3RyZWFtX3Rlc3QucHk=) | `100% <100%> (ø)` | |
| [examples/py34/connection.py](https://codecov.io/gh/aio-libs/aioredis/pull/273?src=pr&el=tree#diff-ZXhhbXBsZXMvcHkzNC9jb25uZWN0aW9uLnB5) | `92.92% <0%> (-0.26%)` | :arrow_down: |
| [tests/sentinel\_failover\_test.py](https://codecov.io/gh/aio-libs/aioredis/pull/273?src=pr&el=tree#diff-dGVzdHMvc2VudGluZWxfZmFpbG92ZXJfdGVzdC5weQ==) | `88.72% <0%> (+0.75%)` | :arrow_up: |
| ... and [2 more](https://codecov.io/gh/aio-libs/aioredis/pull/273?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/aio-libs/aioredis/pull/273?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/aio-libs/aioredis/pull/273?src=pr&el=footer). Last update [b5604b7...b57e753](https://codecov.io/gh/aio-libs/aioredis/pull/273?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",,
8,issue_comment,273,aio-libs,aioredis,pfreixes,2017-07-25 14:27:43,"Now weird problems in the other CI ... 

> The command ""sudo tar xjf python-3.3.tar.bz2 --directory /"" failed and exited with 2 during .

Can you restart the jobs?",,
9,issue_comment,273,aio-libs,aioredis,pfreixes,2017-07-27 07:50:43,green at last ... @popravich let me know your thoughts when you have the chance.,,
10,issue_comment,273,aio-libs,aioredis,popravich,2017-07-27 07:51:55,Yeah) give me few days,,
11,issue_comment,273,aio-libs,aioredis,pfreixes,2017-08-06 15:11:03,"Any thought @popravich ? Im trying to move also the part of hiredis [1] but the project has not a lot activity recently.

In any case, FYI I'll be out for two weeks and fewer chances to have an internet connection.


[1] https://github.com/redis/hiredis-py/pull/61",,
12,issue_comment,273,aio-libs,aioredis,popravich,2017-09-26 07:01:05,Thanks,,
13,pull_request_commit_comment,273,aio-libs,aioredis,pfreixes,2017-07-25 12:47:36,"For the sake of compatibility and consistency with the current connection signature, the parser is not set in the `StreamReader` constructor. But if you believe that we can break that let's get rid the `parser` parameter and let's pass as a new argument of the `StreamReader` constructor",b57e753339504e23ea365d59924c56fc6c1e72cc,"(51, '', u'aioredis/connection.py')"
14,pull_request_commit_comment,273,aio-libs,aioredis,pfreixes,2017-07-25 12:49:16,"We don't have visibility, at least for the `hiredis` version, of the `len` of the buffer. My plans will pass doing the proper MR to expose this property by the `hiredis-py` project, doesn't look a rocket science.  With that attribute, we can implement the proper pause/resume option.",b57e753339504e23ea365d59924c56fc6c1e72cc,"(28, '', u'aioredis/stream.py')"
15,pull_request_commit_comment,273,aio-libs,aioredis,pfreixes,2017-07-25 12:51:17,My understanding here is that this code had a bug? Using the old code I had a _heisentest_.,b57e753339504e23ea365d59924c56fc6c1e72cc,"(5, '', u'tests/transaction_commands_test.py')"
16,pull_request_commit,273,aio-libs,aioredis,pfreixes,2017-07-25 12:28:14,"Use a custom StreamrReader #271

The connection opened with the server uses a customized StreamReader
that get rid of the double buffering between the operating system and
the Redis parser. This also allows aioredis to get rid of a current bug
with abruptly terminated connections.

Current implementation does not allow to keep giving support with
pause/resume the transport if some watermark has been overflowed,
the current implementation of hiredis does not publish the length of the
buffer.",b2523e7dc6d7d40db9563e1cc5df2374bc53e750,
17,pull_request_commit,273,aio-libs,aioredis,pfreixes,2017-07-25 13:55:44,Catch any OSError when redis server is shuted down in the tests,e0a5d68339ce2b406e50000b58704e21a187a18a,
18,pull_request_commit,273,aio-libs,aioredis,pfreixes,2017-07-27 06:41:22,Increase stream coverage,701ec6336830f301ebfbf3d9631b9f41c6b06ecb,
19,pull_request_commit,273,aio-libs,aioredis,pfreixes,2017-07-27 07:13:59,Flake8 issue,b57e753339504e23ea365d59924c56fc6c1e72cc,
