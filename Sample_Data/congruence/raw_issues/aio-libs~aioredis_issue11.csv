"rectype","issueid","project_owner","project_name","actor","time","text","action","title"
"issue_title","11","aio-libs","aioredis","asvetlov","2014-05-28 18:17:17","You don't need to check for `self._reader_task.done()`
`.cancel()` does it itself and returns True if task is scheduled to cancellation, False if the task is already cancelled.
So just 

```
self._reader_task.cancel()
self._reader_task = None
```

is enough.

Moreover, IIRC you can trap in the situation when task has been called and scheduled for cancellation but still had no chance to execute itself -- it's, say, scheduled for execution in next event loop iteration.
In this case task still is not done -- only scheduled to be done.
","start issue","Cancellation of connector's reader_task"
"issue_closed","11","aio-libs","aioredis","popravich","2014-05-28 19:21:31","","closed issue","Cancellation of connector's reader_task"
"issue_comment","11","aio-libs","aioredis","popravich","2014-05-28 18:20:32","Ok, thanks
","",""
"issue_comment","11","aio-libs","aioredis","popravich","2014-05-28 19:21:30","done
","",""
