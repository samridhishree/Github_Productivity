"rectype","issueid","project_owner","project_name","actor","time","text","action","title"
"issue_title","151","nilearn","nilearn","rphlypo","2014-01-10 11:13:55","Will work on it if the idea is accepted.

**Proposition**: To get a plethora of confounds into an estimator 'class' that only takes 'data_file', 'confound_name', and 'confound_file' as inputs. Specific confounds could then inherit from this basis estimator class, which leaves room for the experimenter on how to manage the confounds (for now only the 'clean' and 'high_variance_confounds' methods seem available, next to the filtering operation). Probably, the 'clean' method will need a little redesign to take a 'dict' object as an argument for the 'confounds' (which should merely be a dispatching if retrocompatibility is needed on the string, or numpy arrays). The 'dict' object could be organized as {""confound_name"": confound_file}.

**How**: The basic estimator will be a mere fileloader, whereas more advanced methods for confound extraction can be made available using extra arguments (also to be made available as an extra argument to the 'clean' method, or just through the **kwargs filter). For instance, an envelope, and instantaneous amplitude estimator for the respiration (available in the HCP) as in _Birn et al., NeuroImage 31, pp.1536--1548, 2006_ or the data and/or masks for CompCor ('high_variance_confounds' method).

**Advantages**: many more confounds could be managed, and the user could easily add his own confound types without interfering with the existing code.
","start issue","[feature request] ConfoundEstimator as an Estimator class"
"issue_comment","151","nilearn","nilearn","GaelVaroquaux","2014-01-10 15:21:07","As mentioned during lunch: plenty of good ideas here. I am not sure
whether it is a case of YAGNI or not. How about you prototype this in
your research code, and we revisit this a little while down the line.
","",""
"issue_comment","151","nilearn","nilearn","bthirion","2014-01-11 18:31:53","Yes, there is a tradeoff to find between added complexity/invested time and  the motivation to handle users requests. in order to move forward before coding, you could list what kind of confounds specification and removal scenario you foresee.
Don't forget that you might be the main user of these features for some time, and that  any time invested in code that is not necessary to you may be lost.
","",""
