"rectype","issueid","project_owner","project_name","actor","time","text","action","title"
"issue_title","185","idan","oauthlib","lepture","2013-06-28 12:44:06","There are `verify_request_token` and `valid_request_token`, what's the difference and why should there be two verifying?

The `verify_request_token` accepts two parameters: `token` and `request`, in what way can we verify it?

I am creating oauth1 provider now at https://github.com/lepture/flask-oauthlib/tree/oauth1
","start issue","oauth1 provider question"
"issue_closed","185","idan","oauthlib","lepture","2013-07-04 01:45:26","","closed issue","oauth1 provider question"
"issue_comment","185","idan","oauthlib","ib-lundgren","2013-06-28 13:14:47","Cool, how is the implementation coming along?

Should definitely clarify that in the docs too but

`verify_request_token` is only used by the Authorization endpoint to check whether the oauth_token given in the authorization URL is valid or not. Not much you can do here really. It needs to be valid in order to fetch associated realms and to link it with a verification code. However here you only have a URL, the request is not signed and the oauth_token could have come from anywhere.

`validate_request_token` is used by the AccessToken endpoint and here you also have access to the client_key as well as a verification code.  This request is signed.
","",""
