"rectype","issueid","project_owner","project_name","actor","time","text","action","title"
"issue_title","108","aio-libs","aioredis","hotsyk","2016-02-28 20:13:32","Currently, RediscConnection.execute asserting live connection: https://github.com/aio-libs/aioredis/blob/master/aioredis/connection.py#L211 

As a result, if the connection to server lost (server restarted, or network lost), AssertionError will be raised. 
This leads to requirement to catch AssertionError if client would like to reconnect to server, and this is not correct way to catch this - more appropriate way would be to raise custom exception here and catch this specific exception in the client.
","start issue","RedisConnection.execute should raise custom exception when server is unreachable."
"issue_closed","108","aio-libs","aioredis","popravich","2016-03-29 15:01:08","","closed issue","RedisConnection.execute should raise custom exception when server is unreachable."
"issue_comment","108","aio-libs","aioredis","jettify","2016-02-28 20:17:45","Good point, also worth mention that asserts does not work if `python` run with `-O` or `-OO` flags
","",""
"issue_comment","108","aio-libs","aioredis","asvetlov","2016-02-28 22:00:47","@hotsyk would you provide a PR for replacement `AssertionError` with custom exception class inherited from `RedisError`?

A test is required, it may use mocks though. Redis server stopping is not needed, just simulate the case by mocking.
","",""
"issue_comment","108","aio-libs","aioredis","popravich","2016-03-01 12:39:45","It looks like `execute_pubsub` is missing even assertion, need to fix this too.
","",""
"issue_comment","108","aio-libs","aioredis","hotsyk","2016-03-01 16:45:30","Will do in a few days
","",""
"issue_comment","108","aio-libs","aioredis","popravich","2016-03-02 08:52:11","Great, thanks
","",""
"issue_comment","108","aio-libs","aioredis","popravich","2016-03-29 15:01:08","`execute_pubsub` fixed
","",""
