"rectype","issueid","project_owner","project_name","actor","time","text","action","title"
"issue_title","214","idan","oauthlib","masci","2013-09-20 23:25:37","I forgot to pass `request` parameter to `client_authentication_required` in `authorization_code` module, fixed with c38dab5.

Added tests involving `client_authentication_required`, I tried to be coherent with existing code per testing module.

While writing tests, I stumbled upon a strange behaviour in request's `duplicate_params` property, if I understood correct there's a bug involving operators precedence.
","start issue","Fix bug in client_authentication_required call"
"issue_closed","214","idan","oauthlib","ib-lundgren","2013-09-25 11:55:48","","closed issue","Fix bug in client_authentication_required call"
"pull_request_title","214","idan","oauthlib","masci","2013-09-20 23:25:37","I forgot to pass `request` parameter to `client_authentication_required` in `authorization_code` module, fixed with c38dab5.

Added tests involving `client_authentication_required`, I tried to be coherent with existing code per testing module.

While writing tests, I stumbled upon a strange behaviour in request's `duplicate_params` property, if I understood correct there's a bug involving operators precedence.
","c0dc977de73573ca0c286b05da34b8e525467254","Fix bug in client_authentication_required call"
"pull_request_merged","214","idan","oauthlib","ib-lundgren","2013-09-25 11:55:47","Fix bug in client_authentication_required call","cfe649ccecd3e50c65f2fe8a9f400db59f0e0769","Pull request merge from masci/oauthlib:fix_client_authentication_required_call to idan/oauthlib:master"
"issue_comment","214","idan","oauthlib","ib-lundgren","2013-09-21 10:59:27","Ah, sorry I should have spotted that. 

Thanks for sorting out some of the direly missing unit tests for this grant type. 

Regarding the duplicate params I've not looked into it much, might very well be precedence.
","",""
"issue_comment","214","idan","oauthlib","ib-lundgren","2013-09-21 11:11:17","Also, please add yourself in the AUTHORS file :)
","",""
"issue_comment","214","idan","oauthlib","ib-lundgren","2013-09-25 11:55:45","Looks great. Awsome work @masci!
","",""
"issue_comment","214","idan","oauthlib","masci","2013-09-25 14:16:48","Thank you @ib-lundgren !
","",""
"pull_request_commit_comment","214","idan","oauthlib","ib-lundgren","2013-09-21 11:00:52","I quite like wraps too since that will invoke the actual, non implemented, method if not mocked. This is fine tho.

```
 mock.MagicMock(wraps=RequestValidator())
```
","c0dc977de73573ca0c286b05da34b8e525467254","(None, '', u'tests/oauth2/rfc6749/grant_types/test_authorization_code.py')"
"pull_request_commit_comment","214","idan","oauthlib","ib-lundgren","2013-09-21 11:04:44","Think we need to decide on an import style and stick with it everyone since now its fairly inconsistent.  I am not a big fan of using a parenthesis for importing like this so imo it is either between explicitly importing what you need (one per line)

```
from oauthlib.oauth2.rfc6749.errors import UnsupportedGrantTypeError
from oauthlib.oauth2.rfc6749.errors import InvalidClientError
```

or to import the module only and prefix with that

```
from oauthlib.oauth2.rfc6749 import errors
```

I don't feel strongly about either. The former makes it very obvious what methods are used, the latter is less code and is arguably better for dynamic inspection.

@masci thoughts?
","c0dc977de73573ca0c286b05da34b8e525467254","(None, '', u'tests/oauth2/rfc6749/grant_types/test_refresh_token.py')"
"pull_request_commit_comment","214","idan","oauthlib","ib-lundgren","2013-09-21 11:05:29","Think assert_called_once_with is what you are trying to say here :)

http://www.voidspace.org.uk/python/mock/mock.html#mock.Mock.assert_called_once_with
","c0dc977de73573ca0c286b05da34b8e525467254","(None, '', u'tests/oauth2/rfc6749/grant_types/test_refresh_token.py')"
"pull_request_commit_comment","214","idan","oauthlib","ib-lundgren","2013-09-21 11:08:04","Ideally this would be split into several test methods, along the lines of

test_authentication_required
test_invalid_grant_type
test_authenticate_client_id
test_invalid_refresh_token
test_invalid_scope
test_valid_token_request

but I/we could sort that out later.
","c0dc977de73573ca0c286b05da34b8e525467254","(None, '', u'tests/oauth2/rfc6749/grant_types/test_refresh_token.py')"
"pull_request_commit_comment","214","idan","oauthlib","ib-lundgren","2013-09-21 11:09:20","No need for this when using MagicMock. Just set return value directly.
","c0dc977de73573ca0c286b05da34b8e525467254","(None, '', u'tests/oauth2/rfc6749/grant_types/test_resource_owner_password.py')"
"pull_request_commit_comment","214","idan","oauthlib","masci","2013-09-21 13:14:49","I'm a mock newbie and didn't know about _wraps_. Think using wraps and explicitly mocking not implemented methods is better though, I'm going to fix it.
","c0dc977de73573ca0c286b05da34b8e525467254","(None, '', u'tests/oauth2/rfc6749/grant_types/test_authorization_code.py')"
"pull_request_commit_comment","214","idan","oauthlib","masci","2013-09-21 13:20:23","Agree to remove parentheses. For this specific case maybe it's better doing `from oauthlib.oauth2.rfc6749 import errors` since the number of names needed from that module is quite large and could be more readable referring to errors explicitly with an `error.` prefix.
","c0dc977de73573ca0c286b05da34b8e525467254","(None, '', u'tests/oauth2/rfc6749/grant_types/test_refresh_token.py')"
"pull_request_commit_comment","214","idan","oauthlib","masci","2013-09-21 13:22:52","D'Oh! Fixed
","c0dc977de73573ca0c286b05da34b8e525467254","(None, '', u'tests/oauth2/rfc6749/grant_types/test_refresh_token.py')"
"pull_request_commit_comment","214","idan","oauthlib","masci","2013-09-21 13:30:37",":+1: it would also be more reliable since setUp/tearDown would be called between them, and every test would start with mock objects in clean state. Maybe it's better doing it now since I'm on that already.
","c0dc977de73573ca0c286b05da34b8e525467254","(None, '', u'tests/oauth2/rfc6749/grant_types/test_refresh_token.py')"
"pull_request_commit_comment","214","idan","oauthlib","masci","2013-09-21 13:48:33","Something like this?

```
    # right params but with duplicates
    request = mock.MagicMock(wraps=Request('http://a.b/path/'))
    request.duplicate_params = ['scope']
    self.assertRaises(InvalidRequestError, auth.validate_token_request,
                      request)
    # wrong grant type
    request = mock.MagicMock(wraps=Request('http://a.b/path'))
    request.grant_type = 'foo'
    self.assertRaises(UnsupportedGrantTypeError,
                      auth.validate_token_request, request)
```
","c0dc977de73573ca0c286b05da34b8e525467254","(None, '', u'tests/oauth2/rfc6749/grant_types/test_resource_owner_password.py')"
"pull_request_commit_comment","214","idan","oauthlib","ib-lundgren","2013-09-21 15:38:26","I mean you can have

```
mock = MagicMock()
mock.some_attr.some_func.return_value = False
```

without having to first create mock.some_attr or mock.some_attr.some_func
","c0dc977de73573ca0c286b05da34b8e525467254","(None, '', u'tests/oauth2/rfc6749/grant_types/test_resource_owner_password.py')"
"pull_request_commit","214","idan","oauthlib","masci@evonove.it","2013-09-20 23:05:31","fixed call to client_authentication_required","c38dab51aec039ac3a89778233c190776b5d7e8c",""
"pull_request_commit","214","idan","oauthlib","masci@evonove.it","2013-09-20 23:06:02","added test involving client_authentication_required method","012fbbebcdafa28340ecaf5addb5c1b9da30057b",""
"pull_request_commit","214","idan","oauthlib","masci@evonove.it","2013-09-20 23:13:20","fixed operator precedence in duplicate_params property","939b05f185958723f833dcbc707a066bf3359c7e",""
"pull_request_commit","214","idan","oauthlib","masci@evonove.it","2013-09-21 14:35:41","added myself to the authors list","9f44b81a7ff4456bc9698f6187d0f128051364b6",""
"pull_request_commit","214","idan","oauthlib","masci@evonove.it","2013-09-22 09:27:30","broke up method into different tests, fixed import style","e94439bf0f327d2b434ae479a296323e38bc2435",""
"pull_request_commit","214","idan","oauthlib","masci@evonove.it","2013-09-22 13:57:16","fixed and extended tests for validate_token_request method","c0dc977de73573ca0c286b05da34b8e525467254",""
