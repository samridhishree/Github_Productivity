"rectype","issueid","project_owner","project_name","actor","time","text","action","title"
"issue_title","422","nilearn","nilearn","banilo","2015-02-11 15:35:27","","start issue","Gently demystify the sociology of nifti maskers"
"issue_closed","422","nilearn","nilearn","lesteve","2015-02-12 10:05:52","","closed issue","Gently demystify the sociology of nifti maskers"
"pull_request_title","422","nilearn","nilearn","banilo","2015-02-11 15:35:27","","d62bbaf6c5da11786f4c4597c92c69c2c49e88c7","Gently demystify the sociology of nifti maskers"
"pull_request_merged","422","nilearn","nilearn","lesteve","2015-02-12 10:05:52","Gently demystify the sociology of nifti maskers","5ad721f07d3dcc34ec00715ea88ab864e9551f53","Pull request merge from banilo/nilearn:masker_docs to nilearn/nilearn:master"
"issue_comment","422","nilearn","nilearn","lesteve","2015-02-12 08:02:08","Remark about form rather than content: our docstring tend to follow the [numpy docstring](https://github.com/numpy/numpy/blob/master/doc/HOWTO_DOCUMENT.rst.txt#docstring-standard) convention.

In particular (actually this one is an excerpt from [PEP 257](https://www.python.org/dev/peps/pep-0257/)):

> Multi-line docstrings consist of a summary line just like a one-line docstring, followed by a blank line, followed by a more elaborate description. 

Also I am not sure about the ""Helper"" wording.
","",""
"issue_comment","422","nilearn","nilearn","banilo","2015-02-12 08:38:35","> In particular (actually this one is an excerpt from PEP 257)

So, keep the first line where it is and introduce a blank line after?

> Also I am not sure about the ""Helper"" wording.

What do you suggest - ""utility"" or ""tool"" or just ""class""?
","",""
"issue_comment","422","nilearn","nilearn","lesteve","2015-02-12 08:49:06","> > In particular (actually this one is an excerpt from PEP 257)
> 
> So, keep the first line where it is and introduce a blank line after?

Yes.

> > Also I am not sure about the ""Helper"" wording.
> 
> What do you suggest - ""utility"" or ""tool"" or just ""class""?

No strong opinion, ""class"" would be fine but feel free to be creative.
","",""
"issue_comment","422","nilearn","nilearn","banilo","2015-02-12 08:59:14","PEP-ized that!
","",""
"issue_comment","422","nilearn","nilearn","lesteve","2015-02-12 10:05:46","OK merging this one, thanks. @bcipolli feel free to open a new issue about your comments.
","",""
"issue_comment","422","nilearn","nilearn","GaelVaroquaux","2015-02-12 10:06:45","Thank you Danilo!
","",""
"pull_request_commit_comment","422","nilearn","nilearn","bcipolli","2015-02-11 16:07:58","This is helpful!  Adding `intersect_masks` to related functions would be appreciated as well.

I also suggest adding to the docstring of `fit`, to reminds users that only `mask_args` and `mask_strategy` are used for fitting.

Lastly, I would find it helpful to specify (here or in `transform`) that:
- Parameters (detrend, standardize) are computed from the images passed to `transform` (i.e. not computed and stored from `fit`)
- Whether the inverse of these parameters is applied when `inverse_transform` is called (not sure if they are, for `detrend`, `standardize`, and `confounds`).

Reason for those last two suggestions: as someone coming from computer vision, I believe the setup here differs in the two ways above from how we (at least in our lab) preprocess our datasets.  So my expectations may be different than someone who comes from a neuroimaging background.
","d62bbaf6c5da11786f4c4597c92c69c2c49e88c7","(None, '', u'nilearn/input_data/nifti_masker.py')"
"pull_request_commit","422","nilearn","nilearn","banilo","2015-02-11 15:34:40","improve masker docstrings","501c6532f779e10bd6094b2fb6aa5938d7a68e5f",""
"pull_request_commit","422","nilearn","nilearn","banilo","2015-02-12 08:54:46","PEP correction","d62bbaf6c5da11786f4c4597c92c69c2c49e88c7",""
