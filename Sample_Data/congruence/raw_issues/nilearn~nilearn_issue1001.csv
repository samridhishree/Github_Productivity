"rectype","issueid","project_owner","project_name","actor","time","text","action","title"
"issue_title","1001","nilearn","nilearn","arthurmensch","2016-02-19 15:02:53","Indeed, the use of MultiNiftiMasker is recommended in this case, as we can use `n_jobs`. Moreover, the behavior of NiftiMasker.transform on list of 3D/4D images is different from the one of MultiNiftiMasker : one returns a concatenated array, the other returns a list.

This is visible in `space_net.py` for example, where MultiNiftiMasker should be used.

Moreover, the documentation of check_niimg is uncomplete: 

```
def check_niimg(niimg, ensure_ndim=None, atleast_4d=False, dtype=None,
                return_iterator=False,
                wildcards=True):
    """"""Check that niimg is a proper 3D/4D niimg. Turn filenames into objects.

    Parameters
    ----------
    niimg: Niimg-like object
        See http://nilearn.github.io/manipulating_visualizing/manipulating_images.html#niimg.
        If niimg is a string, consider it as a path to Nifti image and
        call nibabel.load on it. The '~' symbol is expanded to the user home
        folder.
        If it is an object, check if get_data()
        and get_affine() methods are present, raise TypeError otherwise.
```

makes no mention of the automatic concatenation is performs on niimg when it is a list.
","start issue","NiftiMasker should not be used for unmasking list of niimg"
"issue_comment","1001","nilearn","nilearn","banilo","2016-02-22 16:38:19","This is a great addition to my litany on a general example on the difference between the nifti masker family members :-D
","",""
"issue_comment","1001","nilearn","nilearn","AlexandreAbraham","2016-02-23 12:00:41","> This is a great addition to my litany on a general example on the difference between the nifti masker family members :-D 

We're still waiting for your PR :P
","",""
"issue_comment","1001","nilearn","nilearn","banilo","2016-02-23 15:44:23","> We're still waiting for your PR :P

I will try to think about something.
","",""
