"rectype","issueid","project_owner","project_name","actor","time","text","action","title"
"issue_title","1182","nilearn","nilearn","jeromedockes","2016-07-20 08:58:52","This is based on PR #832 opened by @bcipolli in answer to issue
#640. The contribution is to add a fetcher for downloading selected

images from http://neurovault.org/. I have tried to address some of
the remarks that were made in the discussion about #832. I have
included the examples `plot_ica_neurovault.py` and
`plot_neurovault_meta_analysis.py` from the previous PR; they remain
almost identical.

The interface to the fetcher is similar to that proposed in #832. I
have kept the possibility to filter collections and images either with
a function or with a dictionary of `{field: desired_value}` pairs (or
both), but they are now separate arguments called respectively
`collection_filter` (`image_filter` for images) and `collection_terms`
(`image_terms` for images). Also, now the filters passed in a
dictionary are only inserted in the query URL if they are actually
available on the server (which is the case for the collection owner,
the collection DOI, and the collection name); otherwise they are
applied to the metadata once it has been downloaded.

For users who want a specific set of image or collection ids,
downloading all the Neurovault metadata and filtering on the ids is
inefficient; so they can use the `image_ids` or `collection_ids`
parameters to pass the lists of ids they want to download; in this
case any filter is ignored and the server is queried directly for the
required image and collection ids. Note: this is also done under the
hood if the collection id is used as a filter term - either by
specifying the collection 'id' field or the image 'collection_id'
field - except that in this case the other filters are still applied.

I have included a `ResultFilter` class and a bunch of special values
such as `NotNull` which can be used to specify filters more easily. In
some neurovault metadata jsons, some values are strings such as """",
""null"", ""None""... instead of actual `null`; these (more precisely
strings that match `($|n/?a$|none|null)` in a case-insensitive way)
are replaced by a true null value (`null` in the json, converted to
`None` when loaded in a python dict) upon download so that comparing
to `None` or testing for truth should yield the expected results.  In
particular `dict.get(field)` will give the same value wether the
original value was `null`, ""null"", ... , or plain missing.

This should make using `fetch_neurovault` somewhat easier. However,
for users who are interested in a large subset of the neurovault data
and are not too short on disk space, I would recommend using only very
simple filters (e.g. the defaults) when calling `fetch_neurovault` to
download (almost all) the data, and, once it is on disk, only access
it through `read_sql_query`, `local_database_connection` or
`local_database_cursor`. The metadata is stored in an sqlite database,
so instead of having to read the docstring for `fetch_neurovault`,
writing their own filters, etc., most users will probably prefer to
download it all and then simply use SQL syntax to select the subset
they're interested in. `read_sql_query` queries the database and
returns the result as an `OrderedDict` of columns (the default) or as
a list of rows. `local_database_connection` gives a connection to the
sqlite file, so that pandas users can load e.g., all the images'
metadata by typing:

```
images = pandas.read_sql_query(
     ""SELECT * FROM images"", neurovault.local_database_connection())
```

Of course if they prefer manipulating sqlite3 objects directly they
can use the connection given by `local_database_connection` or the
cursor given by `local_database_cursor`.

@bcipolli, @chrisfilo, @GaelVaroquaux, or anyone else, please let me
know what modifications need to be made! In particular:
- What should be the default filters? The current behaviour is to
  exclude:
  - Collections from a list of known bad collections (found in PR #832,  with one addition).
  - Empty collections.
  - Images from a list of known bad images (found in PR #832).
  - Images that are not in MNI space.
  - Images for which the metadata field 'is_valid' is cleared.
  - Images for which the metadata field 'is_thresholded' is set.
  - Images for which 'map_type' is 'ROI/mask', 'anatomical' or 'parcellation'
  - Images for which 'image_type' is 'atlas'
- Should the fetcher, by default, download all the images matching the
  filters, or only a limited number (the current behaviour)?
","start issue","Add a Neurovault fetcher."
"issue_closed","1182","nilearn","nilearn","KamalakerDadi","2017-04-20 14:58:53","","closed issue","Add a Neurovault fetcher."
"pull_request_title","1182","nilearn","nilearn","jeromedockes","2016-07-20 08:58:52","This is based on PR #832 opened by @bcipolli in answer to issue
#640. The contribution is to add a fetcher for downloading selected

images from http://neurovault.org/. I have tried to address some of
the remarks that were made in the discussion about #832. I have
included the examples `plot_ica_neurovault.py` and
`plot_neurovault_meta_analysis.py` from the previous PR; they remain
almost identical.

The interface to the fetcher is similar to that proposed in #832. I
have kept the possibility to filter collections and images either with
a function or with a dictionary of `{field: desired_value}` pairs (or
both), but they are now separate arguments called respectively
`collection_filter` (`image_filter` for images) and `collection_terms`
(`image_terms` for images). Also, now the filters passed in a
dictionary are only inserted in the query URL if they are actually
available on the server (which is the case for the collection owner,
the collection DOI, and the collection name); otherwise they are
applied to the metadata once it has been downloaded.

For users who want a specific set of image or collection ids,
downloading all the Neurovault metadata and filtering on the ids is
inefficient; so they can use the `image_ids` or `collection_ids`
parameters to pass the lists of ids they want to download; in this
case any filter is ignored and the server is queried directly for the
required image and collection ids. Note: this is also done under the
hood if the collection id is used as a filter term - either by
specifying the collection 'id' field or the image 'collection_id'
field - except that in this case the other filters are still applied.

I have included a `ResultFilter` class and a bunch of special values
such as `NotNull` which can be used to specify filters more easily. In
some neurovault metadata jsons, some values are strings such as """",
""null"", ""None""... instead of actual `null`; these (more precisely
strings that match `($|n/?a$|none|null)` in a case-insensitive way)
are replaced by a true null value (`null` in the json, converted to
`None` when loaded in a python dict) upon download so that comparing
to `None` or testing for truth should yield the expected results.  In
particular `dict.get(field)` will give the same value wether the
original value was `null`, ""null"", ... , or plain missing.

This should make using `fetch_neurovault` somewhat easier. However,
for users who are interested in a large subset of the neurovault data
and are not too short on disk space, I would recommend using only very
simple filters (e.g. the defaults) when calling `fetch_neurovault` to
download (almost all) the data, and, once it is on disk, only access
it through `read_sql_query`, `local_database_connection` or
`local_database_cursor`. The metadata is stored in an sqlite database,
so instead of having to read the docstring for `fetch_neurovault`,
writing their own filters, etc., most users will probably prefer to
download it all and then simply use SQL syntax to select the subset
they're interested in. `read_sql_query` queries the database and
returns the result as an `OrderedDict` of columns (the default) or as
a list of rows. `local_database_connection` gives a connection to the
sqlite file, so that pandas users can load e.g., all the images'
metadata by typing:

```
images = pandas.read_sql_query(
     ""SELECT * FROM images"", neurovault.local_database_connection())
```

Of course if they prefer manipulating sqlite3 objects directly they
can use the connection given by `local_database_connection` or the
cursor given by `local_database_cursor`.

@bcipolli, @chrisfilo, @GaelVaroquaux, or anyone else, please let me
know what modifications need to be made! In particular:
- What should be the default filters? The current behaviour is to
  exclude:
  - Collections from a list of known bad collections (found in PR #832,  with one addition).
  - Empty collections.
  - Images from a list of known bad images (found in PR #832).
  - Images that are not in MNI space.
  - Images for which the metadata field 'is_valid' is cleared.
  - Images for which the metadata field 'is_thresholded' is set.
  - Images for which 'map_type' is 'ROI/mask', 'anatomical' or 'parcellation'
  - Images for which 'image_type' is 'atlas'
- Should the fetcher, by default, download all the images matching the
  filters, or only a limited number (the current behaviour)?
","8212940456e9f3470dc0163a0c510b945e1b8c5e","Add a Neurovault fetcher."
"pull_request_merged","1182","nilearn","nilearn","KamalakerDadi","2017-04-20 14:58:53","Add a Neurovault fetcher.","f1968a82b2ba80df9abae75706d1e70ac58aad0a","Pull request merge from jeromedockes/nilearn:neurovault_fetcher to nilearn/nilearn:master"
"issue_comment","1182","nilearn","nilearn","GaelVaroquaux","2016-09-22 05:33:41","We could make this PR fast using the new feature of neurovault: downloading all maps of a collection at once:
https://twitter.com/VaultNeuro/status/778801007434211333
","",""
"issue_comment","1182","nilearn","nilearn","GaelVaroquaux","2016-10-05 15:02:27","> I can make DEBUG the default logging level. I will add a verbose parameter in
> the function to control that as in the other nilearn functions.

It would be good. I have no love for the logging framework in Python, as
it is quite poor to give user information (such as progress), which is
really what we want to do when we use ""print"".

> If we want to have it, I can change the verbose parameter when calling
> fetch_file so that this report appears.

Maybe we need an internal data-download function that downloads multiple
files and gives progress (possibly using fetch_file).
","",""
"issue_comment","1182","nilearn","nilearn","GaelVaroquaux","2016-10-05 16:31:04","> I'm not sure I have understood. by default logging output is dumped on stderr,
> so the user sees it on the console. Is the problem that log records will be
> printed on separate lines (and that we can't use carriage return as is done in
> _chunk_report_)?

First it prints thing that are incomprehensible to the user (like the
module name and the warning type). That tends to clutter the display and
scare people. Second, indeed, it is not great for displaying progress.

> ```
> If we want to have it, I can change the verbose parameter when calling
> fetch_file so that this report appears.
> Maybe we need an internal data-download function that downloads multiple
> files and gives progress (possibly using fetch_file).
> ```
> 
> The current behaviour is to use fetch_file to download each file and print how
> many images have been downloaded so far; what other information should we add?

Maybe an optional progress bar, with estimation of the time. Ideally, we
should factorize this as much as possible with the existing progress bar.
","",""
"issue_comment","1182","nilearn","nilearn","GaelVaroquaux","2016-11-21 09:42:18","The fact that there is no output may be due to a bad interaction between
the logger and the environment in which things are executing.

Ben: what environment are you running this in?

Jerome: how hard would it be to get rid of the log and just use printing
to stderr?
","",""
"issue_comment","1182","nilearn","nilearn","GaelVaroquaux","2016-11-21 09:52:09","> in the meantime the logging level can be set with
> 
> neurovault.set_logging_level(<e.g. neurovault.logging.DEBUG>)

Yes, but some execution environement intercept logging.
","",""
"issue_comment","1182","nilearn","nilearn","GaelVaroquaux","2016-11-22 17:05:42","> I do notice that if I have a disconnect in my connection, the neurosynth API
> call hangs and never returns. I thought the nilearn code times that out?

Hum, we should probably have a timeout.
","",""
"issue_comment","1182","nilearn","nilearn","GaelVaroquaux","2017-03-02 18:32:11","For the narrative documentation, we should add a section 6.2 ""Retrieving images from Neurovault"" that contains a small text describing the two functions, their intended use and points to the two examples.","",""
"issue_comment","1182","nilearn","nilearn","GaelVaroquaux","2017-04-13 11:18:43","> Any more reviews on this ? Or merge ?

Do release of 0.3 and then merge.
","",""
"issue_comment","1182","nilearn","nilearn","GaelVaroquaux","2017-04-20 15:11:27","Hurray!!
","",""
"issue_comment","1182","nilearn","nilearn","GaelVaroquaux","2017-04-20 15:55:08","> I'm getting drunk today to celebrate!

Let's all do that!

","",""
"issue_comment","1182","nilearn","nilearn","chrisfilo","2016-09-22 05:41:06","Let us know if there is anything in the current implementation that needs to be optimized or changed. @erramuzpe
","",""
"issue_comment","1182","nilearn","nilearn","bcipolli","2016-10-03 01:24:28","Thanks @jeromedockes for pushing this forward. 

I tried using this tonight. Perhaps I'm not using it appropriately, or missed an issue in the original fetcher that is solved here, but ... with over 1400 images cached locally, after 20 minutes the fetcher has only verified that I have 450 images cached locally. At this rate, it will take over an hour to complete... even if there are no new images.

The previous fetcher only fetched the paginated collection metadata; this one seems to be fetching that one-at-a-time and perhaps not caching the image metadata?

Any advice on this issue would be helpful. As it stands, I'm going to switch my research code back to the previous neurovault fetcher code I have, as it only requires ~10-20 seconds to validate the 1400 existing images and check for new ones.
","",""
"issue_comment","1182","nilearn","nilearn","jeromedockes","2016-10-03 12:09:48","> Thanks @jeromedockes for pushing this forward.
> 
> I tried using this tonight. Perhaps I'm not using it appropriately, or missed an issue in the original fetcher that is solved here, but ... with over 1400 images cached locally, after 20 minutes the fetcher has only verified that I have 450 images cached locally. At this rate, it will take over an hour to complete... even if there are no new images.
> 
> The previous fetcher only fetched the paginated collection metadata; this one seems to be fetching that one-at-a-time and perhaps not caching the image metadata?
> 
> Any advice on this issue would be helpful. As it stands, I'm going to switch my research code back to the previous neurovault fetcher code I have, as it only requires ~10-20 seconds to validate the 1400 existing images and check for new ones.

Thank you for this feedback! Could you send me the detail of the commands you typed when you had this problem?

I tried to reproduce it but for me, it took a couple of seconds to load the metadata for all images on disk, and half a minute to check for new images and update metadata:

Load metadata for all images on disk:

```
>>> %time data = nv.fetch_neurovault(mode='offline', max_images=None, image_terms={})
CPU times: user 1.15 s, sys: 174 ms, total: 1.32 s
Wall time: 1.32 s
>>> len(data['images'])
13522
```

update metadata and download images not yet on disk(in this case I already had them all, so no new image was downloaded):

```
>>> %time data = nv.fetch_neurovault(mode='download_new', max_images=None, image_terms={})
CPU times: user 5.84 s, sys: 1.12 s, total: 6.96 s
Wall time: 30.9 s
```
","",""
"issue_comment","1182","nilearn","nilearn","bcipolli","2016-10-04 13:52:57","```
    ss_all = datasets.fetch_neurovault(
        mode='download_new',
        max_images=5000, image_filter=image_filter,
        fetch_neurosynth_words=True)
```

It's almost 1 second per image. When I remove the `image_filter` arg, it seems to get higher faster, but still over ten minutes before I quit waiting.  Same if I set `fetch_neurosynth_words=False`.

Offline is quick.
","",""
"issue_comment","1182","nilearn","nilearn","bcipolli","2016-10-04 16:14:01","A bit more: 
- When downloading new files, I don't see the progress info that used to be there. In fact, it's not clear to me from the output when any file is being downloaded. As best I can guess, `INFO: Already fetched 2034 images.` indicates a file was fetched. Did nilearn change the downloader output, or is this just for this branch? 
- Filenames changed, so between that and the output confusion above, files were being downloaded without me realizing it. Sorry!
- Still, even with retesting, I get > 10 min wait times before my script loads, using `mode='download_new'`.
","",""
"issue_comment","1182","nilearn","nilearn","jeromedockes","2016-10-05 14:22:48","> A bit more:
> 
> ```
> When downloading new files, I don't see the progress info that used to be there. In fact, it's not clear to me from the output when any file is being downloaded. As best I can guess, INFO: Already fetched 2034 images. indicates a file was fetched. Did nilearn change the downloader output, or is this just for this branch?
> ```

More detailed info is displayed if the logging level is set to a lower value,

```
neurovault.set_logging_level(neurovault.logging.DEBUG)
```

I can make DEBUG the default logging level. I will add a `verbose` parameter in the function to control that as in the other nilearn functions.

The progress from `_chunk_report_` (the one with the 'seconds remaining' and the carriage return) is not displayed because the images have to be downloaded one by one and each takes around a second, so there wouldn't be much time to look at it anyway. If we want to have it, I can change the verbose parameter when calling `fetch_file` so that this report appears.

It will be more useful when we add a function that uses the new 'download_all' button from neurovault, but this hasn't been implemented yet.

> ```
> Filenames changed, so between that and the output confusion above, files were being downloaded without me realizing it. Sorry!
> 
> Still, even with retesting, I get > 10 min wait times before my script loads, using mode='download_new'.
> ```

Could you please provide the part of your script that loads the images? On my laptop it takes 7 seconds to load 7000 images and check metadata is up-to-date, using `mode='download_new'`. Maybe seeing what you did differently can help me find the performance bug in the new fetcher.
","",""
"issue_comment","1182","nilearn","nilearn","jeromedockes","2016-10-05 16:24:20","> It would be good. I have no love for the logging framework in Python, as
> it is quite poor to give user information (such as progress), which is
> really what we want to do when we use ""print"".

I'm not sure I have understood. by default logging output is dumped on stderr, so the user sees it on the console. Is the problem that log records will be printed on separate lines (and that we can't use carriage return as is done in `_chunk_report_`)?

>  If we want to have it, I can change the verbose parameter when calling
>  fetch_file so that this report appears.
> Maybe we need an internal data-download function that downloads multiple
> files and gives progress (possibly using fetch_file).

The current behaviour is to use fetch_file to download each file and print how many images have been downloaded so far; what other information should we add?
","",""
"issue_comment","1182","nilearn","nilearn","jeromedockes","2016-10-05 16:44:21","> First it prints thing that are incomprehensible to the user (like the
> module name and the warning type). That tends to clutter the display and
> scare people. 

I can set the formatter to print whatever we want; for now I have set it to print only the logging level  (but I agree it's not useful) and the message, I can change it to print only the message itself, or maybe also the time?

> Second, indeed, it is not great for displaying progress.
> Maybe an optional progress bar, with estimation of the time. Ideally, we
> should factorize this as much as possible with the existing progress bar.

Then the best solution may be to replace all calls to the logging module by calls to print or `_chunk_report_`, does this seem better?
","",""
"issue_comment","1182","nilearn","nilearn","jeromedockes","2016-11-14 14:37:40","> @jeromedockes I believe the issue for me is that with download_new, existing collections are updated, one-by-one, with an API call, to look for new images. That is very slow, and different from the previous design.
> 
> Is that a correct understanding? Sounds like that may not be happening for you? I debugged to verify that that's what I'm seeing.

@bcipolli Sorry for the delay. This was indeed the behaviour, the motivation was this scenario:
- I download some images with a strict filter, which dowloads image 1 from collection 1 but filters out image 2 in collection 1
- later, I launch a download with a less restrictive filter, which would accept image 2. If the fetcher simply sees that we already have collection 1 and doesn't check that extra images are available by querying the server, collection_1/image_2 will be missing from the fetched images.

I have changed it to restore the faster behaviour you were expecting, so now it only checks for new collections. We could also try to update only the collections for which the number of images on disk is different from the number of images announced in the collection metadata
","",""
"issue_comment","1182","nilearn","nilearn","bcipolli","2016-11-14 15:24:34","@jeromedockes Cool, thanks for the clarification.

In the old code, Scenario 2 would actually still fetch the image, It would use the locally cached collection metadata to list out the needed images (including image2), and the fetcher would determine that it's not cached locally, and so go fetch it. This is because the collection metadata was complete; no filtering within the metadata itself was done before caching locally.

The scenario where the old behavior would not get a new image is if an image is added to a collection remotely, after the metadata has been cached locally. I figured, since speed is such a factor, that scenario could be taken care of with an `--update-metadata` flag, outside the default behavior.

Perhaps I'm just misunderstanding your scenario 2, and it's just the scenario I described. :) Either way, thank you! I'll try re-integrating this latest code into our project, so we can help QA it.

And thanks for all your work!
","",""
"issue_comment","1182","nilearn","nilearn","jeromedockes","2016-11-14 16:12:04","> I'll try re-integrating this latest code into our project, so we can help QA it

Cheers! Please let me know if the speed problem persists. I will change the status/progress printing on the console as we said a while ago and push it tomorrow
","",""
"issue_comment","1182","nilearn","nilearn","bcipolli","2016-11-14 22:05:41","The metadata fetching does seem faster, though it's hard to tell what's going on as I receive no output.

I also noticed that there's no output during the neurosynth term fetching. So, I've had things running for about 5 mins with no output.

Just wanted to make sure that's on the map of output verbiage to tweak. Thanks!
","",""
"issue_comment","1182","nilearn","nilearn","bcipolli","2016-11-19 02:31:39","Are the neurosynth results being cached? I haven't successfully completed a download. I've restarted... nothing. I've enabled the verbose output.. and still no completion.

Some help would be great, otherwise I'll need to revert so I can continue my research.
","",""
"issue_comment","1182","nilearn","nilearn","jeromedockes","2016-11-21 09:40:02","> Are the neurosynth results being cached? I haven't successfully completed a download. I've restarted... nothing. I've enabled the verbose output.. and still no completion.
> 
> Some help would be great, otherwise I'll need to revert so I can continue my research.

Yes, the neurosynth results are saved on disk, but in the same folder as the image they describe rather than a separate neurosynth directory. Here is an example output I get for five images (the first time, the neurosynth words had to be downloaded, and the second time, they were read from the disk)

    >>> data = nv.fetch_neurovault(max_images=5, fetch_neurosynth_words=True)
    DEBUG: Reading local neurovault data.
    DEBUG: Downloading file: http://neurosynth.org/api/v2/decode/?neurovault=14329
    DEBUG: Download succeeded, downloaded to: /home/jerome/nilearn_data/neurovault/collection_1066/neurosynth_words_for_image_14329.json
    DEBUG: Downloading file: http://neurosynth.org/api/v2/decode/?neurovault=14330
    DEBUG: Download succeeded, downloaded to: /home/jerome/nilearn_data/neurovault/collection_1066/neurosynth_words_for_image_14330.json
    DEBUG: Downloading file: http://neurosynth.org/api/v2/decode/?neurovault=14328
    DEBUG: Download succeeded, downloaded to: /home/jerome/nilearn_data/neurovault/collection_1066/neurosynth_words_for_image_14328.json
    DEBUG: Downloading file: http://neurosynth.org/api/v2/decode/?neurovault=14331
    DEBUG: Download succeeded, downloaded to: /home/jerome/nilearn_data/neurovault/collection_1066/neurosynth_words_for_image_14331.json
    DEBUG: Downloading file: http://neurosynth.org/api/v2/decode/?neurovault=19101
    DEBUG: Download succeeded, downloaded to: /home/jerome/nilearn_data/neurovault/collection_1373/neurosynth_words_for_image_19101.json
    DEBUG: 5 images found on local disk.
    INFO: Computing word features.
    INFO: Computing word features done; vocabulary size: 2911
    >>> data = nv.fetch_neurovault(max_images=5, fetch_neurosynth_words=True)
    DEBUG: Reading local neurovault data.
    DEBUG: 5 images found on local disk.
    INFO: Computing word features.
    INFO: Computing word features done; vocabulary size: 2911
    >>> ","",""
"issue_comment","1182","nilearn","nilearn","jeromedockes","2016-11-21 09:46:49","> Jerome: how hard would it be to get rid of the log and just use printing to stderr?

not hard, I will do it now

in the meantime the logging level can be set with 

    neurovault.set_logging_level(<e.g. neurovault.logging.DEBUG>)","",""
"issue_comment","1182","nilearn","nilearn","bcipolli","2016-11-22 15:43:44","@GaelVaroquaux I'm just running locally (with `ipython` on my macbook pro).

Once I switched to the logging's `DEBUG` settings, I got more informative output. When I was developing in `nilearn`, this level of output was more the default (and the interface was to pass a `verbose` parameter). So, didn't realize the interface needs there.

Downloads are proceeding! Will update later today when downloads complete. Thank you!","",""
"issue_comment","1182","nilearn","nilearn","bcipolli","2016-11-22 16:18:08","I do notice that if I have a disconnect in my connection, the neurosynth API call hangs and never returns. I thought the `nilearn` code times that out?

No biggie, I just kill the process and restart, but wanted to check.","",""
"issue_comment","1182","nilearn","nilearn","bcipolli","2016-11-23 20:03:46","OK, things look good to me now; I've got my images and neurovault terms downloaded, and the cached copies are used relatively quickly on re-run. Thank you @jeromedockes !","",""
"issue_comment","1182","nilearn","nilearn","bcipolli","2016-12-03 00:49:03","Just to reiterate, this is working great for me. I'd love to see this get merged...","",""
"issue_comment","1182","nilearn","nilearn","jeromedockes","2016-12-03 12:55:08","> Just to reiterate, this is working great for me. I'd love to see this get merged...

Thanks for all the feedback and help, Ben! I think the timeout problem is fixed, I just have to add a test for it. Then there's still the improvement of progress reporting to do.","",""
"issue_comment","1182","nilearn","nilearn","bcipolli","2016-12-03 15:31:37","Cool.

For me, once I turned on the debug logging, I got the level of output I had been accustomed to from `nilearn`. There were maybe one or two outputs that I didn't really need, but the rest were helpful in understanding the download progression of the fetcher.

 Good luck!","",""
"issue_comment","1182","nilearn","nilearn","jeromedockes","2016-07-24 15:21:41","> I wonder if it makes sense to limit the results only to collections
>  that have DOI value set. 

It may be interesting to consider only these collections, but it would mean ignoring a lot of data:
if we consider all images which match the other filters:

| filter | # collections | # images |
| --- | --- | --- |
| all | 276 | 6803 |
| with DOI only | 109 | 5000 |

Moreover, I'm not sure having a DOI is such a good criterion: Out of 191 (non-empty) collections which have a DOI, 82 don't contain any image which passes the other default filters.

> Excluding parcellations and atlases might also make sense by default.

I have changed from keeping only T, Z and F maps to excluding images when:
- 'map_type' is one of 'ROI/mask', 'anatomical', 'parcellation'
- 'image_type' is 'atlas'

Just to remind us of what the 'map_type' and 'image_type' are

| map_type | image_type | n_images |
| --- | --- | --- |
| None | atlas | 18 |
| Chi squared map | statistic_map | 1 |
| F map | NIDM results statistic map | 2 |
| F map | statistic_map | 48 |
| P map (given null hypothesis) | statistic_map | 169 |
| ROI/mask | statistic_map | 286 |
| T map | NIDM results statistic map | 367 |
| T map | statistic_map | 1431 |
| Z map | NIDM results statistic map | 224 |
| Z map | statistic_map | 927 |
| anatomical | statistic_map | 22 |
| multivariate-beta map | statistic_map | 61 |
| other | statistic_map | 2822 |
| parcellation | statistic_map | 150 |
| univariate-beta map | statistic_map | 4288 |

> > Probably not by default, but we should make it really easy to perform
> > such selections.

For example, selecting only those with DOI can be done:

using `fetch_neurovault`:

```
>>> fetch_neurovault(collection_terms={'DOI': NotNull()})
```

using SQL:

```
>>> read_sql_query(""SELECT * FROM collections WHERE DOI IS NOT NULL"")
```
","",""
"issue_comment","1182","nilearn","nilearn","jeromedockes","2016-07-24 17:30:56","> You convinced me :) It would be good to add the ""only DOI"" query to examples/documentation.

Noted; for now I have added it to the `fetch_neurovault` docstring, I don't know in which example it would be most interesting to add it.
","",""
"issue_comment","1182","nilearn","nilearn","jeromedockes","2016-07-26 07:56:39","> Are you sure examples should be placed in functional connectivity or a new one ?

No, not sure at all - I didn't know where to put them; they were in a folder called ""connectivity"" in the original PR so I put them there. Where would you suggest placing them?
","",""
"issue_comment","1182","nilearn","nilearn","jeromedockes","2016-07-27 14:39:00","> Please don't rebase during discussions, it removes all the comments in github.

Sorry about that; thanks for the advice and help by the way.
","",""
"issue_comment","1182","nilearn","nilearn","jeromedockes","2016-07-27 14:44:59","When I run coverage locally it gives me different results, and I can't seem to access the details of which statements were missed online. Have you faced a similar problem before? Some other people seem to have experienced this (https://github.com/lemurheavy/coveralls-public/issues/364, https://github.com/statsmodels/statsmodels/issues/1502/, https://github.com/lemurheavy/coveralls-public/issues/263) but these discussions don't seem to solve the problem
","",""
"issue_comment","1182","nilearn","nilearn","jeromedockes","2016-07-28 09:29:51","> One very blocking thing to me is that you squashed the commits, and thus history and authorship of @bcipolli on the code is lost, which is very bad. Once you're done, you should take back the original PR, diff the last state with your code, and do one commit in your name to apply your changes.

Actually I forked the branch directly from master, so the history wouldn't show any commits from @bcipolli (I wasn't clear in this PR's description, and should not have written 'this is based on...'). I have a branch in which I kept the full history, I can push it to github if you want to look at it. The examples were taken from PR #832 but the rest is completely different. Do you think it makes sense to rebase this branch on the one from PR #832? Or maybe if it's OK with @bcipolli we could just add him as an author of `neurovault.py` (he is already listed as the author of the examples)?
","",""
"issue_comment","1182","nilearn","nilearn","jeromedockes","2016-08-04 11:13:17","> General remark: the neurovault fetcher file is 4000 lines long. It feels wrong. There are probably features that we can live without. I need more time to inspect and find tradeoffs, but we should start thinking about that.

Yes, I haven't forgotten that we said we would remove all the sql stuff. I have been working on something else this week but I will try to do that soon, it will shorten the file and then we can talk about further simplification.
","",""
"issue_comment","1182","nilearn","nilearn","jeromedockes","2017-04-20 15:18:20","Many thanks to everyone and especially @KamalakerDadi and @GaelVaroquaux for the reviews, all your help and sound advice","",""
"issue_comment","1182","nilearn","nilearn","KamalakerDadi","2017-03-28 20:54:31","Some comments on minor details","",""
"issue_comment","1182","nilearn","nilearn","KamalakerDadi","2017-03-28 20:55:09","CircleCI error seems like time out. Locally I can build documentation successfully.","",""
"issue_comment","1182","nilearn","nilearn","KamalakerDadi","2017-03-28 21:01:18","When I specify ""wrong argument"" by mistake it searches the server and returns me empty after searching for several minutes. ","",""
"issue_comment","1182","nilearn","nilearn","KamalakerDadi","2017-04-11 14:51:34","Can you please also add in doc/whats_new.rst ?","",""
"issue_comment","1182","nilearn","nilearn","KamalakerDadi","2017-04-13 11:07:05","CircleCI failure seems to be unrelated. Error:""command timed out"".

I am able to build documentation locally. Also, this PR LGTM.
Any more reviews on this ? Or merge ?","",""
"issue_comment","1182","nilearn","nilearn","KamalakerDadi","2017-04-20 07:50:51","Can you please rebase on master ?

Also in ```doc/whats_new.rst```, could you move these additions from release section 0.3.beta to new release section creating **0.3.1** ?
Thanks","",""
"issue_comment","1182","nilearn","nilearn","KamalakerDadi","2017-04-20 14:59:03","Great work! Thanks Merged","",""
"issue_comment","1182","nilearn","nilearn","bcipolli","2017-04-20 15:15:20","omg 😮 nice!! :)","",""
"issue_comment","1182","nilearn","nilearn","chrisfilo","2017-04-20 15:25:14","Excellent work everyone! I'm getting drunk today to celebrate!

On Apr 20, 2017 8:18 AM, ""jeromedockes"" <notifications@github.com> wrote:

> Many thanks to everyone and especially @KamalakerDadi
> <https://github.com/KamalakerDadi> and @GaelVaroquaux
> <https://github.com/GaelVaroquaux> for the reviews, all your help and
> sound advice
>
> —
> You are receiving this because you were mentioned.
> Reply to this email directly, view it on GitHub
> <https://github.com/nilearn/nilearn/pull/1182#issuecomment-295775344>, or mute
> the thread
> <https://github.com/notifications/unsubscribe-auth/AAOkp0lI-_ctWLkqkX_Vjdd3KVKndUSFks5rx3dAgaJpZM4JQkLw>
> .
>
","",""
"issue_comment","1182","nilearn","nilearn","KamalakerDadi","2016-07-25 19:12:24","Are you sure examples should be placed in functional connectivity or a new one ?
","",""
"issue_comment","1182","nilearn","nilearn","KamalakerDadi","2016-07-25 19:57:09","May be some functions from `neurovault.py` can be moved to utils or neurovault_utils ? What do you all think ?
","",""
"issue_comment","1182","nilearn","nilearn","KamalakerDadi","2016-07-27 08:30:12","> Where would you suggest placing them?

I believe more great examples will come in future using Neurovault analysis. I suggest to keep right naming such as `05_neurovault_analysis` ? @GaelVaroquaux @AlexandreAbraham @bcipolli 
","",""
"issue_comment","1182","nilearn","nilearn","KamalakerDadi","2016-07-27 08:37:01","Two examples looks good to me.
","",""
"issue_comment","1182","nilearn","nilearn","KamalakerDadi","2016-07-27 08:41:30","In fetcher file, description is missing from a Bunch of returns and documentation. `_get_dataset_descr` could help to do that. Other fetchers can be good to look for hints.
","",""
"issue_comment","1182","nilearn","nilearn","KamalakerDadi","2016-07-28 09:00:15","My question stills holds: May be some functions from neurovault.py can be moved to utils or neurovault_utils ? What do you all think ?
","",""
"issue_comment","1182","nilearn","nilearn","codecov[bot]","2017-02-27 19:22:50","# [Codecov](https://codecov.io/gh/nilearn/nilearn/pull/1182?src=pr&el=h1) Report
> Merging [#1182](https://codecov.io/gh/nilearn/nilearn/pull/1182?src=pr&el=desc) into [master](https://codecov.io/gh/nilearn/nilearn/commit/fe6fee62320fc5628198564cd1fa5172c053378d?src=pr&el=desc) will **increase** coverage by `0.1%`.
> The diff coverage is `95.87%`.

[![Impacted file tree graph](https://codecov.io/gh/nilearn/nilearn/pull/1182/graphs/tree.svg?token=KpYArSdyXv&src=pr&height=150&width=650)](https://codecov.io/gh/nilearn/nilearn/pull/1182?src=pr&el=tree)

```diff
@@            Coverage Diff            @@
##           master    #1182     +/-   ##
=========================================
+ Coverage   94.51%   94.61%   +0.1%     
=========================================
  Files         118      120      +2     
  Lines       13470    14537   +1067     
=========================================
+ Hits        12731    13754   +1023     
- Misses        739      783     +44
```


| [Impacted Files](https://codecov.io/gh/nilearn/nilearn/pull/1182?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [nilearn/datasets/\_\_init\_\_.py](https://codecov.io/gh/nilearn/nilearn/pull/1182?src=pr&el=tree#diff-bmlsZWFybi9kYXRhc2V0cy9fX2luaXRfXy5weQ==) | `100% <100%> (ø)` | :arrow_up: |
| [nilearn/datasets/neurovault.py](https://codecov.io/gh/nilearn/nilearn/pull/1182?src=pr&el=tree#diff-bmlsZWFybi9kYXRhc2V0cy9uZXVyb3ZhdWx0LnB5) | `94.96% <94.96%> (ø)` | |
| [nilearn/datasets/tests/test\_neurovault.py](https://codecov.io/gh/nilearn/nilearn/pull/1182?src=pr&el=tree#diff-bmlsZWFybi9kYXRhc2V0cy90ZXN0cy90ZXN0X25ldXJvdmF1bHQucHk=) | `97.31% <97.31%> (ø)` | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/nilearn/nilearn/pull/1182?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/nilearn/nilearn/pull/1182?src=pr&el=footer). Last update [fe6fee6...8212940](https://codecov.io/gh/nilearn/nilearn/pull/1182?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
","",""
"pull_request_commit_comment","1182","nilearn","nilearn","KamalakerDadi","2016-07-25 18:19:25","May be we should expose `from nilearn.image import load_img` than `check_niimg`.
","8212940456e9f3470dc0163a0c510b945e1b8c5e","(None, '', u'examples/03_connectivity/plot_ica_neurovault.py')"
"pull_request_commit_comment","1182","nilearn","nilearn","KamalakerDadi","2016-07-25 19:07:05","A bit of details about the example would be more informative.
","8212940456e9f3470dc0163a0c510b945e1b8c5e","(None, '', u'examples/03_connectivity/plot_neurovault_meta_analysis.py')"
"pull_request_commit_comment","1182","nilearn","nilearn","KamalakerDadi","2016-07-25 19:14:28","Can we use `load_img` here ?
","8212940456e9f3470dc0163a0c510b945e1b8c5e","(None, '', u'examples/03_connectivity/plot_neurovault_meta_analysis.py')"
"pull_request_commit_comment","1182","nilearn","nilearn","KamalakerDadi","2016-07-25 19:15:18","May be `new_img_like` here ?
","8212940456e9f3470dc0163a0c510b945e1b8c5e","(None, '', u'examples/03_connectivity/plot_neurovault_meta_analysis.py')"
"pull_request_commit_comment","1182","nilearn","nilearn","KamalakerDadi","2016-07-25 19:23:18","You never used `nii_z` anywhere ?
","8212940456e9f3470dc0163a0c510b945e1b8c5e","(None, '', u'examples/03_connectivity/plot_neurovault_meta_analysis.py')"
"pull_request_commit_comment","1182","nilearn","nilearn","KamalakerDadi","2016-07-25 19:29:36","Looks like it needs place in nistats. :)
","8212940456e9f3470dc0163a0c510b945e1b8c5e","(None, '', u'examples/03_connectivity/plot_neurovault_meta_analysis.py')"
"pull_request_commit_comment","1182","nilearn","nilearn","jeromedockes","2016-07-26 07:53:06","replaced `check_niimg` with `load_img`
","8212940456e9f3470dc0163a0c510b945e1b8c5e","(None, '', u'examples/03_connectivity/plot_ica_neurovault.py')"
"pull_request_commit_comment","1182","nilearn","nilearn","jeromedockes","2016-07-26 07:53:57","Used `load_img` and removed nibabel import.
","8212940456e9f3470dc0163a0c510b945e1b8c5e","(None, '', u'examples/03_connectivity/plot_neurovault_meta_analysis.py')"
"pull_request_commit_comment","1182","nilearn","nilearn","jeromedockes","2016-07-26 07:54:26","removed `nii_z`
","8212940456e9f3470dc0163a0c510b945e1b8c5e","(None, '', u'examples/03_connectivity/plot_neurovault_meta_analysis.py')"
"pull_request_commit_comment","1182","nilearn","nilearn","AlexandreAbraham","2016-07-27 08:39:35","Nitpicking : I would go for `math_img` and rely on `np.isfinite`.
","8212940456e9f3470dc0163a0c510b945e1b8c5e","(None, '', u'examples/03_connectivity/plot_ica_neurovault.py')"
"pull_request_commit_comment","1182","nilearn","nilearn","AlexandreAbraham","2016-07-27 08:40:09","I think `memory_level` is not necessary and may be confusing?
","8212940456e9f3470dc0163a0c510b945e1b8c5e","(None, '', u'examples/03_connectivity/plot_ica_neurovault.py')"
"pull_request_commit_comment","1182","nilearn","nilearn","AlexandreAbraham","2016-07-27 08:42:29","I would remove this. This is far too advanced. I would prefer a more elaborated figure with subplots rather than 40 plots.
","8212940456e9f3470dc0163a0c510b945e1b8c5e","(None, '', u'examples/03_connectivity/plot_ica_neurovault.py')"
"pull_request_commit_comment","1182","nilearn","nilearn","AlexandreAbraham","2016-07-27 08:42:44","Is that really necessary? It adds complexity for no reason.
","8212940456e9f3470dc0163a0c510b945e1b8c5e","(None, '', u'examples/03_connectivity/plot_ica_neurovault.py')"
"pull_request_commit_comment","1182","nilearn","nilearn","KamalakerDadi","2016-07-27 08:43:44","> I think memory_level is not necessary and may be confusing?

Here, we received warnings if `memory_level=0` hence I suggested. Why is it confusing ? 
","8212940456e9f3470dc0163a0c510b945e1b8c5e","(None, '', u'examples/03_connectivity/plot_ica_neurovault.py')"
"pull_request_commit_comment","1182","nilearn","nilearn","AlexandreAbraham","2016-07-27 08:48:56","Because people do not know what is `memory_level`, so they will look up the documentation, which is not very clear, and then they may end up thinking that this is too complicated.

Is a memory object is provided we should set memory level to 1 and not raise a warning.
","8212940456e9f3470dc0163a0c510b945e1b8c5e","(None, '', u'examples/03_connectivity/plot_ica_neurovault.py')"
"pull_request_commit_comment","1182","nilearn","nilearn","KamalakerDadi","2016-07-27 08:54:40","> Is that really necessary? It adds complexity for no reason.

If I can answer you. Examples has a pretty printing statements which are actually vanished by bunch of warnings.
","8212940456e9f3470dc0163a0c510b945e1b8c5e","(None, '', u'examples/03_connectivity/plot_ica_neurovault.py')"
"pull_request_commit_comment","1182","nilearn","nilearn","AlexandreAbraham","2016-07-27 09:39:35","I know why it is used. But is really a context necessary here? Why not adding `warnings.simplefilter('ignore', DeprecationWarning)` on top of the file, just after the warning import?
","8212940456e9f3470dc0163a0c510b945e1b8c5e","(None, '', u'examples/03_connectivity/plot_ica_neurovault.py')"
"pull_request_commit_comment","1182","nilearn","nilearn","jeromedockes","2016-07-27 14:19:14","So should I remove ""`memory_level=1`""? As Kamalaker pointed out, nilearn expects `memory_level` to be set if `memory` is specified. grep ""memory_level"" on the examples directory shows that many examples use it.
","8212940456e9f3470dc0163a0c510b945e1b8c5e","(None, '', u'examples/03_connectivity/plot_ica_neurovault.py')"
"pull_request_commit_comment","1182","nilearn","nilearn","jeromedockes","2016-07-27 14:21:13","Then, we would have to remove the filter we add explicitly at the end of the example - do you think it will be better?
","8212940456e9f3470dc0163a0c510b945e1b8c5e","(None, '', u'examples/03_connectivity/plot_ica_neurovault.py')"
"pull_request_commit_comment","1182","nilearn","nilearn","jeromedockes","2016-07-27 14:22:37","Done.
","8212940456e9f3470dc0163a0c510b945e1b8c5e","(None, '', u'examples/03_connectivity/plot_ica_neurovault.py')"
"pull_request_commit_comment","1182","nilearn","nilearn","jeromedockes","2016-07-27 14:22:49","Done.
","8212940456e9f3470dc0163a0c510b945e1b8c5e","(None, '', u'examples/03_connectivity/plot_ica_neurovault.py')"
"pull_request_commit_comment","1182","nilearn","nilearn","GaelVaroquaux","2016-07-28 11:46:51","This is not PEP8: it should be named test_sqlite_download_manager
","8212940456e9f3470dc0163a0c510b945e1b8c5e","(None, '', u'nilearn/datasets/tests/test_neurovault.py')"
"pull_request_commit_comment","1182","nilearn","nilearn","GaelVaroquaux","2016-08-03 23:02:09","You should use the backport in scikit-learn: sklearn.utils.testing.assert_warns.
","8212940456e9f3470dc0163a0c510b945e1b8c5e","(None, '', u'nilearn/datasets/tests/test_neurovault.py')"
"pull_request_commit_comment","1182","nilearn","nilearn","GaelVaroquaux","2016-08-03 23:07:50","I think that I prefer the name ""fetch_neurovault"": what ""_filtered"" means isn't very clear unless you read the docstring.

Other option: ""fetch_neurovault_query""?

Anyhow, you need to update docs/module/references.rst, which points to the old name (and misses a link to the second function), hence leads to failures in circleCI.
","8212940456e9f3470dc0163a0c510b945e1b8c5e","(None, '', u'examples/05_advanced/plot_ica_neurovault.py')"
"pull_request_commit_comment","1182","nilearn","nilearn","GaelVaroquaux","2016-09-30 09:44:20","You have forgotten to change the name here, haven't you?
","8212940456e9f3470dc0163a0c510b945e1b8c5e","(None, '', u'examples/05_advanced/plot_ica_neurovault.py')"
"pull_request_commit_comment","1182","nilearn","nilearn","bcipolli","2016-10-03 00:53:26","Yes, this needs to be updated.
","8212940456e9f3470dc0163a0c510b945e1b8c5e","(None, '', u'examples/05_advanced/plot_ica_neurovault.py')"
"pull_request_commit_comment","1182","nilearn","nilearn","bcipolli","2016-10-03 01:17:33","Function name should be updated
","8212940456e9f3470dc0163a0c510b945e1b8c5e","(None, '', u'examples/05_advanced/plot_neurovault_meta_analysis.py')"
"pull_request_commit_comment","1182","nilearn","nilearn","GaelVaroquaux","2016-12-04 17:08:39","I think that it would be nice to have a more explicit name instead of ""nii"". Maybe ""meta_analysis_img""? Or something else (preferably finishing by ""_img"").","8212940456e9f3470dc0163a0c510b945e1b8c5e","(None, '', u'examples/05_advanced/plot_neurovault_meta_analysis.py')"
"pull_request_commit_comment","1182","nilearn","nilearn","GaelVaroquaux","2016-12-04 17:10:14","Is the try/except because of Python 2.6 support?

We should really drop Python 2.6 support.","8212940456e9f3470dc0163a0c510b945e1b8c5e","(None, '', u'nilearn/datasets/neurovault.py')"
"pull_request_commit_comment","1182","nilearn","nilearn","GaelVaroquaux","2016-12-04 17:10:54","I believe that this is for Python 2/Python 3 support. I think that it would be good to indicate it in a comment.","8212940456e9f3470dc0163a0c510b945e1b8c5e","(None, '', u'nilearn/datasets/neurovault.py')"
"pull_request_commit_comment","1182","nilearn","nilearn","GaelVaroquaux","2016-12-04 17:21:20","Minor style comment: this empty line makes things hard to read, because the separation of the new method is less visible.","8212940456e9f3470dc0163a0c510b945e1b8c5e","(None, '', u'nilearn/datasets/neurovault.py')"
"pull_request_commit_comment","1182","nilearn","nilearn","GaelVaroquaux","2016-12-04 17:23:56","Such sophistatication makes the code hard to read. Wouldn't it be possible to inline this decorator: take its logic and move it to the various places that use it (I have found 3 places, so the amount of duplication won't be large)","8212940456e9f3470dc0163a0c510b945e1b8c5e","(None, '', u'nilearn/datasets/neurovault.py')"
"pull_request_commit_comment","1182","nilearn","nilearn","GaelVaroquaux","2016-12-04 17:26:15","What does the ""impl"" stand for in the name of this function? I don't understand it.","8212940456e9f3470dc0163a0c510b945e1b8c5e","(None, '', u'nilearn/datasets/neurovault.py')"
"pull_request_commit_comment","1182","nilearn","nilearn","GaelVaroquaux","2016-12-07 17:24:01","Let's remove this functionality.","8212940456e9f3470dc0163a0c510b945e1b8c5e","(None, '', u'nilearn/datasets/neurovault.py')"
"pull_request_commit_comment","1182","nilearn","nilearn","GaelVaroquaux","2016-12-07 17:24:37","Let's remove this for the user, and let's try to use the same code as in the other downloaders.","8212940456e9f3470dc0163a0c510b945e1b8c5e","(None, '', u'nilearn/datasets/neurovault.py')"
"pull_request_commit_comment","1182","nilearn","nilearn","GaelVaroquaux","2016-12-07 17:29:44","Can probably be removed: I don't see where it's used.","8212940456e9f3470dc0163a0c510b945e1b8c5e","(None, '', u'nilearn/datasets/neurovault.py')"
"pull_request_commit_comment","1182","nilearn","nilearn","GaelVaroquaux","2016-12-07 17:30:47","I would transform this into a ""skip_errors"" flag that can be True or False.","8212940456e9f3470dc0163a0c510b945e1b8c5e","(None, '', u'nilearn/datasets/neurovault.py')"
"pull_request_commit_comment","1182","nilearn","nilearn","GaelVaroquaux","2016-12-07 17:32:15","I don't think that I would have done a line return here.","8212940456e9f3470dc0163a0c510b945e1b8c5e","(None, '', u'nilearn/datasets/neurovault.py')"
"pull_request_commit_comment","1182","nilearn","nilearn","GaelVaroquaux","2017-03-02 17:54:19","Could you turn this in a title by adding an underline (and same for the different sections below)","8212940456e9f3470dc0163a0c510b945e1b8c5e","(None, '', u'examples/05_advanced/plot_ica_neurovault.py')"
"pull_request_commit_comment","1182","nilearn","nilearn","GaelVaroquaux","2017-03-02 17:55:13","We should strive to import from nilearn.datasets and not nilearn.datasets.neurovault","8212940456e9f3470dc0163a0c510b945e1b8c5e","(None, '', u'examples/05_advanced/plot_neurovault_meta_analysis.py')"
"pull_request_commit_comment","1182","nilearn","nilearn","GaelVaroquaux","2017-03-02 17:56:08","+1","8212940456e9f3470dc0163a0c510b945e1b8c5e","(None, '', u'examples/05_advanced/plot_neurovault_meta_analysis.py')"
"pull_request_commit_comment","1182","nilearn","nilearn","GaelVaroquaux","2017-03-02 17:58:26","We've dropped support for 2.6","8212940456e9f3470dc0163a0c510b945e1b8c5e","(None, '', u'nilearn/datasets/neurovault.py')"
"pull_request_commit_comment","1182","nilearn","nilearn","GaelVaroquaux","2017-03-02 18:02:30","An example would help: people don't understand the ""*arg"" syntax.","8212940456e9f3470dc0163a0c510b945e1b8c5e","(473, '', u'nilearn/datasets/neurovault.py')"
"pull_request_commit_comment","1182","nilearn","nilearn","GaelVaroquaux","2017-03-02 18:11:18","Could you inline this function please.","8212940456e9f3470dc0163a0c510b945e1b8c5e","(None, '', u'nilearn/datasets/neurovault.py')"
"pull_request_commit_comment","1182","nilearn","nilearn","GaelVaroquaux","2017-03-02 18:19:38","We should remove all the code related to reduced representation, it will make things simple.","8212940456e9f3470dc0163a0c510b945e1b8c5e","(None, '', u'nilearn/datasets/neurovault.py')"
"pull_request_commit_comment","1182","nilearn","nilearn","GaelVaroquaux","2017-03-02 18:22:04","Could you inline this function please.","8212940456e9f3470dc0163a0c510b945e1b8c5e","(None, '', u'nilearn/datasets/neurovault.py')"
"pull_request_commit_comment","1182","nilearn","nilearn","GaelVaroquaux","2017-03-02 18:24:26","Could you replace all filters and maps by generator expressions please.","8212940456e9f3470dc0163a0c510b945e1b8c5e","(None, '', u'nilearn/datasets/neurovault.py')"
"pull_request_commit_comment","1182","nilearn","nilearn","GaelVaroquaux","2017-03-02 18:25:39","Could you inline this function please.","8212940456e9f3470dc0163a0c510b945e1b8c5e","(None, '', u'nilearn/datasets/neurovault.py')"
"pull_request_commit_comment","1182","nilearn","nilearn","GaelVaroquaux","2017-03-02 18:27:08","Remove empty lines here","8212940456e9f3470dc0163a0c510b945e1b8c5e","(None, '', u'nilearn/datasets/neurovault.py')"
"pull_request_commit_comment","1182","nilearn","nilearn","KamalakerDadi","2017-03-28 18:33:30","downlad -> download","8212940456e9f3470dc0163a0c510b945e1b8c5e","(None, '', u'doc/building_blocks/neurovault.rst')"
"pull_request_commit_comment","1182","nilearn","nilearn","KamalakerDadi","2017-03-28 18:34:58","```
:func:`nilearn.datasets.fetch_neurovault_ids`
```
can point to the reference. So, users can easily go through full documentation.","8212940456e9f3470dc0163a0c510b945e1b8c5e","(None, '', u'doc/building_blocks/neurovault.rst')"
"pull_request_commit_comment","1182","nilearn","nilearn","KamalakerDadi","2017-03-28 18:38:57","This simple example is fetching me 1325 images. May be we should simple one which fetches least images ?","8212940456e9f3470dc0163a0c510b945e1b8c5e","(None, '', u'doc/building_blocks/neurovault.rst')"
"pull_request_commit_comment","1182","nilearn","nilearn","KamalakerDadi","2017-03-28 18:40:01","Same here. Specifying this way can point users directly to reference.
```
:func:`nilearn.datasets.fetch_neurovault`
```","8212940456e9f3470dc0163a0c510b945e1b8c5e","(None, '', u'doc/building_blocks/neurovault.rst')"
"pull_request_commit_comment","1182","nilearn","nilearn","KamalakerDadi","2017-03-28 18:41:35","I didn't understand why it is written as images' collections'. Any reason ?","8212940456e9f3470dc0163a0c510b945e1b8c5e","(None, '', u'doc/building_blocks/neurovault.rst')"
"pull_request_commit_comment","1182","nilearn","nilearn","KamalakerDadi","2017-03-28 18:48:54","May be we should add a note here, default values in ```image_terms``` and ```collection_terms``` need also be taken into account while using filters as functions. Because, what specify here might be contradicting with default terms in those arguments. ","8212940456e9f3470dc0163a0c510b945e1b8c5e","(None, '', u'doc/building_blocks/neurovault.rst')"
"pull_request_commit_comment","1182","nilearn","nilearn","KamalakerDadi","2017-03-28 18:50:54","Demo on max_images=None might take some time to fetch the data. May be we should think of least images fetch as possible ?","8212940456e9f3470dc0163a0c510b945e1b8c5e","(None, '', u'doc/building_blocks/neurovault.rst')"
"pull_request_commit_comment","1182","nilearn","nilearn","KamalakerDadi","2017-03-28 19:07:19","Comment is misleading isn't it removing nan and inf ?

Why don't we smooth with NiftiMasker ?","8212940456e9f3470dc0163a0c510b945e1b8c5e","(79, '', u'examples/05_advanced/plot_ica_neurovault.py')"
"pull_request_commit_comment","1182","nilearn","nilearn","KamalakerDadi","2017-03-28 19:13:52","plotting.show() here","8212940456e9f3470dc0163a0c510b945e1b8c5e","(None, '', u'examples/05_advanced/plot_ica_neurovault.py')"
"pull_request_commit_comment","1182","nilearn","nilearn","KamalakerDadi","2017-03-28 19:14:43","Then, we can remove importing matplotlib.","8212940456e9f3470dc0163a0c510b945e1b8c5e","(None, '', u'examples/05_advanced/plot_ica_neurovault.py')"
"pull_request_commit_comment","1182","nilearn","nilearn","KamalakerDadi","2017-03-28 19:38:37","'owner' is represented as ```int``` in neurovault database where integer are hard to remember. May be we should opt to 'owner_name' ?","8212940456e9f3470dc0163a0c510b945e1b8c5e","(41, '', u'nilearn/datasets/neurovault.py')"
"pull_request_commit_comment","1182","nilearn","nilearn","KamalakerDadi","2017-03-28 19:40:13","Can you add short comment for what are these defined ?","8212940456e9f3470dc0163a0c510b945e1b8c5e","(None, '', u'nilearn/datasets/neurovault.py')"
"pull_request_commit_comment","1182","nilearn","nilearn","KamalakerDadi","2017-03-28 19:42:24","Optional: Giving a short example here would be super useful. Defining filters using this special class.","8212940456e9f3470dc0163a0c510b945e1b8c5e","(97, '', u'nilearn/datasets/neurovault.py')"
"pull_request_commit_comment","1182","nilearn","nilearn","KamalakerDadi","2017-03-28 19:46:56","same here (optional). Example might be super useful for users to use these classes constructing their own filters.","8212940456e9f3470dc0163a0c510b945e1b8c5e","(136, '', u'nilearn/datasets/neurovault.py')"
"pull_request_commit_comment","1182","nilearn","nilearn","KamalakerDadi","2017-03-28 19:50:22","What it means by object ? As far I have seen defining like this NotEqual('atlas'). Isn't key to query rather than object ?","8212940456e9f3470dc0163a0c510b945e1b8c5e","(178, '', u'nilearn/datasets/neurovault.py')"
"pull_request_commit_comment","1182","nilearn","nilearn","KamalakerDadi","2017-03-28 19:52:37","Shouldn't be >= ?","8212940456e9f3470dc0163a0c510b945e1b8c5e","(None, '', u'nilearn/datasets/neurovault.py')"
"pull_request_commit_comment","1182","nilearn","nilearn","KamalakerDadi","2017-03-28 19:54:11","allways -> always. Same comment for other classes wherever applicable.","8212940456e9f3470dc0163a0c510b945e1b8c5e","(None, '', u'nilearn/datasets/neurovault.py')"
"pull_request_commit_comment","1182","nilearn","nilearn","KamalakerDadi","2017-03-28 19:54:44","allways -> always","8212940456e9f3470dc0163a0c510b945e1b8c5e","(None, '', u'nilearn/datasets/neurovault.py')"
"pull_request_commit_comment","1182","nilearn","nilearn","KamalakerDadi","2017-03-28 19:56:59","Shouldn't be the other way ? Am I missed something ?","8212940456e9f3470dc0163a0c510b945e1b8c5e","(None, '', u'nilearn/datasets/neurovault.py')"
"pull_request_commit_comment","1182","nilearn","nilearn","KamalakerDadi","2017-03-28 19:59:18","May be I am confused with documentation.","8212940456e9f3470dc0163a0c510b945e1b8c5e","(None, '', u'nilearn/datasets/neurovault.py')"
"pull_request_commit_comment","1182","nilearn","nilearn","KamalakerDadi","2017-03-28 20:01:36",":+1: ","8212940456e9f3470dc0163a0c510b945e1b8c5e","(112, '', u'nilearn/datasets/neurovault.py')"
"pull_request_commit_comment","1182","nilearn","nilearn","KamalakerDadi","2017-03-28 20:03:46","consonnants -> consonants","8212940456e9f3470dc0163a0c510b945e1b8c5e","(None, '', u'nilearn/datasets/neurovault.py')"
"pull_request_commit_comment","1182","nilearn","nilearn","KamalakerDadi","2017-03-28 20:06:56","It would have been nice if you specify for which argument this default function is used. To understand where it is used makes easy.","8212940456e9f3470dc0163a0c510b945e1b8c5e","(None, '', u'nilearn/datasets/neurovault.py')"
"pull_request_commit_comment","1182","nilearn","nilearn","KamalakerDadi","2017-03-28 20:14:01","query_terms_","8212940456e9f3470dc0163a0c510b945e1b8c5e","(None, '', u'nilearn/datasets/neurovault.py')"
"pull_request_commit_comment","1182","nilearn","nilearn","KamalakerDadi","2017-03-28 20:17:01","```python
if level > threshold_level:
```

```python
if with_traceback
```","8212940456e9f3470dc0163a0c510b945e1b8c5e","(None, '', u'nilearn/datasets/neurovault.py')"
"pull_request_commit_comment","1182","nilearn","nilearn","KamalakerDadi","2017-03-28 20:22:44","is -> if","8212940456e9f3470dc0163a0c510b945e1b8c5e","(None, '', u'nilearn/datasets/neurovault.py')"
"pull_request_commit_comment","1182","nilearn","nilearn","KamalakerDadi","2017-03-28 20:25:31","returs -> returns","8212940456e9f3470dc0163a0c510b945e1b8c5e","(None, '', u'nilearn/datasets/neurovault.py')"
"pull_request_commit_comment","1182","nilearn","nilearn","KamalakerDadi","2017-03-28 20:27:24","May be c capital ""C"" for container ?","8212940456e9f3470dc0163a0c510b945e1b8c5e","(None, '', u'nilearn/datasets/neurovault.py')"
"pull_request_commit_comment","1182","nilearn","nilearn","KamalakerDadi","2017-03-28 20:29:29","May be we should keep consistent in doc either n images or n files.","8212940456e9f3470dc0163a0c510b945e1b8c5e","(None, '', u'nilearn/datasets/neurovault.py')"
"pull_request_commit_comment","1182","nilearn","nilearn","KamalakerDadi","2017-03-28 20:29:52","vaule -> value","8212940456e9f3470dc0163a0c510b945e1b8c5e","(None, '', u'nilearn/datasets/neurovault.py')"
"pull_request_commit_comment","1182","nilearn","nilearn","KamalakerDadi","2017-03-28 20:40:37","wether -> whether. Also, applicable for remaining places in this API.","8212940456e9f3470dc0163a0c510b945e1b8c5e","(None, '', u'nilearn/datasets/neurovault.py')"
"pull_request_commit_comment","1182","nilearn","nilearn","KamalakerDadi","2017-03-28 20:41:03","explicitely -> explicitly","8212940456e9f3470dc0163a0c510b945e1b8c5e","(None, '', u'nilearn/datasets/neurovault.py')"
"pull_request_commit_comment","1182","nilearn","nilearn","KamalakerDadi","2017-03-28 20:41:49","Can you leave one line empty space below ?","8212940456e9f3470dc0163a0c510b945e1b8c5e","(None, '', u'nilearn/datasets/neurovault.py')"
"pull_request_commit_comment","1182","nilearn","nilearn","KamalakerDadi","2017-03-28 20:43:55","owner_name is not specified in default collection filters.","8212940456e9f3470dc0163a0c510b945e1b8c5e","(None, '', u'nilearn/datasets/neurovault.py')"
"pull_request_commit_comment","1182","nilearn","nilearn","KamalakerDadi","2017-03-28 20:47:10","visual indent pep8","8212940456e9f3470dc0163a0c510b945e1b8c5e","(None, '', u'nilearn/datasets/neurovault.py')"
"pull_request_commit_comment","1182","nilearn","nilearn","KamalakerDadi","2017-03-28 20:48:53","optional: any chance of simplifying the code ?","8212940456e9f3470dc0163a0c510b945e1b8c5e","(None, '', u'nilearn/datasets/neurovault.py')"
"pull_request_commit_comment","1182","nilearn","nilearn","KamalakerDadi","2017-03-28 20:49:12","same here simplyfing code.","8212940456e9f3470dc0163a0c510b945e1b8c5e","(None, '', u'nilearn/datasets/neurovault.py')"
"pull_request_commit_comment","1182","nilearn","nilearn","KamalakerDadi","2017-03-28 20:50:58","pep8","8212940456e9f3470dc0163a0c510b945e1b8c5e","(None, '', u'nilearn/datasets/neurovault.py')"
"pull_request_commit_comment","1182","nilearn","nilearn","KamalakerDadi","2017-03-28 20:52:26","Looks like some simplification here. I understand that we have lot and lengthy arguments.","8212940456e9f3470dc0163a0c510b945e1b8c5e","(None, '', u'nilearn/datasets/neurovault.py')"
"pull_request_commit_comment","1182","nilearn","nilearn","KamalakerDadi","2017-03-28 20:53:16","Line over-indented pep8","8212940456e9f3470dc0163a0c510b945e1b8c5e","(None, '', u'nilearn/datasets/neurovault.py')"
"pull_request_commit_comment","1182","nilearn","nilearn","KamalakerDadi","2017-03-28 21:03:46","Can we simply say list or tuple rather than Container ?","8212940456e9f3470dc0163a0c510b945e1b8c5e","(None, '', u'nilearn/datasets/neurovault.py')"
"pull_request_commit_comment","1182","nilearn","nilearn","jeromedockes","2017-04-11 11:28:06","I think this is the usual way to write a plural possessive. I can rephrase the sentence if it is weird.","8212940456e9f3470dc0163a0c510b945e1b8c5e","(None, '', u'doc/building_blocks/neurovault.rst')"
"pull_request_commit_comment","1182","nilearn","nilearn","jeromedockes","2017-04-11 11:28:49","Should we also emit a warning if the user passes a filter without changing the default terms?","8212940456e9f3470dc0163a0c510b945e1b8c5e","(None, '', u'doc/building_blocks/neurovault.rst')"
"pull_request_commit_comment","1182","nilearn","nilearn","jeromedockes","2017-04-11 11:30:37","the owner id (an int) is a filter that can be applied by the server itself. Of course the user can choose to filter based on the name; in this case it will be done locally. This is just the list of filters we can include in a URL, it is determined by Neurovault","8212940456e9f3470dc0163a0c510b945e1b8c5e","(41, '', u'nilearn/datasets/neurovault.py')"
"pull_request_commit_comment","1182","nilearn","nilearn","jeromedockes","2017-04-11 11:31:07","it can be any object. Added an example","8212940456e9f3470dc0163a0c510b945e1b8c5e","(178, '', u'nilearn/datasets/neurovault.py')"
"pull_request_commit_comment","1182","nilearn","nilearn","jeromedockes","2017-04-11 11:32:41","this is used to specify that whatever we compare it to should be greater or equal to the value we passed to the constructor. Therefore if we pass obj to the constructor, when we compare it to value, we get true if value is greater or equal to obj","8212940456e9f3470dc0163a0c510b945e1b8c5e","(None, '', u'nilearn/datasets/neurovault.py')"
"pull_request_commit_comment","1182","nilearn","nilearn","KamalakerDadi","2017-04-11 11:52:41","Only if it is not taking much time on this. I think it will be useful.","8212940456e9f3470dc0163a0c510b945e1b8c5e","(None, '', u'doc/building_blocks/neurovault.rst')"
"pull_request_commit_comment","1182","nilearn","nilearn","KamalakerDadi","2017-04-11 14:55:35","Can you check please here ? May be you have added it accidentally","8212940456e9f3470dc0163a0c510b945e1b8c5e","(None, '', u'nilearn/datasets/neurovault.py')"
"pull_request_commit","1182","nilearn","nilearn","bcipolli@ucsd.edu","2015-11-06 21:15:37","ENH: First pass on neurovault downloader.","52b55786239cdaabadf946871e8dcb04daa374c2",""
"pull_request_commit","1182","nilearn","nilearn","bcipolli@ucsd.edu","2015-11-06 22:07:24","ENH: Add stop-go example; ported from https://github.com/NeuroVault/neurovault_analysis/blob/master/Stop%20vs.%20Go%20metaanalysis.ipynb","5cf80a5c902235eace32f4770d662279eb7758b1",""
"pull_request_commit","1182","nilearn","nilearn","bcipolli@ucsd.edu","2015-11-06 22:23:16","DOC: adding and tweaking documentation.","bd68e68d1792151f9b530983d8a79828dedf2093",""
"pull_request_commit","1182","nilearn","nilearn","bcipolli@ucsd.edu","2015-11-06 22:34:20","STY: code cleanup","e0848fe8c5d41982ea00aeac46d262699aff457b",""
"pull_request_commit","1182","nilearn","nilearn","bcipolli@ucsd.edu","2015-11-06 22:41:53","BF: implement refresh=True","cedab35773946dca378ec1c4e9640102aaa1ff70",""
"pull_request_commit","1182","nilearn","nilearn","bcipolli@ucsd.edu","2015-11-07 18:17:42","STY: images_meta => images; image_meta => im","86b2db7acf46c15249e423b67572fd807e1e7c3a",""
"pull_request_commit","1182","nilearn","nilearn","bcipolli@ucsd.edu","2015-11-10 11:49:02","ENH: Get this working offline (still using requests).","e759a3a90ed24cbeab2c72076d079ab669e7e60d",""
"pull_request_commit","1182","nilearn","nilearn","bcipolli@ucsd.edu","2015-11-10 14:26:32","RF: Use _fetch_files instead of requests.","cdb1bf3ba4aa431a5328181862fa61485a0123d3",""
"pull_request_commit","1182","nilearn","nilearn","bcipolli@ucsd.edu","2015-11-10 15:14:22","DOC: remove info for printing errors that are then re-raised.","2f6f0f48ee307f39467757c2342216b67f260fdc",""
"pull_request_commit","1182","nilearn","nilearn","bcipolli@ucsd.edu","2015-11-10 18:00:08","BF: refresh=>overwrite, don't allow offline if overwrite=True","f41b014c3a1169edd6e56424241973398fc8b360",""
"pull_request_commit","1182","nilearn","nilearn","bcipolli@ucsd.edu","2015-11-10 18:00:21","BF: Use passed verbose value.","b3076266920e8ff6e34bb7f22cde0fe7b0ab3de2",""
"pull_request_commit","1182","nilearn","nilearn","bcipolli@ucsd.edu","2015-11-10 18:00:40","BF: Return all matched collections, even if the collection has no matched images.","490a51fc14335bc954cff91aa42e7274bc04263b",""
"pull_request_commit","1182","nilearn","nilearn","bcipolli@ucsd.edu","2015-11-10 18:01:02","TST: add neurovault tests (skip if offline)","15e11cc6ad50d72dc2cc76b5b304291f94854528",""
"pull_request_commit","1182","nilearn","nilearn","bcipolli@ucsd.edu","2015-11-10 18:14:46","TST: if setup mock, tear it down","5b23e2e2ec48dd9b6c57a1b1ccfa41c178e9e5ff",""
"pull_request_commit","1182","nilearn","nilearn","bcipolli@ucsd.edu","2015-11-16 06:22:05","RF: sort collections directories.","febc1b4c83f0adf76d20e55758b6d49c0d8bfc2b",""
"pull_request_commit","1182","nilearn","nilearn","bcipolli@ucsd.edu","2015-11-16 15:19:42","ENH: Add port of ICA example.","f0065ff784e0ccaabc23ee2d6f1dcdeafbb32f4e",""
"pull_request_commit","1182","nilearn","nilearn","bcipolli@ucsd.edu","2015-11-16 23:04:01","RF: Add joblib caching to entire process.","a6b675b40ca859164012088f70bbc920c4b3d6bd",""
"pull_request_commit","1182","nilearn","nilearn","bcipolli@ucsd.edu","2015-11-17 00:42:57","RF: Move functions out of neurovault fetcher.","462b45b26fa565e19536868b07fd4d7e4f348abe",""
"pull_request_commit","1182","nilearn","nilearn","bcipolli@ucsd.edu","2015-11-17 01:54:56","BF: Use newer neurosynth API","4905b08684aadfb50dd166c602e4a62d0fbbd6e5",""
"pull_request_commit","1182","nilearn","nilearn","bcipolli@ucsd.edu","2015-11-17 11:55:54","BF: Clean code, make Py3 fixes.","aa69c96abae8f584bfcf4d19c3d25d0a64c5f38d",""
"pull_request_commit","1182","nilearn","nilearn","bcipolli@ucsd.edu","2015-11-17 12:06:12","DOC: add docstrings to private neurovault functions.","13fb4580dafc07e10c72fbb670381766aa55c270",""
"pull_request_commit","1182","nilearn","nilearn","bcipolli@ucsd.edu","2015-11-17 12:43:48","RF: don't show() until end of example.","7c939cacccdfdf08519fe4c23c318272f2209b52",""
"pull_request_commit","1182","nilearn","nilearn","bcipolli@ucsd.edu","2015-11-17 12:54:12","BF: neurovault json is utf8 encoded.","6a3988e752759ed5c522831c4cbbb47a0951383c",""
"pull_request_commit","1182","nilearn","nilearn","bcipolli@ucsd.edu","2015-11-17 12:57:06","BF: remove seaborn","d790e752d7a711c4e3e1126b370c693e404388bb",""
"pull_request_commit","1182","nilearn","nilearn","bcipolli@ucsd.edu","2015-11-17 13:45:44","ENH: Add exclude_unpublished, collection_ids, image_types parameters & tests.","f1edb62059362327120f1b6b84ac220141b247eb",""
"pull_request_commit","1182","nilearn","nilearn","bcipolli@ucsd.edu","2015-11-17 14:11:57","ENH: image_types=>map_types, add image_type, add image_ids, allow collection_ids and image_ids to be negative (exclusion)","70ef5c7ba45f7fa2d4f34ad1ffb47d9087978028",""
"pull_request_commit","1182","nilearn","nilearn","bcipolli@ucsd.edu","2015-11-17 14:16:08","Fix logic for +/- filtering of IDs.","8e12e4c46c19ed9ba32fdeace61b7a946adc2fdb",""
"pull_request_commit","1182","nilearn","nilearn","bcipolli@ucsd.edu","2015-11-18 23:11:21","STY: fixing up code for code review.","f38596d51c49c9324da0461ba8a731fac278910e",""
"pull_request_commit","1182","nilearn","nilearn","bcipolli@ucsd.edu","2015-12-07 23:58:50","STY: delimit sections in notebook-style.","1a6c8a1af1f8e0816b6aa33d29d7a0e3da06ca02",""
"pull_request_commit","1182","nilearn","nilearn","bcipolli@ucsd.edu","2015-12-07 23:59:33","RF: use resample_img, iter_img to simplify resampling code.","d28555582d1618cbefb2012354a13a6d3d6500b2",""
"pull_request_commit","1182","nilearn","nilearn","bcipolli@ucsd.edu","2015-12-08 00:01:29","ENH: create exclude_known_bad_images parameter to fetch_neurovault.","190cbd7f4050c661e34251b35573917ab7f9b8a0",""
"pull_request_commit","1182","nilearn","nilearn","bcipolli@ucsd.edu","2015-12-08 00:02:06","ENH: Extend iter_img to return iterator on 3D image (rather than failing).","b65dbf0300eadb3dd27fe6bea509a4160cca63f4",""
"pull_request_commit","1182","nilearn","nilearn","bcipolli@ucsd.edu","2015-12-10 16:34:52","RF: Neurovault ICA example shortening.","99519cf7ea772d73991c4e7b2e61ab1f3b947e38",""
"pull_request_commit","1182","nilearn","nilearn","bcipolli@ucsd.edu","2015-12-11 16:38:35","RF: move neurosynth decoding to an option within fetch_neurovault.","475ddd2970d373da23141aa83883c627b065f140",""
"pull_request_commit","1182","nilearn","nilearn","bcipolli@ucsd.edu","2015-12-11 16:39:43","BF: avoid unnecessary warnings.","ca2469d03c4cfd978eff470a388f7305e160ef2e",""
"pull_request_commit","1182","nilearn","nilearn","bcipolli@ucsd.edu","2015-12-23 20:10:31","BF: fix test failures.","7e7106a3338f01084de08ac5f3d53282d53b2e57",""
"pull_request_commit","1182","nilearn","nilearn","bcipolli@ucsd.edu","2015-12-24 01:44:26","ENH: add _http to compat, for httplib/http Py2/3 difference.","c1f960502322488b1fc8315a2a486d7bb17105a1",""
"pull_request_commit","1182","nilearn","nilearn","bcipolli@ucsd.edu","2015-12-27 18:23:42","ENH: add query_server, to avoid querying neurovault every time.","fdadebd36246fa924c5f5c270c226adc88820791",""
"pull_request_commit","1182","nilearn","nilearn","bcipolli@ucsd.edu","2015-12-27 18:37:30","BF: handle None from neurosynth.","960ad146499e009378caefa1979d1921a57fd0e2",""
"pull_request_commit","1182","nilearn","nilearn","bcipolli@ucsd.edu","2016-01-04 15:41:46","ENH: extend query_server for neurovault.","c6665a5a694416d389d6efb7e1abb28327430306",""
"pull_request_commit","1182","nilearn","nilearn","bcipolli@ucsd.edu","2016-01-04 15:51:10","ENH: add query_server argument to all func fetchers.","bbea238c185e33e40ea4289c516e5d7d2c38450d",""
"pull_request_commit","1182","nilearn","nilearn","bcipolli@ucsd.edu","2016-01-04 15:51:35","STY: pep8/pyflakes on datasets/func.py","983ae1d2b0b9f8eb4d83d270a06f38c5a9389a22",""
"pull_request_commit","1182","nilearn","nilearn","bcipolli@ucsd.edu","2016-01-04 15:52:08","ENH: add query_server argument to _fetch_file*","1c5e096cddb1a78b91b4b7628f32f8fd2195c44e",""
"pull_request_commit","1182","nilearn","nilearn","bcipolli@ucsd.edu","2016-01-04 15:52:19","STY: pyflakes on neurovault example.","67c3cc7321e033e44a73c20abcefaf5d0adc64a6",""
"pull_request_commit","1182","nilearn","nilearn","jeromedockes","2016-07-28 11:23:41","Merge branch 'master' into neurovault-downloader

Conflicts:
	doc/modules/reference.rst
	nilearn/datasets/__init__.py
	nilearn/datasets/func.py
	nilearn/datasets/tests/test_func.py
	nilearn/image/image.py
	nilearn/image/tests/test_image.py","9b0b84088a2882878d276dba3fa5b7978e3a56dc",""
"pull_request_commit","1182","nilearn","nilearn","jeromedockes","2016-07-29 07:06:42","Rewrite Neurovault fetcher.","b162da2f5d0a17c7fe81ad1c0ee9a6f62ae2628a",""
"pull_request_commit","1182","nilearn","nilearn","jeromedockes","2016-07-29 11:35:53","better __repr__ for special filter values and remove _KNOWN_BAD_IMAGE_IDS and _KNOWN_BAD_COLLECTION_IDS","2dfda7daee4791a87abdc61ae4c2e3701c765aa0",""
"pull_request_commit","1182","nilearn","nilearn","jeromedockes","2016-07-29 14:01:54","split fetch_neurovault into fetch_neurovault_filtered and fetch_neurovault_ids","c7438210cc167e2353282ff1f26fe8116315fbee",""
"pull_request_commit","1182","nilearn","nilearn","jeromedockes","2016-08-16 09:45:47","remove sqlite storage of metadata.","50f4737da963110004af387f666f4c740d49a617",""
"pull_request_commit","1182","nilearn","nilearn","jeromedockes","2016-08-16 09:48:01","Merge branch 'master' into neurovault_fetcher","d9eede28dcf975abec62609e0b9ebb5f04586ed2",""
"pull_request_commit","1182","nilearn","nilearn","jeromedockes","2016-08-19 13:25:02","refactoring","2820a8c05f43d95f46bd1dfb47dfb65eb2956f95",""
"pull_request_commit","1182","nilearn","nilearn","jeromedockes","2016-11-14 10:07:15","Merge branch 'master' into neurovault_fetcher","cd24640ac99a9c39b453307004fed4a6694677fd",""
"pull_request_commit","1182","nilearn","nilearn","jeromedockes","2016-11-14 14:10:09","don't update collections when using download_new, put metadata in lists rather than tuples because DataFrame constructor doesn't accept tuple, fix import in example","15d866bcee22e207614eb1918689c75926c6cb18",""
"pull_request_commit","1182","nilearn","nilearn","jeromedockes","2016-11-21 14:05:13","dump basic progress info on stdout","6c5c5add1f1558324b8d6a66c3ec19d753092f3e",""
"pull_request_commit","1182","nilearn","nilearn","jeromedockes","2016-11-30 13:17:52","set default timeout of 10 s when fetching metadata","78155063966a21a9337a77121b986bcba2222455",""
"pull_request_commit","1182","nilearn","nilearn","jeromedockes","2017-01-26 16:47:11","Merge branch 'master' into neurovault_fetcher","2f9cb93ac6d8b98efb91306b191c3235197f18ce",""
"pull_request_commit","1182","nilearn","nilearn","jeromedockes","2017-01-26 16:48:28","clean up plot_neurovault_meta_analysis.py example (conversions t to z)","11c35c03d734394857b5acd0c5db40b1234346d3",""
"pull_request_commit","1182","nilearn","nilearn","jeromedockes","2017-02-02 11:28:01","Merge branch 'master' into neurovault_fetcher","8cc6c16ec3b1b8b7a405ee6f0d72fb944d79c0f3",""
"pull_request_commit","1182","nilearn","nilearn","jeromedockes","2017-02-02 15:13:44","use _get_dataset_dir only for finding directories","0db92c61c86a77aa9720d57a310c514641386c0f",""
"pull_request_commit","1182","nilearn","nilearn","jeromedockes","2017-02-02 19:02:53","remove logging in neurovault fetcher","420ef271bb109bf5318ba907c7aebcfd3ef7e51c",""
"pull_request_commit","1182","nilearn","nilearn","jeromedockes","2017-02-02 19:14:13","remove decorators from neurovault fetcher","0333745c2a9320a7aef8d0103b055ec8fa13338c",""
"pull_request_commit","1182","nilearn","nilearn","jeromedockes","2017-02-02 19:19:09","remove redundant printed messages","5e8a00431b7bc2d2778ae46b25df1ef802a84682",""
"pull_request_commit","1182","nilearn","nilearn","jeromedockes","2017-02-03 10:32:25","fix verbosity in neurovault fetcher","0d71a67c7f69877c09d333dc0ebcc9e938c49d12",""
"pull_request_commit","1182","nilearn","nilearn","jeromedockes","2017-02-25 11:24:09","replace classes used to download neurovault data with (non-member) functions","a2e8ca5de046c4977f0cb903160de1813f099f51",""
"pull_request_commit","1182","nilearn","nilearn","jeromedockes","2017-02-25 11:25:34","Merge branch 'master' into neurovault_fetcher","83644ccb87bdbe359cf6c7f48907f0c78c728864",""
"pull_request_commit","1182","nilearn","nilearn","jeromedockes","2017-02-27 19:22:13","update neurovault docstrings","b1750a0d2df4ada43ea468835621ded391f95f68",""
"pull_request_commit","1182","nilearn","nilearn","jeromedockes","2017-03-02 17:53:16","Merge branch 'master' into neurovault_fetcher","66aa6eadc55693eb9a0690c81e3d442eba467488",""
"pull_request_commit","1182","nilearn","nilearn","jeromedockes","2017-03-02 18:27:47","drop py2.6, remove _fetch_neurosynth_words","be4a084d236ea184db9ae77693b5ae407f5b214e",""
"pull_request_commit","1182","nilearn","nilearn","jeromedockes","2017-03-02 18:48:33","don't use map nor filter in neurovault.py","6d93fb68e47fd9a6ad892b38206b45c9c4bc8708",""
"pull_request_commit","1182","nilearn","nilearn","jeromedockes","2017-03-03 16:23:53","don't fetch reduced representations from neurovault","9fcd8d0ebe9c3bd3352c64339d4ac59c1418b7d1",""
"pull_request_commit","1182","nilearn","nilearn","jeromedockes","2017-03-03 16:24:56","add Neurovault in user guide","6bae6b4ae764c9263488c3749545e8b2e75e34e5",""
"pull_request_commit","1182","nilearn","nilearn","jeromedockes","2017-03-04 12:44:17","better tests for failing downloads","af488a2e5ee91a6291b879ed537eafb6f939873f",""
"pull_request_commit","1182","nilearn","nilearn","jeromedockes","2017-03-04 12:44:43","add links to examples and references in neurovault user guide entry.","619b9b69b0018f75726b564e3bc6ff986db80c4c",""
"pull_request_commit","1182","nilearn","nilearn","jeromedockes","2017-03-04 12:46:00","Merge branch 'master' into neurovault_fetcher","10b92f7dd265b83fbe5a5f7491e7b3eaff36414f",""
"pull_request_commit","1182","nilearn","nilearn","jeromedockes","2017-03-04 13:19:24","Merge branch 'master' into neurovault_fetcher","1c25cefef73927b75a09af1776366a2c7dddf5d9",""
"pull_request_commit","1182","nilearn","nilearn","jeromedockes","2017-04-11 11:48:33","address Kamalaker's review: mostly improve doc","70a5bbaf211d80f27b93ca6e661d87192530fcb7",""
"pull_request_commit","1182","nilearn","nilearn","jeromedockes","2017-04-11 13:11:24","warn if user sets a filter without removing default terms","4dac6c383eb144e9d10e713f63892e33a7a8e99f",""
"pull_request_commit","1182","nilearn","nilearn","jeromedockes","2017-04-11 14:11:06","fix order of return values in neurosynth_words_vectorized docstring","c40c319398a5da7f5f292cd18a00b65e42d93696",""
"pull_request_commit","1182","nilearn","nilearn","jeromedockes","2017-04-11 16:26:09","add tests for collection_ids and download_new and overwrite modes

+ improve warning message when image_filter is set but not image_terms","5113868d726d33f6afb86ac1807507325546b076",""
"pull_request_commit","1182","nilearn","nilearn","jeromedockes","2017-04-12 09:17:41","add neurovault in what's new and improve user guide entry","5bdfc81fc4df5aee4c9119dd45c3055cd3c6c113",""
"pull_request_commit","1182","nilearn","nilearn","jeromedockes","2017-04-12 11:59:50","improve neurovault doc","be9140577539903f9d3cae23e1b6cdaedc54906c",""
"pull_request_commit","1182","nilearn","nilearn","jeromedockes","2017-04-12 12:16:55","add missing doctest skip in neurovault.rst","f98916995314c6dc347f69281329c61323d1dcc4",""
"pull_request_commit","1182","nilearn","nilearn","jeromedockes","2017-04-20 11:08:37","Merge branch 'master' into neurovault_fetcher","6c95df538fa3f8334b84f97feaa6f914346134fa",""
"pull_request_commit","1182","nilearn","nilearn","jeromedockes","2017-04-20 11:12:41","create 0.3.1 section in whats_new.rst","8212940456e9f3470dc0163a0c510b945e1b8c5e",""
