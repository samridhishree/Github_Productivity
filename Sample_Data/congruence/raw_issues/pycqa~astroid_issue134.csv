"rectype","issueid","project_owner","project_name","actor","time","text","action","title"
"issue_title","134","pycqa","astroid","pylint-bot","2015-06-20 19:01:23","Originally reported by: **Claudiu Popa (BitBucket: [PCManticore](http://bitbucket.org/PCManticore), GitHub: @PCManticore)**

---

We currently don't have an Arg node for Python 3's arguments, because we are using AssName instead (this is how it works on Python 2).

```
#!python

>>> from ast import parse
>>> x = parse('''
... def test(a): pass
... ''')
>>> print(x)
<_ast.Module object at 0x0000000DBEF6F908>
>>> x.body
[<_ast.FunctionDef object at 0x0000000DBEF6F940>]
>>> x.body[0]
<_ast.FunctionDef object at 0x0000000DBEF6F940>
>>> x.body[0].args
<_ast.arguments object at 0x0000000DBEF6FA20>
>>> x.body[0].args.args
[<_ast.arg object at 0x0000000DBEF76A58>]
>>>
```

---
- Bitbucket: https://bitbucket.org/logilab/astroid/issue/134
","start issue","Introduce a new Arg node for Python 3 function arguments"
"issue_closed","134","pycqa","astroid","pylint-bot","2015-12-09 05:53:56","","closed issue","Introduce a new Arg node for Python 3 function arguments"
"issue_comment","134","pycqa","astroid","pylint-bot","2015-08-10 19:48:33","_Original comment by_ **Claudiu Popa (BitBucket: [PCManticore](http://bitbucket.org/PCManticore), GitHub: @PCManticore)**:

---

In fact, it's nicer to have AssName instead of a new Arg node, since it needs to be the same on both Python 2 and Python 3. Introducing a new node will change that requirement.
","",""
