"rectype","issueid","project_owner","project_name","actor","time","text","action","title"
"issue_title","437","nilearn","nilearn","banilo","2015-02-17 14:33:14","try to fix #433 

_utils.logger seemed like the most reasonable place to put this...
","start issue","_compose_err_msg() moved to _utils"
"issue_closed","437","nilearn","nilearn","lesteve","2015-02-18 08:40:45","","closed issue","_compose_err_msg() moved to _utils"
"pull_request_title","437","nilearn","nilearn","banilo","2015-02-17 14:33:14","try to fix #433 

_utils.logger seemed like the most reasonable place to put this...
","e4f1dd473b0f768fde73eb9ae6f5fcb98fa9e14a","_compose_err_msg() moved to _utils"
"pull_request_merged","437","nilearn","nilearn","lesteve","2015-02-18 08:40:45","_compose_err_msg() moved to _utils","beba6942a16308d52342a427db655557dfac3958","Pull request merge from banilo/nilearn:refactor_private_func to nilearn/nilearn:master"
"issue_comment","437","nilearn","nilearn","lesteve","2015-02-18 08:40:42","LGTM, merging.
","",""
"issue_comment","437","nilearn","nilearn","banilo","2015-02-17 18:28:20","Ok, should be fine now.

Nice string-in-the-string situation, by the way ;)
","",""
"pull_request_commit_comment","437","nilearn","nilearn","GaelVaroquaux","2015-02-17 14:42:27","Give us an example here (doctested), because it is very hard to understand from the docstring what this function does.
","e4f1dd473b0f768fde73eb9ae6f5fcb98fa9e14a","(19, '', u'nilearn/_utils/logger.py')"
"pull_request_commit_comment","437","nilearn","nilearn","lesteve","2015-02-17 14:46:43","Can you use items rather than iteritems? Just that I have been looking at python3 support lately and that would be one less to fix ...
","e4f1dd473b0f768fde73eb9ae6f5fcb98fa9e14a","(None, '', u'nilearn/_utils/logger.py')"
"pull_request_commit_comment","437","nilearn","nilearn","AlexandreAbraham","2015-02-17 14:55:16","For consistency, I would prefer to iterate over `sorted(kwargs.keys())`.
","e4f1dd473b0f768fde73eb9ae6f5fcb98fa9e14a","(None, '', u'nilearn/_utils/logger.py')"
"pull_request_commit_comment","437","nilearn","nilearn","GaelVaroquaux","2015-02-17 15:16:07","> For consistency, I would prefer to iterate over sorted(kwargs.keys()).

Great catch. This is actually important.

Actually, sorted(kwargs.items()) works too.
","e4f1dd473b0f768fde73eb9ae6f5fcb98fa9e14a","(None, '', u'nilearn/_utils/logger.py')"
"pull_request_commit_comment","437","nilearn","nilearn","banilo","2015-02-17 15:18:46","Like we have one now?
","e4f1dd473b0f768fde73eb9ae6f5fcb98fa9e14a","(19, '', u'nilearn/_utils/logger.py')"
"pull_request_commit","437","nilearn","nilearn","banilo","2015-02-17 14:30:42","compse_err moved to _utils","78b264bed87207e85c021544c2b1e8d892995560",""
"pull_request_commit","437","nilearn","nilearn","banilo","2015-02-17 15:17:54","compose_err: add example + iterate differently","13d64762b125816db901af86d471269adeecb695",""
"pull_request_commit","437","nilearn","nilearn","banilo","2015-02-17 18:27:26","compose_err: added doctest","2d229c06151de1c9fa6f10598721124235fab6bf",""
"pull_request_commit","437","nilearn","nilearn","banilo","2015-02-18 08:20:27","minor cleanup","e4f1dd473b0f768fde73eb9ae6f5fcb98fa9e14a",""
