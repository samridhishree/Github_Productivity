"rectype","issueid","project_owner","project_name","actor","time","text","action","title"
"issue_title","456","nilearn","nilearn","banilo","2015-02-23 10:30:30","","start issue","img_plotting: simplify NaN check"
"issue_closed","456","nilearn","nilearn","AlexandreAbraham","2015-02-27 00:17:04","","closed issue","img_plotting: simplify NaN check"
"pull_request_title","456","nilearn","nilearn","banilo","2015-02-23 10:30:30","","d28e215aac31a8aa97748472f25fcc0a8099d97f","img_plotting: simplify NaN check"
"pull_request_merged","456","nilearn","nilearn","AlexandreAbraham","2015-02-27 00:17:04","img_plotting: simplify NaN check","2dd4bcf53821a126796f57f7aa2eb7fd2bbfb343","Pull request merge from banilo/nilearn:nanfix to nilearn/nilearn:master"
"issue_comment","456","nilearn","nilearn","banilo","2015-02-23 12:04:24","Patched.
","",""
"pull_request_commit_comment","456","nilearn","nilearn","AlexandreAbraham","2015-02-23 10:37:43","I haven't done any bench but my gut feeling is that this:

```
if np.any(np.isnan(data)):
 data = np.nan_to_num(data)
```

is slower than:

```
data = np.nan_to_num(data)
```
","d28e215aac31a8aa97748472f25fcc0a8099d97f","(None, '', u'nilearn/plotting/img_plotting.py')"
"pull_request_commit_comment","456","nilearn","nilearn","banilo","2015-02-23 10:39:12","Rationale: if there is an established numpy-version of the operation, why not use this one, rather than redo by hand?
","d28e215aac31a8aa97748472f25fcc0a8099d97f","(None, '', u'nilearn/plotting/img_plotting.py')"
"pull_request_commit_comment","456","nilearn","nilearn","GaelVaroquaux","2015-02-23 10:42:15","To test if there are nans, this is actually quite slow. The fast way of
doing it is ""np.isnan(np.sum(array))"".
","d28e215aac31a8aa97748472f25fcc0a8099d97f","(None, '', u'nilearn/plotting/img_plotting.py')"
"pull_request_commit_comment","456","nilearn","nilearn","lesteve","2015-02-23 11:53:57","An additional tiny remark there is a slight difference vs the previous version of the code because you are not using np.asarray any more.

This can make a difference for masked or memapped arrays. Whether this actually matters in practice I am not sure.
","d28e215aac31a8aa97748472f25fcc0a8099d97f","(None, '', u'nilearn/plotting/img_plotting.py')"
"pull_request_commit_comment","456","nilearn","nilearn","banilo","2015-02-23 11:58:24","img.get_data() does already give a numpy array and np.isnan() can handle non-1D...
","d28e215aac31a8aa97748472f25fcc0a8099d97f","(None, '', u'nilearn/plotting/img_plotting.py')"
"pull_request_commit","456","nilearn","nilearn","banilo","2015-02-23 10:29:06","simplify NaN check","936d4ace3e840ca7eedb022cb85052129dd75f1d",""
"pull_request_commit","456","nilearn","nilearn","banilo","2015-02-23 12:03:59","fastfix","d28e215aac31a8aa97748472f25fcc0a8099d97f",""
