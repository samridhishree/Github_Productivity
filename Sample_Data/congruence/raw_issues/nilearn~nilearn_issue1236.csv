"rectype","issueid","project_owner","project_name","actor","time","text","action","title"
"issue_title","1236","nilearn","nilearn","salma1601","2016-08-11 09:08:27","try to fix #1233, #1229, #1237 
","start issue","[MRG+1] Vectorize connectivity"
"issue_closed","1236","nilearn","nilearn","KamalakerDadi","2017-05-03 12:57:09","","closed issue","[MRG+1] Vectorize connectivity"
"pull_request_title","1236","nilearn","nilearn","salma1601","2016-08-11 09:08:27","try to fix #1233, #1229, #1237 
","9de5c63a9c9837bc1081db160e40b070b73d9ec7","[MRG+1] Vectorize connectivity"
"pull_request_merged","1236","nilearn","nilearn","KamalakerDadi","2017-05-03 12:57:09","[MRG+1] Vectorize connectivity","e0524d3cc9dfd97cca24099b01a4c0cf6eabad87","Pull request merge from salma1601/nilearn:vectorize_connectivity to nilearn/nilearn:master"
"issue_comment","1236","nilearn","nilearn","GaelVaroquaux","2016-08-11 17:57:33","The example should be updated.
","",""
"issue_comment","1236","nilearn","nilearn","GaelVaroquaux","2016-09-15 11:54:18","> I am not sure that student t-test is well suited to the vectors output of
> tangent,

Why? They should be normaly-distributed under the null (see eg my paper).
","",""
"issue_comment","1236","nilearn","nilearn","GaelVaroquaux","2016-09-21 10:49:15","> I meant total connectivity as opposed to partial connectivity

The technical word is ""marginal"". I would say ""full (marginal)
connectivity"", as to make it understandable for non-technical people.

Note that marginal has been used in neuroimaging publications.
","",""
"issue_comment","1236","nilearn","nilearn","GaelVaroquaux","2016-09-21 10:59:20","I disagree with you that tangent matrices cannot and shouldn't be
interpreted. I think that they very much should. They are the natural
parametrization of variability on the covariance matrices.
","",""
"issue_comment","1236","nilearn","nilearn","GaelVaroquaux","2016-09-21 10:59:51","> I prefer array because it works also for dimension more than 2

I still prefer matrices: it's the vocabulary that people will have in
mind.
","",""
"issue_comment","1236","nilearn","nilearn","GaelVaroquaux","2016-09-21 11:07:35","> Do you mean I should plot them and interpret them in the example, rather than
> the individual covariances ?

I think so. Just like in my old stroke paper.
","",""
"issue_comment","1236","nilearn","nilearn","GaelVaroquaux","2017-03-03 13:29:17","> Ok, I think we should also fix the doc
> https://github.com/nilearn/nilearn/blob/master/nilearn/input_data/
> nifti_maps_masker.py#L87

Yes. Could you please do that. Thanks!
","",""
"issue_comment","1236","nilearn","nilearn","GaelVaroquaux","2017-03-03 13:32:03","> May be we could say just ""sym_to_vec from connectome module is deprecated

> Since you are referring a function as nilearn.connectome.sym_to_vec which is
> not included in doc/modules/reference.rst , you will see documentation build
> error with CircleCI.

Indeed
","",""
"issue_comment","1236","nilearn","nilearn","GaelVaroquaux","2017-03-03 13:47:44","> I think you should put back sym_to_vec to initialize from nilearn.connectome.
> Since you are deprecating the function and user cannot initialize function
> directly from nilearn.connectome rather it should be imported from
> nilearn.connectome.connectivity_matrices. Am I right ?

You are right
","",""
"issue_comment","1236","nilearn","nilearn","GaelVaroquaux","2017-03-03 16:56:05","> well it accepts lists but also numpy arrays of shape nD
> Do you think I should reformulate the doc? because actually in practice people
> will use this for a list of 2D matrices (or the equivalent 3D array)

Just say that it will also accept a numpy array, or list of numpy arrays.
","",""
"issue_comment","1236","nilearn","nilearn","GaelVaroquaux","2017-05-03 15:45:33","> Great work @salma1601 . Merging this one.

Hurray. Congratulations to everyone involved.
","",""
"issue_comment","1236","nilearn","nilearn","KamalakerDadi","2016-09-15 11:41:40","Hi @salma1601, Any progress on this ? Thanks
","",""
"issue_comment","1236","nilearn","nilearn","salma1601","2016-09-15 11:51:36","Hi @KamalakerDadi ,
Sorry, but I didn't finish yet because I didn't have time to work on the statistical tests for the `tangent` kind.
I am not sure that student t-test is well suited to the vectors output of `tangent`, I think it will be a chisquare test. I want to work on that to be sure, and I don't have time right now.
Do you think it would be better if I remove the test part, address the other comments, and do another PR to add the tests when I am ready ?
","",""
"issue_comment","1236","nilearn","nilearn","KamalakerDadi","2016-09-15 12:08:36","> Do you think it would be better if I remove the test part, address the other comments, and do another PR to add the tests when I am ready ?

Quickly looking at your files, you already have tests included. Doesn't that looks good ?

Let me also go through once the complete PR thoroughly.
","",""
"issue_comment","1236","nilearn","nilearn","salma1601","2016-09-15 12:24:28","> Quickly looking at your files, you already have tests included

I didn't mean testing the API, I meant statistical tests in the example, when I am using `scipy.stats.ttest_1samp` to extract significant connections.
We can do these statistical tests on the Z-Fisher transformed `correlation` or `partial correlation` coefficients, because there is some theory behind. But for the `tangent` kind the theory is not the same, and the statistical tests would _rather_ be `scipy.stats.chisquare`. I say _rather_ because you see I am not sure, and I need to look into this but I have no time for the moment.
","",""
"issue_comment","1236","nilearn","nilearn","salma1601","2016-09-15 20:25:19","> Why? They should be normaly-distributed under the null (see eg my paper)

In your paper I think the subject displacements are _assumed_ to follow a normal distribution. From what I understand, to  do the testing we need to have a Central Limit Theorem that proves the asymptotic normality. Actually such theorem exist for the `tangent` mean, but those theoretical papers point to chi square tests.

Sorry for not being more accurate, I really need to work on that and write things down to be sure ... 
","",""
"issue_comment","1236","nilearn","nilearn","salma1601","2016-09-21 08:19:46","I am going to remove the statistical tests and address the remaining issues.
The statistical tests require additional work for `tangent` coef that is out of scope of this PR
","",""
"issue_comment","1236","nilearn","nilearn","salma1601","2016-09-21 11:06:26","> I still prefer matrices: it's the vocabulary that people will have in mind

OK

> I disagree with you that tangent matrices cannot and shouldn't be interpreted. I think that they very much should. They are the natural parametrization of variability on the covariance matrices.

Do you mean I should plot them and interpret them in the example, rather than the individual covariances ?
","",""
"issue_comment","1236","nilearn","nilearn","salma1601","2016-09-21 11:09:11","> I think so. Just like in my old stroke paper.

Ok, I though it will be too much technical, but Ok, happy to do it !
","",""
"issue_comment","1236","nilearn","nilearn","KamalakerDadi","2016-09-22 19:56:42","@salma1601 I am unable to run the example ? receiving a `TypeError`. Are you able to run example ?
","",""
"issue_comment","1236","nilearn","nilearn","salma1601","2016-09-23 05:57:21","> @salma1601 I am unable to run the example ? receiving a TypeError. Are you able to run example ?

I run it without problem
","",""
"issue_comment","1236","nilearn","nilearn","salma1601","2016-09-24 07:59:37","@KamalakerDadi I tried addressing all your comments, thank you very much for the thorough review.
I changed a little bit the `vec_to_sym_matrix` code to make it more intuitive.
I add a version added 0.2.6.1 for this function or not ?
","",""
"issue_comment","1236","nilearn","nilearn","KamalakerDadi","2016-09-24 09:10:01","> I add a version added 0.2.6.1 for this function or not ?

Yes, please.
","",""
"issue_comment","1236","nilearn","nilearn","KamalakerDadi","2016-09-30 13:11:23","CircleCI failure seems a genuine one. Some where you missed the indendation which made sphinx unhappy. May be I guess in whats_new ?
","",""
"issue_comment","1236","nilearn","nilearn","KamalakerDadi","2016-10-06 20:40:12","Few more comments again from my side. Otherwise, LGTM.

Can somebody has second review please ?
","",""
"issue_comment","1236","nilearn","nilearn","KamalakerDadi","2016-11-21 11:03:51","Travis failure seems like a genuine one. Can you please have a look at it ?","",""
"issue_comment","1236","nilearn","nilearn","salma1601","2016-11-22 09:28:23","@KamalakerDadi Tests are passing !","",""
"issue_comment","1236","nilearn","nilearn","KamalakerDadi","2016-11-22 09:35:33",">@KamalakerDadi Tests are passing !

Great. Thanks.

@GaelVaroquaux @AlexandreAbraham Can you give a final call ?
","",""
"issue_comment","1236","nilearn","nilearn","salma1601","2016-08-11 11:12:14","can I use this PR to fix also #1237 ? I don't know if this is a good practice
","",""
"issue_comment","1236","nilearn","nilearn","salma1601","2016-08-11 18:06:13","> The example should be updated.

That's what I was doing!

> sym_matrix_to_vec

Ok
","",""
"issue_comment","1236","nilearn","nilearn","salma1601","2017-03-02 15:09:27","squashing done","",""
"issue_comment","1236","nilearn","nilearn","salma1601","2017-04-24 13:04:02","@KamalakerDadi I don't know what to do with the old reference to `sym_to_vec` in whats_new 0.2
It makes circle ci fail. Do I add `sym_to_vec` to the module doc ?","",""
"issue_comment","1236","nilearn","nilearn","salma1601","2017-05-03 19:21:29","Hurrah !","",""
"issue_comment","1236","nilearn","nilearn","mrahim","2017-03-02 11:12:40","Could you squash your commits a bit please ? :)","",""
"issue_comment","1236","nilearn","nilearn","KamalakerDadi","2017-04-21 11:35:22","Sorry for being late.

Can you please update your changes into release section **0.3.1** in ```doc/whats_new.rst``` ?
Thanks","",""
"issue_comment","1236","nilearn","nilearn","KamalakerDadi","2017-04-27 12:24:24","@AlexandreAbraham Can you give a call on this ? merge ?","",""
"issue_comment","1236","nilearn","nilearn","KamalakerDadi","2017-05-03 12:57:12","Great work @salma1601 . Merging this one.","",""
"issue_comment","1236","nilearn","nilearn","KamalakerDadi","2016-08-30 19:30:23","In the example: May be I missed something ? Why aren't we displaying statistically tested mean connectivity matrices for partial and tangent. Why only for correlation one ?
","",""
"issue_comment","1236","nilearn","nilearn","KamalakerDadi","2016-10-18 11:10:59","I think CircleCI failure is not related to your PR. We are trying to address that in PR #1312 
","",""
"issue_comment","1236","nilearn","nilearn","KamalakerDadi","2016-10-26 08:56:53","Any second round of reviews on this ?
","",""
"issue_comment","1236","nilearn","nilearn","codecov[bot]","2017-03-02 12:32:48","# [Codecov](https://codecov.io/gh/nilearn/nilearn/pull/1236?src=pr&el=h1) Report
> Merging [#1236](https://codecov.io/gh/nilearn/nilearn/pull/1236?src=pr&el=desc) into [master](https://codecov.io/gh/nilearn/nilearn/commit/dffd5ec58041aea19f5b89d8a600f95768431c28?src=pr&el=desc) will **decrease** coverage by `-1.7%`.
> The diff coverage is `100%`.


```diff
@@            Coverage Diff            @@
##           master    #1236     +/-   ##
=========================================
- Coverage   94.39%   92.69%   -1.7%     
=========================================
  Files         118      118             
  Lines       13388    13511    +123     
=========================================
- Hits        12637    12524    -113     
- Misses        751      987    +236
```


| [Impacted Files](https://codecov.io/gh/nilearn/nilearn/pull/1236?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [nilearn/connectome/connectivity_matrices.py](https://codecov.io/gh/nilearn/nilearn/compare/dffd5ec58041aea19f5b89d8a600f95768431c28...e2686244295c81d2aaab300d230bd230849332aa?src=pr&el=tree#diff-bmlsZWFybi9jb25uZWN0b21lL2Nvbm5lY3Rpdml0eV9tYXRyaWNlcy5weQ==) | `95.65% <100%> (+2.85%)` | :white_check_mark: |
| [nilearn/connectome/__init__.py](https://codecov.io/gh/nilearn/nilearn/compare/dffd5ec58041aea19f5b89d8a600f95768431c28...e2686244295c81d2aaab300d230bd230849332aa?src=pr&el=tree#diff-bmlsZWFybi9jb25uZWN0b21lL19faW5pdF9fLnB5) | `100% <100%> (ø)` | :white_check_mark: |
| [...arn/connectome/tests/test_connectivity_matrices.py](https://codecov.io/gh/nilearn/nilearn/compare/dffd5ec58041aea19f5b89d8a600f95768431c28...e2686244295c81d2aaab300d230bd230849332aa?src=pr&el=tree#diff-bmlsZWFybi9jb25uZWN0b21lL3Rlc3RzL3Rlc3RfY29ubmVjdGl2aXR5X21hdHJpY2VzLnB5) | `99% <100%> (+0.31%)` | :white_check_mark: |
| [nilearn/plotting/surf_plotting.py](https://codecov.io/gh/nilearn/nilearn/compare/dffd5ec58041aea19f5b89d8a600f95768431c28...e2686244295c81d2aaab300d230bd230849332aa?src=pr&el=tree#diff-bmlsZWFybi9wbG90dGluZy9zdXJmX3Bsb3R0aW5nLnB5) | `29.13% <0%> (-62.26%)` | :x: |
| [nilearn/plotting/tests/test_surf_plotting.py](https://codecov.io/gh/nilearn/nilearn/compare/dffd5ec58041aea19f5b89d8a600f95768431c28...e2686244295c81d2aaab300d230bd230849332aa?src=pr&el=tree#diff-bmlsZWFybi9wbG90dGluZy90ZXN0cy90ZXN0X3N1cmZfcGxvdHRpbmcucHk=) | `56.06% <0%> (-43.94%)` | :x: |
| [nilearn/_utils/compat.py](https://codecov.io/gh/nilearn/nilearn/compare/dffd5ec58041aea19f5b89d8a600f95768431c28...e2686244295c81d2aaab300d230bd230849332aa?src=pr&el=tree#diff-bmlsZWFybi9fdXRpbHMvY29tcGF0LnB5) | `67.85% <0%> (-30.36%)` | :x: |
| [nilearn/_utils/fixes/matplotlib_backports.py](https://codecov.io/gh/nilearn/nilearn/compare/dffd5ec58041aea19f5b89d8a600f95768431c28...e2686244295c81d2aaab300d230bd230849332aa?src=pr&el=tree#diff-bmlsZWFybi9fdXRpbHMvZml4ZXMvbWF0cGxvdGxpYl9iYWNrcG9ydHMucHk=) | `77.77% <0%> (-22.23%)` | :x: |
| [nilearn/_utils/fixes/__init__.py](https://codecov.io/gh/nilearn/nilearn/compare/dffd5ec58041aea19f5b89d8a600f95768431c28...e2686244295c81d2aaab300d230bd230849332aa?src=pr&el=tree#diff-bmlsZWFybi9fdXRpbHMvZml4ZXMvX19pbml0X18ucHk=) | `73.33% <0%> (-13.34%)` | :x: |
| [nilearn/plotting/__init__.py](https://codecov.io/gh/nilearn/nilearn/compare/dffd5ec58041aea19f5b89d8a600f95768431c28...e2686244295c81d2aaab300d230bd230849332aa?src=pr&el=tree#diff-bmlsZWFybi9wbG90dGluZy9fX2luaXRfXy5weQ==) | `75% <0%> (-8.34%)` | :x: |
| [nilearn/datasets/atlas.py](https://codecov.io/gh/nilearn/nilearn/compare/dffd5ec58041aea19f5b89d8a600f95768431c28...e2686244295c81d2aaab300d230bd230849332aa?src=pr&el=tree#diff-bmlsZWFybi9kYXRhc2V0cy9hdGxhcy5weQ==) | `89.69% <0%> (-6.44%)` | :x: |
| ... and [9 more](https://codecov.io/gh/nilearn/nilearn/pull/1236?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/nilearn/nilearn/pull/1236?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/nilearn/nilearn/pull/1236?src=pr&el=footer). Last update [dffd5ec...76b85c2](https://codecov.io/gh/nilearn/nilearn/compare/dffd5ec58041aea19f5b89d8a600f95768431c28...76b85c284db628493e3b7221918d3fdf4a81934d?src=pr&el=footer&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).","",""
"issue_comment","1236","nilearn","nilearn","codecov[bot]","2017-03-02 12:32:49","# [Codecov](https://codecov.io/gh/nilearn/nilearn/pull/1236?src=pr&el=h1) Report
> Merging [#1236](https://codecov.io/gh/nilearn/nilearn/pull/1236?src=pr&el=desc) into [master](https://codecov.io/gh/nilearn/nilearn/commit/f1968a82b2ba80df9abae75706d1e70ac58aad0a?src=pr&el=desc) will **increase** coverage by `0.05%`.
> The diff coverage is `99.3%`.

[![Impacted file tree graph](https://codecov.io/gh/nilearn/nilearn/pull/1236/graphs/tree.svg?token=KpYArSdyXv&width=650&src=pr&height=150)](https://codecov.io/gh/nilearn/nilearn/pull/1236?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##           master    #1236      +/-   ##
==========================================
+ Coverage   94.61%   94.66%   +0.05%     
==========================================
  Files         120      120              
  Lines       14537    14664     +127     
==========================================
+ Hits        13754    13882     +128     
+ Misses        783      782       -1
```


| [Impacted Files](https://codecov.io/gh/nilearn/nilearn/pull/1236?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [nilearn/input\_data/nifti\_maps\_masker.py](https://codecov.io/gh/nilearn/nilearn/pull/1236?src=pr&el=tree#diff-bmlsZWFybi9pbnB1dF9kYXRhL25pZnRpX21hcHNfbWFza2VyLnB5) | `96.39% <ø> (ø)` | :arrow_up: |
| [...arn/connectome/tests/test\_connectivity\_matrices.py](https://codecov.io/gh/nilearn/nilearn/pull/1236?src=pr&el=tree#diff-bmlsZWFybi9jb25uZWN0b21lL3Rlc3RzL3Rlc3RfY29ubmVjdGl2aXR5X21hdHJpY2VzLnB5) | `99% <100%> (+0.31%)` | :arrow_up: |
| [nilearn/connectome/\_\_init\_\_.py](https://codecov.io/gh/nilearn/nilearn/pull/1236?src=pr&el=tree#diff-bmlsZWFybi9jb25uZWN0b21lL19faW5pdF9fLnB5) | `100% <100%> (ø)` | :arrow_up: |
| [nilearn/connectome/connectivity\_matrices.py](https://codecov.io/gh/nilearn/nilearn/pull/1236?src=pr&el=tree#diff-bmlsZWFybi9jb25uZWN0b21lL2Nvbm5lY3Rpdml0eV9tYXRyaWNlcy5weQ==) | `95.15% <98.24%> (+2.35%)` | :arrow_up: |
| [nilearn/tests/test\_signal.py](https://codecov.io/gh/nilearn/nilearn/pull/1236?src=pr&el=tree#diff-bmlsZWFybi90ZXN0cy90ZXN0X3NpZ25hbC5weQ==) | `100% <0%> (+0.5%)` | :arrow_up: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/nilearn/nilearn/pull/1236?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/nilearn/nilearn/pull/1236?src=pr&el=footer). Last update [f1968a8...9de5c63](https://codecov.io/gh/nilearn/nilearn/pull/1236?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
","",""
"pull_request_commit_comment","1236","nilearn","nilearn","AlexandreAbraham","2016-08-11 10:36:11","typo
","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'nilearn/connectome/connectivity_matrices.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","AlexandreAbraham","2016-08-11 10:39:32","Why would there be a side effect?
","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'nilearn/connectome/connectivity_matrices.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","AlexandreAbraham","2016-08-11 10:44:02","Can you put a comment saying that this line is to fill the upper triangle?
","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'nilearn/connectome/connectivity_matrices.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","salma1601","2016-08-11 10:52:15","I thought changing the diagonal of sym may change vec but I am wrong
","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'nilearn/connectome/connectivity_matrices.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","AlexandreAbraham","2016-08-11 10:52:46","Overly complicated.
Simpler:

``` python
mask.fill(False)  # Avoid memory re-allocation
np.fill_diagonal(mask, True)
```
","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'nilearn/connectome/connectivity_matrices.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","salma1601","2016-08-11 10:53:13","OK. Does it make sense to make vec_to_sym private? I don't think it will be used apart from here
","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'nilearn/connectome/connectivity_matrices.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","GaelVaroquaux","2016-08-11 12:06:30","> OK. Does it make sense to make vec_to_sym private? I don't think it will be used apart from here

I think that people (methods developers) might use it to build their own
algorithms. As nilearn is also for methods developers, I think that it
makes sense to expose it publicaly.
","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'nilearn/connectome/connectivity_matrices.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","GaelVaroquaux","2016-08-11 17:53:04","The name is a bit hard to understand out of context. How about ""vec_to_sym_matrix"". A bit longer, but much more explicit.
","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'nilearn/connectome/connectivity_matrices.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","GaelVaroquaux","2016-08-11 17:55:12","I'd rather have this done inside the ConnectivityMeasure object (in the transform method), rather than the function. It would minimize surprise with regards to what this function does.
","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(175, '', u'nilearn/connectome/connectivity_matrices.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","GaelVaroquaux","2016-08-11 17:56:30","Actually, this is what's done. It's just that the docstring is misleading.
","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(175, '', u'nilearn/connectome/connectivity_matrices.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","GaelVaroquaux","2016-08-11 17:57:09","I would also rename sym_to_vec to sym_matrix_to_vec
","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'nilearn/connectome/connectivity_matrices.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","salma1601","2016-08-11 20:25:43","you mean I should put the `vectorize` doc not in the class ?
","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(175, '', u'nilearn/connectome/connectivity_matrices.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","GaelVaroquaux","2016-08-11 20:33:30","I mean that I didn't read the diff properly :$. Sorry.

The description of the argument could be a tiny bit longer, that said, explaining what you mean by vectorizing.
","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(175, '', u'nilearn/connectome/connectivity_matrices.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","KamalakerDadi","2016-08-25 08:33:43","you may need to revert it the same `sym_to_vec` and instead add in section 0.2.6 about these API changes `sym_to_vec` to `sym_matrix_to_vec` and new features `vectorize` and `inverse_transform` and example renaming with this PR. Whatever might be interesting to know about this PR can be added in 0.2.6
","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'doc/whats_new.rst')"
"pull_request_commit_comment","1236","nilearn","nilearn","KamalakerDadi","2016-08-25 08:56:41","You can keep it if you are comfortable with saying 'kind' but 'coefficients' might be more relevant I guess ?

For example, 'compares different measures/estimations of functional connectivity coefficients between .....' ?
","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'examples/03_connectivity/plot_group_level_connectivity.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","KamalakerDadi","2016-08-25 11:54:00","people doesn't sounds good to me. Can we write people -> subjects ?
","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'examples/03_connectivity/plot_group_level_connectivity.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","KamalakerDadi","2016-08-25 11:55:55","What it means by total connectivity ?
","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'examples/03_connectivity/plot_group_level_connectivity.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","KamalakerDadi","2016-08-25 12:01:36","typo discaring -> discarding
","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'examples/03_connectivity/plot_group_level_connectivity.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","AlexandreAbraham","2016-08-25 13:39:27","Individuels or participant is better than subject.
","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'examples/03_connectivity/plot_group_level_connectivity.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","KamalakerDadi","2016-08-30 19:31:28","typo additionnal -> additional
","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'examples/03_connectivity/plot_group_level_connectivity.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","KamalakerDadi","2016-08-30 19:34:50","Correct me if I am wrong ? inverse_transform is basically useful to invert vectors to matrices. Isn't it ? But, here we are inverting again to matrices -> matrices but not vectorized one.
","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'examples/03_connectivity/plot_group_level_connectivity.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","KamalakerDadi","2016-08-30 19:41:31","seperatly -> separately
","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'nilearn/connectome/connectivity_matrices.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","KamalakerDadi","2016-08-30 19:42:52","May be array to matrix ?
","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'nilearn/connectome/connectivity_matrices.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","KamalakerDadi","2016-08-30 19:44:53","seperately -> separately
","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'nilearn/connectome/connectivity_matrices.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","KamalakerDadi","2016-08-30 19:46:05","Can you add See Also section to `sym_matrix_to_vec` ?
","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'nilearn/connectome/connectivity_matrices.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","KamalakerDadi","2016-09-19 12:54:28","Now that 0.2.6 is released. Can you please update ?
ping @GaelVaroquaux @AlexandreAbraham next going to be 0.2.6.1 or 0.2.7 ?
","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'doc/whats_new.rst')"
"pull_request_commit_comment","1236","nilearn","nilearn","salma1601","2016-09-21 10:46:29","I meant total connectivity as opposed to partial connectivity
","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'examples/03_connectivity/plot_group_level_connectivity.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","salma1601","2016-09-21 10:56:41","Yes. In all cases `inverse_transform` gives individual connectivity matrices, whether or not vectorization happened. So if it was not asked for vectorization, `inverse_transform` does nothing for `correlation` and `partial correlation`. However for `tangent`, what I am calling `tangent_matrices` are not true connectivity matrices because for instance they can have negative values on the diagonal. The only way to recover the `connectivity_matrices` is to inverse transform.
I can't figure out a way to be more pedagogic on this mess, so if you have suggestions... 
","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'examples/03_connectivity/plot_group_level_connectivity.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","salma1601","2016-09-21 10:58:55","I prefer array because it works also for dimension more than 2
","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'nilearn/connectome/connectivity_matrices.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","salma1601","2016-09-21 12:35:40","You mean I add a new section 0.2.6.1 and put the changes in it ?
","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'doc/whats_new.rst')"
"pull_request_commit_comment","1236","nilearn","nilearn","KamalakerDadi","2016-09-22 11:57:38","Yes, because changes you made in a section is released. New section should be added and included in what ever might be useful to users to refer.
","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'doc/whats_new.rst')"
"pull_request_commit_comment","1236","nilearn","nilearn","KamalakerDadi","2016-09-22 19:54:12","all subjects -> adhd subjects. Since you are fitting on adhd subjects not on pooled subjects ?
","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'examples/03_connectivity/plot_group_level_connectivity.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","KamalakerDadi","2016-09-22 20:03:47","can you be explicit in title=""mean correlation over 13 ADHD subjects"" ?
","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'examples/03_connectivity/plot_group_level_connectivity.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","KamalakerDadi","2016-09-22 20:06:54","same comment as above more explicit title ""mean partial correlation over 13 ADHD subjects"" ?
","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'examples/03_connectivity/plot_group_level_connectivity.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","KamalakerDadi","2016-09-22 20:08:43","Same here more explicit title ""mean tangent matrices over 13 ADHD subjects""?
","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'examples/03_connectivity/plot_group_level_connectivity.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","KamalakerDadi","2016-09-22 20:25:40","May be we need LinearSVC(random_state=0) ?
","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'examples/03_connectivity/plot_group_level_connectivity.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","KamalakerDadi","2016-09-22 20:38:02","Shouldn't it be given adhd_labels instead of classes ? Correct me if I am wrong ?
","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(189, '', u'examples/03_connectivity/plot_group_level_connectivity.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","KamalakerDadi","2016-09-22 20:56:45","What is p ?
","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'nilearn/connectome/connectivity_matrices.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","KamalakerDadi","2016-09-22 20:57:20","symmetric ""matrix"" ?
","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'nilearn/connectome/connectivity_matrices.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","KamalakerDadi","2016-09-22 20:59:09","are these commented (#) calculations necessary ?
","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'nilearn/connectome/connectivity_matrices.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","KamalakerDadi","2016-09-22 21:09:05","diagonal should be given and should be same as length of features or samples ?

I didn't understand the condition here, `diagonal.shape[-1] != p + 1`
","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'nilearn/connectome/connectivity_matrices.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","KamalakerDadi","2016-09-22 21:19:42","What do you change to n_subjects ?
","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'nilearn/connectome/connectivity_matrices.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","KamalakerDadi","2016-09-22 21:24:47","Can you write description a bit longer ? May be adding few important lines from function to here.
","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'nilearn/connectome/connectivity_matrices.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","KamalakerDadi","2016-09-22 21:26:26","So which means you are not returning mean_ for kind='tangent' ? May be you could be explicit here ?
","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'nilearn/connectome/connectivity_matrices.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","KamalakerDadi","2016-09-22 21:30:54","May be we should decide to be consistent with n_samples or n_subjects ?
","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'nilearn/connectome/connectivity_matrices.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","KamalakerDadi","2016-09-22 21:36:23","I didn't understand why converting to symmetric matrices is linked to `self.vectorize` ? May be I am missing some logic here ?
","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(292, '', u'nilearn/connectome/connectivity_matrices.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","KamalakerDadi","2016-09-22 21:41:50","May be this `_check_fitted` is also essential at `transform` level too ? What do you think ?

At this `inverse_transform` level, I am not sure whether we are checking right attributes ?
","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'nilearn/connectome/connectivity_matrices.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","salma1601","2016-09-23 06:07:21","I am giving both `adhd_labels` and `site_names` to constraint also by sites the splitting of data, no ? For instance I don't want ADHD patients to be exclusively from NYU site in one fold, and no NYU patients in others, because the matrices vary a lot between sites (actually they vary more across sites than between ADHD and controls ! that's why I think it is important to conserve the same sites proportion in each fold)
Do you mean I should rename `classes` to something like `subjects_labels` ?
","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(189, '', u'examples/03_connectivity/plot_group_level_connectivity.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","salma1601","2016-09-23 06:11:45","I think they help explaining what's done, because otherwise the value of `p` comes from nowhere.
You disagree ?
","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'nilearn/connectome/connectivity_matrices.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","salma1601","2016-09-23 06:28:00","> diagonal should be given

`vec_to_sym_matrix` is meant to be the reverse to `sym_matrix_to_vec`. So if you have discarded the diagonal in `sym_matrix_to_vec`, you need to provide it separately to reconstruct the symmetric matrix. For instance this can be useful for correlation matrices for which we know the diagonal is 1.

> should be same as length of features or samples 
> if you provide it, it should have the right shape, that is for n-dimensional array: same as `vec` until n-1, and matching the matrix shape on the last dimension 
","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'nilearn/connectome/connectivity_matrices.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","salma1601","2016-09-23 06:57:41","> I didn't understand the condition here, `diagonal.shape[-1] != p + 1`

I have to correct the doc, but `p + 1` is correct here.
Your questions tell me my code is unclear and I have to rework it. May be I can add a little function that computes the shape of the symmetric matrix from the given vector, and also add a section example to illustrate how it works: if you enter a vector that does not include the diagonal in it, the computed shape from the equation is less than the true matrix shape

``` Python
sym = np.array([[1., .3, .1], [.3, 1., .5], [.1, .5, 1.]])
vec = sym_matrix_to_vec(sym, discard_diagonal=True)
# Recover the matrix shape
n = np.shape(vec)[-1]
p = (sqrt(8 * n + 1) - 1.) / 2
n_columns = int(p) + 1
print n_columns
```

3

``` Python
diagonal = np.ones(n_columns,) / sqrt(2)
sym2 = vec_to_sym_matrix(vec, diagonal)
print sym2
```

outs

``` Python
[[ 1.   0.3  0.1]
 [ 0.3  1.   0.5]
 [ 0.1  0.5  1. ]]
```
","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'nilearn/connectome/connectivity_matrices.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","salma1601","2016-09-23 06:58:24","Ok
","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'nilearn/connectome/connectivity_matrices.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","salma1601","2016-09-23 06:59:37","because there is the number of the timeseries scans, which is n_samples, and the number of subjects
","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'nilearn/connectome/connectivity_matrices.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","salma1601","2016-09-23 07:01:37","Ok I add it to `transform`
","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'nilearn/connectome/connectivity_matrices.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","salma1601","2016-09-23 07:05:46","> I didn't understand why converting to symmetric matrices is linked to `self.vectorize`

because we only vectorize if `self.vectorize=True`, otherwise we already have matrices, no ?
","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(292, '', u'nilearn/connectome/connectivity_matrices.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","KamalakerDadi","2016-09-23 07:42:22","I agree, may be we could add this in documentation. What do you think ? 
Or
 We could leave as it is.
","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'nilearn/connectome/connectivity_matrices.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","KamalakerDadi","2016-09-23 07:46:53","I don't think on the code basis but documentation. You are explaining quite well and I felt some important points are missing in the doc. 

For example, ""So if you have discarded the diagonal in sym_matrix_to_vec, you need to provide it separately to reconstruct the symmetric matrix. For instance this can be useful for correlation matrices for which we know the diagonal is 1.""
","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'nilearn/connectome/connectivity_matrices.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","KamalakerDadi","2016-09-23 07:51:42","Ok I missed this logic. Thanks.

What would happen if I haven't selected `vectorize=True` and then trying to `inverse_transform` here ?
","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(292, '', u'nilearn/connectome/connectivity_matrices.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","KamalakerDadi","2016-09-23 07:55:38","May be need to shift this tests to `vec_to_sym_matrix` because you are testing in `sym_matrix_to_vec` ?
","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'nilearn/connectome/tests/test_connectivity_matrices.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","salma1601","2016-09-23 08:46:37","> What would happen if I haven't selected vectorize=True and then trying to inverse_transform here ?

for `kind=""correlation""` or `kind=""partial correlation""`, nothing happens
for `kind=""tangent""`, the covariance matrices are reconstructed. The output of `transform` for tangent are not connectivity matrices, but deviations from a group connectivity matrix. They have a different _nature_ than the usual connectivity matrices, for instance they can have negative values on their diagonal, while this never happen in covariance, correlation, partial correlation matrices
","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(292, '', u'nilearn/connectome/connectivity_matrices.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","salma1601","2016-09-23 08:48:51","I feel like I also have to be more explicit in the `ConnectivityMeasure` doc  ;)
","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(292, '', u'nilearn/connectome/connectivity_matrices.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","salma1601","2016-09-23 11:02:20","I think it would be better add a function `_compute_matrix_shape` and document it correctly
","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'nilearn/connectome/connectivity_matrices.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","KamalakerDadi","2016-10-06 20:10:06","Can you check typos in this warning message ? discared -> discarded unkown-> unknown
","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'nilearn/connectome/connectivity_matrices.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","KamalakerDadi","2016-10-06 20:10:19","unkown-> unknown
","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'nilearn/connectome/connectivity_matrices.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","KamalakerDadi","2016-10-06 20:13:09","You are filling discarded diagonal with Nan if user hasn't provided diagonal explicitly. Do you think it is Ok ?
Why not we raise an error here ?
","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'nilearn/connectome/connectivity_matrices.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","KamalakerDadi","2016-10-06 20:16:42","Is there any option here to submit my diagonal explicitly like in `vec_to_symmetric_matrix` ? 
","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'nilearn/connectome/connectivity_matrices.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","KamalakerDadi","2016-10-06 20:26:18","This test also tests with input as list. Isnt't it ?
","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'nilearn/connectome/tests/test_connectivity_matrices.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","KamalakerDadi","2016-10-06 20:26:49","same here, tests with lists too, right ?
","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'nilearn/connectome/tests/test_connectivity_matrices.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","KamalakerDadi","2016-10-06 20:35:41","can you add few more details here ? I understood that you are returning the same connectivities with vectorize=False. 
","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'nilearn/connectome/tests/test_connectivity_matrices.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","KamalakerDadi","2016-10-06 20:37:21","do you think these blocks are necessary ? Basically same blocks are repeated below, I guess. Is it not ?
","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'nilearn/connectome/tests/test_connectivity_matrices.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","salma1601","2016-10-17 22:29:35","Ok, I changed this.
Originally I raised error only for tangent because if diagonal is unknown we can not reconstruct any element of the covariance matrices, while for 'covariance' or 'precision' kind we loose only the diagonal. But it's complicating things with no profit, so I am raising error for all
","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'nilearn/connectome/connectivity_matrices.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","salma1601","2016-10-17 22:30:01","yes, I am adding a comment
","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'nilearn/connectome/tests/test_connectivity_matrices.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","salma1601","2016-10-17 22:30:10","yes
","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'nilearn/connectome/tests/test_connectivity_matrices.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","salma1601","2016-10-17 22:30:34","done
","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'nilearn/connectome/tests/test_connectivity_matrices.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","salma1601","2016-10-17 22:31:41","you mean I do a for loop ? the problem is I need the values of connectivities without vectorization for my second check. I am not sure I get your idea
","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'nilearn/connectome/tests/test_connectivity_matrices.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","KamalakerDadi","2016-10-18 11:00:40","Isn't this already there in master ? Have you rebased ? Can you check PR #1277 
","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'nilearn/connectome/__init__.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","salma1601","2016-10-18 11:03:00","Yes I rebased but when using mergetool to fix conflicts I skipped accidentally this one
","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'nilearn/connectome/__init__.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","AlexandreAbraham","2016-10-26 11:24:51","> ping @GaelVaroquaux @AlexandreAbraham next going to be 0.2.6.1 or 0.2.7 ?

You can put either of these or even 2.X.X. The ""size"" of the revision is decided at release time depending if backward compatibility is broken or not.
","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'doc/whats_new.rst')"
"pull_request_commit_comment","1236","nilearn","nilearn","AlexandreAbraham","2016-10-26 11:33:05","``` python
np.tril(np.ones((n_columns, n_columns), dtype=bool))
```
","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'nilearn/connectome/connectivity_matrices.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","AlexandreAbraham","2016-10-26 11:33:25","Lower.
","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'nilearn/connectome/connectivity_matrices.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","AlexandreAbraham","2016-10-26 11:33:33","Upper
","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'nilearn/connectome/connectivity_matrices.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","AlexandreAbraham","2016-10-26 11:37:31","... or you can transpose the mask ;).
","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'nilearn/connectome/connectivity_matrices.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","AlexandreAbraham","2016-10-26 11:38:59","My opinion is that most people will want to be able to feed this function lower triangular parts of matrices and one value (0) for the diagonal. Don't you think?
","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'nilearn/connectome/connectivity_matrices.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","AlexandreAbraham","2016-10-26 11:40:20","Reallocating the whole data just to fill one diagonal? This is not necessary and can be done further.
","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'nilearn/connectome/connectivity_matrices.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","AlexandreAbraham","2016-10-26 11:42:29","Here you should be able to put k=(diagonal is not None) (or minus this) and fill the diagonal at line 307. This allows you to get rid of the ugly part of this function that copy all the data.
","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'nilearn/connectome/connectivity_matrices.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","salma1601","2016-11-03 17:43:52","Yes, but do you suggest I put it to zero by default ?
","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'nilearn/connectome/connectivity_matrices.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","salma1601","2016-11-03 17:44:04","Ok
","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'nilearn/connectome/connectivity_matrices.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","salma1601","2016-11-03 17:51:01","This didn't give me exactly what I wanted

``` Python
mask = np.tril(np.ones((3, 3), dtype=bool))
sym = np.array([[4, 0, 0], [3, 5, 0], [2, 7, 1]])
print sym[mask.T], sym.T[mask]
```

gives [4 0 5 0 0 1] [4 0 0 5 0 1]
","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'nilearn/connectome/connectivity_matrices.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","mrahim","2017-03-02 11:11:02","I'm wondering if it's okay to remove  `sym_to_vec` completely. Could we put  a deprecation instead ?  ","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'nilearn/connectome/connectivity_matrices.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","salma1601","2017-03-02 14:11:29","Done","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'nilearn/connectome/connectivity_matrices.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","GaelVaroquaux","2017-03-03 11:20:47","If I merge this today (which is probable) we should have this as 0.3.0 beta2","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'doc/whats_new.rst')"
"pull_request_commit_comment","1236","nilearn","nilearn","GaelVaroquaux","2017-03-03 11:21:58","I would replace ""kind"" by ""matrices"".","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'examples/03_connectivity/plot_group_level_connectivity.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","GaelVaroquaux","2017-03-03 11:22:40","I would say ""This example compares different types of functional connectivity matrices ...","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'examples/03_connectivity/plot_group_level_connectivity.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","GaelVaroquaux","2017-03-03 11:43:01","We could merge the two comment blocks above","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'examples/03_connectivity/plot_group_level_connectivity.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","GaelVaroquaux","2017-03-03 11:43:20","Missing space here","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'examples/03_connectivity/plot_group_level_connectivity.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","GaelVaroquaux","2017-03-03 11:43:42","Could you merge the 2 comment blocks","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'examples/03_connectivity/plot_group_level_connectivity.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","GaelVaroquaux","2017-03-03 11:44:21","Is there a reason that we are not using the default for resampling_target?","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'examples/03_connectivity/plot_group_level_connectivity.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","GaelVaroquaux","2017-03-03 11:46:53","As a title here, I would suggest ""What kind of connectivity is most powerful for classification?""","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'examples/03_connectivity/plot_group_level_connectivity.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","GaelVaroquaux","2017-03-03 11:47:07","Could you merge the comment blocks","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'examples/03_connectivity/plot_group_level_connectivity.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","GaelVaroquaux","2017-03-03 11:48:18","This is great.

I think that you should expand a bit your comment so that people understand better what you are doing.","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(189, '', u'examples/03_connectivity/plot_group_level_connectivity.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","GaelVaroquaux","2017-03-03 11:48:59","Now it's 0.3 :)","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'nilearn/connectome/connectivity_matrices.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","GaelVaroquaux","2017-03-03 11:50:58","It's unclear to me what is done if diagonal is not given: it is assumed to be included in ""vec""? Could you specify this?","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'nilearn/connectome/connectivity_matrices.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","GaelVaroquaux","2017-03-03 11:52:53","Bad indentation in the docstring.","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'nilearn/connectome/connectivity_matrices.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","GaelVaroquaux","2017-03-03 11:54:05","I cannot understand the end of the sentence: ""from vectorized or not connectivities."" Do you mean ""from connectivities, vectorized or not""?","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'nilearn/connectome/connectivity_matrices.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","KamalakerDadi","2017-03-03 13:15:23","double ""is"" in this line.","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'doc/whats_new.rst')"
"pull_request_commit_comment","1236","nilearn","nilearn","salma1601","2017-03-03 13:20:30","Ok, I think we should also fix the doc
https://github.com/nilearn/nilearn/blob/master/nilearn/input_data/nifti_maps_masker.py#L87","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'examples/03_connectivity/plot_group_level_connectivity.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","salma1601","2017-03-03 13:26:54","Yes if the diagonal is not given it is extracted from `vec`
Ok I will explicit","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'nilearn/connectome/connectivity_matrices.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","KamalakerDadi","2017-03-03 13:29:57","May be we could say just ""`sym_to_vec` from connectome module is deprecated ............."" ?

Since you are referring a function as `nilearn.connectome.sym_to_vec` which is not included in doc/modules/reference.rst , you will see documentation build error with CircleCI.
","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'doc/whats_new.rst')"
"pull_request_commit_comment","1236","nilearn","nilearn","KamalakerDadi","2017-03-03 13:36:01","Optional: renaming of connectivity measures example to plot_group_level_connectivity ?","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'doc/whats_new.rst')"
"pull_request_commit_comment","1236","nilearn","nilearn","KamalakerDadi","2017-03-03 13:40:28","For me title looks misleading. It said 13 subjects but we plot only 4. Could we change it to 4 ?","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(108, '', u'examples/03_connectivity/plot_group_level_connectivity.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","salma1601","2017-03-03 13:43:30","yes","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'nilearn/connectome/connectivity_matrices.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","KamalakerDadi","2017-03-03 13:46:01","I think you should put back sym_to_vec to initialize from nilearn.connectome. Since you are deprecating the function and user cannot initialize function directly from nilearn.connectome rather it should be imported from nilearn.connectome.connectivity_matrices. Am I right ?","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'nilearn/connectome/__init__.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","KamalakerDadi","2017-03-03 13:48:27","Can we use function directly here ? Here, we two codes doing the same thing.
```python
return sym_matrix_to_vec(symmetric=symmetric, discard_diagonal=discard_diagonal)
```","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'nilearn/connectome/connectivity_matrices.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","KamalakerDadi","2017-03-03 13:50:11","May be we need empty line spaces here ","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'nilearn/connectome/connectivity_matrices.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","KamalakerDadi","2017-03-03 13:50:19","same here emtpy line","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'nilearn/connectome/connectivity_matrices.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","KamalakerDadi","2017-03-03 13:50:34","same here empty line","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'nilearn/connectome/connectivity_matrices.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","salma1601","2017-03-03 13:59:26","yes but the average is indeed computed across the 13 subjects","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(108, '', u'examples/03_connectivity/plot_group_level_connectivity.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","salma1601","2017-03-03 14:00:13","Ok","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'nilearn/connectome/__init__.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","salma1601","2017-03-03 14:08:57","what do you mean ?","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'nilearn/connectome/connectivity_matrices.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","KamalakerDadi","2017-03-03 14:20:01","removed + ""in future releases"".","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'nilearn/connectome/connectivity_matrices.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","KamalakerDadi","2017-03-03 14:50:25","If I understood correctly from tests, this function will accept list of numpy.ndarray ? May be we should update our doc too ? ","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'nilearn/connectome/connectivity_matrices.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","KamalakerDadi","2017-03-03 14:50:54","Same here if it accepts list of numpy arrays ?","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'nilearn/connectome/connectivity_matrices.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","KamalakerDadi","2017-03-03 15:07:33","Ok.","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(108, '', u'examples/03_connectivity/plot_group_level_connectivity.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","salma1601","2017-03-03 16:50:34","well it accepts lists but also numpy arrays of shape nD
Do you think I should reformulate the doc? because actually in practice people will use this for a list of 2D matrices (or the equivalent 3D array) ","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'nilearn/connectome/connectivity_matrices.py')"
"pull_request_commit_comment","1236","nilearn","nilearn","KamalakerDadi","2017-04-25 11:51:02","I would suggest to put it back.

The reason being that, this function deprecated but not removed yet. So, if user is still using it (in their pipelines for example) he would understand that this function is renamed and will be removed.

I would stress more on keeping warning message clear and mentioning release name too **0.4**.
","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'doc/modules/reference.rst')"
"pull_request_commit_comment","1236","nilearn","nilearn","KamalakerDadi","2017-04-25 11:51:43","is is repeated twice. Can you also add release version we want to remove **0.4** ?","9de5c63a9c9837bc1081db160e40b070b73d9ec7","(None, '', u'doc/whats_new.rst')"
"pull_request_commit","1236","nilearn","nilearn","salma1601","2016-08-11 08:54:12","add vectorize option and inverse_transform method","047b145b473f4406cd99d5f04e454af6213bbcc3",""
"pull_request_commit","1236","nilearn","nilearn","salma1601","2017-04-21 17:20:38","rebase","9b90a754e169998b89633697c45f173711933632",""
"pull_request_commit","1236","nilearn","nilearn","salma1601","2017-03-03 13:47:28","address Gael comments","e1301687b23831cd899a425c8c1245bbe5323861",""
"pull_request_commit","1236","nilearn","nilearn","salma1601","2016-09-29 19:13:46","fix indentation docs failure","4cb07d0dca7e7af7599edc9c6b40a252db0c2a01",""
"pull_request_commit","1236","nilearn","nilearn","salma1601","2016-09-30 15:30:13","fix clean_img doc indentation","ab2701c98d3307040363510688b21a14c82aeea3",""
"pull_request_commit","1236","nilearn","nilearn","salma1601","2016-09-30 17:34:22","fix clean doc indentation","b2663f39bb8b6c3880e26add422549495e2e2a47",""
"pull_request_commit","1236","nilearn","nilearn","salma1601","2016-10-01 06:43:49","remove tab for travis failure","24892d55e333b2fc87dc1457cb15c4e26674afa1",""
"pull_request_commit","1236","nilearn","nilearn","salma1601","2017-03-03 14:19:57","address Kamalaker comments","cb449d2cf71018ff385b18fe148fdfe277a2d1ea",""
"pull_request_commit","1236","nilearn","nilearn","salma1601","2017-03-03 14:25:14","fix doc for resampling_target parameter","f005ed8b64f5e34f718fdcb7278b186b43b7f061",""
"pull_request_commit","1236","nilearn","nilearn","salma1601","2017-03-03 14:37:51","COSMIT","88e7689953e63751e9b27f9ba1f54ae15b7fdce4",""
"pull_request_commit","1236","nilearn","nilearn","salma1601","2017-03-03 17:49:52","rebase","0aa1a2b3d55744c45d73e9e2bae5669a824b6635",""
"pull_request_commit","1236","nilearn","nilearn","salma1601","2017-03-03 17:51:59","fix sym to vec doc: it takes list","58c7cb9476df372b7f79781c910e9f4f1489a0db",""
"pull_request_commit","1236","nilearn","nilearn","salma1601","2017-03-03 23:31:30","try improve stratification comment","5d9ca45296fa407731e698349a10f56f15fb35be",""
"pull_request_commit","1236","nilearn","nilearn","salma1601","2017-03-04 12:26:54","fix merge mess","cb044fbc7db1a09c4fdd79a81b112065535b720b",""
"pull_request_commit","1236","nilearn","nilearn","salma1601","2017-03-04 14:01:49","fix indentations and 80 max columns","b097d013d30f313b9492f60cc410f8639c7d1a63",""
"pull_request_commit","1236","nilearn","nilearn","salma1601","2017-03-04 14:52:36","fix indentations in __init__","e57279cb4f1eaf8cf3a7a99aa0e843bf09050fcf",""
"pull_request_commit","1236","nilearn","nilearn","salma1601","2017-04-21 17:15:10","update whats_new","744cc7feaaf6d08c9b02d5da63862ae3a04873c9",""
"pull_request_commit","1236","nilearn","nilearn","salma1601","2017-04-21 20:33:58","remove link to deprecated sym_to_vec","b16f3a08b143baae1695be3085c2b30d9001cff4",""
"pull_request_commit","1236","nilearn","nilearn","salma1601","2017-04-25 11:57:45","fix typos","101911d4072ae39fa5632376747882048912c00b",""
"pull_request_commit","1236","nilearn","nilearn","salma1601","2017-04-25 11:58:06","put back sym_to_vec in modules doc","9de5c63a9c9837bc1081db160e40b070b73d9ec7",""
