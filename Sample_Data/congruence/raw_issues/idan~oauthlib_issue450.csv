"rectype","issueid","project_owner","project_name","actor","time","text","action","title"
"issue_title","450","idan","oauthlib","joelstevenson","2016-11-21 22:41:32","Use the scope_to_list() util to initalize the request.scopes list from
the request.scope request parameter in two place where it was instead
being set to None.

- AuthorizationEndpoint.validate_authorization_request()
- TokenEndpoint.create_token_response()

In both cases the Request should be properly populated before it is
passed to the client's validator.

In the case of the TokenEndpoint - there are OAuth2 workflows that
allow an optional scope parameter so we should have been doing this
for them anyway.

Since scope_to_list() may return None, also update the openid_connect
code to behave properly when this is the case.

Fixes #436 cf. #437 , #441 ","start issue","Normalize handling of request.scopes list"
"issue_closed","450","idan","oauthlib","thedrow","2016-11-23 10:18:36","","closed issue","Normalize handling of request.scopes list"
"pull_request_title","450","idan","oauthlib","joelstevenson","2016-11-21 22:41:32","Use the scope_to_list() util to initalize the request.scopes list from
the request.scope request parameter in two place where it was instead
being set to None.

- AuthorizationEndpoint.validate_authorization_request()
- TokenEndpoint.create_token_response()

In both cases the Request should be properly populated before it is
passed to the client's validator.

In the case of the TokenEndpoint - there are OAuth2 workflows that
allow an optional scope parameter so we should have been doing this
for them anyway.

Since scope_to_list() may return None, also update the openid_connect
code to behave properly when this is the case.

Fixes #436 cf. #437 , #441 ","7843972fa4334709149f0247cce643491784504a","Normalize handling of request.scopes list"
"pull_request_merged","450","idan","oauthlib","thedrow","2016-11-23 10:18:36","Normalize handling of request.scopes list","800808684dd3681d86b792ed5ed735237bc3dcd6","Pull request merge from joelstevenson/oauthlib:master to idan/oauthlib:master"
"issue_comment","450","idan","oauthlib","thedrow","2016-11-22 12:05:53","Care to fix the test?","",""
"issue_comment","450","idan","oauthlib","thedrow","2016-11-23 10:18:42","Thank you very much!","",""
"pull_request_commit","450","idan","oauthlib","joelstevenson","2016-11-21 20:43:13","Normalize handling of request.scopes list

Use the scope_to_list() util to initalize the request.scopes list from
the request.scope request parameter in two place where it was instead
being set to None.

- AuthorizationEndpoint.validate_authorization_request()
- TokenEndpoint.create_token_response()

In both cases the Request should be properly populated before it is
passed to the client's validator.

In the case of the TokenEndpoint - there are OAuth2 workflows that
allow an optional scope parameter so we should have been doing this
for them anyway.

Since scope_to_list() may return None, also update the openid_connect
code to behave properly when this is the case.

Fixes #436","f1a8fc40e117511c790bc63d00a19a90058e1ce1",""
"pull_request_commit","450","idan","oauthlib","joelstevenson","2016-11-22 16:38:25","Fix a typo","7843972fa4334709149f0247cce643491784504a",""
