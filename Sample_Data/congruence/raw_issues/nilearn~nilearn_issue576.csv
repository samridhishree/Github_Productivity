"rectype","issueid","project_owner","project_name","actor","time","text","action","title"
"issue_title","576","nilearn","nilearn","dohmatob","2015-05-08 14:42:23","Fixes #575.
","start issue","[MRG+1] Fix issue575"
"issue_closed","576","nilearn","nilearn","AlexandreAbraham","2015-05-11 07:51:49","","closed issue","[MRG+1] Fix issue575"
"pull_request_title","576","nilearn","nilearn","dohmatob","2015-05-08 14:42:23","Fixes #575.
","3686a8da936884fea429d5c16ceb05b031009072","[MRG+1] Fix issue575"
"pull_request_merged","576","nilearn","nilearn","AlexandreAbraham","2015-05-11 07:51:49","[MRG+1] Fix issue575","7f2e59b28ac9cea6bb173753114a828b9fade111","Pull request merge from dohmatob/nilearn:fix-issue575 to nilearn/nilearn:master"
"issue_comment","576","nilearn","nilearn","GaelVaroquaux","2015-05-09 09:57:03","Aside from the two minor comments, this seems good to go to me. Thanks heaps.
","",""
"issue_comment","576","nilearn","nilearn","GaelVaroquaux","2015-05-09 14:04:00",":+1: for merge!
","",""
"pull_request_commit_comment","576","nilearn","nilearn","GaelVaroquaux","2015-05-09 09:51:58","Could you move this as a top-level function, rather than an embedded function. It makes it easier for reuse and testing.
","3686a8da936884fea429d5c16ceb05b031009072","(None, '', u'nilearn/plotting/find_cuts.py')"
"pull_request_commit_comment","576","nilearn","nilearn","GaelVaroquaux","2015-05-09 09:56:31","How much time is this adding to the tests?

Unfortunately our plotting tests are a bit long, given that they involve a lot of matplotlib machinery. Thus we need to be careful here, and sometimes we will not test the full plotting function, but only the internal cutting one, if the cost in time is too much. Indeed, if the tests start taking too long to run, people won't run them anymore.
","3686a8da936884fea429d5c16ceb05b031009072","(11, '', u'nilearn/plotting/tests/test_img_plotting.py')"
"pull_request_commit_comment","576","nilearn","nilearn","dohmatob","2015-05-09 10:48:09","OK, i did include a test for the cutting function. So i guess i can just remove this one, since it's not very DRY.
","3686a8da936884fea429d5c16ceb05b031009072","(11, '', u'nilearn/plotting/tests/test_img_plotting.py')"
"pull_request_commit_comment","576","nilearn","nilearn","dohmatob","2015-05-09 10:48:18","sure
","3686a8da936884fea429d5c16ceb05b031009072","(None, '', u'nilearn/plotting/find_cuts.py')"
"pull_request_commit_comment","576","nilearn","nilearn","GaelVaroquaux","2015-05-09 10:50:36","> OK, i did include a test for the cutting function. So i guess i can
> just remove this one, since it's not very DRY.

I am just asking an estimation of time, to know whether or not to include
it.
","3686a8da936884fea429d5c16ceb05b031009072","(11, '', u'nilearn/plotting/tests/test_img_plotting.py')"
"pull_request_commit_comment","576","nilearn","nilearn","dohmatob","2015-05-09 10:54:43","10 loops, best of 3: 234 ms per loop

On Sat, May 9, 2015 at 12:50 PM, Gael Varoquaux notifications@github.com
wrote:

> In nilearn/plotting/tests/test_img_plotting.py
> https://github.com/nilearn/nilearn/pull/576#discussion_r29991782:
> 
> > @@ -379,3 +379,11 @@ def test_plot_connectome_exceptions():
> >                          adjacency_matrix, node_coords,
> >                          node_kwargs={'c': 'blue'},
> >                          **kwargs)
> > +
> > +
> > +def test_singleton_ax_dim():
> > -    for axis, direction in enumerate(""xyz""):
> > -        shape = [5, 6, 7]
> > -        shape[axis] = 1
> > -        img = nibabel.Nifti1Image(np.ones(shape), np.eye(4))
> > -        plot_stat_map(img, None, display_mode=direction)
> 
>  OK, i did include a test for the cutting function. So i guess i can just
> remove this one, since it's not very DRY.
> I am just asking an estimation of time, to know whether or not to include
> it.
> 
> â€”
> Reply to this email directly or view it on GitHub
> https://github.com/nilearn/nilearn/pull/576/files#r29991782.

## 

DED
","3686a8da936884fea429d5c16ceb05b031009072","(11, '', u'nilearn/plotting/tests/test_img_plotting.py')"
"pull_request_commit_comment","576","nilearn","nilearn","GaelVaroquaux","2015-05-09 12:44:03","> 10 loops, best of 3: 234 ms per loop

Let's keep it then!

Thanks
","3686a8da936884fea429d5c16ceb05b031009072","(11, '', u'nilearn/plotting/tests/test_img_plotting.py')"
"pull_request_commit_comment","576","nilearn","nilearn","dohmatob","2015-05-09 13:00:02","Done.
","3686a8da936884fea429d5c16ceb05b031009072","(11, '', u'nilearn/plotting/tests/test_img_plotting.py')"
"pull_request_commit","576","nilearn","nilearn","dohmatob","2015-05-08 12:38:19","BF: issue #575 (returning all slices if too many n_cuts demanded)","23687655135cb737e174f6f909940cbbfe3a97d5",""
"pull_request_commit","576","nilearn","nilearn","dohmatob","2015-05-08 12:38:44","BF: issue #575: new test cases","599d1a78698a480111514026dc6fff97a0e340f6",""
"pull_request_commit","576","nilearn","nilearn","dohmatob","2015-05-08 12:40:13","ENH: assert ==> raise","425b96f06f2208cd68367e3a4ba75dc0e034b06b",""
"pull_request_commit","576","nilearn","nilearn","dohmatob","2015-05-08 12:42:44","typo","ee07b43d143fad1e34406b5c62066cfec66dbec7",""
"pull_request_commit","576","nilearn","nilearn","dohmatob","2015-05-09 08:48:36","still addressing comments on PR #576 and issue #575","9a60dd2a545d87ecfb0f665ac58543192025fa4d",""
"pull_request_commit","576","nilearn","nilearn","dohmatob","2015-05-09 09:41:49","trying to please coveralls.i.owe.you","3686a8da936884fea429d5c16ceb05b031009072",""
