"rectype","issueid","project_owner","project_name","actor","time","text","action","title"
"issue_title","296","nilearn","nilearn","banilo","2014-11-25 21:41:17","attemps to adress #231

Here is an example for threshold=5 of what it currently looks like:

![bildschirmfoto 2014-11-25 um 18 53 21](https://cloud.githubusercontent.com/assets/3907396/5191981/85c179e6-74f3-11e4-8def-b032366a3684.png)

Greetings from Berlin
","start issue","added thresholded colorbar"
"issue_closed","296","nilearn","nilearn","lesteve","2014-12-15 15:26:29","","closed issue","added thresholded colorbar"
"pull_request_title","296","nilearn","nilearn","banilo","2014-11-25 21:41:17","attemps to adress #231

Here is an example for threshold=5 of what it currently looks like:

![bildschirmfoto 2014-11-25 um 18 53 21](https://cloud.githubusercontent.com/assets/3907396/5191981/85c179e6-74f3-11e4-8def-b032366a3684.png)

Greetings from Berlin
","0095853236306d7d357f9c41d6289b2cdf818f26","added thresholded colorbar"
"pull_request_merged","296","nilearn","nilearn","lesteve","2014-12-15 15:26:29","added thresholded colorbar","5baa862b794149ee541be38eb68197c54728686c","Pull request merge from banilo/nilearn:colorbar to nilearn/nilearn:master"
"issue_comment","296","nilearn","nilearn","GaelVaroquaux","2014-11-26 10:27:08","Two comments: I think that the background shouldn't be a grey colormap, but a uniform color. The reason being that it looks like a colormap. We need to make it very visually explicit that this is a threshold.

Also, I am worried that this will conflict will ongoing work by @eickenberg . You should sync with him.
","",""
"issue_comment","296","nilearn","nilearn","banilo","2014-11-26 16:54:13","Ok thanks, should this PR just wait for Michael's to finish?

Sent from my iPhone

> On 26 Nov 2014, at 11:27, Gael Varoquaux notifications@github.com wrote:
> 
> Two comments: I think that the background shouldn't be a grey colormap, but a uniform color. The reason being that it looks like a colormap. We need to make it very visually explicit that this is a threshold.
> 
> Also, I am worried that this will conflict will ongoing work by @eickenberg . You should sync with him.
> 
> —
> Reply to this email directly or view it on GitHub.
","",""
"issue_comment","296","nilearn","nilearn","eickenberg","2014-11-26 18:27:24","ill see to it first thing tomorrow

On Wednesday, November 26, 2014, Danilo Bzdok notifications@github.com
wrote:

> Ok thanks, should this PR just wait for Michael's to finish?
> 
> Sent from my iPhone
> 
> > On 26 Nov 2014, at 11:27, Gael Varoquaux <notifications@github.com
> > <javascript:_e(%7B%7D,'cvml','notifications@github.com');>> wrote:
> > 
> > Two comments: I think that the background shouldn't be a grey colormap,
> > but a uniform color. The reason being that it looks like a colormap. We
> > need to make it very visually explicit that this is a threshold.
> > 
> > Also, I am worried that this will conflict will ongoing work by
> > @eickenberg . You should sync with him.
> > 
> > —
> > Reply to this email directly or view it on GitHub.
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/nilearn/nilearn/pull/296#issuecomment-64676037.
","",""
"issue_comment","296","nilearn","nilearn","lesteve","2014-11-27 07:45:29","> Ok thanks, should this PR just wait for Michael's to finish?

I don't think there it too much of a risk of conflict between the two PRs. @eickenberg is changing plot_stat_map in img_plotting.py and aims at changing the cmap before doing the imshow. @banilo is changing stuff mostly in slicers.py and doesn't change the cmap before the imshow but only when the colorbar is displayed.
","",""
"issue_comment","296","nilearn","nilearn","banilo","2014-11-27 11:00:11","Ok, cool.

Here is the next code update then.
Gray is now unicolor, more visually speaking:

![image](https://cloud.githubusercontent.com/assets/3907396/5215944/c79b1dec-762c-11e4-80b5-4e3596780ad7.png)
","",""
"issue_comment","296","nilearn","nilearn","eickenberg","2014-11-27 13:08:25","Looking at this again, I am becoming convinced that this PR needs to be merged before the symmetric/non-symmetric colormap one. The changes I need to make for the will have to go into `plot_img_with_bg` and will have to pass colorbar min/max bounds or something. This PR should lay the basis for it.

Currently though, I am not 1000% convinced of the optimality of the ""colorbar hacking"" passage in the code. But at the same time I am not enough of a matplotlib wizard to be able to propose the simple canonical solution.
","",""
"issue_comment","296","nilearn","nilearn","banilo","2014-11-28 20:28:52","Ok, I am happy to follow other peoples' advice on how to create our user-defined colormap in a more professional way.
","",""
"issue_comment","296","nilearn","nilearn","banilo","2014-11-28 21:13:19","Ok, a) removed redundant data masking and b) compute the threshold offsets in the cmap by im.norm as suggested by @lesteve.
","",""
"issue_comment","296","nilearn","nilearn","banilo","2014-12-05 14:51:46","As suggested by Loic, the code does also work without having a special case for threshold==0. Looks unsuspicous.

![image](https://cloud.githubusercontent.com/assets/3907396/5316554/6e0e50a2-7c8d-11e4-9dae-0b1d077b5cfa.png)

Here is the new comit...
","",""
"issue_comment","296","nilearn","nilearn","GaelVaroquaux","2014-12-06 10:02:04","Last image in there is _beautiful_!
","",""
"issue_comment","296","nilearn","nilearn","banilo","2014-12-10 15:23:05","Now supports threshold=None and threshold=0.
","",""
"issue_comment","296","nilearn","nilearn","GaelVaroquaux","2014-12-10 17:55:25","What does threshold=None do? 

<div>-------- Original message --------</div><div>From: Danilo Bzdok notifications@github.com </div><div>Date:10/12/2014  16:23  (GMT+01:00) </div><div>To: nilearn/nilearn nilearn@noreply.github.com </div><div>Cc: Gael Varoquaux gael.varoquaux@normalesup.org </div><div>Subject: Re: [nilearn] added thresholded colorbar (#296) </div><div>
</div>Now supports threshold=None and threshold=0.

—
Reply to this email directly or view it on GitHub.
","",""
"issue_comment","296","nilearn","nilearn","banilo","2014-12-10 18:06:05","threshold=None means ""no threshold/gray area in the colorbar, please"". It behaves the same as threshold=0.
","",""
"issue_comment","296","nilearn","nilearn","lesteve","2014-12-10 20:20:53","> It behaves the same as threshold=0.

not entirely True, threshold=0 will mask out zero values, threshold=None won't.
","",""
"issue_comment","296","nilearn","nilearn","banilo","2014-12-15 13:08:05","Just addressed last comment.
","",""
"issue_comment","296","nilearn","nilearn","lesteve","2014-12-15 15:27:06","This one eventually got merged, great stuff!
","",""
"issue_comment","296","nilearn","nilearn","banilo","2014-12-15 15:29:37",":palm_tree: 
","",""
"pull_request_commit_comment","296","nilearn","nilearn","eickenberg","2014-11-25 21:45:50","`range`, `rng` is reserved for random number generators
","0095853236306d7d357f9c41d6289b2cdf818f26","(None, '', u'nilearn/plotting/slicers.py')"
"pull_request_commit_comment","296","nilearn","nilearn","eickenberg","2014-11-25 21:46:10","wish
","0095853236306d7d357f9c41d6289b2cdf818f26","(None, '', u'nilearn/plotting/slicers.py')"
"pull_request_commit_comment","296","nilearn","nilearn","eickenberg","2014-11-25 21:46:50","sorry, `data_range`
","0095853236306d7d357f9c41d6289b2cdf818f26","(None, '', u'nilearn/plotting/slicers.py')"
"pull_request_commit_comment","296","nilearn","nilearn","lesteve","2014-11-26 07:42:51","Please refrain to do broad PEP8 fixes like the ones you did in this commit. This is likely to cause merge conflicts for ongoing PRs. The rule of thumb I go with is only fix PEP8 in the vicinity of the lines I touched.
","0095853236306d7d357f9c41d6289b2cdf818f26","(None, '', u'nilearn/plotting/img_plotting.py')"
"pull_request_commit_comment","296","nilearn","nilearn","lesteve","2014-11-26 07:46:14","You can actually use pl.cm to access the matplotlib colormap module. That's what I have seen used in a few places e.g. plotting/img_plotting.py.
","0095853236306d7d357f9c41d6289b2cdf818f26","(None, '', u'nilearn/plotting/slicers.py')"
"pull_request_commit_comment","296","nilearn","nilearn","lesteve","2014-11-26 07:47:33","I don't think this function should have a default for threshold
","0095853236306d7d357f9c41d6289b2cdf818f26","(None, '', u'nilearn/plotting/slicers.py')"
"pull_request_commit_comment","296","nilearn","nilearn","lesteve","2014-11-26 07:54:16","Why is there a special case for 1e-6? Also magical numbers like this are best promoted to a module variable.
","0095853236306d7d357f9c41d6289b2cdf818f26","(None, '', u'nilearn/plotting/slicers.py')"
"pull_request_commit_comment","296","nilearn","nilearn","lesteve","2014-11-26 07:54:58","Not really convinced this function is the best place to do this kind of safety checks ...
","0095853236306d7d357f9c41d6289b2cdf818f26","(None, '', u'nilearn/plotting/slicers.py')"
"pull_request_commit_comment","296","nilearn","nilearn","lesteve","2014-11-26 08:08:20",":confused: why are you using jet here? You should use the cmap specified by the user, I think im.cmap will do.
","0095853236306d7d357f9c41d6289b2cdf818f26","(None, '', u'nilearn/plotting/slicers.py')"
"pull_request_commit_comment","296","nilearn","nilearn","lesteve","2014-11-26 08:10:32","Same comment as above, why is there a special case for 1e-6? 
","0095853236306d7d357f9c41d6289b2cdf818f26","(None, '', u'nilearn/plotting/slicers.py')"
"pull_request_commit_comment","296","nilearn","nilearn","lesteve","2014-11-26 08:11:46","I believe we want to use a single gray color here. _cm.gray is a variable gray colormap.
","0095853236306d7d357f9c41d6289b2cdf818f26","(None, '', u'nilearn/plotting/slicers.py')"
"pull_request_commit_comment","296","nilearn","nilearn","lesteve","2014-11-26 08:37:40","Just curious, what was wrong with the original  `figure.colorbar(im, cax=self._colorbar_ax, ticks=ticks)` ?
","0095853236306d7d357f9c41d6289b2cdf818f26","(None, '', u'nilearn/plotting/slicers.py')"
"pull_request_commit_comment","296","nilearn","nilearn","lesteve","2014-11-26 10:33:13","I don't think we should threshold the anat
","0095853236306d7d357f9c41d6289b2cdf818f26","(None, '', u'nilearn/plotting/img_plotting.py')"
"pull_request_commit_comment","296","nilearn","nilearn","lesteve","2014-11-26 10:35:21","Now I am wondering whether the masking inside [-threshold, threshold] l.93, 94 is necessary. The add_overlay will do the masking.
","0095853236306d7d357f9c41d6289b2cdf818f26","(None, '', u'nilearn/plotting/img_plotting.py')"
"pull_request_commit_comment","296","nilearn","nilearn","banilo","2014-11-26 16:20:42","Shouldn't the theshold be symmetrical by construction?

Sent from my iPhone

> On 26 Nov 2014, at 11:35, Loïc Estève notifications@github.com wrote:
> 
> In nilearn/plotting/img_plotting.py:
> 
> > @@ -94,7 +94,7 @@ def _plot_img_with_bg(img, bg_img=None, cut_coords=None,
> >              data = np.ma.masked_inside(data, -threshold, threshold, copy=False)
> >          slicer.add_overlay(nibabel.Nifti1Image(data, affine),
> >                             interpolation=interpolation, colorbar=colorbar,
> > -                           **kwargs)
> > -                           threshold=threshold, **kwargs)
> >   Now I am wondering whether the masking inside [-threshold, threshold] l.93, 94 is necessary. The add_overlay will do the masking.
> 
> —
> Reply to this email directly or view it on GitHub.
","0095853236306d7d357f9c41d6289b2cdf818f26","(None, '', u'nilearn/plotting/img_plotting.py')"
"pull_request_commit_comment","296","nilearn","nilearn","banilo","2014-11-26 16:23:38","Ups...

Sent from my iPhone

> On 26 Nov 2014, at 11:33, Loïc Estève notifications@github.com wrote:
> 
> In nilearn/plotting/img_plotting.py:
> 
> > @@ -86,7 +86,7 @@ def _plot_img_with_bg(img, bg_img=None, cut_coords=None,
> > 
> > ```
> >  if bg_img is not None:
> >      slicer.add_overlay(bg_img,
> > ```
> > -                           vmin=bg_vmin, vmax=bg_vmax,
> > -                           vmin=bg_vmin, vmax=bg_vmax, threshold=threshold,
> >   I don't think we should threshold the anat
> 
> —
> Reply to this email directly or view it on GitHub.
","0095853236306d7d357f9c41d6289b2cdf818f26","(None, '', u'nilearn/plotting/img_plotting.py')"
"pull_request_commit_comment","296","nilearn","nilearn","banilo","2014-11-26 16:27:34","I did not get it to take the self defined colormap.

Sent from my iPhone

> On 26 Nov 2014, at 09:37, Loïc Estève notifications@github.com wrote:
> 
> In nilearn/plotting/slicers.py:
> 
> > -        bounds = np.linspace(im.norm.vmin, im.norm.vmax, 100)
> > -        our_cmap = _cm.jet
> >   +
> > -        if threshold != 1e-6:
> > -            # some colormap hacking
> > -            cmaplist = [our_cmap(i) for i in range(our_cmap.N)]
> > -            rng = float(im.norm.vmax + abs(im.norm.vmin))
> > -            start = (rng - 2 \* threshold) / 2  # in data space
> > -            stop = rng - start
> > -            istart = int(our_cmap.N \* start / rng)  # colormap space
> > -            istop = int(our_cmap.N \* stop / rng)
> > -            for i in range(istart, istop):
> > -                cmaplist[i] = _cm.gray(i)
> > -            our_cmap = our_cmap.from_list('Custom cmap', cmaplist, our_cmap.N)
> >   +
> > -        ColorbarBase(self._colorbar_ax, ticks=ticks, norm=im.norm,
> >   Just curious, what was wrong with the original figure.colorbar(im, cax=self._colorbar_ax, ticks=ticks) ?
> 
> —
> Reply to this email directly or view it on GitHub.
","0095853236306d7d357f9c41d6289b2cdf818f26","(None, '', u'nilearn/plotting/slicers.py')"
"pull_request_commit_comment","296","nilearn","nilearn","banilo","2014-11-26 16:29:25","Ok

Sent from my iPhone

> On 26 Nov 2014, at 09:11, Loïc Estève notifications@github.com wrote:
> 
> In nilearn/plotting/slicers.py:
> 
> > ```
> >      ticks = np.linspace(im.norm.vmin, im.norm.vmax, 5)
> > ```
> > -        figure.colorbar(im, cax=self._colorbar_ax, ticks=ticks)
> > -        bounds = np.linspace(im.norm.vmin, im.norm.vmax, 100)
> > -        our_cmap = _cm.jet
> >   +
> > -        if threshold != 1e-6:
> > -            # some colormap hacking
> > -            cmaplist = [our_cmap(i) for i in range(our_cmap.N)]
> > -            rng = float(im.norm.vmax + abs(im.norm.vmin))
> > -            start = (rng - 2 \* threshold) / 2  # in data space
> > -            stop = rng - start
> > -            istart = int(our_cmap.N \* start / rng)  # colormap space
> > -            istop = int(our_cmap.N \* stop / rng)
> > -            for i in range(istart, istop):
> > -                cmaplist[i] = _cm.gray(i)
> >   I believe we want to use a single gray color here. _cm.gray is a variable gray colormap.
> 
> —
> Reply to this email directly or view it on GitHub.
","0095853236306d7d357f9c41d6289b2cdf818f26","(None, '', u'nilearn/plotting/slicers.py')"
"pull_request_commit_comment","296","nilearn","nilearn","banilo","2014-11-26 16:30:19","This magic number happened to be the default for threshold in other parts of the code.

Sent from my iPhone

> On 26 Nov 2014, at 09:10, Loïc Estève notifications@github.com wrote:
> 
> In nilearn/plotting/slicers.py:
> 
> > ```
> >      ticks = np.linspace(im.norm.vmin, im.norm.vmax, 5)
> > ```
> > -        figure.colorbar(im, cax=self._colorbar_ax, ticks=ticks)
> > -        bounds = np.linspace(im.norm.vmin, im.norm.vmax, 100)
> > -        our_cmap = _cm.jet
> >   +
> > -        if threshold != 1e-6:
> >   Same comment as above, why is there a special case for 1e-6?
> 
> —
> Reply to this email directly or view it on GitHub.
","0095853236306d7d357f9c41d6289b2cdf818f26","(None, '', u'nilearn/plotting/slicers.py')"
"pull_request_commit_comment","296","nilearn","nilearn","banilo","2014-11-26 16:33:10","Rather in add_overlay then?

Sent from my iPhone

> On 26 Nov 2014, at 08:54, Loïc Estève notifications@github.com wrote:
> 
> In nilearn/plotting/slicers.py:
> 
> > @@ -406,7 +407,20 @@ def _map_show(self, img, type='imshow', **kwargs):
> >              ims.append(im)
> >          return ims
> > -    def _colorbar_show(self, im):
> > -    def _colorbar_show(self, im, threshold=1e-6):
> > -        # sanity-check threshold
> > -        if threshold != 1e-6:
> > -            if threshold < 0:
> > -                raise ValueError(""The set threshold (%f) can't be negative""
> >   Not really convinced this function is the best place to do this kind of safety checks ...
> 
> —
> Reply to this email directly or view it on GitHub.
","0095853236306d7d357f9c41d6289b2cdf818f26","(None, '', u'nilearn/plotting/slicers.py')"
"pull_request_commit_comment","296","nilearn","nilearn","banilo","2014-11-26 16:35:23","So the default behavior should not be not to have a gray area in the colorbar?

Sent from my iPhone

> On 26 Nov 2014, at 08:47, Loïc Estève notifications@github.com wrote:
> 
> In nilearn/plotting/slicers.py:
> 
> > @@ -406,7 +407,20 @@ def _map_show(self, img, type='imshow', **kwargs):
> >              ims.append(im)
> >          return ims
> > -    def _colorbar_show(self, im):
> > -    def _colorbar_show(self, im, threshold=1e-6):
> >   I don't think this function should have a default for threshold
> 
> —
> Reply to this email directly or view it on GitHub.
","0095853236306d7d357f9c41d6289b2cdf818f26","(None, '', u'nilearn/plotting/slicers.py')"
"pull_request_commit_comment","296","nilearn","nilearn","banilo","2014-11-26 16:35:51","Thanks 

Sent from my iPhone

> On 26 Nov 2014, at 08:46, Loïc Estève notifications@github.com wrote:
> 
> In nilearn/plotting/slicers.py:
> 
> > @@ -14,7 +14,8 @@
> > 
> >  try:
> >      import pylab as pl
> > -    from matplotlib import transforms
> > -    from matplotlib import transforms, cm as _cm
> >   You can actually use pl.cm to access the matplotlib colormap module. That's what I have seen used in a few places e.g. plotting/img_plotting.py.
> 
> —
> Reply to this email directly or view it on GitHub.
","0095853236306d7d357f9c41d6289b2cdf818f26","(None, '', u'nilearn/plotting/slicers.py')"
"pull_request_commit_comment","296","nilearn","nilearn","lesteve","2014-11-27 07:38:47","All I meant to say is that self._colorbar_show is always called with two arguments in the code so there is no need to a default for threshold here.
","0095853236306d7d357f9c41d6289b2cdf818f26","(None, '', u'nilearn/plotting/slicers.py')"
"pull_request_commit_comment","296","nilearn","nilearn","lesteve","2014-11-27 07:40:45","Probably not because you don't have access to im.vmin and im.vmax there. In any case it seems best done as a separate PR.
","0095853236306d7d357f9c41d6289b2cdf818f26","(None, '', u'nilearn/plotting/slicers.py')"
"pull_request_commit_comment","296","nilearn","nilearn","lesteve","2014-11-27 07:43:46","I know (see my comment about promoting it to a module constant above) but still. I don't really understand why 1e-6 should be treated differently from any other threshold. Shouldn't you try to gray the area between [-1e-6, 1e-6]? It will probably only show up a a gray line at 0 I would have thought.
","0095853236306d7d357f9c41d6289b2cdf818f26","(None, '', u'nilearn/plotting/slicers.py')"
"pull_request_commit_comment","296","nilearn","nilearn","lesteve","2014-11-27 07:49:35","I don't get your question. Basically all I am saying is that in img_plotting.py you masked the data inside [-threshold, threshold] [here](https://github.com/banilo/nilearn/blob/colorbar/nilearn/plotting/img_plotting.py#L94) but then you call add_overlay with a threshold argument which will mask the data again [there](https://github.com/banilo/nilearn/blob/colorbar/nilearn/plotting/slicers.py#L335).
","0095853236306d7d357f9c41d6289b2cdf818f26","(None, '', u'nilearn/plotting/img_plotting.py')"
"pull_request_commit_comment","296","nilearn","nilearn","eickenberg","2014-11-27 10:22:07","Actually, I think the directive is to `import matplotlib.pyplot as plt` instead of `import pylab as pl`
","0095853236306d7d357f9c41d6289b2cdf818f26","(None, '', u'nilearn/plotting/slicers.py')"
"pull_request_commit_comment","296","nilearn","nilearn","eickenberg","2014-11-27 10:27:03","Could you motivate the `abs` in that line? That means that if the minimal value is positive, then the range will assume it was actually its negative symmetric.
","0095853236306d7d357f9c41d6289b2cdf818f26","(None, '', u'nilearn/plotting/slicers.py')"
"pull_request_commit_comment","296","nilearn","nilearn","lesteve","2014-11-27 10:30:40","Agreed but we still have `import pylab as pl` in a few places. Should probably be fixed in a separate PR.
","0095853236306d7d357f9c41d6289b2cdf818f26","(None, '', u'nilearn/plotting/slicers.py')"
"pull_request_commit_comment","296","nilearn","nilearn","banilo","2014-11-27 10:30:52","Thanks for pointing this one out - I am not sure yet, to be honest, how to
handle a threshold of e.g. 4 when e.g. vmax=10 and vmin = 2. We just gray 2
to 4?

2014-11-27 11:27 GMT+01:00 eickenberg notifications@github.com:

> In nilearn/plotting/slicers.py:
> 
> > ```
> >      ticks = np.linspace(im.norm.vmin, im.norm.vmax, 5)
> > ```
> > -        figure.colorbar(im, cax=self._colorbar_ax, ticks=ticks)
> > -        bounds = np.linspace(im.norm.vmin, im.norm.vmax, 100)
> > -        our_cmap = _cm.jet
> >   +
> > -        if threshold != 1e-6:
> > -            # some colormap hacking
> > -            cmaplist = [our_cmap(i) for i in range(our_cmap.N)]
> > -            rng = float(im.norm.vmax + abs(im.norm.vmin))
> 
> Could you motivate the abs in that line? That means that if the minimal
> value is positive, then the range will assume it was actually its negative
> symmetric.
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/nilearn/nilearn/pull/296/files#r20988126.

## 

Viele Grüße,
Danilo
","0095853236306d7d357f9c41d6289b2cdf818f26","(None, '', u'nilearn/plotting/slicers.py')"
"pull_request_commit_comment","296","nilearn","nilearn","banilo","2014-11-27 10:31:23","good idea!

2014-11-27 11:30 GMT+01:00 Loïc Estève notifications@github.com:

> In nilearn/plotting/slicers.py:
> 
> > @@ -14,7 +14,8 @@
> > 
> >  try:
> >      import pylab as pl
> > -    from matplotlib import transforms
> > -    from matplotlib import transforms, cm as _cm
> 
> Agreed but we still have import pylab as pl in a few places. Should
> probably be fixed in a separate PR.
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/nilearn/nilearn/pull/296/files#r20988283.

## 

Viele Grüße,
Danilo
","0095853236306d7d357f9c41d6289b2cdf818f26","(None, '', u'nilearn/plotting/slicers.py')"
"pull_request_commit_comment","296","nilearn","nilearn","banilo","2014-11-27 10:32:21","Looks like we mostly do this in tests:

11:07:50-admin/git/nilearn (mask_time)$ git grep -ni ""import pylab as pl""

nilearn/plotting/img_plotting.py:24:    _import pylab as pl_

nilearn/plotting/slicers.py:16:    _import pylab as pl_

nilearn/plotting/tests/test_cm.py:11:    _import pylab as pl_

nilearn/plotting/tests/test_cm.py:22:    _import pylab as pl_

nilearn/plotting/tests/test_cm.py:29:    _import pylab as pl_

nilearn/plotting/tests/test_img_plotting.py:14:    _import pylab as pl_

nilearn/plotting/tests/test_img_plotting.py:49:    _import pylab as pl_

nilearn/plotting/tests/test_img_plotting.py:62:    _import pylab as pl_

nilearn/plotting/tests/test_img_plotting.py:97:    _import pylab as pl_

nilearn/plotting/tests/test_img_plotting.py:114:    _import pylab as pl_

nilearn/plotting/tests/test_slicers.py:10:    _import pylab as pl_

nilearn/plotting/tests/test_slicers.py:24:    _import pylab as pl_

nilearn/plotting/tests/test_slicers.py:36:    _import pylab as pl_

plot_demo_plotting.py:86:_import pylab as pl_

plot_haxby_simple.py:82:_import pylab as pl_t

plot_ica_resting_state.py:53:_import pylab as pl_t

2014-11-27 11:31 GMT+01:00 Danilo Bzdok danilobzdok@gmail.com:

> good idea!
> 
> 2014-11-27 11:30 GMT+01:00 Loïc Estève notifications@github.com:
> 
> > In nilearn/plotting/slicers.py:
> > 
> > > @@ -14,7 +14,8 @@
> > > 
> > >  try:
> > >      import pylab as pl
> > > -    from matplotlib import transforms
> > > -    from matplotlib import transforms, cm as _cm
> > 
> > Agreed but we still have import pylab as pl in a few places. Should
> > probably be fixed in a separate PR.
> > 
> > —
> > Reply to this email directly or view it on GitHub
> > https://github.com/nilearn/nilearn/pull/296/files#r20988283.
> 
> ## 
> 
> Viele Grüße,
> Danilo

## 

Viele Grüße,
Danilo
","0095853236306d7d357f9c41d6289b2cdf818f26","(None, '', u'nilearn/plotting/slicers.py')"
"pull_request_commit_comment","296","nilearn","nilearn","banilo","2014-11-27 10:37:35","The masking of the data has already been therefore. This PR is about the thresholding depicted in the colorbar, not the thresholding int he depicted brain image, which remained unchanged.
","0095853236306d7d357f9c41d6289b2cdf818f26","(None, '', u'nilearn/plotting/img_plotting.py')"
"pull_request_commit_comment","296","nilearn","nilearn","banilo","2014-11-27 10:37:52","Good to know, thanks.
","0095853236306d7d357f9c41d6289b2cdf818f26","(None, '', u'nilearn/plotting/img_plotting.py')"
"pull_request_commit_comment","296","nilearn","nilearn","lesteve","2014-11-27 10:39:34","I could have sworn I posted something about this part of the code but apparently not. There has to be a better way than doing the mapping from data space to colormap space by hand. In particular your code assumes that the mapping is linear. 

One way which may not be the best approach: im.norm is a callable that maps the data space to [0, 1] and then you can multiply by our_cmap.N - 1 to get istart and istop.
","0095853236306d7d357f9c41d6289b2cdf818f26","(None, '', u'nilearn/plotting/slicers.py')"
"pull_request_commit_comment","296","nilearn","nilearn","eickenberg","2014-11-27 10:45:48","I think there had already been a pass through most of the non-test code correcting this.
","0095853236306d7d357f9c41d6289b2cdf818f26","(None, '', u'nilearn/plotting/slicers.py')"
"pull_request_commit_comment","296","nilearn","nilearn","banilo","2014-11-27 10:50:45","a) I would like to promote threshold=0 as a default
b) where do you want me to put the default_threshold constant?
","0095853236306d7d357f9c41d6289b2cdf818f26","(None, '', u'nilearn/plotting/slicers.py')"
"pull_request_commit_comment","296","nilearn","nilearn","lesteve","2014-11-27 12:04:28","But since you are fixing the fact that threshold wasn't passed to add_overlay you may as well remove the unnecessary masking here ...
","0095853236306d7d357f9c41d6289b2cdf818f26","(None, '', u'nilearn/plotting/img_plotting.py')"
"pull_request_commit_comment","296","nilearn","nilearn","eickenberg","2014-11-27 12:58:59","Do we really need to proceed this way? Splitting a continuous colormap into the arbitrary and probably visible binning of 100 shouldn't be necessary.
","0095853236306d7d357f9c41d6289b2cdf818f26","(None, '', u'nilearn/plotting/slicers.py')"
"pull_request_commit_comment","296","nilearn","nilearn","banilo","2014-11-28 20:26:24","That's because I changed back to the lower level ColorbarBase() call since it permits a user-defined cmap as an argument. Without specifying bounds the colorbar did not work out.
","0095853236306d7d357f9c41d6289b2cdf818f26","(None, '', u'nilearn/plotting/slicers.py')"
"pull_request_commit_comment","296","nilearn","nilearn","eickenberg","2014-11-28 20:28:21","then it needs to scale with the dpi of the figure i guess. maybe overkill

On Friday, November 28, 2014, Danilo Bzdok notifications@github.com wrote:

> In nilearn/plotting/slicers.py:
> 
> > ```
> >      ticks = np.linspace(im.norm.vmin, im.norm.vmax, 5)
> > ```
> > -        figure.colorbar(im, cax=self._colorbar_ax, ticks=ticks)
> > -        bounds = np.linspace(im.norm.vmin, im.norm.vmax, 100)
> 
> That's because I changed back to the lower level ColorbarBase() call since
> it permits a user-defined cmap as an argument. Without specifying bounds
> the colorbar did not work out.
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/nilearn/nilearn/pull/296/files#r21043629.
","0095853236306d7d357f9c41d6289b2cdf818f26","(None, '', u'nilearn/plotting/slicers.py')"
"pull_request_commit_comment","296","nilearn","nilearn","banilo","2014-11-28 20:29:57","How about cmap.N, that is, the number of maximum color entries that the colormap has to offer.
","0095853236306d7d357f9c41d6289b2cdf818f26","(None, '', u'nilearn/plotting/slicers.py')"
"pull_request_commit_comment","296","nilearn","nilearn","banilo","2014-11-28 20:40:45","You are completely right, of course. Removed the one in l.93/94 as masking the data is moved to add_overlay now.
","0095853236306d7d357f9c41d6289b2cdf818f26","(None, '', u'nilearn/plotting/img_plotting.py')"
"pull_request_commit_comment","296","nilearn","nilearn","banilo","2014-11-28 21:09:52","Works like a charm, thanks.
","0095853236306d7d357f9c41d6289b2cdf818f26","(None, '', u'nilearn/plotting/slicers.py')"
"pull_request_commit_comment","296","nilearn","nilearn","GaelVaroquaux","2014-12-06 10:00:39","> a) I would like to promote threshold=0 as a default

No. An converged algorithm (for l1 penalties) typically gives non-zero
coeffs where they are zero in practice. 1e-6 is a good compromise,
because most often values that should not be zeros are above that, and
sparse algorithms converge below that.
","0095853236306d7d357f9c41d6289b2cdf818f26","(None, '', u'nilearn/plotting/slicers.py')"
"pull_request_commit_comment","296","nilearn","nilearn","bthirion","2014-12-10 21:57:17","Sorry if I missed the point, but for me no error should be raised if the threshold is greater than any value of the map: visualizing an empty map is a perfectly valid use case.
Similarly, I don't see immediately why negative thresholds are forbidden (maybe I'm missing some context here).
","0095853236306d7d357f9c41d6289b2cdf818f26","(None, '', u'nilearn/plotting/displays.py')"
"pull_request_commit_comment","296","nilearn","nilearn","lesteve","2014-12-11 10:04:47","> Sorry if I missed the point, but for me no error should be raised if the threshold is greater than any value of the map: visualizing an empty map is a perfectly valid use case.

I kind of agree on this one. I think the grayed cmap logic has to handle this case.

> Similarly, I don't see immediately why negative thresholds are forbidden (maybe I'm missing some context here).

At the moment, the treshold logic is such that values in [-threshold, threshold] are masked so it doesn't make too much sense to have a negative threshold (full disclosure: currently it may well be the case that `threshold=-threshold` works exactly the same as `threshold=threshold` by accident)
","0095853236306d7d357f9c41d6289b2cdf818f26","(None, '', u'nilearn/plotting/displays.py')"
"pull_request_commit_comment","296","nilearn","nilearn","banilo","2014-12-11 10:18:07","a) I will take out the check for too big threshold choices

b) Any other decisions to take at this point?

2014-12-11 11:04 GMT+01:00 Loïc Estève notifications@github.com:

> In nilearn/plotting/displays.py
> https://github.com/nilearn/nilearn/pull/296#discussion-diff-21667142:
> 
> > @@ -401,8 +402,19 @@ def add_overlay(self, img, threshold=1e-6, colorbar=False, **kwargs):
> > 
> > ```
> >      ims = self._map_show(img, type='imshow', **kwargs)
> > ```
> > -        if threshold is not None:
> > -            if threshold < 0:
> > -                raise ValueError(""The set threshold (%.2f) can't be negative""
> > -                                 % threshold)
> > -            if threshold > ims[0].norm.vmax:
> > -                raise ValueError('The set threshold (%.2f) is higher than '
> > -                                 'vmax (%.2f)' % (threshold, ims[0].norm.vmax))
> > -            if threshold > abs(ims[0].norm.vmax):
> > -                raise ValueError('The set threshold (%.2f) is lower than '
> > -                                 'vmin (%.2f)' % (threshold, ims[0].norm.vmin))
> >   +
> 
>  Sorry if I missed the point, but for me no error should be raised if the
> threshold is greater than any value of the map: visualizing an empty map is
> a perfectly valid use case.
> 
> I kind of agree on this one. I think the grayed cmap logic has to handle
> this case.
> 
> Similarly, I don't see immediately why negative thresholds are forbidden
> (maybe I'm missing some context here).
> 
> At the moment, the treshold logic is such that values in [-threshold,
> threshold] are masked so it doesn't make too much sense to have a negative
> threshold (full disclosure: currently it may well be the case that
> threshold=-threshold works exactly the same as threshold=threshold by
> accident)
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/nilearn/nilearn/pull/296/files#r21667142.

## 

Viele Grüße,
Danilo
","0095853236306d7d357f9c41d6289b2cdf818f26","(None, '', u'nilearn/plotting/displays.py')"
"pull_request_commit_comment","296","nilearn","nilearn","lesteve","2014-12-11 10:38:56","Can you use `threshold=threshold` i.e. use a keyword argument here? I reckon this is good practice, see for [example](https://code.google.com/p/soc/wiki/PythonStyleGuide#Function_Arguments)
","0095853236306d7d357f9c41d6289b2cdf818f26","(None, '', u'nilearn/plotting/img_plotting.py')"
"pull_request_commit_comment","296","nilearn","nilearn","lesteve","2014-12-11 10:43:00","I am not a big fan of comments that don't add much like this because they tend to become out of sync with the code. If you think it was not clear enough, why not do something like (I assumed the not so clear part was what color was used for):

``` python
tick_color = 'w' if self._black_bg else 'k'
for tick in self._colorbar_ax.yaxis.get_ticklabels():
    tick.set_color(tick_color)
```
","0095853236306d7d357f9c41d6289b2cdf818f26","(None, '', u'nilearn/plotting/displays.py')"
"pull_request_commit_comment","296","nilearn","nilearn","bthirion","2014-12-11 13:18:08","OK, but what should we do about the following use case (people do on SPM all the time): visualize dissymetric ranges of values: [th, +\infty]. This is because in many (most) neuroimaging studies, people are interested in A>B but do not care about B>A, and so do not want to have their image cluttered with negative peaks if they don't care about it.  I agree that this should not be the default, but I would leave this possibility open (through another kwarg ?).
","0095853236306d7d357f9c41d6289b2cdf818f26","(None, '', u'nilearn/plotting/displays.py')"
"pull_request_commit_comment","296","nilearn","nilearn","GaelVaroquaux","2014-12-11 13:20:09","Loic, Michael, Danilo, how about reusing the logic that Michael is
developping for the range of the colorbar?
","0095853236306d7d357f9c41d6289b2cdf818f26","(None, '', u'nilearn/plotting/displays.py')"
"pull_request_commit_comment","296","nilearn","nilearn","lesteve","2014-12-11 14:03:31","> OK, but what should we do about the following use case (people do on SPM all the time): visualize dissymetric ranges of values: [th, +\infty]. This is because in many (most) neuroimaging studies, people are interested in A>B but do not care about B>A

I would say that we should definitely add this feature but that this should be done outside of this PR.
","0095853236306d7d357f9c41d6289b2cdf818f26","(None, '', u'nilearn/plotting/displays.py')"
"pull_request_commit_comment","296","nilearn","nilearn","banilo","2014-12-11 14:06:27","I am for finishing this PR up first (just commited new changes) and get to
Michaels code dans un deuxième temps.

2014-12-11 15:03 GMT+01:00 Loïc Estève notifications@github.com:

> In nilearn/plotting/displays.py
> https://github.com/nilearn/nilearn/pull/296#discussion-diff-21677276:
> 
> > @@ -401,8 +402,19 @@ def add_overlay(self, img, threshold=1e-6, colorbar=False, **kwargs):
> > 
> > ```
> >      ims = self._map_show(img, type='imshow', **kwargs)
> > ```
> > -        if threshold is not None:
> > -            if threshold < 0:
> > -                raise ValueError(""The set threshold (%.2f) can't be negative""
> > -                                 % threshold)
> > -            if threshold > ims[0].norm.vmax:
> > -                raise ValueError('The set threshold (%.2f) is higher than '
> > -                                 'vmax (%.2f)' % (threshold, ims[0].norm.vmax))
> > -            if threshold > abs(ims[0].norm.vmax):
> > -                raise ValueError('The set threshold (%.2f) is lower than '
> > -                                 'vmin (%.2f)' % (threshold, ims[0].norm.vmin))
> >   +
> 
>  OK, but what should we do about the following use case (people do on SPM
> all the time): visualize dissymetric ranges of values: [th, +\infty]. This
> is because in many (most) neuroimaging studies, people are interested in
> A>B but do not care about B>A
> 
> I would say that we should definitely add this feature but that this
> should be done outside of this PR.
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/nilearn/nilearn/pull/296/files#r21677276.

## 

Viele Grüße,
Danilo
","0095853236306d7d357f9c41d6289b2cdf818f26","(None, '', u'nilearn/plotting/displays.py')"
"pull_request_commit_comment","296","nilearn","nilearn","GaelVaroquaux","2014-12-11 14:44:00","> I am for finishing this PR up first (just commited new changes) and get to
> Michaels code dans un deuxième temps.

+1.
","0095853236306d7d357f9c41d6289b2cdf818f26","(None, '', u'nilearn/plotting/displays.py')"
"pull_request_commit_comment","296","nilearn","nilearn","lesteve","2014-12-12 15:35:12","Move this statement a few lines below. You have separated the comment and the line it was pertaining to i.e.:

``` python
nb_ticks = 5 if im.norm.vmin != im.norm.vmax else 1
```
","0095853236306d7d357f9c41d6289b2cdf818f26","(None, '', u'nilearn/plotting/displays.py')"
"pull_request_commit","296","nilearn","nilearn","banilo","2014-12-12 13:22:27","display: add threshold for colorbar","b63a928c6b5e3c7007c1bc2454fc3576306592b4",""
"pull_request_commit","296","nilearn","nilearn","banilo","2014-12-12 13:26:49","restored comment","1be1f48fa0acc0392fa04d678d6add55b739ab91",""
"pull_request_commit","296","nilearn","nilearn","banilo","2014-12-15 13:09:37","cleanups + readjusted comment position","0095853236306d7d357f9c41d6289b2cdf818f26",""
