"rectype","issueid","project_owner","project_name","actor","time","text","action","title"
"issue_title","657","nilearn","nilearn","dohmatob","2015-07-14 07:56:20","This PR succeeds PR #219 (aka unicorn factory). All discussions should be done here henceforth. #219 is now classified, and should be referred to solely for histological purposes.
","start issue","SpaceNet (this PR succeeds PR #219)"
"issue_closed","657","nilearn","nilearn","AlexandreAbraham","2015-07-28 22:28:37","","closed issue","SpaceNet (this PR succeeds PR #219)"
"pull_request_title","657","nilearn","nilearn","dohmatob","2015-07-14 07:56:20","This PR succeeds PR #219 (aka unicorn factory). All discussions should be done here henceforth. #219 is now classified, and should be referred to solely for histological purposes.
","3efa3c70e5209d97da880b587d1d5174b3fc2567","SpaceNet (this PR succeeds PR #219)"
"pull_request_merged","657","nilearn","nilearn","AlexandreAbraham","2015-07-28 22:28:37","SpaceNet (this PR succeeds PR #219)","f8bcc5e04f3c336fe9cfb5b1060df1c0a50f3532","Pull request merge from dohmatob/nilearn:sparse-models to nilearn/nilearn:master"
"issue_comment","657","nilearn","nilearn","agramfort","2015-07-29 08:00:10","Oh boy what a suspense!

Great job Elvis!
","",""
"issue_comment","657","nilearn","nilearn","GaelVaroquaux","2015-07-18 15:42:37","The datasets tests are failing:
https://travis-ci.org/nilearn/nilearn/jobs/71558315

This is probably because you haven't adapted the imports to import from .utils.

They might be working on your box because you have leftover .pyc files.
","",""
"issue_comment","657","nilearn","nilearn","GaelVaroquaux","2015-07-18 16:10:05","Gr8. Your tests are now passing on travis.
","",""
"issue_comment","657","nilearn","nilearn","GaelVaroquaux","2015-07-18 17:20:45","We are quite often using more than 4Gb of memory in the Jimura-Poldrack example:

https://circleci.com/gh/nilearn/nilearn/140
This is breaking the CircleCI tests

We should investigate if they are ways to avoid that. The Jimura-Poldrack dataset isn't a huge one, so I am a bit surprised.
","",""
"issue_comment","657","nilearn","nilearn","GaelVaroquaux","2015-07-18 17:30:58","> OK, I'll do mem profiling asap.

Thanks Elvis. You're clearly on top of that PR!
","",""
"issue_comment","657","nilearn","nilearn","GaelVaroquaux","2015-07-21 16:03:13","> Looks like the culprit is the plot_oasis_vbm_space_net.py script...

It would be very interesting to know what the exact line of the code
causes the spike. That way we can address it.
","",""
"issue_comment","657","nilearn","nilearn","GaelVaroquaux","2015-07-21 17:41:36","> Lemme re-run on 100-ish subjects and see what happens.

Sounds like the right thing to do.

We can load a test set in a second step.

As a side note, we should investigate if we can improve the memory usage
of the NiftiMasker.
","",""
"issue_comment","657","nilearn","nilearn","GaelVaroquaux","2015-07-21 17:50:21","> > As a side note, we should investigate if we can improve the memory usage
> > of the NiftiMasker.
> 
> Ya, definitely. The average user will have a 4G box (and that's been
> generous). There should be memory-friendly way to load large nifti images
> and mask out 2D matrix from it, under this memory constraint.

Could you create an issue please. Someone else will tackle it.
","",""
"issue_comment","657","nilearn","nilearn","GaelVaroquaux","2015-07-21 17:58:57","I think that you closed the PR by mistake.
","",""
"issue_comment","657","nilearn","nilearn","GaelVaroquaux","2015-07-23 13:57:35","> OK, finally the compromise is: n_subjects=250, and a train_test_split with
> train_size=75%, plus I'm resampling the anat to 4x4x4 (this ia about the size
> of the haxby voxels).

Great. Do put a comment saying that you did this for things to go fast,
but that with more compute power, not downsampling might be interesting.
","",""
"issue_comment","657","nilearn","nilearn","GaelVaroquaux","2015-07-24 11:36:29","> I'm sitting close to the merge button, and there is a voice in my head
> telling me to press it.

I'd like to have a look first :)
","",""
"issue_comment","657","nilearn","nilearn","GaelVaroquaux","2015-07-29 06:15:38","Champagne! :wine_glass:
","",""
"issue_comment","657","nilearn","nilearn","eickenberg","2015-07-14 08:48:20","Wondering whether it may be useful to squash all commits before you start editing in there again. ""Commits"" tab is complaining about this PR being big ;)

Squashing should make it easier to keep this PR rebased while you finalize it.

Unless of course you are considering cherry-picking or removing some commits, but that doesn't seem necessary.
","",""
"issue_comment","657","nilearn","nilearn","dohmatob","2015-07-14 08:50:55","On Tue, Jul 14, 2015 at 10:48 AM, eickenberg notifications@github.com
wrote:

> Wondering whether it may be useful to squash all commits before you start
> editing in there again.
> 
> No, I don't think so.
> 
> ""Commits"" tab is complaining about this PR being big ;)
> 
> Squashing should make it easier to keep this PR rebased while you finalize
> it.
> 
> Unless of course you are considering cherry-picking or removing some
> commits, but that doesn't seem necessary.
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/nilearn/nilearn/pull/657#issuecomment-121169656.

## 

DED
","",""
"issue_comment","657","nilearn","nilearn","eickenberg","2015-07-14 08:56:10","As you wish.

It would have been a good opportunity to get rid of the merges from master that you did along the way, which make rebasing impossible. That was my main concern.
As a matter of fact, looking at the commit history, it may be even easier to kill the history altogether by copying and pasting the relevant files into a new PR.
","",""
"issue_comment","657","nilearn","nilearn","dohmatob","2015-07-14 10:47:46","Good point. This is the workaround I was just about to adopt.  The history is simply too big and too dirty. Squashing, rebasing, etc. here would take ages, and all this just to safe a few pages of more-harmful-than-useful code history. I'm copying the files to a fresh branch forked-off the upstream's master (nilearn/nilearn master), and then PR it. The old branch will still be available for histological purposes (if need be).
","",""
"issue_comment","657","nilearn","nilearn","eickenberg","2015-07-16 09:05:58","I keep getting emails because I am tagged in two commit messages, which keep getting rebased apparently. Even if the commit history is now cleaned of merges from master, what was the reason to introduce it back? Before merge all these commits need to be squashed anyway, right?
","",""
"issue_comment","657","nilearn","nilearn","eickenberg","2015-07-23 13:14:32","For the OCD sufferers among us you could have chosen 240, no? :)

Cool!

On Thu, Jul 23, 2015 at 3:12 PM, DOHMATOB Elvis notifications@github.com
wrote:

> OK, finally the compromise is: n_subjects=250, and a train_test_split with
> train_size=75%, plus I'm resampling the anat to 4x4x4 (this ia about the
> size of the haxby voxels). Things go smooth (maps are not degraded,
> prediction curves are fine too) and circle ci seems happy. When the builds
> finish we should be good for a merge.
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/nilearn/nilearn/pull/657#issuecomment-124092682.
","",""
"issue_comment","657","nilearn","nilearn","eickenberg","2015-07-23 13:20:48","+(10)_2

On Thu, Jul 23, 2015 at 3:19 PM, Alexandre Abraham <notifications@github.com

> wrote:
> 
> For the OCD sufferers among us you could have chosen 240, no? :)
> 
> I have OCD and I'm geek. I would feel better with 256.
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/nilearn/nilearn/pull/657#issuecomment-124095691.
","",""
"issue_comment","657","nilearn","nilearn","chrisfilo","2015-07-18 08:34:36","The examples passed without problems (although the runtime increased from 30 to 90 minutes). It's the unit tests that failed.
","",""
"issue_comment","657","nilearn","nilearn","dohmatob","2015-07-18 17:30:08","OK, I'll do mem profiling asap.

On Sat, Jul 18, 2015 at 7:20 PM, Gael Varoquaux notifications@github.com
wrote:

> We are quite often using more than 4Gb of memory in the Jimura-Poldrack
> example:
> 
> https://circleci.com/gh/nilearn/nilearn/140
> This is breaking the CircleCI tests
> 
> We should investigate if they are ways to avoid that. The Jimura-Poldrack
> dataset isn't a huge one, so I am a bit surprised.
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/nilearn/nilearn/pull/657#issuecomment-122568914.

## 

DED
","",""
"issue_comment","657","nilearn","nilearn","AlexandreAbraham","2015-07-20 08:42:46","I think that this PR has reach a stable state now. Once the memory problem is solved, I suggest that we merge and that we discuss the last points in separate issues. Is that OK for you?
","",""
"issue_comment","657","nilearn","nilearn","dohmatob","2015-07-20 08:58:46","Yeah, definitely. Let's do a coordinate descent: I kill the bug, you merge
the PR; repeat.

On Mon, Jul 20, 2015 at 10:42 AM, Alexandre Abraham <
notifications@github.com> wrote:

> I think that this PR has reach a stable state now. Once the memory problem
> is solved, I suggest that we merge and that we discuss the last points in
> separate issues. Is that OK for you?
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/nilearn/nilearn/pull/657#issuecomment-122814290.

## 

DED
","",""
"issue_comment","657","nilearn","nilearn","bthirion","2015-07-20 22:48:29","On 20/07/2015 10:42, Alexandre Abraham wrote:

> I think that this PR has reach a stable state now. Once the memory 
> problem is solved, I suggest that we merge and that we discuss the 
> last points in separate issues. Is that OK for you?
> 
> —
> Reply to this email directly or view it on GitHub 
> https://github.com/nilearn/nilearn/pull/657#issuecomment-122814290.
> 
> OK.
","",""
"issue_comment","657","nilearn","nilearn","dohmatob","2015-07-21 09:51:32","The doesn't seem to anything special about the mem consumption...

![sl](https://cloud.githubusercontent.com/assets/634068/8797888/cd1170ba-2f9e-11e5-9143-e7935d42e17f.png)
![tvl1](https://cloud.githubusercontent.com/assets/634068/8797890/d3605ba2-2f9e-11e5-9bd5-832b74b4a42f.png)
","",""
"issue_comment","657","nilearn","nilearn","dohmatob","2015-07-21 13:13:52","OK, it seems the problem is accumulation of things in memory as the tests run along.  As the mprof showed, the mixed gambles example spikes at 1.2 G, which is 2.8G short of the memory limit on circle ci containers. Indeed, running it at the top of the chain of examples, it goes through smoothly and fails (same reason as before) on some other example script...

rm -rf _build/html/_images
sphinx-build -b html -d _build/doctrees   . _build/html
Running Sphinx v1.3.1
making output directory...
loading translations [en]... done
loading pickled environment... not yet created
/home/ubuntu/virtualenvs/venv-system/local/lib/python2.7/site-packages/sklearn/cross_validation.py:1601: DeprecationWarning: check_cv will return indices instead of boolean masks from 0.17
  'masks from 0.17', DeprecationWarning)
/home/ubuntu/virtualenvs/venv-system/local/lib/python2.7/site-packages/sklearn/cross_validation.py:69: DeprecationWarning: The indices parameter is deprecated and will be removed (assumed True) in 0.17
  stacklevel=1)
/home/ubuntu/nilearn/nilearn/decoding/space_net.py:808: UserWarning: Brain mask is bigger than volume of standard brain!
  ""Brain mask is bigger than volume of standard brain!"")
..........[Parallel(n_jobs=1)]: Done   1 jobs       | elapsed:  1.6min
...................................................[Parallel(n_jobs=1)]: Done   8 out of   8 | elapsed: 16.3min finished
/home/ubuntu/virtualenvs/venv-system/local/lib/python2.7/site-packages/sklearn/cross_validation.py:1601: DeprecationWarning: check_cv will return indices instead of boolean masks from 0.17
  'masks from 0.17', DeprecationWarning)
/home/ubuntu/virtualenvs/venv-system/local/lib/python2.7/site-packages/sklearn/cross_validation.py:69: DeprecationWarning: The indices parameter is deprecated and will be removed (assumed True) in 0.17
  stacklevel=1)
.........[Parallel(n_jobs=1)]: Done   1 jobs       | elapsed:   22.1s
...............................................................[Parallel(n_jobs=1)]: Done   8 out of   8 | elapsed:  3.0min finished
/home/ubuntu/virtualenvs/venv-system/local/lib/python2.7/site-packages/sklearn/utils/validation.py:449: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)
[Parallel(n_jobs=1)]: Done   1 jobs       | elapsed:    1.1s
plotting plot_python_101.py
- time elapsed : 1.8 sec
  plotting plot_a_mixed_gambles_space_net.py
  Time Elapsed: 983.612 seconds, 16 minutes.
  Time Elapsed: 190.111 seconds, 3 minutes.
- time elapsed : 1.2e+03 sec
  plotting plot_nilearn_101.py
","",""
"issue_comment","657","nilearn","nilearn","dohmatob","2015-07-21 16:01:53","Looks like the culprit is the plot_oasis_vbm_space_net.py script...

rm -rf _build/html/_images
sphinx-build -b html -d _build/doctrees   . _build/html
Running Sphinx v1.3.1
making output directory...
loading translations [en]... done
loading pickled environment... not yet created
/home/ubuntu/virtualenvs/venv-system/local/lib/python2.7/site-packages/sklearn/cross_validation.py:1601: DeprecationWarning: check_cv will return indices instead of boolean masks from 0.17
  'masks from 0.17', DeprecationWarning)
/home/ubuntu/virtualenvs/venv-system/local/lib/python2.7/site-packages/sklearn/cross_validation.py:69: DeprecationWarning: The indices parameter is deprecated and will be removed (assumed True) in 0.17
  stacklevel=1)
/home/ubuntu/nilearn/nilearn/decoding/space_net.py:808: UserWarning: Brain mask is bigger than volume of standard brain!
  ""Brain mask is bigger than volume of standard brain!"")
..........[Parallel(n_jobs=1)]: Done   1 jobs       | elapsed:  1.6min
...........................[Parallel(n_jobs=1)]: Done   8 out of   8 | elapsed: 15.8min finished
/home/ubuntu/virtualenvs/venv-system/local/lib/python2.7/site-packages/sklearn/cross_validation.py:1601: DeprecationWarning: check_cv will return indices instead of boolean masks from 0.17
  'masks from 0.17', DeprecationWarning)
/home/ubuntu/virtualenvs/venv-system/local/lib/python2.7/site-packages/sklearn/cross_validation.py:69: DeprecationWarning: The indices parameter is deprecated and will be removed (assumed True) in 0.17
  stacklevel=1)
.........[Parallel(n_jobs=1)]: Done   1 jobs       | elapsed:   22.3s
...............................................................[Parallel(n_jobs=1)]: Done   8 out of   8 | elapsed:  3.0min finished
Downloaded 697388519 of 697388519 bytes (100.00%,    0.0s remaining)  

Downloaded 4961223 of 4961223 bytes (100.00%,    0.0s remaining)  

Downloaded 1555 of 1555 bytes (100.00%,    0.0s remaining)  

Downloaded 64001 of 64001 bytes (100.00%,    0.0s remaining)  

/home/ubuntu/virtualenvs/venv-system/local/lib/python2.7/site-packages/sklearn/utils/validation.py:449: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)
Downloaded 905208634 of 905208634 bytes (100.00%,    0.0s remaining)  

/home/ubuntu/virtualenvs/venv-system/local/lib/python2.7/site-packages/sklearn/cross_validation.py:1601: DeprecationWarning: check_cv will return indices instead of boolean masks from 0.17
  'masks from 0.17', DeprecationWarning)
/home/ubuntu/virtualenvs/venv-system/local/lib/python2.7/site-packages/sklearn/cross_validation.py:69: DeprecationWarning: The indices parameter is deprecated and will be removed (assumed True) in 0.17

set -o pipefail && cd doc && make html 2>&1 | tee ~/log.txt died unexpectedly
","",""
"issue_comment","657","nilearn","nilearn","dohmatob","2015-07-21 17:39:03","OK, the problem is that the OASIS **dataset is too large**: 403 subjects @ anatomic resolution. More than 00-ish subjects won't even fit into memory (the nifty_masker's fit_transform triggers a **MemoryError**). Comparatively, the plot_oasis_vbm.py script we only used 100 subjects.  Historically, I need many subjects (about 70% of the 403 subjects) in the training in order to fit the age variable. Lemme re-run on 100-ish subjects and see what happens.

As last resort, we'll simply drop this oasis example; it has always been meant for a  **debugging / QA** duty than any **application** worth show-casing (who's interested in prediction age with gray-matter maps ?). 
","",""
"issue_comment","657","nilearn","nilearn","dohmatob","2015-07-21 17:44:35","Ac
","",""
"issue_comment","657","nilearn","nilearn","dohmatob","2015-07-21 17:48:48","On Tue, Jul 21, 2015 at 7:41 PM, Gael Varoquaux notifications@github.com
wrote:

> > Lemme re-run on 100-ish subjects and see what happens.
> 
> Sounds like the right thing to do.
> 
> We can load a test set in a second step.
> 
> Yes this has always been the case. Mem errors occur even without yet
> attempting to load the test.
> 
> As a side note, we should investigate if we can improve the memory usage
> of the NiftiMasker.
> 
> Ya, definitely. The average user will have a 4G box (and that's being
> generous). There should be memory-friendly way to load large nifti images
> and mask out 2D matrix from it, under this memory constraint.
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/nilearn/nilearn/pull/657#issuecomment-123412438.

## 

DED
","",""
"issue_comment","657","nilearn","nilearn","dohmatob","2015-07-21 17:57:37","Done https://github.com/nilearn/nilearn/issues/715.
","",""
"issue_comment","657","nilearn","nilearn","dohmatob","2015-07-21 18:01:06","Ok, I'll only use 1/2 of the OASIS data (test  + train). Because during the predict, the test data (403 - 100-ish subjects) can't fit into memory either...
","",""
"issue_comment","657","nilearn","nilearn","dohmatob","2015-07-21 18:06:33","Oops. Re-opened. Thx!

On Tue, Jul 21, 2015 at 7:58 PM, Gael Varoquaux notifications@github.com
wrote:

> I think that you closed the PR by mistake.
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/nilearn/nilearn/pull/657#issuecomment-123416122.

## 

DED
","",""
"issue_comment","657","nilearn","nilearn","AlexandreAbraham","2015-07-21 22:33:42","> As a side note, we should investigate if we can improve the memory usage of the NiftiMasker.

We can't unless we change what the NiftiMasker does. The NiftiMasker, meant for one subject, implies that the subject data can fit in memory. By feeding multiple 3d files to it, it will concatenate them and mask them.

However, the MultiNiftiMasker is optimised for multi subject and will load them one by one. Therefore you should use it.
","",""
"issue_comment","657","nilearn","nilearn","dohmatob","2015-07-22 06:47:48","On Wed, Jul 22, 2015 at 12:33 AM, Alexandre Abraham <
notifications@github.com> wrote:

> As a side note, we should investigate if we can improve the memory usage
> of the NiftiMasker.
> 
> We can't unless we change what the NiftiMasker does. The NiftiMasker,
> meant for one subject, implies that the subject data can fit in memory. By
> feeding multiple 3d files to it, it will concatenate them and mask them.
> 
> However, the MultiNiftiMasker is optimised for multi subject and will load
> them one by one. Therefore you should use it.
> 
> +1 for pointing to the existence of MultNiftiMasker. However, if some
> memory-friendly tricks have been used in the MultiFluidNiftiMasker, those
> should be available in the all the other maskers too. To me,
> single-subject, multiple subjects, etc., don't really mean different
> things. For example, a bunch of anatomical images can be seen as a single
> 4D image from one subject and a single 4D bold image can be seen a s series
> of 3D images, 1 image per subject, etc. We need to harmonoize the masking
> algorithms: the low-level masking logic should not change so drastically
> with the name of the API. In the mean time, I'd explicitly state in the
> docstring that the NifiMasker is meant for ""single subject"", and then do a
> seealso to the MultiMasker class, in case of ""multiple subjects"" :)
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/nilearn/nilearn/pull/657#issuecomment-123499177.

## 

DED
","",""
"pull_request_commit_comment","657","nilearn","nilearn","bthirion","2015-07-15 11:04:49","is used as initialization
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(None, '', u'doc/decoding/space_net.rst')"
"pull_request_commit_comment","657","nilearn","nilearn","bthirion","2015-07-15 11:45:41","make_Xy
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(None, '', u'nilearn/datasets.py')"
"pull_request_commit_comment","657","nilearn","nilearn","bthirion","2015-07-15 11:56:27","48 is the number of trials per subject, right ? Please be explicit.
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(None, '', u'nilearn/datasets.py')"
"pull_request_commit_comment","657","nilearn","nilearn","bthirion","2015-07-15 12:08:46","w.shape = (w_size, ) actually
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(None, '', u'nilearn/decoding/fista.py')"
"pull_request_commit_comment","657","nilearn","nilearn","bthirion","2015-07-15 12:15:17","Please document the `init`
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(114, '', u'nilearn/decoding/fista.py')"
"pull_request_commit_comment","657","nilearn","nilearn","bthirion","2015-07-15 12:27:13","defaults to False
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(None, '', u'nilearn/decoding/objective_functions.py')"
"pull_request_commit_comment","657","nilearn","nilearn","bthirion","2015-07-15 15:46:35","with a leading underscore (these are rather low-level functions, of which users should not be aware)
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(None, '', u'nilearn/decoding/objective_functions.py')"
"pull_request_commit_comment","657","nilearn","nilearn","bthirion","2015-07-15 15:47:02","Same here.
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(None, '', u'nilearn/decoding/objective_functions.py')"
"pull_request_commit_comment","657","nilearn","nilearn","bthirion","2015-07-15 15:48:58","Again
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(None, '', u'nilearn/decoding/objective_functions.py')"
"pull_request_commit_comment","657","nilearn","nilearn","bthirion","2015-07-15 15:49:46","You mean: 3-dimensional ?
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(None, '', u'nilearn/decoding/objective_functions.py')"
"pull_request_commit_comment","657","nilearn","nilearn","bthirion","2015-07-15 15:51:47","optinal -> optional
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(None, '', u'nilearn/decoding/objective_functions.py')"
"pull_request_commit_comment","657","nilearn","nilearn","bthirion","2015-07-15 15:54:42","This should be tested in the function
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(None, '', u'nilearn/decoding/objective_functions.py')"
"pull_request_commit_comment","657","nilearn","nilearn","bthirion","2015-07-15 15:59:12","(this and following functions): prepend underscore ?
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(None, '', u'nilearn/decoding/objective_functions.py')"
"pull_request_commit_comment","657","nilearn","nilearn","bthirion","2015-07-15 15:59:37","?
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(None, '', u'nilearn/decoding/objective_functions.py')"
"pull_request_commit_comment","657","nilearn","nilearn","bthirion","2015-07-15 16:52:51","This is used to compute the dual  gap, isn't it ? Please make it explicit. 
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(None, '', u'nilearn/decoding/proximal_operators.py')"
"pull_request_commit_comment","657","nilearn","nilearn","bthirion","2015-07-15 16:54:46","A line explaining the heuristic used to get the end variable OK seems useful.
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(None, '', u'nilearn/decoding/proximal_operators.py')"
"pull_request_commit_comment","657","nilearn","nilearn","bthirion","2015-07-15 18:13:56","max_iter, init, verbose not in docstrings.
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(None, '', u'nilearn/decoding/proximal_operators.py')"
"pull_request_commit_comment","657","nilearn","nilearn","bthirion","2015-07-15 18:15:21","check_gap_frequency not in docstrings
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(105, '', u'nilearn/decoding/proximal_operators.py')"
"pull_request_commit_comment","657","nilearn","nilearn","bthirion","2015-07-15 18:24:34","`logistic` parameter ?
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(167, '', u'nilearn/decoding/space_net.py')"
"pull_request_commit_comment","657","nilearn","nilearn","bthirion","2015-07-15 18:27:53","Sorry, I don't see when this happens as self.counter is initialized to 0 and incremented before the test.
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(None, '', u'nilearn/decoding/space_net.py')"
"pull_request_commit_comment","657","nilearn","nilearn","bthirion","2015-07-15 19:38:59","Spearman  / Pearson (capitalize the first letter)
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(None, '', u'nilearn/decoding/space_net.py')"
"pull_request_commit_comment","657","nilearn","nilearn","bthirion","2015-07-15 19:44:53","Just curious: how could a correlation score be infinite ?
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(None, '', u'nilearn/decoding/space_net.py')"
"pull_request_commit_comment","657","nilearn","nilearn","GaelVaroquaux","2015-07-15 19:48:04","Division by zero 

Sent from my phone. Please forgive brevity and mis spelling

On Jul 15, 2015, 21:44, at 21:44, bthirion notifications@github.com wrote:

> > -            for alpha in alphas_:
> > -                # setup callback mechanism for early stopping
> > -                early_stopper = EarlyStoppingCallback(
> > -                    X_test, y_test, is_classif=is_classif,
> >   debias=debias,
> > -                    verbose=verbose)
> > -                w, _, init = solver(
> > -                    X_train, y_train, alpha, l1_ratio, mask=mask,
> >   init=init,
> > -                    callback=early_stopper, verbose=max(verbose - 1,
> >   0.),
> > -                    **solver_params)
> >   +
> > -                # We use 2 scores for model selection: the second
> >   one is to
> > -                # disambiguate between regions of equivalent
> >   spearman
> > -                # correlations
> > -                score, secondary_score = early_stopper.test_score(w)
> > -                this_test_scores.append(score)
> > -                if (np.isfinite(score) and
> 
> Just curious: how could a correlation score be infinite ?
> 
> ---
> 
> Reply to this email directly or view it on GitHub:
> https://github.com/nilearn/nilearn/pull/657/files#r34720497
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(None, '', u'nilearn/decoding/space_net.py')"
"pull_request_commit_comment","657","nilearn","nilearn","bthirion","2015-07-15 19:52:19","> Division by zero
> 
> Sure, all right.
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(None, '', u'nilearn/decoding/space_net.py')"
"pull_request_commit_comment","657","nilearn","nilearn","bthirion","2015-07-15 19:56:11","`loss` to be documented
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(None, '', u'nilearn/decoding/space_net.py')"
"pull_request_commit_comment","657","nilearn","nilearn","bthirion","2015-07-15 19:57:15","no alpha_min !
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(None, '', u'nilearn/decoding/space_net.py')"
"pull_request_commit_comment","657","nilearn","nilearn","bthirion","2015-07-15 20:00:39","`memory` is undocumented
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(539, '', u'nilearn/decoding/space_net.py')"
"pull_request_commit_comment","657","nilearn","nilearn","bthirion","2015-07-15 20:01:08","defaults to True
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(None, '', u'nilearn/decoding/space_net.py')"
"pull_request_commit_comment","657","nilearn","nilearn","bthirion","2015-07-15 20:27:27","`copy_data` is not documented
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(572, '', u'nilearn/decoding/space_net.py')"
"pull_request_commit_comment","657","nilearn","nilearn","bthirion","2015-07-15 20:27:32","Note sure that 'cv generator' is clear enough: maybe cross validation
The docstring could refer explicitly to the sklearn.cross_validation module
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(None, '', u'nilearn/decoding/space_net.py')"
"pull_request_commit_comment","657","nilearn","nilearn","bthirion","2015-07-15 20:30:57","default: True
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(None, '', u'nilearn/decoding/space_net.py')"
"pull_request_commit_comment","657","nilearn","nilearn","bthirion","2015-07-15 20:32:02","Samre remarks as above on copy_data, cv etc.
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(1205, '', u'nilearn/decoding/space_net.py')"
"pull_request_commit_comment","657","nilearn","nilearn","GaelVaroquaux","2015-07-16 07:41:29","Your lines are too long. 79 chars
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(None, '', u'doc/decoding/decoding_tutorial.rst')"
"pull_request_commit_comment","657","nilearn","nilearn","GaelVaroquaux","2015-07-16 07:42:03","I would not mention TV and Lasso. They are of no interest to end users.
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(None, '', u'doc/decoding/decoding_tutorial.rst')"
"pull_request_commit_comment","657","nilearn","nilearn","GaelVaroquaux","2015-07-16 07:42:55","Same remark.
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(None, '', u'doc/decoding/estimator_choice.rst')"
"pull_request_commit_comment","657","nilearn","nilearn","GaelVaroquaux","2015-07-16 07:56:20","Is this ""XXX"" still relevant?
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(None, '', u'nilearn/_utils/fixes/__init__.py')"
"pull_request_commit_comment","657","nilearn","nilearn","GaelVaroquaux","2015-07-16 08:46:49","Once we drop support for 0.12 sklearn (which is happening soon), you can remove these backports.
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(None, '', u'nilearn/_utils/fixes/__init__.py')"
"pull_request_commit_comment","657","nilearn","nilearn","GaelVaroquaux","2015-07-16 08:52:44","You should also check if you now can use the LabelBinarizer directly from scikit-learn.
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(None, '', u'nilearn/_utils/fixes/__init__.py')"
"pull_request_commit_comment","657","nilearn","nilearn","GaelVaroquaux","2015-07-16 08:55:26","I think that with scikit-learn 0.13 you don't need this (I checked, and scikit-learn 0.13 actually has a neg label in the LabelBinariser).
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(None, '', u'nilearn/_utils/fixes/sklearn_basic_backports.py')"
"pull_request_commit_comment","657","nilearn","nilearn","bthirion","2015-07-16 09:47:04","Please clarify: If I understand correctly, this is the squared l2 norm of the gradient.
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(147, '', u'nilearn/decoding/space_net_solvers.py')"
"pull_request_commit_comment","657","nilearn","nilearn","bthirion","2015-07-16 09:48:35","gradient of squared_loss_and_spatial_grad
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(81, '', u'nilearn/decoding/space_net_solvers.py')"
"pull_request_commit_comment","657","nilearn","nilearn","bthirion","2015-07-16 09:55:18","make clear that this is a dot product: dot([X ; grad_weight \* grad], w)
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(None, '', u'nilearn/decoding/space_net_solvers.py')"
"pull_request_commit_comment","657","nilearn","nilearn","bthirion","2015-07-16 09:56:08","This is a vector. Please give the semantics.
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(147, '', u'nilearn/decoding/space_net_solvers.py')"
"pull_request_commit_comment","657","nilearn","nilearn","bthirion","2015-07-16 09:59:05","This function (and others) are used only in this module and are fairly low-level. I would prepend an underscore to the name.
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(None, '', u'nilearn/decoding/space_net_solvers.py')"
"pull_request_commit_comment","657","nilearn","nilearn","banilo","2015-07-16 10:00:43","you also seem to divide by the variance -> 0-mean-centering + unit-variance scaling
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(None, '', u'nilearn/_utils/fixes/sklearn_basic_backports.py')"
"pull_request_commit_comment","657","nilearn","nilearn","bthirion","2015-07-16 10:07:01","Please write a docstring or prepend an underscore to function name.
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(None, '', u'nilearn/decoding/space_net_solvers.py')"
"pull_request_commit_comment","657","nilearn","nilearn","bthirion","2015-07-16 10:07:32","Minor: Really need 100 iterations by default ?
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(None, '', u'nilearn/decoding/space_net_solvers.py')"
"pull_request_commit_comment","657","nilearn","nilearn","GaelVaroquaux","2015-07-16 10:07:56","> This function (and others) are used only in this module and are fairly
> low-level. I would prepend an underscore to the name.

Maybe the whole module should have an underscore.
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(None, '', u'nilearn/decoding/space_net_solvers.py')"
"pull_request_commit_comment","657","nilearn","nilearn","bthirion","2015-07-16 10:09:11","same comment.
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(None, '', u'nilearn/decoding/space_net_solvers.py')"
"pull_request_commit_comment","657","nilearn","nilearn","bthirion","2015-07-16 10:12:07","Please describe the parameters for the sake of consistency
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(245, '', u'nilearn/decoding/space_net_solvers.py')"
"pull_request_commit_comment","657","nilearn","nilearn","bthirion","2015-07-16 10:14:34","something
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(None, '', u'nilearn/decoding/space_net_solvers.py')"
"pull_request_commit_comment","657","nilearn","nilearn","bthirion","2015-07-16 10:15:44","smooth...
... and gradient thereof
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(None, '', u'nilearn/decoding/space_net_solvers.py')"
"pull_request_commit_comment","657","nilearn","nilearn","bthirion","2015-07-16 10:21:26","to solve
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(None, '', u'nilearn/decoding/space_net_solvers.py')"
"pull_request_commit_comment","657","nilearn","nilearn","bthirion","2015-07-16 10:22:01","w.size or n_features
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(None, '', u'nilearn/decoding/space_net_solvers.py')"
"pull_request_commit_comment","657","nilearn","nilearn","bthirion","2015-07-16 10:25:10","Returns...
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(368, '', u'nilearn/decoding/space_net_solvers.py')"
"pull_request_commit_comment","657","nilearn","nilearn","bthirion","2015-07-16 10:26:11","Please preprend an underscore or add docstrings
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(380, '', u'nilearn/decoding/space_net_solvers.py')"
"pull_request_commit_comment","657","nilearn","nilearn","bthirion","2015-07-16 10:27:53","defaults to 100
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(None, '', u'nilearn/decoding/space_net_solvers.py')"
"pull_request_commit_comment","657","nilearn","nilearn","bthirion","2015-07-16 10:28:03","default 5000
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(None, '', u'nilearn/decoding/space_net_solvers.py')"
"pull_request_commit_comment","657","nilearn","nilearn","bthirion","2015-07-16 10:29:12","optional (default None)
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(None, '', u'nilearn/decoding/space_net_solvers.py')"
"pull_request_commit_comment","657","nilearn","nilearn","bthirion","2015-07-16 10:34:06","Could you simply clarify the difference wrt the previous function
Actually, the functions could be one, with a smooth_X argument added (would be 0 by default) ?
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(None, '', u'nilearn/decoding/tests/simulate_smooth_lasso_data.py')"
"pull_request_commit_comment","657","nilearn","nilearn","dohmatob","2015-07-16 12:05:08","Agreed. This is a no(o)p. Thanks!
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(None, '', u'nilearn/decoding/space_net.py')"
"pull_request_commit_comment","657","nilearn","nilearn","AlexandreAbraham","2015-07-16 12:37:58","We already have a cropping function.
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(59, '', u'nilearn/decoding/space_net.py')"
"pull_request_commit_comment","657","nilearn","nilearn","dohmatob","2015-07-16 12:50:21","I don't understand. cv is indeed documented.
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(1205, '', u'nilearn/decoding/space_net.py')"
"pull_request_commit_comment","657","nilearn","nilearn","dohmatob","2015-07-16 13:10:46","The ""semantics"" ? Please could you be more explicit.
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(147, '', u'nilearn/decoding/space_net_solvers.py')"
"pull_request_commit_comment","657","nilearn","nilearn","dohmatob","2015-07-16 13:27:22","This is now protected (leading underscore). Thus comment no longer applies.
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(245, '', u'nilearn/decoding/space_net_solvers.py')"
"pull_request_commit_comment","657","nilearn","nilearn","dohmatob","2015-07-16 13:37:28","I'd rather skip this. This sounds like WLTH (would-like-to-have) :)
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(None, '', u'nilearn/decoding/tests/simulate_smooth_lasso_data.py')"
"pull_request_commit_comment","657","nilearn","nilearn","bthirion","2015-07-16 13:44:24","It is, thx. my comment was: 'int, a cv generator instance, or None (default 10)' could be replaced by
'int, a sklearn.cross_validation.CrossValidation generator instance, or None (default 10)'
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(1205, '', u'nilearn/decoding/space_net.py')"
"pull_request_commit_comment","657","nilearn","nilearn","bthirion","2015-07-16 13:47:17","Sorry for being unclear: what is the meaning of this output vector ?
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(147, '', u'nilearn/decoding/space_net_solvers.py')"
"pull_request_commit_comment","657","nilearn","nilearn","dohmatob","2015-07-16 17:09:06","Ya just seen it. Quite cool. However, it'd be an overkill for what I'm trying to do here (for example, i don't have / need an affine, etc.).
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(59, '', u'nilearn/decoding/space_net.py')"
"pull_request_commit_comment","657","nilearn","nilearn","GaelVaroquaux","2015-07-17 07:30:51","Titles in restructured text are not indented.
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(None, '', u'doc/decoding/estimator_choice.rst')"
"pull_request_commit_comment","657","nilearn","nilearn","eickenberg","2015-07-17 07:36:00","what does this file have to do with the present PR?
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(None, '', u'examples/plot_haxby_simple.py')"
"pull_request_commit_comment","657","nilearn","nilearn","GaelVaroquaux","2015-07-17 07:36:07","It seems to me that this is commented out. If so, it should be removed.
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(None, '', u'doc/decoding/space_net.rst')"
"pull_request_commit_comment","657","nilearn","nilearn","eickenberg","2015-07-17 07:37:12","Is this a contribution of the SpaceNet PR? It shouldn't be.
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(None, '', u'nilearn/datasets.py')"
"pull_request_commit_comment","657","nilearn","nilearn","eickenberg","2015-07-17 07:39:46","Had we agreed on the term `GraphNet` ? I can't remember.
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(None, '', u'nilearn/decoding/space_net.py')"
"pull_request_commit_comment","657","nilearn","nilearn","GaelVaroquaux","2015-07-17 07:41:48","> Had we agreed on the term GraphNet ? I can't remember.

Indeed, we should be using GraphNet instead of S-Lasso everywhere.
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(None, '', u'nilearn/decoding/space_net.py')"
"pull_request_commit_comment","657","nilearn","nilearn","eickenberg","2015-07-17 07:45:52","comment about intercept and preferably make this more explicit for readability by future contributors.
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(None, '', u'nilearn/decoding/space_net_solvers.py')"
"pull_request_commit_comment","657","nilearn","nilearn","GaelVaroquaux","2015-07-17 07:56:53","We should rename Smooth-Lasso everywhere to GraphNet. I am sorry, it's a lot of work, but we need to do that to make sure that we really earn the good will of the community.
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(None, '', u'examples/decoding/plot_haxby_space_net.py')"
"pull_request_commit_comment","657","nilearn","nilearn","GaelVaroquaux","2015-07-17 07:58:39","We can remove this variable, and simply use the default in fetch_oasis_vbm
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(None, '', u'examples/decoding/plot_oasis_vbm_space_net.py')"
"pull_request_commit_comment","657","nilearn","nilearn","GaelVaroquaux","2015-07-17 08:00:36","I think that it would be good to use better names for 'X': some thing like 'gm_img' (applies to all related variables: X_train...).

Same thing for y: 'age' would be good.
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(None, '', u'examples/decoding/plot_oasis_vbm_space_net.py')"
"pull_request_commit_comment","657","nilearn","nilearn","GaelVaroquaux","2015-07-17 08:11:06","Here also, let's try to have more explicit names
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(None, '', u'examples/decoding/plot_poldrack_space_net.py')"
"pull_request_commit_comment","657","nilearn","nilearn","GaelVaroquaux","2015-07-17 08:11:44","Here we don't need this intermediate variable, so let's not use it, and pass directly to SpaceNet
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(None, '', u'examples/decoding/plot_poldrack_space_net.py')"
"pull_request_commit_comment","657","nilearn","nilearn","GaelVaroquaux","2015-07-17 08:12:19","Same thing here: let's try to not define a 'penalty' variable.
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(None, '', u'examples/decoding/plot_poldrack_space_net.py')"
"pull_request_commit_comment","657","nilearn","nilearn","dohmatob","2015-07-17 08:18:02","This could've gone into a seperate PR, but spacenet is the only thing using this fetcher, so yes.
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(None, '', u'nilearn/datasets.py')"
"pull_request_commit_comment","657","nilearn","nilearn","GaelVaroquaux","2015-07-17 16:53:57","It really worries me that we have to do all the above in the example. Ideally, SpaceNet should be able to do part of this (via the embedded niftimasker) and another part of the work should be done in the way we store / distribute the data.
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(None, '', u'examples/decoding/plot_mixed_gambles_space_net.py')"
"pull_request_commit_comment","657","nilearn","nilearn","GaelVaroquaux","2015-07-17 16:57:47","The make_Xy should probably come back in this function, to make the examples easier. I would suggest naming it 'return_raw_data' and putting it to False by default.
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(None, '', u'nilearn/datasets/func.py')"
"pull_request_commit_comment","657","nilearn","nilearn","GaelVaroquaux","2015-07-17 16:58:14","It seems that this docstring is no longer in sync with the codebase.
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(None, '', u'nilearn/datasets/func.py')"
"pull_request_commit_comment","657","nilearn","nilearn","GaelVaroquaux","2015-07-17 17:37:01","I agree. Let's use your code.
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(59, '', u'nilearn/decoding/space_net.py')"
"pull_request_commit_comment","657","nilearn","nilearn","GaelVaroquaux","2015-07-17 17:57:24","You understood the semantics of my suggestion the opposite way. For me, return_raw_data is not what you are doing here, but the opposite (it's just a change from True to False).
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(None, '', u'examples/decoding/plot_mixed_gambles_space_net.py')"
"pull_request_commit_comment","657","nilearn","nilearn","eickenberg","2015-07-18 11:37:05","optional
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(None, '', u'nilearn/decoding/space_net.py')"
"pull_request_commit_comment","657","nilearn","nilearn","eickenberg","2015-07-18 11:37:53","optional
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(None, '', u'nilearn/decoding/space_net.py')"
"pull_request_commit_comment","657","nilearn","nilearn","eickenberg","2015-07-18 11:38:22","optional
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(None, '', u'nilearn/decoding/space_net.py')"
"pull_request_commit_comment","657","nilearn","nilearn","eickenberg","2015-07-18 11:40:29","Lipschitz
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(None, '', u'nilearn/decoding/space_net_solvers.py')"
"pull_request_commit_comment","657","nilearn","nilearn","eickenberg","2015-07-18 11:41:06","either remove or make it specific
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(None, '', u'nilearn/decoding/tests/simulate_graph_net_data.py')"
"pull_request_commit_comment","657","nilearn","nilearn","eickenberg","2015-07-18 11:42:20","Typically one uses `sklearn.utils.check_random_state`

Same for 2 other instances below.
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(None, '', u'nilearn/decoding/tests/test_objective_functions.py')"
"pull_request_commit_comment","657","nilearn","nilearn","eickenberg","2015-07-18 11:46:40","After the 'privatization' of a certain number of functions, the corresponding test names are lacking an underscore. This is not the only place.
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(181, '', u'nilearn/decoding/tests/test_smooth_lasso.py')"
"pull_request_commit_comment","657","nilearn","nilearn","eickenberg","2015-07-18 11:48:57","For future: Still necessary when stopping support of sklearn 0.12?
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(66, '', u'nilearn/decoding/tests/test_space_net.py')"
"pull_request_commit_comment","657","nilearn","nilearn","eickenberg","2015-07-18 11:51:22","Skipped for time or result reasons? Maybe comment
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(None, '', u'nilearn/decoding/tests/test_space_net.py')"
"pull_request_commit_comment","657","nilearn","nilearn","eickenberg","2015-07-18 11:52:40","Surprised to find this full file here
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(None, '', u'nilearn/tests/test_datasets.py')"
"pull_request_commit_comment","657","nilearn","nilearn","dohmatob","2015-07-18 12:04:28","This is no big deal.
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(None, '', u'nilearn/decoding/tests/test_smooth_lasso.py')"
"pull_request_commit_comment","657","nilearn","nilearn","dohmatob","2015-07-18 12:07:01","This is a zombie file. Thx for spotting.
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(None, '', u'nilearn/tests/test_datasets.py')"
"pull_request_commit_comment","657","nilearn","nilearn","dohmatob","2015-07-18 12:29:49","Indeed. Thx for catching.
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(None, '', u'nilearn/decoding/tests/test_objective_functions.py')"
"pull_request_commit_comment","657","nilearn","nilearn","dohmatob","2015-07-18 12:32:00","To be checked with travis.
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(66, '', u'nilearn/decoding/tests/test_space_net.py')"
"pull_request_commit_comment","657","nilearn","nilearn","dohmatob","2015-07-18 12:37:40","I'll rmv.
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(None, '', u'nilearn/decoding/tests/test_space_net.py')"
"pull_request_commit_comment","657","nilearn","nilearn","GaelVaroquaux","2015-07-18 14:53:49","If it doesn't pass, we should remove it.

I agree that it is not a very big deal that this guy doesn't pass.
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(None, '', u'nilearn/decoding/tests/test_smooth_lasso.py')"
"pull_request_commit_comment","657","nilearn","nilearn","dohmatob","2015-07-18 15:34:08","OK, rmed.

On Sat, Jul 18, 2015 at 4:53 PM, Gael Varoquaux notifications@github.com
wrote:

> In nilearn/decoding/tests/test_smooth_lasso.py
> https://github.com/nilearn/nilearn/pull/657#discussion_r34948354:
> 
> > -        x_1 = rng.rand((w.shape[0] + 1)) \* rng.randint(1000)
> > -        x_2 = rng.rand((w.shape[0] + 1)) \* rng.randint(1000)
> > -        gradient_difference = extmath.norm(
> > -            _logistic_data_loss_and_spatial_grad_derivative(
> > -                X, y, x_1, mask, grad_weight)
> > -            - _logistic_data_loss_and_spatial_grad_derivative(
> > -                X, y, x_2, mask, grad_weight))
> > -        point_difference = extmath.norm(x_1 - x_2)
> > -        assert_true(
> > -            gradient_difference <= lipschitz_constant \* point_difference)
> >   +
> >   +
> >   +@nottest
> >   +def test_fista_convergence():
> > -    """"""Tests fista 1/k**2 convergence, theorem 4.4, ""A Fast Iterative
> > -    Shrinkage-Thresholding Algorithm for Linear Inverse Problems"",
> 
> If it doesn't pass, we should remove it.
> 
> I agree that it is not a very big deal that this guy doesn't pass.
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/nilearn/nilearn/pull/657/files#r34948354.

## 

DED
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(None, '', u'nilearn/decoding/tests/test_smooth_lasso.py')"
"pull_request_commit_comment","657","nilearn","nilearn","GaelVaroquaux","2015-07-18 15:49:27","I don't understand why you need to use 'mean_img' here?
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(None, '', u'examples/decoding/plot_mixed_gambles_space_net.py')"
"pull_request_commit_comment","657","nilearn","nilearn","dohmatob","2015-07-18 15:52:12","Thx for spotting. I've rmed the zombie file (I'd migrated the testcases to
test_func.py).

On Sat, Jul 18, 2015 at 4:53 PM, Gael Varoquaux notifications@github.com
wrote:

> In nilearn/decoding/tests/test_smooth_lasso.py
> https://github.com/nilearn/nilearn/pull/657#discussion_r34948354:
> 
> > -        x_1 = rng.rand((w.shape[0] + 1)) \* rng.randint(1000)
> > -        x_2 = rng.rand((w.shape[0] + 1)) \* rng.randint(1000)
> > -        gradient_difference = extmath.norm(
> > -            _logistic_data_loss_and_spatial_grad_derivative(
> > -                X, y, x_1, mask, grad_weight)
> > -            - _logistic_data_loss_and_spatial_grad_derivative(
> > -                X, y, x_2, mask, grad_weight))
> > -        point_difference = extmath.norm(x_1 - x_2)
> > -        assert_true(
> > -            gradient_difference <= lipschitz_constant \* point_difference)
> >   +
> >   +
> >   +@nottest
> >   +def test_fista_convergence():
> > -    """"""Tests fista 1/k**2 convergence, theorem 4.4, ""A Fast Iterative
> > -    Shrinkage-Thresholding Algorithm for Linear Inverse Problems"",
> 
> If it doesn't pass, we should remove it.
> 
> I agree that it is not a very big deal that this guy doesn't pass.
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/nilearn/nilearn/pull/657/files#r34948354.

## 

DED
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(None, '', u'nilearn/decoding/tests/test_smooth_lasso.py')"
"pull_request_commit_comment","657","nilearn","nilearn","dohmatob","2015-07-18 15:58:48","OK, this doesn't look right. It's probably for historical reasons. Lemme rm
the mean_img stuff and rerun.

On Sat, Jul 18, 2015 at 5:49 PM, Gael Varoquaux notifications@github.com
wrote:

> In examples/decoding/plot_mixed_gambles_space_net.py
> https://github.com/nilearn/nilearn/pull/657#discussion_r34948870:
> 
> > +data = fetch_mixed_gambles(n_subjects=16, return_raw_data=False)
> > +zmaps, object_category, mask_img = data.zmaps, data.gain, data.mask_img
> > +
> > +
> > +### Fit TV-L1 #################################################################
> > +from nilearn.decoding import SpaceNetRegressor
> > +decoder = SpaceNetRegressor(mask=mask_img, penalty=""tv-l1"",
> > -                            eps=1e-1,  # prefer large alphas
> > -                            memory=""cache"", memory_level=3)
> >   +decoder.fit(zmaps, object_category)  # fit
> >   +
> >   +### Visualize TV-L1 weights
> >   +import matplotlib.pyplot as plt
> >   +from nilearn.plotting import plot_stat_map
> >   +from nilearn.image import mean_img
> >   +plot_stat_map(mean_img(decoder.coef_img_), title=""tv-l1"", display_mode=""yz"",
> 
> I don't understand why you need to use 'mean_img' here?
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/nilearn/nilearn/pull/657/files#r34948870.

## 

DED
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(None, '', u'examples/decoding/plot_mixed_gambles_space_net.py')"
"pull_request_commit_comment","657","nilearn","nilearn","GaelVaroquaux","2015-07-18 16:11:25","Should this commented code be deleted?
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(None, '', u'nilearn/decoding/tests/test_space_net.py')"
"pull_request_commit_comment","657","nilearn","nilearn","eickenberg","2015-07-18 16:14:26","Thanks. My original comment on this seems to be gone.
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(None, '', u'nilearn/decoding/tests/test_space_net.py')"
"pull_request_commit_comment","657","nilearn","nilearn","dohmatob","2015-07-18 16:30:44","Rmed the commented code. Rmed mean_img stuff too.

On Sat, Jul 18, 2015 at 6:11 PM, Gael Varoquaux notifications@github.com
wrote:

> In nilearn/decoding/tests/test_space_net.py
> https://github.com/nilearn/nilearn/pull/657#discussion_r34949090:
> 
> > +# def test_alpha_attrs():
> > +#     iris = load_iris()
> > +#     X, y = iris.data, iris.target
> > +#     alpha = 1.
> > +#     X, mask = to_niimgs(X, (2, 2, 2))
> > +#     for penalty, is_classif, verbose in itertools.product(
> > +#             ['graph-net', 'tv-l1'], [True, False], [True, False]):
> > +#         cv_class = eval('SpaceNet%s' % (
> > +#             ['Regressor', 'Classifier'][is_classif]))
> > +#         cv = cv_class(
> > +#             mask=mask, penalty=penalty, alphas=alpha, verbose=verbose,
> > +#         ).fit(X, y)
> > +#         if is_classif:
> > +#             np.testing.assert_array_equal([alpha] \* 3, cv.alphas_)
> > +#         else:
> > +#             np.testing.assert_array_equal([alpha], cv.alphas_)
> 
> Should this commented code be deleted?
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/nilearn/nilearn/pull/657/files#r34949090.

## 

DED
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(None, '', u'nilearn/decoding/tests/test_space_net.py')"
"pull_request_commit_comment","657","nilearn","nilearn","AlexandreAbraham","2015-07-20 01:16:49","reducing
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(53, '', u'doc/decoding/space_net.rst')"
"pull_request_commit_comment","657","nilearn","nilearn","AlexandreAbraham","2015-07-20 01:19:14","Unless you want to re-run masking on the same data while changing a parameter like low pass filtering, `memory_level=2` is useless.
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(None, '', u'examples/decoding/plot_oasis_vbm_space_net.py')"
"pull_request_commit_comment","657","nilearn","nilearn","AlexandreAbraham","2015-07-20 01:22:18","WHat you are doing here is basically providing an ideal masking pipeline for the dataset. I think that this is something that we should do when possible. However, a parameter name like `return_raw_data` is not very informative: I would replace it by `auto_masking` or `auto-preprocessing`.
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(88, '', u'nilearn/datasets/func.py')"
"pull_request_commit_comment","657","nilearn","nilearn","GaelVaroquaux","2015-07-20 05:39:29","> However, a parameter name like return_raw_data is not very informative:
> I would replace it by auto_masking or auto-preprocessing.

OK for something like 'preprocessed_data'.
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(88, '', u'nilearn/datasets/func.py')"
"pull_request_commit_comment","657","nilearn","nilearn","GaelVaroquaux","2015-07-28 15:15:26","I think that we need to switch 'return_raw_data' to False by default, and not even display it in examples (to make examples simpler).
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(None, '', u'nilearn/datasets/func.py')"
"pull_request_commit_comment","657","nilearn","nilearn","GaelVaroquaux","2015-07-28 15:22:48","Please explain here that you are using the regressor object given that the task is to predict a continuous variable, the gain of the gamble.

Also, maybe we should leave out some data and show a prediction power (if it somewhat works).
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(5, '', u'examples/decoding/plot_mixed_gambles_space_net.py')"
"pull_request_commit_comment","657","nilearn","nilearn","dohmatob","2015-07-28 15:41:57","On Tue, Jul 28, 2015 at 5:22 PM, Gael Varoquaux notifications@github.com
wrote:

> In examples/decoding/plot_mixed_gambles_space_net.py
> https://github.com/nilearn/nilearn/pull/657#discussion_r35660156:
> 
> > @@ -0,0 +1,45 @@
> > +""""""
> > +SpaceNet on Jimura et al ""mixed gambles"" dataset.
> > +==================================================
> > +
> > +The segmenting power of SpaceNet is quite visible here.
> 
> Please explain here that you are using the regressor object given that the
> task is to predict a continuous variable, the gain of the gamble.
> 
> Yeah, definitely.
> 
> Also, maybe we should leave out some data and show a prediction power (if
> it somewhat works).
> 
> hmm this looks like a big change. I propose this be done separately,
> otherwise we won't simply ever be able to merge this PR. I propose we don't
> produce a single line of additional code (except fixing bugs, typos, etc.)
> related to SpaceNet until this PR is merged :)
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/nilearn/nilearn/pull/657/files#r35660156.

## 

DED
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(5, '', u'examples/decoding/plot_mixed_gambles_space_net.py')"
"pull_request_commit_comment","657","nilearn","nilearn","dohmatob","2015-07-28 15:57:50","Otherwise, ""it's like simulated annealing, without decreasing the temperature"" -source: probably @GaelVaroquaux 
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(5, '', u'examples/decoding/plot_mixed_gambles_space_net.py')"
"pull_request_commit_comment","657","nilearn","nilearn","AlexandreAbraham","2015-07-28 22:09:01","Sounds like @eickenberg to my ear ;)
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(5, '', u'examples/decoding/plot_mixed_gambles_space_net.py')"
"pull_request_commit_comment","657","nilearn","nilearn","dohmatob","2015-07-29 07:52:22","OK, the feature seems to be asbsent even in 0.13. So I'll simply skip the testcase in the event of ImportError (as it's already done).
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(66, '', u'nilearn/decoding/tests/test_space_net.py')"
"pull_request_commit_comment","657","nilearn","nilearn","lesteve","2015-07-29 08:04:19","Could you add a comment mentioning explicitly that _alpha_grid exists from 0.14 onwards? 

It makes the try except clearer and also makes it easier to remove code like this when we update our scikit-learn requirements.
","3efa3c70e5209d97da880b587d1d5174b3fc2567","(66, '', u'nilearn/decoding/tests/test_space_net.py')"
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-10-14 13:53:23","RENAME: tvl1 -> tv-l1","8ca044a0391178123298ff754c85141219906b0b",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-10-14 14:05:27","ENH: renamed *spacenet.py -> *space_net.py","65f5cafa01aa0eec0b31b0d72f111239270770ff",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-10-14 15:22:37","ENH: _crop_mask(...): new function to crop mask","4c2840cde33858dcfa8fe00ee08841f42e4e260b",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-10-14 15:49:36","ENH: tiny fixes on _crop_mask + test cases for this new function","1533924c8966c3b5e1bf756431c59fddd8513928",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-10-14 15:58:06","TYPO: self.i_alpha_ = self.i_alpha_ -> self.i_alpha_ = self.i_alpha_[0]","c006de5dd13b0caeab10019ed6c686fa2b7c0b02",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-10-15 11:00:21","- ENH: explicit verbose param in path_scores(...) function
- ENH: dilating mask after screening (WIP)","3063b377d3008e61803d90ccc7a085bf6d3455b2",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-10-15 11:57:41","ENH: _fast_smooth_array -> scipy.ndimage.gaussian_filter","f66bc33496c5092165a9b5e8c89c5c9adb53be22",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-10-15 12:03:30","unused import","c9cf969de7b2462f95b1a552e66d02513cced54a",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-10-15 12:07:06","unused import","dea658959f743e9686ee5324624156e67f587877",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-10-15 13:25:38","ENH: in haxby demo: splitting data into train (10 sessions)  and test (4 sessions)","da010e2bcd95b630e93da71db1a9d5012a86b1b3",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-10-15 13:32:17","ENH: changed screening_percentile from 10 to 20 (percentage full-brain)","a259fb0bb4dd296bf6007f08945c972ce7c98101",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-10-18 13:00:52","BF: horrible classification scores due to unstandardized data; standardize = True in NiftiMasker henceforth
CLEANUP: removed junk initialization of gradient_buffer
ENH: cv=8 is new default in SpaceNet
ENH: new default screening_percentile=20","6dcb12925790525ff14ad74114807e90119f2553",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-10-18 13:10:30","CLEANUP: confusing docstring about tol in mfista","eaf476d716b3577c2f603b9d4ca21d6a79350ac6",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-10-18 13:29:40","CLEANUP: some errors in docstrings","5bdfee48a1c53e74cee715316ec75d5473473490",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-10-18 13:42:48","BF: couple of tiny bugs","e6d10abc3efbe65af7f995be526ebf63359eefdd",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-10-18 13:47:14","CLEANUP: minor troubles","4207eb7273ee3a458833766777087967b38c8ed4",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-10-18 13:59:41","more authors","fdc211756e59588839bb5bb8a97a4783718a3354",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-10-18 14:18:52","printint more results in haxby demo","fa8975e70bc5283e30c657df24ad4b65ac3e834e",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-10-18 14:20:12","cosmetic change","275587cae41e0f5e9b27209369ce041cc05d9634",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-10-18 14:48:33","ENH: not screening if mask has as few as 1000 features in its support","0327958cb3a287a98f37deb0131913e5aad20c3c",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-10-18 15:14:40","ENH: better var names + tiight_mask -> mask","afbfaa0d7dcefe633577ef5ec06977b7d65e4c69",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-10-18 15:40:28","CLEANUP: junk _ovr_y function in SpaceNet","9b7d4af57370b7f8dfe8ba07b7a786522a2790c2",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-10-19 14:39:55","CLEANUP: fex typos","1b306aca85bf3be128c10f983d5ce9a0cbd7178f",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-10-19 14:44:33","CLEANUP: usless int casting","f29ef58885eb64a8718fb3e9c95676af2a3d032d",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-10-19 14:49:20","CLEANUP: tiny fixups about objective, cost, energy stuff","dd4fde0688e5bb998a5eb8af5dd4b0bfee6a2e7a",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-10-19 14:58:24","CLEANUP: corrected some docstrings about numpy ndarray shapes","6c54bed7ba713efb4a039887b521e1494c43b81f",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-10-19 15:20:19","* ENH: (gap ** 2).sum() -> np.dot(gap, gap)
* CLEANUP: l1 -> L1","5a5107b259ab90bbd3f44992bac1fc82d05f9937",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-10-19 15:25:01","ENH: input_img_norm = (input_img.ravel() * input_img.ravel()).sum() -> input_img_norm = np.dot(input_img.ravel(), input_img.ravel())","ad5938a0a2e28a598b9ab856d1d1b3ccde6e08cd",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-10-19 15:29:18","ENH: np.sqrt(float) -> math.sqrt(float)","659c5d9ca750baf912f3bd1e1a0e4b32ac972041",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-10-19 15:31:28","cosmetic fixups about docstrings etc.","4a0dec580429ecd888ec2e41c1819ae6c706c1f5",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-10-19 15:33:11","CLEANUP: more corrections on docstrings about numpy ndarray shapes","a61efdf7547ae81b9e430e1f7b92c7b2b2aa903d",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-10-19 15:40:32","ENH: printing elapsed time in minutes too","1d4ba7b2b34d5795e3ba79bf4f9aa756510ff13a",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-10-19 18:52:20","BF: broken commit","0bda40158e9ec04dc5dec6c161a372a5042992fb",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-10-20 09:49:15","addressing @agramfort's comments","deebcaf7c5fff94252acedc552ed5a5193871ad1",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-10-20 10:29:09","cosmetic changes to address comments","ce08d7a7d7d7135d0371daf437483881384a5558",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-10-20 10:30:40","inserted _ in name of test case","5f5c96891012c82d37290e71d96bd6efa01c6b06",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-10-20 10:46:13","explict testcase name","04fd5791afb1f375e686a411638e4bef85d19393",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-10-20 10:56:50","ENH: not using relative imports in tests","50d8458a1afb981667d61e023d48e795eb27aa59",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-10-20 10:58:52","invalide -> invalid","3ca7ba21b39ddbc981282ab3a96f118e0c87aac3",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-10-20 11:03:29","more docstrings fixed","eb6690e89ee023615a449b8c975e2e3470629541",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-10-20 11:11:51","ENH: headline in mfista docstring","2363178987311c2b5942470c8416c3987b11d09d",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-10-20 13:40:29","REFACTOR: factored out code for univariate screening into separate function","a5ebb0998228d9e63dd2eb6569dc7bb62f669c8d",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-10-20 14:08:55","intercepted_prox_l1 -> prox_l1_with_intercept","bb7e03e50e340d71fb41de5c87efe708ee726a04",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-10-20 14:23:20","still fixing minor issues","fbcf0fa189b936707ce72411f4cfc42ac9e679ff",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-10-20 14:28:54","ENH: binary_dilation(binary_erosion) -> binar_fill_holes","9c4bccf8e3fd60d1a50c8156660f96fbed182780",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-10-20 14:37:58","avoiding ravelling twice by using a view instead","c8eb247e487bb1447c4bb2c10b6b6c2198ffc90b",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-10-20 14:43:12","repairing broken testcase","0e9f2ddba6fb9fa10e9ecc4388d6663a4a1c8f8b",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-10-20 15:01:48","removed superfluous ravelling in mfista","05ce211e927988c0de441797974af91cb9209926",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-10-20 15:13:58","DOC: improving SpaceNet doc","598182657ec2d151c3048cfe4ab55ebf2b5ac21d",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-10-20 15:15:36","relaxed very string test","bb7e8cd72239e65150e7a093db117ff9ddd74b5a",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-10-20 15:44:53","typo","9bc18379d36e635c6e60e00df2c5f806b2ae5a68",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-10-21 06:38:21","ENH: improving docstring of SpaceNet","fecfbfdf6a5878702f49e92bc1ac92dced530334",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-10-21 06:46:35","ENH: still enhancing docstrings","6fcc0b92960f428cc13e50d933e6e0f82ef6e578",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-10-21 07:51:26","ENH: volume-corrected screening percentile","0905b986b4e2da08a0b601cbd975444af8906881",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-10-21 08:40:05","cosmetics","8b5630b9bdba1a436ec6530536bd2970e46a20c4",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-10-21 09:12:44","NEW TEST: testing code computing mask volume","545ca52d768061cd79c907c2c44a27a71ee2d36e",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-10-21 11:22:49","doc","19474a778b25b1ef574712cfb3b935f1f729a6c8",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-10-21 11:42:14","typos + more references","d638e8ee406ffb4a46bd04e5aac0f5f5a648eb42",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-10-21 14:36:14","implemented SpaceNetRegressor subclass","41f6915d69f7a5d42d0d31ca17256548bbba5856",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-10-21 14:58:20","typos + more coverage","bb00562c9c6e821e4bae6c91b51f9016950674b6",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-10-21 15:14:28","cosmetics","831040d801d7cbacb429389f05254e6780405874",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-10-21 15:54:29","typo","fc1d50b7d54dd5535d5588e254e1bdb227a507a7",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-10-21 16:16:32","* NEW FEATURE: SpaceNetClassifier (subclass of SpaceNet, specialized in classification problems)
* DOC: documented is_classif parameter of SpaceNet class","1385ab9dcc84930a18b67eb648b2c42e4d5e9799",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-10-21 17:20:06","reporting mask volume in cm^3 + plus other cosmetics","5b99a52c5c52af04f19ba46c4b74aa8ef1d908ba",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-10-22 02:20:58","REFACTOR: refactored classification-specific APIs from SpaceNet base class","0182bbe3258660d015538385a535196a14e8e802",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-10-22 02:30:50","ENH: disabling screening if only 100 features or fewer","a384116d2cb32dd56fce4db0d93cd6f8fdda9feb",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-10-22 02:50:05","small corrections","51984e162684877ff41d58d83677020370de51ad",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-10-22 02:57:13","corrected some errors in param docstrings","17a84668f3b26a8cd6b996319df70373a33682a5",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-10-22 02:58:58","corrected more errors in param docstrings","90313b7be83fa7e0bb433fcf5afa0c80a169021d",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-10-22 09:14:50","NEWFEATURE: SpaceClassification works with mse loss too","5903f8b38791dc179e8ce77c70d13e6bede6440e",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-10-22 11:30:59","fixed typo pointed-out by Loic","1b8587a7ed2de64145b67a5484ea8e0379603d91",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-10-22 11:43:18","clean err_msg logic","6282dc0f44e2c81963450a96294b878080c8d249",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-10-22 11:56:56","ENH: better computation of intercept form mse loss","32b42755fe9d871de728d7942f43f970154351e2",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-10-22 13:28:34","restored default loss in demo","4b30122a12de7d0bbeb92cc564d3342dbe700f04",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-10-22 13:37:16","cleanup demo","def76ac0546167b261bb0ad9e02f6958c50e7800",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-10-22 14:40:26","ENH: not centralizing y for classif problems (recently introduced bug)","9e51f123d7edcc7639e4bf024308b7ef51ca0941",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-10-22 15:17:38","random_state arg in _check_lipschitz_continuous","6c3cc84edfe5e817077ee5f94aab3631d9ee390c",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-10-22 15:23:41","BF: warnings.Warn -> warnings.Warn","ea4045c59dd0035edbc63bb1ee84b700a9d01097",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-10-22 15:34:15","removed abnoxious 'novel' word from mfista docstring","747540f9d2f8925decdb4af0de19d222c02f379a",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-10-24 17:12:48","WIP: Turning off smooth done before screening","6d68dbd4a1cf25c0afd28cb93ab6ad0a5a2d366a",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-10-24 17:15:00","NEW DEMO: PMG","d3071212d5017c95bcadb71b6b471c39bc7354d3",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-10-24 17:28:53","more","ad7f7bfbd3809fe2f5ba2ef5f0a35192c46d7df0",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-10-24 17:35:01","more","f3acb9a4050a8b468d2fc8434cc09777fae459cd",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-10-25 07:21:32","l1_ratio=.3 for pmg","2680fd030b2bd45641e0f25102dfb2e19f666bde",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-10-25 11:26:51","full brain sl (ok)","4ca7aa1d9bf4250818df57c7f6d1e874e18263ee",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-10-25 12:45:55","l1_ratio=.3 in poldrack tvl1 demo","f7c092da15d6adf982440c3250e28e17a4246e4b",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-10-25 13:21:44","CLEANUP + ENH: new option smooth=0 in _univariate_feature_screening","dcdd18ec190c778fa56c02308e8c9d46c7aace77",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-10-25 14:19:15","morphing strategy = dilation o erosion","90c34ff7241257fae88f5b655b8d023cc422aeb4",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-10-25 14:20:12","cleanup demo","44326c2e26084922db5edf9ddd5b23650a2911e4",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-10-25 14:35:33","WIP: demoing sl and tvl1 on haxby","d89536b2d592fc318d12f6692f26ad8b1f838f07",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-10-25 15:26:33","BF: restored standardize=self.standardize in SpaceNet's NiftiMasking","645517f3eac6c1a2653c003602b33bcf734b3091",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-10-25 15:47:09","defaut cv=8 in SpaceNet","47b22c28dd031276db85427d18cef672c6906923",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-10-25 15:49:51","scores_ -> cv_scores_ in SpaceNet","37e90f70cb81c37458a58d274d5ee7b5fa5a0513",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-10-25 16:10:58","misc cleanups and cosmetics","138411fba61a03749d51e06b53676f54ea1ff998",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-10-25 17:44:43","cleanup","b7c72fc7eb42401b57e6bcc96ca3d28e9f9309c9",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-10-28 08:43:53","removed unused slicer var in plot_haxb_space_net.py","e39575737cb48c2d7aeb09c0d2086c00d38639cd",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-10-28 12:40:16","- BF: proper standardization of input data (in fit and predict)
- BF: restored broken oasis spacenet demo","4f7f446dc399347170c42aca468d07336d39210b",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-10-28 13:09:58","ENH: properly setting intercept after fitting","0cc8ba7ba1aa2a1a78f96faabb4b7f623884303a",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-10-28 13:26:32","tiny bug fixes","a3d424218a63e63c60ceb576adc036fb390b4265",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-11-04 09:17:37","addressing @bthirion's recent comments","519406a5840b83df0112c7e8a1e61c63c665e459",""
"pull_request_commit","657","nilearn","nilearn","Titan-C","2014-10-24 23:22:30","Regexp control on raised errors","44795e5d38408d429b5c2ddc81be56c5b66d7f82",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-11-04 09:51:46","still addressing @bthirion's comments","2616629c9142c382fb17468a07898941403ab5b3",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-11-04 10:13:13","still addressing recent comments","f283f1dc3c5e18615332c6f1f65d246b0f0e26a5",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-11-10 16:18:43","cooler","9df0afdbb76a48fe58b29af3d361c3cfd0a10e50",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-11-12 13:39:07","ENH: alpha_min=None by default, so that eps is used (instead) to construct alpha grid","1f470677e4cccdaf91e5a407634a7a7b091ac8c9",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-11-13 07:56:25","REFACTOR: adressing @bthirion's oral remarks about the lambda (no more lambdas in modules)","22b00ef3ba0a9cacfb8df6c47282f91701c756dc",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-11-14 08:44:37","typo","25cea3744b38f4af1136fad7d78fa225b302268b",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-11-14 14:24:38","ENH: cleanup for poldrack demo script","986aacd1c7ed2f7000cc9816057f96d59701e066",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-11-14 14:29:17","DOC: rmed ref to TV-L1 in l1_ratio doc of gradient_id(...) function","97534923f3a9f71e4f07daac3c590830047bd62f",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-11-14 19:00:29","n_jobs=1 restored in demo","cd26b23273eaab23b77998bfc0dcb2acf96e38c3",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-11-14 20:32:51","ENH: fixed MemoryError in _univariate_feature_screening(...) function","29077e1c889df2bee91da5635d0d5b865d030b54",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-11-14 22:52:31","BF: restored face vs house in haxby spacenet demo","a636fd506d40282b933726b17657dfd267606356",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-11-15 15:11:15","ENH: demoing all penalties in poldrack demo","275f81c53f2868c1be24e94e19c0c4e041ea48c8",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-11-20 10:26:17","REFACTOR: in space_net.py cv scores are 'bigger is better'","589ee742d6fa08d375bfa79c11ab86295cc9dbf3",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-11-20 10:32:14","BF: trailing X_ in space_net.py","a005c33c4d194c56d86d6f2b379e450b12ed042b",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-11-20 13:28:39","closes issue #286 (about nans when l1_ratio = 0)","acdc37404f514db8fc4d0a157227463969e90a3d",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-11-20 13:54:28","ENH: tests for issue #286","2d74e04fc90f01c886ced2296907ad86bf0ebd83",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-11-21 12:59:52","ENH: returning lists of pairs of lists of indices used in cv","5a86e89480188dab9fe678856068455ff41502f2",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-11-21 13:16:53","typo","ca36a35e627be80ae69220470da5593a1ef5aed2",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-11-23 10:31:17","BF: wrong docstring about ventral mask in plot_haxby_space_net.py demo","55fd082ce6ecac408d91f86f493d8a0cee8f909c",""
"pull_request_commit","657","nilearn","nilearn","GaelVaroquaux","2014-12-02 09:52:56","Clean unused imports","9cbdb103a1ff03982afca103912b5e514c2030ca",""
"pull_request_commit","657","nilearn","nilearn","GaelVaroquaux","2014-12-02 10:02:00","MISC: Cosmetics in the example","8cc69f8403136c85adf5d673649db0a089709ef4",""
"pull_request_commit","657","nilearn","nilearn","GaelVaroquaux","2014-12-02 10:02:14","API: SpaceNet -> BaseSpaceNet

We want to make it really clear that it is a base class, and is not
intended for the end user.","b259caa8c3a5a696434ae1db6c16b53cff7189be",""
"pull_request_commit","657","nilearn","nilearn","GaelVaroquaux","2014-12-02 11:47:32","WIP: try to fix the alpha grid","d182c294d58fc0cfc58f3a21a2968abea3c530ee",""
"pull_request_commit","657","nilearn","nilearn","GaelVaroquaux","2014-12-02 18:03:59","WIP: add a second score to disambiguate","de2ea32047f859ab0454a6362d103c29f62ae5d6",""
"pull_request_commit","657","nilearn","nilearn","GaelVaroquaux","2014-12-02 19:16:51","ENH: better verbosity

verbose=1 should simply give us an idea of how the progress is doing","27bc45026e57920db8dd49cb59a888b3dbe05094",""
"pull_request_commit","657","nilearn","nilearn","GaelVaroquaux","2014-12-02 19:17:22","DOC: complete the docstring","ec60eeeca06834a5ca5be70392b52f987f099d0c",""
"pull_request_commit","657","nilearn","nilearn","GaelVaroquaux","2014-12-02 19:17:35","MISC: avoid deprecation with new numpy","04075a40047b1c56119152e20a127ac75ef47076",""
"pull_request_commit","657","nilearn","nilearn","GaelVaroquaux","2014-12-02 19:18:47","MISC: minor improvement in example","adb15b7d2b054891505282cf3665cb2cda1bd2ce",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-12-02 19:39:18","fixed tests broken by the other other pr_219","a9e3899cfb31a9c59f3005d82228f44e3d906f60",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-12-03 09:13:33","BF: trailing assert ...","fea6b04c1440f7d7ebac55b94311fa674f5d3440",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-12-03 14:56:11","-BF: confusing rescale_alpha param removed from code base
-BF: multiple tiny bugs
-BF: restored broken oasis demo","172a30ece780dacad0c340090973df814cbbe6cc",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-12-04 14:34:41","BF: still fixing alpha grid computation","82772ea7d2927fd60a0abf7c587710534b59c88d",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-12-06 07:32:54","cleanups","db317a9992cfdd01a59538aaa0c9b3383c20c7e6",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-12-06 09:09:49","NF: poldrack loader (local)","49032f796c4b946bdbdb5e01cb0f296a18ae856a",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-12-06 09:49:31","SL & TVL1 ok on poldrack :)","606b34087fce3a3b1af7c50fe79ea72b54cd3cab",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-12-06 18:28:49","NF: cv on l1_ratio","f8a73095e19a1cadd5ee7d158ac5aa9f4684cdee",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-12-07 08:39:46","cleanup","b555aa1e3d48f2553c9070928f98d69b8074c916",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-12-07 15:55:09","cv on l1_ratio: ok","eb48480177fabe1ac69b8ada842281df89d97044",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-12-08 14:27:47","NF: fetcher for PMG (code stubb, only works locally for now)","c943318502c17ea9d909e79ce898431282768cb9",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-12-08 14:28:17","remove obselet load_poldrack.py module","a72cc97ab2cd3ac8d1e93a1ac45bf43e42fa2c7f",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-12-09 07:00:18","fixing some underground bugs","afd79da34d02bde493ec56c2c48d210a961f948a",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-12-09 07:03:51","NF: fetch_mixed_gambles","abd843bc800361eef1c2c4598c91cf7ae450687b",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-12-09 08:51:49","wip","770a4270fb70a16033448154059ee9f486408e18",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-12-09 13:02:37","wip","dc108dc530db43736c5f18b927e0aa730272f222",""
"pull_request_commit","657","nilearn","nilearn","GaelVaroquaux","2014-12-11 16:31:06","Favor small l1_ratios","fd2c6749b213e648338e7d2533845e2edce5e36d",""
"pull_request_commit","657","nilearn","nilearn","GaelVaroquaux","2014-12-11 18:32:04","Fix path on l1_ratio","421adadc124cb242aba1e2fa72d224a1d266e180",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-12-12 09:43:10","BF: fixed couple of testcases broken by pr_219 :)","90de959fdf65f1e5bc8fb49636f9951181b368e1",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-12-12 09:45:25","restored default l1_ratios to .5 (from .75)","d048f21c98b91558f2b4c0473a17e24e21e32986",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-12-12 10:02:07","ENH: addressing @gael's comments about spurous start(...) method in EarlyStoppingCallback","05f62f72a76a4b7b1513c0638d0c3abd15a21bfd",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-12-12 13:32:36","""""""
I would prefer to avoid casting the ""penalty"" string to all lower
case. I would prefer if you did an actual check to ""tv-l1""...  The
reason is that other Python objects (eg dicts) behave with an exact
check, and thus you can confuse people and give them bad habits.
""""""","6a36e3ef7d961412130dcb5967f0c6e9c6875e23",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-12-12 13:35:10","BF: broken demos","7b0a81020fd76a00748f3dd2befa80532c17ea35",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-12-12 13:56:59","cosmetics","d6cc05799ff4aeb441c32aac7ef767af83c0f4c1",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-12-17 15:16:51","EXPERIMENTS: debugging why good alphas don't mean good maps","1d8e5f55c93bfea58eab1568f22896e05522b847",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-12-17 15:17:14","typo","a54ff621cf642b3f2a54df760ca1c8c855d31b07",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-12-18 12:34:53","wip","819c85cd9f57fa76c11ffde07bf3092669549c3b",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-12-18 17:02:11","wip","af044d49883876a08ea2d183f4362b348b77e5cc",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-12-18 21:04:50","ENH: using sk.cv.train_test_split in oasis","a94c6aa3ca098ef3528f64429a27bb4abded0664",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-12-18 21:15:37","BF: train_size=.8 in oasis space net demo","1c6b70fa42987975beb204175f8c17a0bfedbdf1",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2014-12-18 21:47:58","ENH+BF+CONFUSION: (on utterly bad prediction scores on oasis dataset) now using all oasis subjects","a253f2b724d72692bf2653f1fa0a5ccc5199ef3b",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2015-02-04 17:02:00","- ENH: putting Mean Abs Error in titles of Oasis prediction curves
- ENH: using MNI template (default) in poldrack demos
- ENH: various tiny things","092772a8ab63fb4e36c740812cbd36b8ef3bb047",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2015-02-05 08:11:33","REFACTOR: moved space net demos to examples/decoding sub-dir","f8d50f46b92de712c8317380c552e8028d1013ff",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2015-02-05 11:44:16","- ENH: added space net entry in doc (decoding.rst)
- ENH: in haxby example, using index_img","edf05ab7158adda73474b175f2ae7e134917d67d",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2015-02-05 12:39:02","- ENH: removed zombie doc for inexistend normalize param
- ENH: simplified space nets by removing superfluous for loops","98c59811ac8ac88362b6118794b598ed92682eb7",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2015-02-05 12:43:30","smooth -> smoothing_fwhm","8abf1202791523963f2810e30c3932be771417f1",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2015-02-05 12:48:58","mask -> mask_img in _get_mask_volume","8e45d5397627dcb034083a410524c572b591b683",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2015-02-05 13:10:59","tiny fixes","a829be459339317784ee9d7cfcba73f4bef63b6f",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2015-02-05 13:21:57","BF+DOC: fixed bug in docstring about type / shape of X","0b73aec4124b9b9be385d2cc778c56213daa2972",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2015-02-05 15:50:38","ENH: adding oasis vbm in doc","5f5571383394dd8336fd9ce2160f030967916089",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2015-07-13 12:13:05","BF: fixing py3 issues + 0400 ==> 400 (error = invalid token)","92d44cc2350bb2ff700e9a9e0da2e6f409803700",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2015-07-13 15:42:06","BF: still fixing py3 stuff","33cb60a9a3bd25da79e4706e18b3563ed48ee905",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2015-07-13 15:53:20","BF: still fixing py3 stuff","a2c6484c2a519591cd2d1c91bc56a6302b96cdea",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2015-07-13 16:02:36","xrange ==> range","2339440166e3c7340991d385376fb25ef1a1cf06",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2015-07-13 16:14:01","random ==> check_random_state","acf88bbbf09adc7c92a7149129ffae804c591625",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2015-07-13 16:35:38","rng.sample ==> rng.choice","0107e5164b7ffbb20e6bb0305e80366b834d9fc3",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2015-07-13 17:11:31","BF: choice ==> choice(replace=False)","5736628f7a77dea2432a022eaeaf3a7012b23a90",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2015-07-13 17:32:28","more","715e21b41af10e88e7d683129584c74d3ac9b02e",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2015-07-14 07:26:02","BF: basestring ==> _basestring (bkport for py3)","fe3b8b23788f57c17fc95fa853f0d503d1eee3c9",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2015-07-14 15:38:51","DOC: SpaceNet entry in doc/decoding/*","61986abbb09c004b7e61481167858d4e2ef85a2f",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2015-07-14 16:03:15","DOC: SpaceNet entries in API doc","f37b5789f9d9780f4276ab685e6284b304965070",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2015-07-15 12:18:19","fix docstring","e0ed463f613698551518c57e938b09a2a856d5a0",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2015-07-15 12:23:55","documenting init param of mfista","3db00fb4eec4f953927db32a4e00e8e2006681f4",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2015-07-15 14:25:16","still adressing @bthirion's comments","39df75225f9094d537092421aef08726d8bf4bdb",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2015-07-15 15:58:24","more","fefa61dd288a55ea6f1bd4df12d0b7a691974021",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2015-07-15 16:15:56","BF: doc string for poldrack example","e35f7e1283b8e3e92a8ef42ec6ffaad8bfdc7c3b",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2015-07-15 16:30:22","making TV-l1 show up doc before sl","0447753a549133d7e8baf16e17ddb59cd9bd011e",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2015-07-15 19:46:00","API: leading underscore for hidden / protected spacenet functions","fcf6bed0d92820e06e27b76d86a45a6a3bb0dfa2",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2015-07-15 20:05:48","documenting some nontrivial things","07e4d48d8f63fc37e30f79dc454d1b7987e5a64f",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2015-07-15 20:26:20","FIX: fixing docstrings (still address @bthirion's remarks)","f89fb1571401b416d5e31beca4b3c5fc50e93307",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2015-07-15 23:04:34","zombie test case rmed","b2678cc52c803018ee2fba26741da4dd5181272f",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2015-07-15 23:26:46","more","30c06ef56516ed3dc4adbaab9b156805d5582bae",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2015-07-15 23:37:31","fixups","ba96096f784a73ce0d14b0b72e757c0fdbf331db",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2015-07-16 07:46:58","added space net in thumbs","97c5c56fd329e38a92bfd9a588eec7411c1834f4",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2015-07-16 08:08:04","fixups (carousel)","e06d2ee5e63d4c1cbd1c1e4d6683eb4df5a63d5d",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2015-07-16 08:49:09","only a few spacenet thumbs","ac6d4c656cf189fed5799dc411c63275dd4799aa",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2015-07-16 11:42:11","REFACTOR: rmed center_data backport","b96fb08268509a121eb40d02a3e9cf1039191a4a",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2015-07-16 12:11:06","API: more leading underscores (for protected stuff)","28b7d962b5eb1ee2554d974f19812702907b1bed",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2015-07-16 12:24:19","more leading _underscors + rmved unused copy_data param","686bf8662f4190956cc0b3cd7fce23985b152810",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2015-07-16 12:35:34","BF: broken test case","68ab56590ee661a639788e6716ccc65db9b01b35",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2015-07-16 12:54:34","useless XXX","0416112f8ab31e3aa406ac1d1cfcbc18fc05558f",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2015-07-16 12:59:31","CLEANUP: rmved obsolete sklearn backports","313e7c3c0ec6fa94f106e59794a38b6b665118eb",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2015-07-16 13:18:19","fixups: leading underscores + other docstring wahala","f1dcb4598a15fe8f4cc08e2bee7710bc76353fa2",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2015-07-16 14:14:08","more leading underscores for hidden functions","aed4893ae89360f693415542978e791d219d9029",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2015-07-16 14:46:29","DOC: spacenet now in decoding_tutorial and estimator_choice.rst, etc.","2499f81dfcfc53815cf974836221bcb97078c98d",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2015-07-16 14:48:10","glitches","dfccea4ce50d3a0b6c5d2ceab80b1ff3dc2898f9",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2015-07-16 14:48:33","CLEANUP: not mentioning pure TV and pure LASSO in user doc","3b76060e476738312af4f23f41981c2c49842835",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2015-07-16 15:04:41","CLEANUP: merged all smooth lasso data gen functions into one","57f18e5fa1da29877d89b95eb5fef7be89de69a0",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2015-07-16 15:07:11","typo","a47d485cea79976bf037716b9a36e2015cf478a7",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2015-07-16 15:13:45","more typos","8a443cb843c2be196aa22a656a313cc2a4b361c8",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2015-07-16 15:49:53","DOC: display_mode=yz in haxby space net example","1f9a30fd3b72ea9757f6d47fc807c4263cf208a8",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2015-07-16 15:53:37","reduced cut_coords in oasis space net example","5e7300be9bb8e5a83760247fddc1895732d44ad0",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2015-07-17 07:50:07","no colorbar in space net examples","01c4b91997613983ba15f9f037d120c238288e42",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2015-07-17 09:16:08","smooth lasoo ==> graph net everywhere","d4dcba1b6b473410c0252cf30a6f5ff3bfccefa5",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2015-07-17 09:28:07","fixups rst","0e9c5fcca9f37a95b2fec6e492241f7129578992",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2015-07-17 09:28:26","cleanup var names, etc.","71d83994653a59b132c393dcff4b592a70bb6d4a",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2015-07-17 09:33:32","fixups: var names in examples, rm dummy vars, egc.","8391e2bf6bd77b539f9b8c5ffb2f1f52c4a8ecd6",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2015-07-17 09:34:21","restored examples/plot_haxby_simple.py: has nothing to do with PR","b761f881d2074b7b9731c8b23bb0679fd4d4e4d1",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2015-07-17 09:35:59","more smooth lasso ==> graph net","4cbe10c8efdad4803c859154fc4ca7e38c864922",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2015-07-17 09:42:34","DOC: cmt about intercept in logistic regression","c8798ddc2869eea18f921d0bab1aa26dc4bbc99b",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2015-07-17 13:54:15","- moved make_Xy logic from fetch_mixed_gambles to the space net
  example (this should be user complexity, not ours)
- reduced screening_percentile to 5% in oasis example
- plotting colorbars in space net examples
- reduced verbose in examples","1abf7dc1db94fe1c759749249d27f19c3b0ee452",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2015-07-17 13:55:45","renamed example script (space net stuff)","c3a6afce5636f9606559a7dcd3657148500b6acf",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2015-07-17 14:25:52","default verbose increased to 1","293aa721de48de8cc365b4427fe857c6d04b4974",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2015-07-17 14:59:08","rnmed poldrack ==> mixed_gambles in doc/","5bc8125fe4506569219609a7af776e2f19826e8a",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2015-07-17 15:02:11","typo","26c40f718dbe5fa0d912b937dd5278889c18c56b",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2015-07-17 15:47:11","BF: broken backport","4bf8d754e166d97e541e011941ab6c0256ec1a21",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2015-07-17 16:00:52","mixed gambles fetcher integrated into new datasets organization","4300da30b73d554c277a033e002e8b6c84a4f6af",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2015-07-17 17:21:32","REFACTOR: complex data manips moved into fetcher (mixed gambles stuff)","f9bc35ddc5e29ef1b4aea319ab2043e344362251",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2015-07-17 18:07:01","FIX: proper use of memory_level in space net + higher value in oasis demo","b8edb4737fa665c8ae78f030f66323871efc4c72",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2015-07-17 18:09:16","comment on n_jobs in oasis demo","93d67a1372fd513e108ccc5974c19a159f78e3b0",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2015-07-17 18:17:09","flipped the interpretation of return_raw_data arg to fetch_mixed_gambles","d0452bafbce1f3351961c54ea7746f0932e95627",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2015-07-18 12:28:07","rmed license","1ef334c1032da56e39dfa137a61a31e2da1330dd",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2015-07-18 12:28:30","using sklearn.utils.check_random_cstate","a61211ef8c7199da02e11afa0212258eea05bb54",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2015-07-18 12:38:16","rmved dead test","6c8adcc836e073c384929754f5175d934ae03348",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2015-07-18 12:42:40","rmved zombie files","0ba41b7d99ca4f253a6acb3a580b993c363aadb1",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2015-07-18 13:15:09","refactored fetch_mixed_gambles (to make it more testable)","e870fb69376ec0c39aa6f8bb6ef2ecaecb0330a0",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2015-07-18 13:38:05","more doc for mixed gambles fetcher","75775461fd05e0d41a6d875e6853c9c754eb94ba",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2015-07-18 13:57:56","typo: optinal ==> optional","235279176d93aec86d08e7bcb0533f45ee6c2231",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2015-07-18 14:10:46","typo","3cbaee3d9613959a577991d7fa3cfc1af6b3e849",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2015-07-18 15:28:24","removed dead tests (fista stuff)","6e52349236359f605c3b3e0e8ffe4d0c48abcc82",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2015-07-18 15:51:16","rmed zombie test_datasets.py file","6f4142cd4ca8ced7f6fedde3562c0aeed9237035",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2015-07-18 16:27:18","rmed commented code + rmed mean_img call in example script","3821dab82751503d8e0f027620d473a123f103ad",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2015-07-21 11:26:26","temporarilly renamed mixed gambles example to be run early","6ec3d1a8bf2a7a78011ffb9b1b95f38dfe19bc54",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2015-07-21 13:17:53","renamed oasis space net example to be run at top of examples chain","14d08fe86e901f8685cb369f31b3ab8d1245156f",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2015-07-21 19:17:22","n_subjects=200 in oasis space net demo (to limit memory demand)","99e1bc161b1c7c7b227b9192cf992bfb947e5259",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2015-07-22 11:49:12","oasis example should run fine now","4f5b68359f5413fc519c26b61f04d09a36e9943c",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2015-07-23 12:15:02","ENH: upsampling oasis data to 4x4x4 (otherwise, we're fried)","11c74929eefcce76292713b15e469d0834fa1a8e",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2015-07-23 13:12:53","CLEANUP: rmed verbose=2 in oasis example","37fd0a5c6340d219dd149ec6bd1c59babf891090",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2015-07-23 18:25:47","not resampling oasis in space net demo + doing only graph-net penalty","41586655259ceb8a3b2ede23416cdea9bb216a40",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2015-07-24 13:30:36","DOC: mentioning oasis space net example in space_net.rst","74923aa47e11ff19c08c038caf23777fbd0c459e",""
"pull_request_commit","657","nilearn","nilearn","dohmatob","2015-07-28 15:59:31","return_raw_data=False by default + fix saying why Regressor and not Classifier is used in mixed gambles","3efa3c70e5209d97da880b587d1d5174b3fc2567",""
