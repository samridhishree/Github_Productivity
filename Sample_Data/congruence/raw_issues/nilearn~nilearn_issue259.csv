"rectype","issueid","project_owner","project_name","actor","time","text","action","title"
"issue_title","259","nilearn","nilearn","banilo","2014-10-11 17:19:02","Added explicit image creation with individual ROIs and how to extract fMRI data in these ROIs
","start issue","updated ROI extraction"
"issue_closed","259","nilearn","nilearn","lesteve","2014-11-04 08:49:47","","closed issue","updated ROI extraction"
"pull_request_title","259","nilearn","nilearn","banilo","2014-10-11 17:19:02","Added explicit image creation with individual ROIs and how to extract fMRI data in these ROIs
","adae80a351e3bdd82ea16b5420c863a4005330c5","updated ROI extraction"
"pull_request_merged","259","nilearn","nilearn","lesteve","2014-11-04 08:49:47","updated ROI extraction","13039bd51475dcc2681edcc99a7b72d596e21517","Pull request merge from banilo/nilearn:roiexupdate to nilearn/nilearn:master"
"issue_comment","259","nilearn","nilearn","bthirion","2014-10-13 20:24:01","The example throws 8 figures, which is a bit messy. It would be better if some of them could be subplot of one larger figure. For instance 1-3 and 4-7 could be gathered into two figures.
I'm not sure I get the gist from fig. 8.
","",""
"issue_comment","259","nilearn","nilearn","bthirion","2014-10-13 20:26:28","Also, the example requires 2g of memory which is a bit surpising. Do we have any lighter dataset in house ?
","",""
"issue_comment","259","nilearn","nilearn","banilo","2014-10-14 07:24:08","Grouping figures: ok

2g: That's because we are loading 1000 images of the Haxby dataset. We could reduce it to 50 or 100 to be less demanding on memory.

Figure 8 is supposed to examplify how data can be easily extract from the extract ROIs. Somebody a better idea for this?
","",""
"issue_comment","259","nilearn","nilearn","GaelVaroquaux","2014-10-14 08:33:05","On Tue, Oct 14, 2014 at 12:24:08AM -0700, Danilo Bzdok wrote:

> 2g: That's because we are loading 1000 images of the Haxby dataset. We could reduce it to 50 or 100 to be less demanding on memory.

That might be a good idea.
","",""
"issue_comment","259","nilearn","nilearn","bthirion","2014-10-28 11:18:57","I have added a couple of cosmetic comments. Besides, this looks good to merge.
","",""
"issue_comment","259","nilearn","nilearn","lesteve","2014-10-28 13:57:55","Hidden in an outdated diff comment:

> This comment is used as a target in the doc, look at doc/building_blocks/manipulating_mr_images.rst. So you'll have to change it in the rst as well.
> 
> Also have you regenerated the doc and checked that the order of images hasn't changed and/or that the doc description still matches the pictures?
","",""
"issue_comment","259","nilearn","nilearn","lesteve","2014-10-28 14:02:08","Also could you change the orientation of the x-axis labels, there is some slight overlap in the boxplot at the moment:
![plot_roi_extraction](https://cloud.githubusercontent.com/assets/1680079/4809349/d514a63a-5eaa-11e4-87b6-eec9c67f2789.png)
","",""
"issue_comment","259","nilearn","nilearn","banilo","2014-10-29 15:20:13","All comments should have been addressed now.
","",""
"issue_comment","259","nilearn","nilearn","lesteve","2014-11-04 08:49:50","Merged, thanks a lot for this!
","",""
"issue_comment","259","nilearn","nilearn","banilo","2014-11-04 08:52:16","Thank you guys for the help.

> On 04 Nov 2014, at 09:49, Loïc Estève notifications@github.com wrote:
> 
> Merged, thanks a lot for this!
> 
> —
> Reply to this email directly or view it on GitHub.
","",""
"pull_request_commit_comment","259","nilearn","nilearn","lesteve","2014-10-13 06:54:18","I wouldn't specify cut_coords and let it default to None
","adae80a351e3bdd82ea16b5420c863a4005330c5","(None, '', u'plot_roi_extraction.py')"
"pull_request_commit_comment","259","nilearn","nilearn","lesteve","2014-10-13 06:54:46","Same comment about letting `cut_coords` default to None.
","adae80a351e3bdd82ea16b5420c863a4005330c5","(None, '', u'plot_roi_extraction.py')"
"pull_request_commit_comment","259","nilearn","nilearn","lesteve","2014-10-13 07:15:34","I think the naming convention is that `*_img` is reserved for nifti images. Here `first_roi_img` is a numpy array.
","adae80a351e3bdd82ea16b5420c863a4005330c5","(None, '', u'plot_roi_extraction.py')"
"pull_request_commit_comment","259","nilearn","nilearn","lesteve","2014-10-13 07:16:26","Same thing about `cut_coords=None` as above
","adae80a351e3bdd82ea16b5420c863a4005330c5","(None, '', u'plot_roi_extraction.py')"
"pull_request_commit_comment","259","nilearn","nilearn","lesteve","2014-10-13 07:19:16","idem
","adae80a351e3bdd82ea16b5420c863a4005330c5","(None, '', u'plot_roi_extraction.py')"
"pull_request_commit_comment","259","nilearn","nilearn","lesteve","2014-10-13 07:21:22","you could use np.arange(1, n_scans + 1) which might be slightly easier to read
","adae80a351e3bdd82ea16b5420c863a4005330c5","(None, '', u'plot_roi_extraction.py')"
"pull_request_commit_comment","259","nilearn","nilearn","lesteve","2014-10-13 07:28:19","Just curious, do we lose the information about the header, if we don't specify it explicitly?
","adae80a351e3bdd82ea16b5420c863a4005330c5","(None, '', u'plot_roi_extraction.py')"
"pull_request_commit_comment","259","nilearn","nilearn","lesteve","2014-10-13 07:33:48","This comment is used as a target in the doc, look at doc/building_blocks/manipulating_mr_images.rst. So you'll have to change it in the rst as well.

Also have you regenerated the doc and checked that the order of images hasn't changed and/or that the doc description still matches the pictures?
","adae80a351e3bdd82ea16b5420c863a4005330c5","(None, '', u'plot_roi_extraction.py')"
"pull_request_commit_comment","259","nilearn","nilearn","lesteve","2014-10-13 07:34:58","Since you are reusing it a few times, why not define a variable for `act_summaries[:, 0]`?
","adae80a351e3bdd82ea16b5420c863a4005330c5","(None, '', u'plot_roi_extraction.py')"
"pull_request_commit_comment","259","nilearn","nilearn","lesteve","2014-10-13 07:40:37","I would avoid explicitly specifying default parameter values. It makes for a simpler example and gives us more leeway to change defaults in the future if we wish to do so.

From a quick look at the code it seems to be the case for:
- `background_label`
- `smoothing_fwhm`
- `verbose`
","adae80a351e3bdd82ea16b5420c863a4005330c5","(None, '', u'plot_roi_extraction.py')"
"pull_request_commit_comment","259","nilearn","nilearn","lesteve","2014-10-13 07:41:48","Given the name of the file, was this line meant to be in your commit?
","adae80a351e3bdd82ea16b5420c863a4005330c5","(None, '', u'plot_roi_extraction.py')"
"pull_request_commit_comment","259","nilearn","nilearn","lesteve","2014-10-13 07:44:11","I am not 100% convinced that the 2 element loop is simpler to read. I would just unroll it:

```
first_roi_data = (labels == 1).astype(np.int)
sedond_roi_data = (labels == 2).astype(np.int)
```
","adae80a351e3bdd82ea16b5420c863a4005330c5","(None, '', u'plot_roi_extraction.py')"
"pull_request_commit_comment","259","nilearn","nilearn","banilo","2014-10-13 07:56:06","Sorry, this is an error on my part.
","adae80a351e3bdd82ea16b5420c863a4005330c5","(None, '', u'plot_roi_extraction.py')"
"pull_request_commit_comment","259","nilearn","nilearn","banilo","2014-10-13 07:58:36","I had the same question. Many seem not to specify the header explicitly.
","adae80a351e3bdd82ea16b5420c863a4005330c5","(None, '', u'plot_roi_extraction.py')"
"pull_request_commit_comment","259","nilearn","nilearn","bthirion","2014-10-13 09:04:21","I believe there's no need to include the header explictly. I would not 
do it.
","adae80a351e3bdd82ea16b5420c863a4005330c5","(None, '', u'plot_roi_extraction.py')"
"pull_request_commit_comment","259","nilearn","nilearn","GaelVaroquaux","2014-10-13 14:57:11","> I think the naming convention is that *_img is reserved for nifti images.

Yes
","adae80a351e3bdd82ea16b5420c863a4005330c5","(None, '', u'plot_roi_extraction.py')"
"pull_request_commit_comment","259","nilearn","nilearn","GaelVaroquaux","2014-10-13 14:58:41","> > -    ((labels == (i + 1)).astype(np.int) for i in xrange(2))

Also, xrange does not exists in Python3, so we try to avoid it in
general.
","adae80a351e3bdd82ea16b5420c863a4005330c5","(None, '', u'plot_roi_extraction.py')"
"pull_request_commit_comment","259","nilearn","nilearn","lesteve","2014-10-17 10:32:11","This is used in the doc too as a `start-after` and a `end-before` target. So you'll need to update doc/building/manipulating_mr_images.rst.
","adae80a351e3bdd82ea16b5420c863a4005330c5","(None, '', u'plot_roi_extraction.py')"
"pull_request_commit_comment","259","nilearn","nilearn","bthirion","2014-10-20 20:38:16","pep8: this line (and some others) is too long
","adae80a351e3bdd82ea16b5420c863a4005330c5","(None, '', u'plot_roi_extraction.py')"
"pull_request_commit_comment","259","nilearn","nilearn","bthirion","2014-10-20 20:39:25","My version of matplolib (arguably old) does not support labels as argument to plt.boxplot
","adae80a351e3bdd82ea16b5420c863a4005330c5","(None, '', u'plot_roi_extraction.py')"
"pull_request_commit_comment","259","nilearn","nilearn","bthirion","2014-10-20 20:40:06","trailing whitespace. You should run a pep8 check.
","adae80a351e3bdd82ea16b5420c863a4005330c5","(None, '', u'plot_roi_extraction.py')"
"pull_request_commit_comment","259","nilearn","nilearn","bthirion","2014-10-20 20:42:04","Please keep the imports at the beginning of the script.
","adae80a351e3bdd82ea16b5420c863a4005330c5","(84, '', u'plot_roi_extraction.py')"
"pull_request_commit_comment","259","nilearn","nilearn","bthirion","2014-10-20 21:06:04","could the value be inferred from trial_list ?
I'm not sure what max_trials actually means ?
","adae80a351e3bdd82ea16b5420c863a4005330c5","(None, '', u'plot_roi_extraction.py')"
"pull_request_commit_comment","259","nilearn","nilearn","lesteve","2014-10-20 21:19:16","Although I would definitely agree in general, my impression is that these example scripts are written in order to be easily separated into stand-alone snippets that can be inserted into the documentation. For example this script is used as part of the documentation [here](https://nilearn.github.io/building_blocks/manipulating_mr_images.html#mask-dilation).

In this context it makes sense not to move all the imports at the beginning of the scripts but to use them when they are needed. I guess this way it looks more like an interactive session (or a tutorial) where the user imports packages when he needs them.
","adae80a351e3bdd82ea16b5420c863a4005330c5","(84, '', u'plot_roi_extraction.py')"
"pull_request_commit_comment","259","nilearn","nilearn","GaelVaroquaux","2014-10-20 21:21:00","> In this context it makes sense not to move all the imports at the beginning of
> the scripts but to use them when they are needed. I guess this way it looks
> more like an interactive session (or a tutorial) where the user imports
> packages when he needs them.

Yes. Also when a beginner is reading the script, he can more easily see
the link between the import and how it is used.
","adae80a351e3bdd82ea16b5420c863a4005330c5","(84, '', u'plot_roi_extraction.py')"
"pull_request_commit_comment","259","nilearn","nilearn","banilo","2014-10-20 21:40:47","This would correspond to my current coarse heuristics:
If normal script, strictly list imports at beginning in hierarchical order
(built-in to specialized).
If educational script, make local exceptions to leverage readability.

2014-10-20 23:21 GMT+02:00 Gael Varoquaux notifications@github.com:

> In plot_roi_extraction.py:
> 
> >  # Dilation
> > +fig_id = plt.subplot(3, 1, 3)
> >  from scipy import ndimage
> 
>  In this context it makes sense not to move all the imports at the
> beginning of the scripts but to use them when they are needed. I guess this
> way it looks more like an interactive session (or a tutorial) where the
> user imports packages when he needs them.
> Yes. Also when a beginner is reading the script, he can more easily see
> the link between the import and how it is used.
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/nilearn/nilearn/pull/259/files#r19114695.

## 

Viele Grüße,
Danilo
","adae80a351e3bdd82ea16b5420c863a4005330c5","(84, '', u'plot_roi_extraction.py')"
"pull_request_commit_comment","259","nilearn","nilearn","bthirion","2014-10-28 11:17:22","Please remove this line
","adae80a351e3bdd82ea16b5420c863a4005330c5","(None, '', u'plot_roi_extraction.py')"
"pull_request_commit_comment","259","nilearn","nilearn","bthirion","2014-10-28 11:17:58","log_p_values = -np.log10(pvalues)
","adae80a351e3bdd82ea16b5420c863a4005330c5","(None, '', u'plot_roi_extraction.py')"
"pull_request_commit_comment","259","nilearn","nilearn","bthirion","2014-10-28 11:18:15","maybe p_values instead of pvalues
","adae80a351e3bdd82ea16b5420c863a4005330c5","(31, '', u'plot_roi_extraction.py')"
"pull_request_commit_comment","259","nilearn","nilearn","dengemann","2014-10-29 16:31:51","use float litaral 10. for consistency
","adae80a351e3bdd82ea16b5420c863a4005330c5","(None, '', u'plot_roi_extraction.py')"
"pull_request_commit","259","nilearn","nilearn","banilo","2014-10-11 17:17:10","updated ROI extraction","9d4131a199ab279f788b4bcd8eb95e7cb1724a5a",""
"pull_request_commit","259","nilearn","nilearn","banilo","2014-10-13 15:33:56","ROI example: second version","16539bf83ec9b06540bd314e8f438bb31aad70fa",""
"pull_request_commit","259","nilearn","nilearn","banilo","2014-10-15 17:07:37","Now Subplots and boxplots","0a15e72846ad2b2ccfd206f8aff1007240416581",""
"pull_request_commit","259","nilearn","nilearn","banilo","2014-10-21 14:14:02","PEP8ized + more intuitive variable names","5e055605e835c12f5cb5d89314a13470742849cd",""
"pull_request_commit","259","nilearn","nilearn","banilo","2014-10-28 23:20:23","variable renaming + cosmetics","7c75a09b6237db3e263eb1d2410be3874aca1f9c",""
"pull_request_commit","259","nilearn","nilearn","banilo","2014-10-29 15:20:34","Adapted .rst files for Sphinx","3fb6e777e4a2346e9d79fef07c6fec5b7fa62645",""
"pull_request_commit","259","nilearn","nilearn","banilo","2014-11-02 15:18:23","Uniform use of float literals","adae80a351e3bdd82ea16b5420c863a4005330c5",""
