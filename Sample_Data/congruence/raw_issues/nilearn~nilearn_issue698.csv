"rectype","issueid","project_owner","project_name","actor","time","text","action","title"
"issue_title","698","nilearn","nilearn","ahoyosid","2015-07-17 08:30:59","High-level decoding object that exposes standard classification and regression strategies such as SVM, LogisticRegression and Ridge, with optional feature selection, and integrated parameter selection.

In other words, this object implements the pipeline:  
masking + feature selection (screening) + estimation (parameter selection and model averaging)

Haxby dataset, face  > house (similar to [Haxby face > cat](http://nilearn.github.io/auto_examples/plot_haxby_simple.html))
""full brain""
estimator =  'ridge_classifier'
screening_percentile = 20

![coef](https://cloud.githubusercontent.com/assets/6594763/8743369/8b8560d0-2c6e-11e5-9d19-aefe1a345c03.png)

Oasis dataset, age prediction (same as [OASIS example](http://nilearn.github.io/auto_examples/decoding/plot_oasis_vbm.html))
estimator =  'ridge_regression'
screening_percentile = 2 

![weights](https://cloud.githubusercontent.com/assets/6594763/8743374/95d5122e-2c6e-11e5-8065-b1c4fec53342.png)
","start issue","[WIP] Decoder: Metaestimator"
"pull_request_title","698","nilearn","nilearn","ahoyosid","2015-07-17 08:30:59","High-level decoding object that exposes standard classification and regression strategies such as SVM, LogisticRegression and Ridge, with optional feature selection, and integrated parameter selection.

In other words, this object implements the pipeline:  
masking + feature selection (screening) + estimation (parameter selection and model averaging)

Haxby dataset, face  > house (similar to [Haxby face > cat](http://nilearn.github.io/auto_examples/plot_haxby_simple.html))
""full brain""
estimator =  'ridge_classifier'
screening_percentile = 20

![coef](https://cloud.githubusercontent.com/assets/6594763/8743369/8b8560d0-2c6e-11e5-9d19-aefe1a345c03.png)

Oasis dataset, age prediction (same as [OASIS example](http://nilearn.github.io/auto_examples/decoding/plot_oasis_vbm.html))
estimator =  'ridge_regression'
screening_percentile = 2 

![weights](https://cloud.githubusercontent.com/assets/6594763/8743374/95d5122e-2c6e-11e5-8065-b1c4fec53342.png)
","dc22a23475df114e84ca8c1fc6a110b4e24b023d","[WIP] Decoder: Metaestimator"
"issue_comment","698","nilearn","nilearn","GaelVaroquaux","2017-03-21 13:20:56",">     Merging #698 into master will decrease coverage by 2.04%.
>     The diff coverage is 27.46%.

I wonder if the coverage is not a bit low on this PR.
","",""
"issue_comment","698","nilearn","nilearn","GaelVaroquaux","2017-04-24 06:02:37","> +   Decoder

> Shouldn't this rather be ""DecoderClassifier"" analogous to the sklearn conventions?

I thought that this would be simpler, and that 90% of the decoding
applications are classification.
","",""
"issue_comment","698","nilearn","nilearn","eickenberg","2015-07-19 13:02:59","Just a thought for the `__future__` (after these PRs are merged): Could the univariate feature screening deluxe from spacenet be useful here? If so, wouldn't a feature screener be a target-oriented type of masker?
","",""
"issue_comment","698","nilearn","nilearn","landscape-bot","2015-07-18 10:02:08","[![Code Health](https://landscape.io/badge/209632/landscape.svg?style=flat)](https://landscape.io/diff/198266)
Repository health decreased by 0.36% when pulling **[97514e9](https://github.com/ahoyosid/nilearn/commit/97514e9c3029697ad5a21b700b09913d5018eeb8) on ahoyosid:decoder** into **[08f023a](https://github.com/nilearn/nilearn/commit/08f023a6185b66647eb1e0b0baa2d0e6e729c0a9) on nilearn:master**.
- [22 new problems were found](https://landscape.io/diff/198266) (including 1 error and 12 code smells).
- [2 problems were fixed](https://landscape.io/diff/198266/fixed) (including 0 errors and 2 code smells).
","",""
"issue_comment","698","nilearn","nilearn","landscape-bot","2015-07-18 10:22:14","[![Code Health](https://landscape.io/badge/209637/landscape.svg?style=flat)](https://landscape.io/diff/198272)
Repository health decreased by 0.33% when pulling **[63835f2](https://github.com/ahoyosid/nilearn/commit/63835f27bc7de5026194a6ecb9dfda3f00ed6434) on ahoyosid:decoder** into **[08f023a](https://github.com/nilearn/nilearn/commit/08f023a6185b66647eb1e0b0baa2d0e6e729c0a9) on nilearn:master**.
- [18 new problems were found](https://landscape.io/diff/198272) (including 2 errors and 7 code smells).
- [1 problem was fixed](https://landscape.io/diff/198272/fixed) (including 0 errors and 1 code smell).
","",""
"issue_comment","698","nilearn","nilearn","landscape-bot","2015-07-18 10:32:41","[![Code Health](https://landscape.io/badge/209643/landscape.svg?style=flat)](https://landscape.io/diff/198279)
Repository health decreased by 0.22% when pulling **[10aa812](https://github.com/ahoyosid/nilearn/commit/10aa812f02f7ca9e96a419948adfe7ff25cebb1a) on ahoyosid:decoder** into **[08f023a](https://github.com/nilearn/nilearn/commit/08f023a6185b66647eb1e0b0baa2d0e6e729c0a9) on nilearn:master**.
- [15 new problems were found](https://landscape.io/diff/198279) (including 1 error and 6 code smells).
- [1 problem was fixed](https://landscape.io/diff/198279/fixed) (including 0 errors and 1 code smell).
","",""
"issue_comment","698","nilearn","nilearn","banilo","2017-04-23 22:30:26","Besides the comments above, a global change that could be added:
The Decoder could further facilitate useability of nilearn in many everyday decoding scenarios by setting the *hyper-parameter grids* for the estimators automatically. That would come in handy.","",""
"issue_comment","698","nilearn","nilearn","codecov[bot]","2017-03-21 13:11:57","# [Codecov](https://codecov.io/gh/nilearn/nilearn/pull/698?src=pr&el=h1) Report
> Merging [#698](https://codecov.io/gh/nilearn/nilearn/pull/698?src=pr&el=desc) into [master](https://codecov.io/gh/nilearn/nilearn/commit/2f825c480f6f7c9fbf4873e81121c4320dedd71d?src=pr&el=desc) will **decrease** coverage by `0.38%`.
> The diff coverage is `78.08%`.

[![Impacted file tree graph](https://codecov.io/gh/nilearn/nilearn/pull/698/graphs/tree.svg?src=pr&token=KpYArSdyXv&width=650&height=150)](https://codecov.io/gh/nilearn/nilearn/pull/698?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##           master     #698      +/-   ##
==========================================
- Coverage   94.66%   94.28%   -0.39%     
==========================================
  Files         120      123       +3     
  Lines       14686    14985     +299     
==========================================
+ Hits        13903    14129     +226     
- Misses        783      856      +73
```


| [Impacted Files](https://codecov.io/gh/nilearn/nilearn/pull/698?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [nilearn/\_utils/fixes/sklearn\_metrics.py](https://codecov.io/gh/nilearn/nilearn/pull/698?src=pr&el=tree#diff-bmlsZWFybi9fdXRpbHMvZml4ZXMvc2tsZWFybl9tZXRyaWNzLnB5) | `0% <0%> (ø)` | |
| [nilearn/decoding/tests/test\_decoder.py](https://codecov.io/gh/nilearn/nilearn/pull/698?src=pr&el=tree#diff-bmlsZWFybi9kZWNvZGluZy90ZXN0cy90ZXN0X2RlY29kZXIucHk=) | `100% <100%> (ø)` | |
| [nilearn/decoding/\_\_init\_\_.py](https://codecov.io/gh/nilearn/nilearn/pull/698?src=pr&el=tree#diff-bmlsZWFybi9kZWNvZGluZy9fX2luaXRfXy5weQ==) | `100% <100%> (ø)` | :arrow_up: |
| [nilearn/\_utils/fixes/\_\_init\_\_.py](https://codecov.io/gh/nilearn/nilearn/pull/698?src=pr&el=tree#diff-bmlsZWFybi9fdXRpbHMvZml4ZXMvX19pbml0X18ucHk=) | `78.94% <60%> (-7.72%)` | :arrow_down: |
| [nilearn/decoding/decoder.py](https://codecov.io/gh/nilearn/nilearn/pull/698?src=pr&el=tree#diff-bmlsZWFybi9kZWNvZGluZy9kZWNvZGVyLnB5) | `85.2% <85.2%> (ø)` | |
| [nilearn/\_utils/testing.py](https://codecov.io/gh/nilearn/nilearn/pull/698?src=pr&el=tree#diff-bmlsZWFybi9fdXRpbHMvdGVzdGluZy5weQ==) | `82.26% <0%> (-1.74%)` | :arrow_down: |
| [nilearn/plotting/glass\_brain.py](https://codecov.io/gh/nilearn/nilearn/pull/698?src=pr&el=tree#diff-bmlsZWFybi9wbG90dGluZy9nbGFzc19icmFpbi5weQ==) | `86.66% <0%> (-0.84%)` | :arrow_down: |
| [nilearn/tests/test\_cache\_mixin.py](https://codecov.io/gh/nilearn/nilearn/pull/698?src=pr&el=tree#diff-bmlsZWFybi90ZXN0cy90ZXN0X2NhY2hlX21peGluLnB5) | `97.61% <0%> (-0.77%)` | :arrow_down: |
| [nilearn/\_utils/cache\_mixin.py](https://codecov.io/gh/nilearn/nilearn/pull/698?src=pr&el=tree#diff-bmlsZWFybi9fdXRpbHMvY2FjaGVfbWl4aW4ucHk=) | `88.67% <0%> (-0.75%)` | :arrow_down: |
| [nilearn/decomposition/canica.py](https://codecov.io/gh/nilearn/nilearn/pull/698?src=pr&el=tree#diff-bmlsZWFybi9kZWNvbXBvc2l0aW9uL2NhbmljYS5weQ==) | `94.73% <0%> (-0.27%)` | :arrow_down: |
| ... and [9 more](https://codecov.io/gh/nilearn/nilearn/pull/698?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/nilearn/nilearn/pull/698?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/nilearn/nilearn/pull/698?src=pr&el=footer). Last update [2f825c4...dc22a23](https://codecov.io/gh/nilearn/nilearn/pull/698?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
","",""
"issue_comment","698","nilearn","nilearn","KamalakerDadi","2017-05-05 08:36:53","You have missed to found some target in ```doc/building_blocks/manual_pipeline.rst``` related to example
plot_decoding_tutorial. Hence the CircleCI failure. Could you have a look at it ?

Please ping me whenever it is ready to review.","",""
"issue_comment","698","nilearn","nilearn","ahoyosid","2017-05-06 16:48:03","@KamalakerDadi I actually have not idea what this conflict is about, any insights?","",""
"issue_comment","698","nilearn","nilearn","KamalakerDadi","2017-05-06 16:52:10",">@KamalakerDadi I actually have not idea what this conflict is about, any insights?

I didn't get you. Which conflict ?","",""
"issue_comment","698","nilearn","nilearn","ahoyosid","2017-05-06 17:04:28","The circle ci failure","",""
"issue_comment","698","nilearn","nilearn","KamalakerDadi","2017-05-06 21:56:00",">The circle ci failure

For me there is no problem with the failure which CircleCI shows in ""doc/building_blocks/manual_pipeline.rst"" related to WARNING: image file not readable: building_blocks/../auto_examples/images/sphx_glr_plot_decoding_tutorial_002.png.

 I ran locally everything and it seems good for me that file is read in the doc, see pics below:

![decoder](https://cloud.githubusercontent.com/assets/11410385/25776145/88233eda-32b6-11e7-87b0-a4ccf72aa4cc.png)

![decoder2](https://cloud.githubusercontent.com/assets/11410385/25776146/8c2978a0-32b6-11e7-8c64-9043753ea3f8.png)

Could you try rebasing, may be ?
","",""
"pull_request_commit_comment","698","nilearn","nilearn","banilo","2015-07-17 09:31:03","General comment: the name is too general. How about ""MetaEstimator"" to include both classification and regression.
","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/__init__.py')"
"pull_request_commit_comment","698","nilearn","nilearn","banilo","2015-07-17 09:48:02","People might wonder what the difference between svc and svc_l2 is? Just leave one in here for parsimony?
","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","banilo","2015-07-17 09:48:19","How about the L1 pendant: Lasso?
","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","banilo","2015-07-17 09:50:00","rather ""a wrapper for popular classification/regression pipelines""
","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","banilo","2015-07-17 09:51:12","mention that averaging equates with bagging here
","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","banilo","2015-07-17 09:54:53","perhaps mention that continuous values for regression and discrete values for classification
","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","ahoyosid","2015-07-17 09:56:35","It is possible to use other estimators (at your own risk), for instance 
Decoder(estimator = Lasso(alpha=1.))
","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","banilo","2015-07-17 10:03:32","interesting...
","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","banilo","2015-07-17 10:26:10","Is this line (and the similar ones below) good practice?
","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","banilo","2015-07-17 10:38:03","typo
","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","banilo","2015-07-17 12:39:45","add some `check_niimg`here for argument checking?
","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","banilo","2015-07-17 12:40:36","combine the 2 if statements by an AND
","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","banilo","2015-07-17 12:48:34","the goal is not quite clear
","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","banilo","2015-07-17 12:50:45","perhaps consider putting it in front of the class, given that is a helper function used in that class
","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","banilo","2015-07-17 12:51:03","free space missing
","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","banilo","2015-07-17 12:58:32","perhaps normal, more understandable if-clause instead
","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","banilo","2015-07-17 12:59:47","Where does this heuristic for the parameter grid come from? There should be an informatic comment on that.
","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","banilo","2015-07-17 13:00:23","line missing here
","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","ahoyosid","2015-07-17 13:03:38","done
","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","banilo","2015-07-17 13:06:23","What does POS stand for? 
","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","ahoyosid","2015-07-17 13:08:04","pos_label = possitive label
","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","banilo","2015-07-17 13:10:00","y,   ??
","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","banilo","2015-07-17 13:24:09","Does view() on numpy arrays really make sense if you do not specify a non-identical dtype?
","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","AlexandreAbraham","2015-07-17 14:20:28","Nitpicking. In `[0., 100]`, one is float and one is int.
","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","AlexandreAbraham","2015-07-17 14:23:07","At first read, the role of this parameter is not obvious to me.
","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","AlexandreAbraham","2015-07-17 14:24:23","Why must it be iterable?
","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","AlexandreAbraham","2015-07-17 14:27:03","Can it really be a tuple?
","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","AlexandreAbraham","2015-07-17 14:27:12","Continue?
","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","ahoyosid","2015-07-17 14:44:20","yes, it will train the estimator
","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","ahoyosid","2015-07-17 14:45:29","well, I used index_img as reference
","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","eickenberg","2015-07-19 12:52:02","I would put `memory=None` and set it within the function to `Memory(cachedir=None)` -- there is always a risk in putting mutable objects as function defaults.
","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","eickenberg","2015-07-19 12:53:00","lengths
","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","KamalakerDadi","2016-06-08 10:37:51","path: `examples/02_decoding/plot_haxby_decoder.py` can be changed I guess.

For all examples: numbers are added to control the ordering.
","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'examples/decoding/plot_haxby_decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","KamalakerDadi","2016-06-08 10:38:36","same here.....examples path `decoding` to `02_decoding`
","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'examples/decoding/plot_oasis_vbm_decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","KamalakerDadi","2016-06-08 10:46:16","You can remove comment here. It is there below.
","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'examples/decoding/plot_haxby_decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","KamalakerDadi","2016-06-08 10:48:01","grammar: ""a"" or ""the"" ?
","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'examples/decoding/plot_haxby_decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","KamalakerDadi","2016-06-08 10:48:57","You could add reference of Haxby 2001 here. It will be easy for users to follow.
","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'examples/decoding/plot_haxby_decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","KamalakerDadi","2016-06-08 10:49:23","datasets imported already above
","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'examples/decoding/plot_haxby_decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","KamalakerDadi","2016-06-08 10:51:12","same here already imported above. May be like in other examples it will be good to import at the usage area than top.
","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'examples/decoding/plot_haxby_decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","KamalakerDadi","2016-06-08 10:56:25","We tell users to give coordinates as a list such as [ ]. For more details on this analogy #1017 
","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'examples/decoding/plot_haxby_decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","KamalakerDadi","2016-06-08 11:52:18","May be you can remove comment. For me it is not necessary. Do you think so ?
","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/_utils/fixes/__init__.py')"
"pull_request_commit_comment","698","nilearn","nilearn","KamalakerDadi","2016-06-08 16:41:08","If I am not wrong. You can validate basestring using from nilearn. `nilearn._utils.compat`. I think this might be reason for circleci failure.
","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","KamalakerDadi","2016-06-08 16:43:19","Can you change this line to same as what you have done above for Load Haxby dataset.
starts with ##### and then your headline or title.
","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'examples/02_decoding/plot_haxby_decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","KamalakerDadi","2016-06-08 16:43:50","same here with ##### then headline.
","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'examples/02_decoding/plot_oasis_vbm_decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","KamalakerDadi","2016-06-08 16:44:46","Its written two times ""Load Haxby dataset""
","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'examples/02_decoding/plot_haxby_decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","KamalakerDadi","2016-06-08 16:47:59","Sorry, I was not clear enough regarding references part. You can have a look at example `plot_canica_resting_state.py` for example pointing a reference.
","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'examples/02_decoding/plot_haxby_decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","KamalakerDadi","2016-06-08 18:46:12","grammar here ""a"" or ""the""
","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'examples/02_decoding/plot_haxby_decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","KamalakerDadi","2016-06-08 18:48:39","smoothing ""should be"" applied to the .....
","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'examples/02_decoding/plot_oasis_vbm_decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","KamalakerDadi","2016-06-08 18:49:55","some typo here, may be ?
","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'examples/02_decoding/plot_oasis_vbm_decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","lesteve","2016-06-09 08:19:05","basestring is not defined in Python 3. Use `from nilearn._utils.compat import _basestring`.
","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/_utils/fixes/scikit_learn_scorer.py')"
"pull_request_commit_comment","698","nilearn","nilearn","lesteve","2016-06-09 08:20:43","Same thing about basestring.
","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/_utils/fixes/scikit_learn_utils.py')"
"pull_request_commit_comment","698","nilearn","nilearn","GaelVaroquaux","2017-02-21 14:52:11","Don't specify the number of subjects: by default it's only 1, and the second one.","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'examples/02_decoding/plot_haxby_decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","GaelVaroquaux","2017-02-21 15:26:45","Let us not store coef_ and std_coef_ in the estimator as we are storing the images in coef_img_ and std_coef_img_","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","GaelVaroquaux","2017-02-21 15:30:23","cv=3 seems very small.
screening_percentile=20 is the default, you don't need to specify it, as well as standardize.","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'examples/02_decoding/plot_haxby_decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","GaelVaroquaux","2017-02-21 15:33:25","Use the default vmax and simplify the code above (you can remove the affine, the k_slice, ... it makes things much more simple)","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'examples/02_decoding/plot_oasis_vbm_decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","GaelVaroquaux","2017-04-06 08:24:09","Plot the face map computed above.","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'examples/02_decoding/plot_haxby_different_estimators.py')"
"pull_request_commit_comment","698","nilearn","nilearn","GaelVaroquaux","2017-04-06 08:27:06","Rephrase as:

Also, all parameters should be set by cross-validation. This includes the smoothing applied to the data and the number of features selected by the Anova step. Indeed, even these data-preparation parameter impact significantly the prediction score.","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'examples/02_decoding/plot_oasis_vbm.py')"
"pull_request_commit_comment","698","nilearn","nilearn","GaelVaroquaux","2017-04-06 08:29:46","Do we need the line above?","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'examples/02_decoding/plot_oasis_vbm.py')"
"pull_request_commit_comment","698","nilearn","nilearn","GaelVaroquaux","2017-04-06 08:30:06","Do we need to convert to an array?","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'examples/02_decoding/plot_oasis_vbm.py')"
"pull_request_commit_comment","698","nilearn","nilearn","GaelVaroquaux","2017-04-06 08:39:55","Typo","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'examples/02_decoding/plot_oasis_vbm.py')"
"pull_request_commit_comment","698","nilearn","nilearn","GaelVaroquaux","2017-04-06 08:43:07","We should still plot the mask, so that people understand what we are doing.","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'examples/plot_decoding_tutorial.py')"
"pull_request_commit_comment","698","nilearn","nilearn","GaelVaroquaux","2017-04-06 08:45:33","Let's forget about ""coef_"" and directly focus to coef_img_","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'examples/plot_decoding_tutorial.py')"
"pull_request_commit_comment","698","nilearn","nilearn","GaelVaroquaux","2017-04-06 08:52:16","We should have either C or alpha, but not both.","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","GaelVaroquaux","2017-04-06 08:53:42","I find the whole set of tests above too open: it is hard to know what estimators are accepted by the code, and which one will work by chance because they go through the chain of if/then without error (aka ""unbounded cyclomatic complexity"")","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(81, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","GaelVaroquaux","2017-04-06 08:56:01","Avoid renaming a variable like this.","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","GaelVaroquaux","2017-04-06 08:56:24","Typo","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","GaelVaroquaux","2017-04-06 08:57:55","""negated"" not ""inverse""","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","GaelVaroquaux","2017-04-06 09:01:35","You should use nilearn._utils.cache_mixin._check_memory","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","GaelVaroquaux","2017-04-06 09:02:11","You accept csr, csc, and coo?","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","GaelVaroquaux","2017-04-06 09:02:47","else: raise warning","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(393, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","GaelVaroquaux","2017-04-06 09:06:00","Move this line outside the for loop","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","GaelVaroquaux","2017-04-06 09:09:52","I don't think that we need the check: it's done in the transform","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","GaelVaroquaux","2017-04-06 09:10:47","Typo","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/tests/test_decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","KamalakerDadi","2017-04-10 14:54:31","May be this file should be removed ? Not used anywhere.","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/_utils/fixes/sklearn_grid_search.py')"
"pull_request_commit_comment","698","nilearn","nilearn","KamalakerDadi","2017-04-10 14:58:14","Any reason you leaved space here ?","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","KamalakerDadi","2017-04-10 15:06:08","```svc``` and ```svc_l2``` are repeated two times. I think we should keep ```svc_l2``` as it is clearly stated by name that svclassifier is used with l2 penalty. This comment also applies near documentation section in class ```BaseDecoder```, ```Decoder```, ```DecoderRegressor```. Keeping estimator option as svc_l2 rather than svc.","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(46, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","KamalakerDadi","2017-04-10 15:06:56","ridge regression is repeated twice by name ```ridge```. May be we can remove one which is ```ridge```.","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(52, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","KamalakerDadi","2017-04-10 15:35:22","Can you please add documentation for this one please ? It will be very useful to have a quick look at documentation. Also, adding a reference or pointing to refer scikit learn ```l1_min_c``` regarding why we choose particular loss function to particular estimator would be useful.","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(57, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","KamalakerDadi","2017-04-10 15:35:44","Why don't we check for Ridge or RidgeClassifier rather than _BaseRidge since we have pre-defined them in SUPPORTED_ESTIMATORS ? ","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(66, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","KamalakerDadi","2017-04-10 15:37:20","Correct me if I miss something here ?","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(66, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","KamalakerDadi","2017-04-10 15:39:04","Can you add comment here ? Is loss='squared_hinge' exists only for version > 0.17 ?","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","KamalakerDadi","2017-04-10 15:40:58","Same here about documentation. Can you please add documentation here please ?","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","KamalakerDadi","2017-04-10 15:41:17","performance typo","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","KamalakerDadi","2017-04-10 15:43:52","Can you add comments at each crucial steps please ?","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","KamalakerDadi","2017-04-10 15:44:59","May be do_screening is missing here or not needed ?
```python
if (selector is not None) and do_screening:
```","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","KamalakerDadi","2017-04-10 15:48:54","You need to move to class level but not in fit level.","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","KamalakerDadi","2017-04-10 15:53:25","```svc``` to ```svc_l2``` will be a bit clear that it is a l2 classifier.","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","KamalakerDadi","2017-04-10 15:54:59","mask: to mask : (space is missing here.)

also NiImage to Nifti1Image. We use the same naming at most of the classes documentation.","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","KamalakerDadi","2017-04-10 16:02:10","""then its mask and parameters will be used."" I think it will be more clear.
Correct me if I am wrong here.","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","KamalakerDadi","2017-04-10 16:03:23","May be ""mask will be computed automatically from provided images by an inbuilt masker with default parameters.
Refer to NiftiMasker or MultiNiftiMasker to check for default parameters "" would be more clear I think.","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","KamalakerDadi","2017-04-10 16:04:14","```int``` is missing here.  For instance, cv can also be integer.","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","KamalakerDadi","2017-04-10 16:08:10","I think some details are missing here. From seeing the same parameter in nilearn._utils.param_validation.py in _adjust_screening_percentile. AFAIK adding more details at object level would help for users.","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","KamalakerDadi","2017-04-10 16:08:45","space missing at "":"". screening_percentile :","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","KamalakerDadi","2017-04-10 16:09:00","default is missing here.","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","KamalakerDadi","2017-04-10 16:09:21","string to str.","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","KamalakerDadi","2017-04-10 16:10:28","Can you also add notations please ?","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","KamalakerDadi","2017-04-10 16:10:47","boolean -> bool.","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","KamalakerDadi","2017-04-10 16:11:25","Default is mentioned twice here.","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","KamalakerDadi","2017-04-10 16:12:17","default is missing here.","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","KamalakerDadi","2017-04-10 16:14:03","smoothing_fwhm :","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","KamalakerDadi","2017-04-10 16:14:25","space missing before :","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","KamalakerDadi","2017-04-10 16:14:52","same here space missing. To keep in consistency.","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","KamalakerDadi","2017-04-10 16:15:25","is_classif documentation is missing.","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(283, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","KamalakerDadi","2017-04-10 16:16:15","integer to int. Also, space is missing before :","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","KamalakerDadi","2017-04-10 16:20:22","By default None, meaning that no scoring method used at all ?

If scoring method is used, I think we should mention what scoring method is used by default.","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","KamalakerDadi","2017-04-10 16:21:15","I see self.is_classif=is_classif is also missing. Is it not required ?","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(283, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","KamalakerDadi","2017-04-10 16:30:06","Can you check please if it passes when provided with a list of images ? ","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(310, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","KamalakerDadi","2017-04-10 16:31:44","N capital for Nifti","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","KamalakerDadi","2017-04-10 16:32:22","It can also be MultiNiftiMasker isn't it ?","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","KamalakerDadi","2017-04-10 16:32:50","NiImage to Nifti1Image","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","KamalakerDadi","2017-04-10 16:33:56","Some have with space : and some without space : 
May be we keep same at all places for consistency.","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","KamalakerDadi","2017-04-10 16:35:02","NiImage -> Nifti1Image","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","KamalakerDadi","2017-04-10 16:45:54","May be its IQ ?","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","KamalakerDadi","2017-04-10 16:47:50","May be check is it an estimator and raise a warning then ?
Regarding warning message: ""Estimator is expected as string {0} but you provided your own custom estimator {1}.""","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","KamalakerDadi","2017-04-10 16:49:17","Why not error ?","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(393, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","ahoyosid","2017-04-10 19:48:37","Indeed","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/_utils/fixes/sklearn_grid_search.py')"
"pull_request_commit_comment","698","nilearn","nilearn","ahoyosid","2017-04-10 19:49:00","not really ","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","ahoyosid","2017-04-10 19:55:01","ok.
","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(57, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","ahoyosid","2017-04-10 19:55:11","ok","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","ahoyosid","2017-04-10 19:55:43","ok","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","ahoyosid","2017-04-10 19:56:17","ok","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","ahoyosid","2017-04-10 19:56:23","ok","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","ahoyosid","2017-04-10 19:56:30","ok","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","ahoyosid","2017-04-10 19:56:49","ok","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","ahoyosid","2017-04-10 19:57:26","It is not required","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(283, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","ahoyosid","2017-04-10 19:57:49","yes, it is","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","ahoyosid","2017-04-10 19:58:07","What do you mean?","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","ahoyosid","2017-04-10 19:58:22","ok","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","ahoyosid","2017-04-10 19:58:28","ok","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","ahoyosid","2017-04-10 19:58:38","Indeed","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","ahoyosid","2017-04-10 20:13:18","The svc is assumed to have (by default) an \ell_2 penalty. Nevertheless, I'll prefer to leave both, the explicit 'svc_l2' and the implicit 'svc'. 
However, I'll what the people commands.  ","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(46, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","ahoyosid","2017-04-10 20:13:39","same answer as before...","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(52, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","ahoyosid","2017-04-10 20:15:21","It can be done as you say. By checking _BaseRidge we can check both (we save one word!!!).","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(66, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","ahoyosid","2017-04-10 20:16:29","Do you have something in mind?, I mean at this point my creativity is reaching its lower bound.","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","KamalakerDadi","2017-04-10 20:16:45","Thats because you know scikit learn API very well. Not necessary that everybody knows scikit learn API. For instance, neuroimaging user.

Atleast you should try state that in documentation","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(46, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","ahoyosid","2017-04-10 20:18:16","WDYM?","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","ahoyosid","2017-04-10 20:23:23","ok","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(46, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","KamalakerDadi","2017-04-10 20:25:36","That's right. But, I gave input as estimator='ridge_regression' then estimator now has object as Ridge() but not _BaseRidge(). Isn't it ?","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(66, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","ahoyosid","2017-04-10 20:30:11","Both, Ridge and RidgeClassifier are instances of _BaseRidge","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(66, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","KamalakerDadi","2017-04-10 20:39:51","Why do we take memory as an attribute ? It is not documented as not used anywhere ?","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","KamalakerDadi","2017-04-10 20:42:01","But then you are using it here self.is_classif ?","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(404, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","KamalakerDadi","2017-04-10 20:45:54","Can you rephrase this comment please? ATM it is not clear","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","KamalakerDadi","2017-04-10 20:47:38","I meant callable signature like this ```scorer(estimator, X, y)```. In this case, X and y are X_test and y_test ?","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","ahoyosid","2017-04-10 20:53:53","It is used, we are using the CacheMixin to define the BaseDecoder","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","KamalakerDadi","2017-04-10 21:01:14","I don't think we need to add in doc.","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","KamalakerDadi","2017-04-10 21:27:06","verbose should be a ```int``` rather than ```bool```. verbose=0 by default.","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","ahoyosid","2017-04-10 21:32:08","ok","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","KamalakerDadi","2017-04-10 21:34:49","May be Section called 
```python
See Also
------------
nilearn.decoding.DecoderRegressor -  regression strategies for Neuroimaging.

```
Something like this. May be you can see plotting modules for reference.","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","KamalakerDadi","2017-04-10 21:35:27","regressor should be removed ?","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","KamalakerDadi","2017-04-10 21:36:49","I think same comments from ```BaseDecoder``` can be applied here as well.","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","KamalakerDadi","2017-04-10 21:38:55","classifier can be removed here ?","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","KamalakerDadi","2017-04-10 21:39:39","By default should be regressor. Isn't it ?","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","KamalakerDadi","2017-04-11 07:35:58","Also, a See Also section here pointing to Decoder for classification problems.","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","KamalakerDadi","2017-04-11 07:51:28","There are some unused imports here. Can you check please ?","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/tests/test_decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","KamalakerDadi","2017-04-11 07:57:20","I think now you should be able to import ```from nilearn.decoding import Decoder, DecoderRegressor```","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/tests/test_decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","KamalakerDadi","2017-04-11 07:58:57","May be you can remove this one.","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/tests/test_decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","banilo","2017-04-23 21:56:40","Shouldn't this rather be ""DecoderClassifier"" analogous to the sklearn conventions?","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(4, '', u'doc/modules/reference.rst')"
"pull_request_commit_comment","698","nilearn","nilearn","banilo","2017-04-23 21:57:53","hey, we got into the convention of printing the paths for the sake of transparency","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(21, '', u'examples/02_decoding/plot_haxby_decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","banilo","2017-04-23 21:59:01","skip b in front of strings if possible. >90% of users won't know what it means.","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(34, '', u'examples/02_decoding/plot_haxby_decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","banilo","2017-04-23 21:59:19","explain ""6"" in comment","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'examples/02_decoding/plot_haxby_decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","banilo","2017-04-23 22:00:13","%f is more common, %g might potentially confuse more people","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'examples/02_decoding/plot_haxby_decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","banilo","2017-04-23 22:00:58","cf. above","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(78, '', u'examples/02_decoding/plot_haxby_decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","banilo","2017-04-23 22:05:48","""sorted"" may not be necessary","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'examples/02_decoding/plot_haxby_different_estimators.py')"
"pull_request_commit_comment","698","nilearn","nilearn","banilo","2017-04-23 22:08:50","something seems to be missing after the :","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'examples/plot_decoding_tutorial.py')"
"pull_request_commit_comment","698","nilearn","nilearn","banilo","2017-04-23 22:11:52","typo","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/tests/test_decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","banilo","2017-04-23 22:14:58","you probably mean ""hyper-parameter selection""","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","banilo","2017-04-23 22:19:07","The supported estimators do not seem to get printed in the exception message","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","banilo","2017-04-23 22:20:57","""in neuroimage"" avoids 2xfor","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","banilo","2017-04-23 22:21:50","you may want to mention the words yes/no to ""continuous"" and ""categorical""","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'nilearn/decoding/decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","KamalakerDadi","2017-04-24 07:38:34","I agree it confusing. But, ATM we will keep ```b``` otherwise it would fail in Python 3. This is a separate issue addressing in a pending PR #1411.","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(34, '', u'examples/02_decoding/plot_haxby_decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","ahoyosid","2017-04-24 21:24:14","Ok","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'examples/02_decoding/plot_haxby_different_estimators.py')"
"pull_request_commit_comment","698","nilearn","nilearn","ahoyosid","2017-04-24 21:32:34","where?","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(21, '', u'examples/02_decoding/plot_haxby_decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","GaelVaroquaux","2017-04-25 05:11:56","Most example. The idea is to add a line after that one similar to:
'print(""The functional imaging files are %r"" % func_filenames)'","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(21, '', u'examples/02_decoding/plot_haxby_decoder.py')"
"pull_request_commit_comment","698","nilearn","nilearn","KamalakerDadi","2017-05-05 08:32:44","""# # background"" -> ""# background""","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'examples/plot_decoding_tutorial.py')"
"pull_request_commit_comment","698","nilearn","nilearn","KamalakerDadi","2017-05-05 08:34:36","We will use a mask of the .........","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'examples/plot_decoding_tutorial.py')"
"pull_request_commit_comment","698","nilearn","nilearn","KamalakerDadi","2017-05-05 08:34:38","mask is already defined above. May be you want to remove this one or above one ?","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'examples/plot_decoding_tutorial.py')"
"pull_request_commit_comment","698","nilearn","nilearn","ahoyosid","2017-05-06 09:55:33","I'll remove it","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'examples/plot_decoding_tutorial.py')"
"pull_request_commit_comment","698","nilearn","nilearn","ahoyosid","2017-05-06 09:55:42","ok","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'examples/plot_decoding_tutorial.py')"
"pull_request_commit_comment","698","nilearn","nilearn","ahoyosid","2017-05-06 09:55:48","ok","dc22a23475df114e84ca8c1fc6a110b4e24b023d","(None, '', u'examples/plot_decoding_tutorial.py')"
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2015-07-16 20:08:47","adding decoder","ff7b676fcacafd07dbd823e3884fd59a7e363baf",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2015-07-17 12:58:29","adding cv_scores","07a96836c62a48f9280cf08f4d78bd156e145962",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2015-07-17 12:58:34","Merge branch 'master' of github.com:ahoyosid/nilearn into decoder","49a81ff2efdbb5c92c04e86483f46bfdc905d095",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2015-07-17 13:03:15","combining the 2 if statements by an AND","471ea7e342ea6ee769ce1723f123a1b1dca84a17",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2015-07-17 13:10:47","solving minor things, commas and spaces","848392ca378364579fcb0d5d1883d9f4f986e686",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2015-07-17 15:47:35","trying to solve make travis happy","f09f402182225e2da2e3e00e3fa46dd64bc004c8",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2015-07-17 20:47:44","changing Decoder description","1f41e0a9789f5df9cd056a9333e772a55679a63b",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2015-07-18 09:55:06","adding decoder into __init__","97514e9c3029697ad5a21b700b09913d5018eeb8",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2015-07-18 10:16:35","adding landscape messages and undoing _utils/fixes/__init__","a29ce5f1ae99e9c7231407fca2f5a582ed4949ce",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2015-07-18 10:18:42","removing unused modules","63835f27bc7de5026194a6ecb9dfda3f00ed6434",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2015-07-18 10:26:51","adding variables to reduce the number of lines for the -if","1a6ef47482e0241106775db608f5771d66380483",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2015-07-18 10:27:59","solving typo importing check_X_y","10aa812f02f7ca9e96a419948adfe7ff25cebb1a",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2015-07-19 13:27:35","changing the syntax to convert cv_pred into a list of dict","d061167332531bfd7c3e2866cf817484bf4a23a0",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2015-07-30 06:47:22","minor changes","084519f11e9242f9643f6491b2f0de59782e7a36",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2015-12-02 10:06:53","solving merging conflicts","1ee71cc9186e453dc8935b36c574188e336aab9e",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2015-12-02 10:30:38","adding scikit-learn dependencies","4b84961508de8cdb6e97d0497fb863041e1215d3",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2015-12-02 12:28:56","running oasis vbm with decoder meta estimator","1a6ac99fe6a6c8991e54f6a9001939ac35f6f284",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2015-12-02 12:29:41","adding example oasis vbm with decoder","afa063f24887671d32dfbad2f62820af7d8a0b3d",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2015-12-02 13:16:41","adding examples","a38e7888113a280244a3ceb4c997f9b54861a4cd",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2015-12-02 14:04:11","adding sklearn backport to validation","8986f0c667e2547f10c8bcea5a570d01e6077350",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2015-12-02 14:20:21","adding sklearn backport, paramgrid","28a8c47147e67b5a30b1e82cc1ff604c4c99e0c7",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2015-12-02 14:49:57","adding fixes sklearn scorer","c75afffbfe1b515288b5e0ea86110e3792f1f18e",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2015-12-02 15:12:39","solving import fixes","94154b7bb6eccaca6556a050cfdb8117009db277",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2015-12-02 15:55:15","adding check is fitted","ac1e0740576dea96a27d7d1d549e48ec6d2b3ca2",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2015-12-02 16:00:55","adding check is fitted to sklearn validation","33fe6af86f61e9c6c568262a1669c24480214da1",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2015-12-02 17:30:49","refactoring the code","8292f5ed4e4a3cc51d315498f81ae91cdc002c7f",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2015-12-02 18:19:13","adding score to the decoder object","ac6ac20f8c1b1ac275512dca3d2d665048c11cbb",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2015-12-02 20:37:49","adding scoring dictionary to avoid calling _scorer_func","3247bee08915fffb7c86b3b4546c6d5511d97646",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2015-12-02 20:40:39","removing local data_dir, examples","e3bec582bfa42f97d4e40fbf5d4444c767b25a0e",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2015-12-02 22:30:57","using is_classifier instead of is_regressor","1dcf36cd1bd2899f1899ed5e77737fab9726c518",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2015-12-02 23:44:26","changing fixes, putting all fixes in the __init__","514fca3520dc6e340b9bfbc7eee1e599fb1b2ce9",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2015-12-02 23:45:37","adding sklearn utils, using type of target","44497ebaf60f03b3f90cc0e88d167977f4af610d",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2015-12-03 00:13:29","removing multiclass and calling fixed","1f6c7fefe7a041d6453e4d6feca5d4d394e4d37f",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2015-12-03 00:30:51","adding with metaclass","40a1a03c38cd4175da4b4bfa6b6f44e79b9e281d",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2015-12-03 00:41:41","removing sic","3d6e44eb24b2f6624f42dabdea6b469039a4b572",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2016-04-18 12:31:45","minor changes","996f2794185fa71eb2a462ad19f1b061c54dc32d",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2016-06-08 09:33:37","Merge branch 'master' of github.com:nilearn/nilearn into decoder

Merging upstream master","d95bb470825fb8ec7981f32a207ccf4ffd43a73d",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2016-06-08 10:46:25","removing merging conflict, ini file","9d1da81542e8dacacb0714cd04d4ee619df25aa9",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2016-06-08 10:51:27","moving examples to 02_decoding","bca1192327a3c79817cd43b65dc71b76371722bb",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2016-06-08 11:02:28","changing tutple coords to list","f24f700113e5ee673b408a7897a0828d6212ace5",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2016-06-08 11:08:11","adding haxby ref","e8e8a64a426aa82fc3e159e1f31628ace4d96583",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2016-06-08 11:25:05","organizing imports in examples","af0e815ff2e4cdb8e1ecda4efb2300ede6322a90",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2016-06-08 12:03:50","removing a comment, trying to improve coveralls","cac4f4c465125e78004a867dcf832faffa086335",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2016-06-08 12:22:38","removing sklearn backport, it was useless","1104829cc9a3ac16b03507b72b9f1d4b5858a9f7",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2016-06-08 13:22:00","cleaning fixes ini","8c127dac88a4af0f97261c04be37f8b5fe8f3891",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2016-06-08 13:37:03","changing check array in validation","824b2a79e6fdb3d15a456e69f9353fc67c74e680",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2016-06-08 13:51:45","minor change","038c5ffc5543ebf0d080fd4a01cfe4f6e26f5ba5",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2016-06-09 09:43:57","minor changes on doc, changing basestring to _basestring","4c9c8d0630bb936349f63a5872b6fc609f4c84cd",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2016-06-09 09:54:51","minor change, basestring","956c8a69c48b260c7104a500a67a631c1479cdcd",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2016-06-09 10:09:24","minor changes for ci","d437bced2fed305d2599a2baca4b8b5a472c17af",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2016-06-09 10:21:29","minor change","45f835375cca6a97b85cfa61adce0473dbfee6fb",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2016-06-09 10:22:24","minor change","6f76df8012288a1fe276c957772d59b284285ebc",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2016-06-09 12:38:36","minor change","41bec8cd3c8d6506c4632a5e9a5ebc306faad6ad",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2016-06-09 12:49:58","minor change","00c2e54fbc06e774f130d3a58f263e7262f24f56",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2016-06-09 13:04:38","minor change","34b901306ae020698a85d58940fe503f60fe31c4",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2016-06-09 22:24:20","adding test file","438424c3b339a707a36d123db11a4c95763ebffa",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2016-06-09 23:06:59","starting with the tests","6b133f69cb09f6ac6e9d1d61272f054064e43e2e",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2016-06-10 12:48:59","minor change","7bc369df053e5d3807c7e72b7933dc707ed977d5",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2016-06-10 12:49:54","adding sklearn validation module","884c4db955220ec4740840ae88c765f17344d076",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2016-06-10 12:51:32","adding tests for the decoder","9b35f055d7aaf0e73fab0975c335da3c597bd360",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2016-06-10 13:04:04","It seems to be working","ae30900016bab74549765a7b55a5e4d92a9cc20a",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2016-06-10 13:27:57","changing LinearSVR to SVR","d0eeba04a66d396f8a5766b5225460878d262958",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2016-06-10 14:31:20","minro change","4c81dddeb73ee5f0f556215fd7cee01acc1c1f5c",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2016-06-10 14:51:45","trying to solve all these mystical CI conflicts","ec9d0ee5fabda70b52797bdf8a75fb6959ee5b78",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2016-06-10 15:38:10","minor change","73774736665871d30500b395c7fee397475fb254",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2016-06-10 16:01:10","minor change","d9b40eaa5e50194810db3ce9de97354f0d8a2641",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2016-06-10 22:14:11","minro change","c7b93a86554fceec3d90adf5e33a750f9ae42002",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2016-06-11 07:00:15","removing order, check array","b794fdb2cd3e3a62b73dbbf2ff73d554d86b6025",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2016-06-11 07:31:38","ensuring 2d, check array","7abdca06dcab9ab07e5d90cad4f3a48decf7d5ee",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2016-06-14 18:15:42","solving assert is instant conflict","c16a1332159585b44d644bfebcc6ebd9b3b34a49",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2016-06-14 19:57:25","using check_X_y","419611d6d3a795b301366bd5ae5086b9b912e906",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2016-06-15 09:17:50","adding test_decoder's doc","e8513a41433e6baee2c0dfc3f9874e2b4d4645c9",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2016-06-15 15:20:41","removing class_weight = auto, that caused a problem on sklearn 0.13","f62892ae23695e66c2f259b727a364eaa4fcd4cd",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2016-06-16 09:50:17","adding a b before the string","921395992f6e991eab858e3342dd547c37b3b11d",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2016-06-16 12:26:55","one last try","d31cc95835580b6dc6dd03bd8350180a2f0968fd",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2016-06-23 10:00:51","removing sklearn backports, moving the to another branch","155c6caf4ebd47737593b390cdd5f2a070b400ae",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2016-07-22 12:10:22","merging check length PR","9e0f848105f934d132ce26728c054bf6e4b7383f",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2016-07-22 12:36:55","updating","e972114fdfee68d2b6b03118f04dabc1b6d5f683",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2016-08-01 17:16:03","adding ParameterGrid backport","feed19ff56a24f0b16319139fd127b0825217710",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2016-08-01 21:35:45","adding check_sorer's backport","20e20bbebd0ec6ded1328ce6e764c85c6a23612d",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2016-08-01 21:38:48","removing fixes < sklearn 0.14","db18173950c6b8c673be9d6b5a2316461c3e858f",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2016-08-01 23:01:01","minor","026425dc3bc27e00c11553be54d68bfd5e655963",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2016-08-01 23:21:58","removing backport roc_auc, sklearn < 0.14","7b654bda9a3311b7fdf4131e7ec9b6d5d1f51bc0",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2016-08-03 07:52:36","Merge branch 'master' of github.com:nilearn/nilearn into decoder

merging master","b8bffbfe016ec5154e49748cdb1ff005740b3686",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2016-08-25 19:24:10","Merge branch 'master' of github.com:nilearn/nilearn into decoder

Pulling master","36550ab8e455de7b80e77525e01d45781b4d25ea",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2016-09-19 23:25:07","Merge branch 'master' of github.com:ahoyosid/nilearn into decoder

rebasing","0416c249318121c41b815d3c166b007fdc430c3f",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2016-12-06 18:21:47","Merge branch 'master' of github.com:ahoyosid/nilearn into decoder

Merging master","c2d052de264345ad869f222ab077b968a10a6b79",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2017-03-04 12:06:41","Using BaseDecoder, splitting into Decoder and DecoderRegression","db942dafd071b8917f505a8eb42f5ca554fcd1d9",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2017-03-04 17:07:19","adding TODO","8039137f870713ea49b39c55edc31c92cd4b4bd5",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2017-03-04 17:26:39","updating examples","61ef8408ca00da8c94d12310b819a6ae57444d2a",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2017-03-05 08:39:53","updating oasis example","847e11294e1d19dc0259706a5166b00f79fbda3d",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2017-03-05 08:41:42","testing","1cdb6bcc3648a92142532a3d0c5e623d765c4c39",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2017-03-05 09:44:54","removing unecessary test","423501393db85d3607960dd13feaf9a617c59440",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2017-03-06 14:40:12","adding scoring and parametergrid backport","a9c6a7d61c6468ea3142ca33c6d2c67a9cabdfa0",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2017-03-06 14:43:24","adding metrics backport","2292ca42cf1425956a099c62ed1286cd37b9c888",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2017-03-21 12:57:44","minor","1547259b46a861d043a2db95870509e07b7e0d34",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2017-03-21 17:33:14","improving doc","bf6b6631daffb33ac02ded06a2aa8f3b9bcbb082",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2017-03-21 17:39:52","adding some tests","90c841f6706a296244978ea309a3f2c51b322e9e",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2017-03-21 17:56:46","using the decoder in oasis","2078795f6cb04a6be3795fae861b19ad7a06654a",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2017-03-21 20:50:06","using list of dict keys","a89d7c2bb73a26797a7e4303d6847c85b848ce1b",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2017-03-22 14:31:59","updating plot_decoding_tutorial, now using the decoder","cbe87e944a65764f6259ed7278682ddb3746de38",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2017-04-05 08:30:21","minro","13eaa90f996c47696abb831419b4181a7a2436e0",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2017-04-05 12:51:54","updating the cv_scores_, and changing the plot_haxby_different_estimators example","e4b92b290f75eddfa42a744b12fb6d50dd7a49e8",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2017-04-06 08:03:58","WIP: decoding example","3c3654bdf5876bf0cccfbc18c55da43a1f9a89c3",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2017-04-10 18:21:50","improving examples, changing string to str","d22278a77d29a7492b94a17179ded2fd30189ad3",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2017-04-10 19:21:47","removing sklearn_grid_search","3bf73c1f8f147ced4c8ae82e21975c3bb89cf239",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2017-04-11 07:21:38","addressing some of the comments","0c2db588b0f18c40ea290eb5c97b16648bf700f8",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2017-04-11 09:05:11","minor","09d8e0574366374822a6d8c3a5c3ae3b6ea693b1",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2017-04-11 13:37:28","improving doc","c7a3dc84c634dc37a0adda4b2e95cea528175429",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2017-04-11 13:51:04","improving tests","0df53dc99ca9ee59de9c61fc47637e9413115742",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2017-04-11 14:00:16","minor","7b032553f3eb730637436ce2432bce79d3f6c6db",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2017-04-11 14:04:29","doc","39a2c0f48c2b1101b254b5736b834debd1a88590",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2017-04-11 14:33:35","minor","07995b7e46400dd10a40efee1aeef37d25923f18",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2017-04-14 10:51:10","improving visualization","3c17c409d44787ceb294c5ec5f2566d7609098a3",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2017-04-14 12:31:08","improving visualization","824fb54a37ca4c44366a17110ef799a35bdeb3a3",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2017-04-24 21:33:13","addressing Danilo's comments","a3f08d3803afb7c9024e71c0e7f2919b13b7da64",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2017-04-24 21:34:25","minor","a1674c1a8112c3c767d429a66f9445ac7d1d79da",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2017-04-25 19:45:42","adding path","d79fe6042fc7310b88d474cf4d7bfd84cb239cf9",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2017-05-06 11:49:45","minor","1607a545e650477e538ffb733d987de4866eb8c1",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2017-05-06 22:08:24","Merge branch 'master' of github.com:ahoyosid/nilearn into decoder

Merge master","9b8dae07435de44f8764abd0a7c759e039c94011",""
"pull_request_commit","698","nilearn","nilearn","ahoyosid","2017-06-11 13:16:43","Merge branch 'master' of github.com:ahoyosid/nilearn into decoder

merging master","dc22a23475df114e84ca8c1fc6a110b4e24b023d",""
