"rectype","issueid","project_owner","project_name","actor","time","text","action","title"
"issue_title","1097","nilearn","nilearn","alexsavio","2016-05-12 12:53:47","What about allowing scalar input arguments as well as `img_like` in `math_img`?
I created an adapter for it and as far as I see it wouldn't make any harm to be actually inside `math_img`. IMO this would help doing function composition with this function.

I guess I could add some checks or change how I check for a scalar, but a simple version would be this:

``` python
import numpy as np
from six import string_types

def math_img(formula, **imgs):
    """""" Use nilearn.image.math_img. """"""
    from nilearn.image import math_img
    for name, arg in imgs.items():
        if isinstance(arg, string_types):
            continue

        if np.isscalar(arg):
            formula = formula.replace(name, str(arg))
            imgs.pop(name)

    return math_img(formula=formula, **imgs)
```
","start issue","Allow scalars in `math_img`"
"issue_closed","1097","nilearn","nilearn","alexsavio","2016-05-12 13:06:48","","closed issue","Allow scalars in `math_img`"
"issue_comment","1097","nilearn","nilearn","GaelVaroquaux","2016-05-12 13:05:49","I am a bit worried that too much polymorphism leads to functions hard to
grasp and with horrible error message. In addition, I can see people
asking for more, once we allow scalars.
","",""
"issue_comment","1097","nilearn","nilearn","alexsavio","2016-05-12 13:06:30","Ok, no problem. I was just asking. :)
","",""
