"rectype","issueid","project_owner","project_name","actor","time","text","action","title"
"issue_title","385","pycqa","astroid","euresti","2017-01-04 05:02:26","Essentially, implement the getitem method in ClassDef which returns the correct value.

Fixes #348
","start issue","Implement __getitem__ inference for classes (using the metaclass)"
"issue_closed","385","pycqa","astroid","PCManticore","2017-01-22 12:49:59","","closed issue","Implement __getitem__ inference for classes (using the metaclass)"
"pull_request_title","385","pycqa","astroid","euresti","2017-01-04 05:02:26","Essentially, implement the getitem method in ClassDef which returns the correct value.

Fixes #348
","8465159364fb994e3828d8db6473f458e18372a2","Implement __getitem__ inference for classes (using the metaclass)"
"issue_comment","385","pycqa","astroid","coveralls","2017-01-04 05:06:50","
[![Coverage Status](https://coveralls.io/builds/9511543/badge)](https://coveralls.io/builds/9511543)

Coverage increased (+0.006%) to 89.259% when pulling **795d78506c687acf392b417f3630c968c07da5cf on euresti:classdef_getitem** into **7ec66f514de82b7a0b941dfb012403e92ee6e419 on PyCQA:master**.
","",""
"issue_comment","385","pycqa","astroid","euresti","2017-01-04 15:53:41","Hmm that's copy pasted from another method, should I fix the comment there
too?


On Jan 4, 2017 1:22 AM, ""Claudiu Popa"" <notifications@github.com> wrote:

> *@PCManticore* commented on this pull request.
> ------------------------------
>
> In astroid/scoped_nodes.py
> <https://github.com/PyCQA/astroid/pull/385#pullrequestreview-15077137>:
>
> > @@ -1509,6 +1510,29 @@ def _valid_getattr(node):
>                  pass
>          return False
>
> +    def getitem(self, index, context=None):
> +        """"""Return the inference of a subscript.
> +
> +        This is basically looking up the method in the metaclass and calling it.
> +        """"""
> +        try:
> +            methods = dunder_lookup.lookup(self, '__getitem__')
> +        except exceptions.AttributeInferenceError as error:
> +            util.reraise(exceptions.InferenceError(**vars(error)))
> +
> +        method = methods[0]
> +        # Rewrap index to Const for this case
>
> This comment does not seem true in this context, since we are not wrapping
> anything in Const.
>
> â€”
> You are receiving this because you authored the thread.
> Reply to this email directly, view it on GitHub
> <https://github.com/PyCQA/astroid/pull/385#pullrequestreview-15077137>,
> or mute the thread
> <https://github.com/notifications/unsubscribe-auth/ABCCAiKhIQrPyywSX9blICMyx-Mv_aV7ks5rO2TngaJpZM4LaSsV>
> .
>
","",""
"issue_comment","385","pycqa","astroid","coveralls","2017-01-05 15:41:58","
[![Coverage Status](https://coveralls.io/builds/9536633/badge)](https://coveralls.io/builds/9536633)

Coverage increased (+0.006%) to 89.259% when pulling **8465159364fb994e3828d8db6473f458e18372a2 on euresti:classdef_getitem** into **7ec66f514de82b7a0b941dfb012403e92ee6e419 on PyCQA:master**.
","",""
"issue_comment","385","pycqa","astroid","euresti","2017-01-05 20:37:07","Fixed the comment. What do you think?","",""
"issue_comment","385","pycqa","astroid","PCManticore","2017-01-22 12:49:59","Thank you for this! I merged this manually.","",""
"pull_request_commit_comment","385","pycqa","astroid","PCManticore","2017-01-04 09:22:47","This comment does not seem true in this context, since we are not wrapping anything in Const.","8465159364fb994e3828d8db6473f458e18372a2","(None, '', u'astroid/scoped_nodes.py')"
"pull_request_commit","385","pycqa","astroid","david@dropbox.com","2017-01-04 04:54:36","Implement __getitem__ inference for classes (using the metaclass)

Essentially implement the getitem method in ClassDef which returns the correct value.

Fixes #348","8465159364fb994e3828d8db6473f458e18372a2",""
