,rectype,issueid,project_owner,project_name,actor,time,text,action,title
0,issue_title,400,pycqa,astroid,rogalski,2017-02-07 21:49:58,Fixes #399.,start issue,Asynchronous comprehensions
1,issue_closed,400,pycqa,astroid,rogalski,2017-03-01 18:47:31,,closed issue,Asynchronous comprehensions
2,pull_request_title,400,pycqa,astroid,rogalski,2017-02-07 21:49:58,Fixes #399.,714abcc4758ff2120a0824533a2d075a8a57da69,Asynchronous comprehensions
3,pull_request_merged,400,pycqa,astroid,rogalski,2017-03-01 18:47:31,Asynchronous comprehensions,bf3d6876c310b39d045f6338ec8b93d2b1967072,Pull request merge from rogalski/astroid:async_comprehensions to PyCQA/astroid:master
4,issue_comment,400,pycqa,astroid,coveralls,2017-02-07 21:54:01,"
[![Coverage Status](https://coveralls.io/builds/10042723/badge)](https://coveralls.io/builds/10042723)

Coverage decreased (-2.03%) to 87.275% when pulling **edee41c6ffbc7fddbfada91b7d0b069a46b6d648 on rogalski:async_comprehensions** into **9ee1f58ba91a52148829a781f3bfcff6f659139e on PyCQA:master**.
",,
5,issue_comment,400,pycqa,astroid,coveralls,2017-02-07 21:57:34,"
[![Coverage Status](https://coveralls.io/builds/10042781/badge)](https://coveralls.io/builds/10042781)

Coverage decreased (-2.03%) to 87.275% when pulling **df99e25f292aa987f6c533f461666095781e6eed on rogalski:async_comprehensions** into **9ee1f58ba91a52148829a781f3bfcff6f659139e on PyCQA:master**.
",,
6,issue_comment,400,pycqa,astroid,coveralls,2017-02-07 22:01:48,"
[![Coverage Status](https://coveralls.io/builds/10042803/badge)](https://coveralls.io/builds/10042803)

Coverage increased (+0.008%) to 89.311% when pulling **df99e25f292aa987f6c533f461666095781e6eed on rogalski:async_comprehensions** into **9ee1f58ba91a52148829a781f3bfcff6f659139e on PyCQA:master**.
",,
7,issue_comment,400,pycqa,astroid,coveralls,2017-02-07 22:09:01,"
[![Coverage Status](https://coveralls.io/builds/10042923/badge)](https://coveralls.io/builds/10042923)

Coverage increased (+0.008%) to 89.311% when pulling **30dad28076353d8890b6542e60117d6205fc97ba on rogalski:async_comprehensions** into **9ee1f58ba91a52148829a781f3bfcff6f659139e on PyCQA:master**.
",,
8,issue_comment,400,pycqa,astroid,coveralls,2017-02-07 22:09:01,"
[![Coverage Status](https://coveralls.io/builds/10042923/badge)](https://coveralls.io/builds/10042923)

Coverage increased (+0.008%) to 89.311% when pulling **30dad28076353d8890b6542e60117d6205fc97ba on rogalski:async_comprehensions** into **9ee1f58ba91a52148829a781f3bfcff6f659139e on PyCQA:master**.
",,
9,issue_comment,400,pycqa,astroid,coveralls,2017-02-07 22:09:01,"
[![Coverage Status](https://coveralls.io/builds/10042923/badge)](https://coveralls.io/builds/10042923)

Coverage increased (+0.008%) to 89.311% when pulling **30dad28076353d8890b6542e60117d6205fc97ba on rogalski:async_comprehensions** into **9ee1f58ba91a52148829a781f3bfcff6f659139e on PyCQA:master**.
",,
10,issue_comment,400,pycqa,astroid,coveralls,2017-02-07 22:09:01,"
[![Coverage Status](https://coveralls.io/builds/10042923/badge)](https://coveralls.io/builds/10042923)

Coverage increased (+0.008%) to 89.311% when pulling **30dad28076353d8890b6542e60117d6205fc97ba on rogalski:async_comprehensions** into **9ee1f58ba91a52148829a781f3bfcff6f659139e on PyCQA:master**.
",,
11,issue_comment,400,pycqa,astroid,rogalski,2017-02-09 18:44:30,"@PCManticore thanks for the review, see new commits for fixes",,
12,issue_comment,400,pycqa,astroid,rogalski,2017-02-14 20:38:25,"@PCManticore since dunder for async iterables is `__aiter__` and not `__iter__`, I'd expect that by default some stuff will fail. I'll try to come up with a test case, but I haven't used asyncio at all, so it may take a while.",,
13,issue_comment,400,pycqa,astroid,PCManticore,2017-03-01 09:26:59,"@rogalski I think we can merge this as is, and create a new issue for adding support for ``__aiter__`` and async comprehension's ``assigned_stmts``. ",,
14,issue_comment,400,pycqa,astroid,rogalski,2017-03-01 11:43:46,"@PCManticore agreed. I'll do a merge commit, just so all tests can complete successfully and _squash and merge_ it afterwards.",,
15,pull_request_commit_comment,400,pycqa,astroid,PCManticore,2017-02-09 08:18:36,Let's put ``is_async`` in ``_other_fields``. ``_astroid_fields`` is only for objects which are AST objects.,714abcc4758ff2120a0824533a2d075a8a57da69,"(None, '', u'astroid/node_classes.py')"
16,pull_request_commit_comment,400,pycqa,astroid,PCManticore,2017-02-09 08:19:58,``' '.join('if %s' % n.accept(self) for i in ...)`` feels more natural to me.,714abcc4758ff2120a0824533a2d075a8a57da69,"(None, '', u'astroid/as_string.py')"
17,pull_request_commit_comment,400,pycqa,astroid,PCManticore,2017-02-09 08:20:42,"Check my previous comment regarding ``is_async``. Sorry, I think I misled you in a different PR, with a similar use case.",714abcc4758ff2120a0824533a2d075a8a57da69,"(None, '', u'astroid/rebuilder.py')"
18,pull_request_commit_comment,400,pycqa,astroid,PCManticore,2017-02-09 08:23:48,"You can use ``@`` to extract a particular node, instead of doing it manually, such as in this example:

```
f = extract_node('''
async def f():
   return [i async for i in...] #@
''')
# now f is the Return
```
Or you can use ``__()`` for a fine grained approach, as in:

```
f = extract_node('''
async def f():
   return __([i async for i in...])
''')
# now f is the comprehension
```",714abcc4758ff2120a0824533a2d075a8a57da69,"(None, '', u'astroid/tests/unittest_python3.py')"
19,pull_request_commit_comment,400,pycqa,astroid,PCManticore,2017-02-09 08:24:25,"A comment should be enough here. If I remember correctly, docstrings have special meaning in unittests.",714abcc4758ff2120a0824533a2d075a8a57da69,"(None, '', u'astroid/tests/unittest_python3.py')"
20,pull_request_commit,400,pycqa,astroid,rogalski,2017-02-07 21:49:36,Initial support for asynchronous comprehensions,d50417eea03d2e0098f4309166acc4aff652f51b,
21,pull_request_commit,400,pycqa,astroid,rogalski,2017-02-07 21:53:20,"Fix obvious regression for older interpreters, remove redundant comment",edee41c6ffbc7fddbfada91b7d0b069a46b6d648,
22,pull_request_commit,400,pycqa,astroid,rogalski,2017-02-07 21:56:43,Fix regression part2: add default value for getattr (...),df99e25f292aa987f6c533f461666095781e6eed,
23,pull_request_commit,400,pycqa,astroid,rogalski,2017-02-07 22:04:10,Fix bugs found by pylint,30dad28076353d8890b6542e60117d6205fc97ba,
24,pull_request_commit,400,pycqa,astroid,rogalski,2017-02-09 18:26:02,"Merge remote-tracking branch 'PyCQA/master' into async_comprehensions

# Conflicts:
#	ChangeLog",1a12c78b5444c27ff4cea448f9a5d95bfb142842,
25,pull_request_commit,400,pycqa,astroid,rogalski,2017-02-09 18:34:15,Fix review comments,f8eec36010a522b978567709beee8d99fa1c7316,
26,pull_request_commit,400,pycqa,astroid,rogalski,2017-02-09 18:39:39,Reuse inherited code instead of copy-pasting it,17874b88d3836c15c25f88a974e1350412b9cc10,
27,pull_request_commit,400,pycqa,astroid,rogalski,2017-02-28 20:16:15,Disable assigned_stmts for async fors and async comprehensions,00e28c5cabb88f06844c396a37d0969b51feda8e,
28,pull_request_commit,400,pycqa,astroid,rogalski,2017-03-01 18:38:34,"Merge remote-tracking branch 'PyCQA/master' into async_comprehensions

# Conflicts:
#	ChangeLog",714abcc4758ff2120a0824533a2d075a8a57da69,
0,issue_title,408,pycqa,astroid,rogalski,2017-02-28 21:19:38,Fixes PyCQA/pylint#1348,start issue,builder: fix detection of whether found file is a package when there is a __init__.py in file name
1,issue_closed,408,pycqa,astroid,rogalski,2017-04-02 11:55:28,,closed issue,builder: fix detection of whether found file is a package when there is a __init__.py in file name
2,pull_request_title,408,pycqa,astroid,rogalski,2017-02-28 21:19:38,Fixes PyCQA/pylint#1348,093f16b1f35464f84203689d94710cb72367f9eb,builder: fix detection of whether found file is a package when there is a __init__.py in file name
3,pull_request_merged,408,pycqa,astroid,rogalski,2017-04-02 11:55:28,builder: fix detection of whether found file is a package when there is a __init__.py in file name,92665fe273b9e5899fa28ef7f67d4794db42478f,Pull request merge from rogalski/astroid:builder_fix_detection_of_package to PyCQA/astroid:master
4,issue_comment,408,pycqa,astroid,PCManticore,2017-03-01 09:23:36,"I don't think that this is the root cause of that bug. In the reproducing example provided there, the package had a ``__init__.py`` file. We should check where astroid is raising the ImportError in the first place, in order to know what triggers the bug.",,
5,issue_comment,408,pycqa,astroid,rogalski,2017-03-05 09:20:08,"@PCManticore Well, all I know is that it fixes reported issue. I'm just no sure where is a place for an automated test.",,
6,pull_request_commit,408,pycqa,astroid,rogalski,2017-02-28 21:19:22,"builder: fix detection of whether found file is a package when there is a __init__.py in file name

Fixes PyCQA/pylint#1348",d8791ff449ef5cb8518a9ac0e59c1084842fdf7d,
7,pull_request_commit,408,pycqa,astroid,rogalski,2017-03-27 19:56:47,Add unit test,5a88003f5c366c81cf209cb7d8faa8dcb76efde7,
8,pull_request_commit,408,pycqa,astroid,rogalski,2017-03-27 19:57:06,Merge branch 'master' into builder_fix_detection_of_package,f1257b9265eea33a0969ca45f790dd2e6090653c,
9,pull_request_commit,408,pycqa,astroid,rogalski,2017-04-02 11:42:47,remove not needed test,f0dd1d23dddfe5ed571a73d6e96d2e9e5805ca77,
10,pull_request_commit,408,pycqa,astroid,rogalski,2017-04-02 11:48:21,remove not needed empty line removal,093f16b1f35464f84203689d94710cb72367f9eb,
0,issue_title,390,pycqa,astroid,euresti,2017-01-26 06:41:36,"### Fixes / new features
- Adds support so typing.NamedTuple(...) actually infers something useful.
",start issue,Add inference for typing.NamedTuple
1,issue_closed,390,pycqa,astroid,PCManticore,2017-03-01 09:16:44,,closed issue,Add inference for typing.NamedTuple
2,pull_request_title,390,pycqa,astroid,euresti,2017-01-26 06:41:36,"### Fixes / new features
- Adds support so typing.NamedTuple(...) actually infers something useful.
",cfe156629037195eeb43181efa5bdd09eb15c1c0,Add inference for typing.NamedTuple
3,pull_request_merged,390,pycqa,astroid,PCManticore,2017-03-01 09:16:44,Add inference for typing.NamedTuple,8b1806802047b59bc316578689d5d7421b930e10,Pull request merge from euresti/astroid:brain_typing_namedtuple to PyCQA/astroid:master
4,issue_comment,390,pycqa,astroid,coveralls,2017-01-26 06:45:30,"
[![Coverage Status](https://coveralls.io/builds/9850372/badge)](https://coveralls.io/builds/9850372)

Coverage decreased (-2.2%) to 87.126% when pulling **abf03d062a53208d662a973c34cd395907c1987d on euresti:brain_typing_namedtuple** into **a9430c92981124e1868c525a29f053f0d7661e4b on PyCQA:master**.
",,
5,issue_comment,390,pycqa,astroid,rogalski,2017-02-28 19:35:09,@euresti are you willing to make tests all tests pass and finish up this change? It would be nice to have it before releasing Pylint 1.7.0 (first release wih Python 3.6 support).,,
6,issue_comment,390,pycqa,astroid,euresti,2017-03-01 00:38:25,Sorry for the delay I'll work on this today or tomorrow.,,
7,issue_comment,390,pycqa,astroid,euresti,2017-03-01 06:51:16,Ok hope that's good enough.  ,,
8,issue_comment,390,pycqa,astroid,PCManticore,2017-03-01 09:17:04,Thanks so much @euresti for this! Thank you @rogalski for helping with the review.,,
9,pull_request_commit_comment,390,pycqa,astroid,PCManticore,2017-02-09 09:00:07,This can raise ``InferenceError``. We need to catch it and raise ``UseInferenceDefault`` instead.,cfe156629037195eeb43181efa5bdd09eb15c1c0,"(None, '', u'astroid/brain/brain_typing.py')"
10,pull_request_commit_comment,390,pycqa,astroid,PCManticore,2017-02-13 22:20:58,Why would this block raise AttributeError?,cfe156629037195eeb43181efa5bdd09eb15c1c0,"(None, '', u'astroid/brain/brain_typing.py')"
11,pull_request_commit_comment,390,pycqa,astroid,euresti,2017-02-17 14:50:18,"Well I'm not checking whether `node.args[1]` actually has an `elts` Or whether that elt has more elts in `elt.elts[0]`
  ",cfe156629037195eeb43181efa5bdd09eb15c1c0,"(None, '', u'astroid/brain/brain_typing.py')"
12,pull_request_commit_comment,390,pycqa,astroid,euresti,2017-02-17 14:50:57,I'll fix this.,cfe156629037195eeb43181efa5bdd09eb15c1c0,"(None, '', u'astroid/brain/brain_typing.py')"
13,pull_request_commit_comment,390,pycqa,astroid,rogalski,2017-02-19 20:06:22,Decorate it with `@test_utils.require_version('3.6')`,cfe156629037195eeb43181efa5bdd09eb15c1c0,"(None, '', u'astroid/tests/unittest_brain.py')"
14,pull_request_commit_comment,390,pycqa,astroid,rogalski,2017-02-19 20:09:10,Maybe moving it just above actual usage is a good idea?,cfe156629037195eeb43181efa5bdd09eb15c1c0,"(None, '', u'astroid/brain/brain_typing.py')"
15,pull_request_commit_comment,390,pycqa,astroid,rogalski,2017-02-19 20:11:11,"I'd limit catching AttributeErrpr just to `node.args[1].elts`.

Can you clarify second statement in comment above?",cfe156629037195eeb43181efa5bdd09eb15c1c0,"(None, '', u'astroid/brain/brain_typing.py')"
16,pull_request_commit_comment,390,pycqa,astroid,euresti,2017-03-01 00:47:39,"`node.args[1].elts` can raise an AttributeError if node.args[1] is not a Tuple.
`elt.elts` can also raise an AttributeError if node.args[1] is a Tuple but doesn't have a Tuple inside it.

I can add a bunch of isinstance checks if you like.
",cfe156629037195eeb43181efa5bdd09eb15c1c0,"(None, '', u'astroid/brain/brain_typing.py')"
17,pull_request_commit_comment,390,pycqa,astroid,euresti,2017-03-01 00:48:08,Technically typing is available in python2 also but in pypi.  Though for tests maybe I should limit it to 3.6,cfe156629037195eeb43181efa5bdd09eb15c1c0,"(None, '', u'astroid/tests/unittest_brain.py')"
18,pull_request_commit_comment,390,pycqa,astroid,euresti,2017-03-01 00:48:28,Will do,cfe156629037195eeb43181efa5bdd09eb15c1c0,"(None, '', u'astroid/brain/brain_typing.py')"
19,pull_request_commit,390,pycqa,astroid,david@dropbox.com,2017-01-05 15:33:03,Add inference for typing.NamedTuple,f3d76aabc725d87a897af1d3d4bffe2fb5d7431f,
20,pull_request_commit,390,pycqa,astroid,david@dropbox.com,2017-03-01 06:00:32,Code review comments,cf3b1cb0e84ee97957567c3362c1005fc12b533b,
21,pull_request_commit,390,pycqa,astroid,david@dropbox.com,2017-03-01 06:27:44,Fix tests,5208bd413a8135bd449ad1cc4319edcf4700343e,
22,pull_request_commit,390,pycqa,astroid,david@dropbox.com,2017-03-01 06:44:55,Fix lint issues,cfe156629037195eeb43181efa5bdd09eb15c1c0,
0,issue_title,395,pycqa,astroid,sscherfke,2017-01-30 15:29:59,"### Steps to reproduce
1. Run pylint on this code:
    ```python
    import pandas
    pandas.read_sql('spam', engine=None)['key'].value
    ```
    The actual SQL query or engine don't matter. It seems to be the `['key']` (maybe in combination with `.value`.

### Current behavior
```
Traceback (most recent call last):
  File "".../bin/pylint"", line 6, in <module>
    sys.exit(pylint.run_pylint())
  File "".../lib/python3.6/site-packages/pylint/__init__.py"", line 13, in run_pylint
    Run(sys.argv[1:])
  File "".../lib/python3.6/site-packages/pylint/lint.py"", line 1300, in __init__
    linter.check(args)
  File "".../lib/python3.6/site-packages/pylint/lint.py"", line 726, in check
    self._do_check(files_or_modules)
  File "".../lib/python3.6/site-packages/pylint/lint.py"", line 855, in _do_check
    self.check_astroid_module(ast_node, walker, rawcheckers, tokencheckers)
  File "".../lib/python3.6/site-packages/pylint/lint.py"", line 934, in check_astroid_module
    walker.walk(ast_node)
  File "".../lib/python3.6/site-packages/pylint/utils.py"", line 973, in walk
    self.walk(child)
  File "".../lib/python3.6/site-packages/pylint/utils.py"", line 973, in walk
    self.walk(child)
  File "".../lib/python3.6/site-packages/pylint/utils.py"", line 970, in walk
    cb(astroid)
  File "".../lib/python3.6/site-packages/pylint/checkers/typecheck.py"", line 612, in
 visit_attribute
    infered = list(node.expr.infer())
  File "".../lib/python3.6/site-packages/astroid/decorators.py"", line 85, in wrapped
    res = next(generator)
  File "".../lib/python3.6/site-packages/astroid/decorators.py"", line 138, in raise_if_nothing_inferred
    yield next(generator)
  File "".../lib/python3.6/site-packages/astroid/inference.py"", line 260, in infer_subscript
    assigned = value.getitem(index_value, context)
  File "".../lib/python3.6/site-packages/astroid/scoped_nodes.py"", line 1523, in getitem
    methods = dunder_lookup.lookup(self, '__getitem__')
  File "".../lib/python3.6/site-packages/astroid/interpreter/dunder_lookup.py"", line 54, in lookup
    return _class_lookup(node, name)
  File "".../lib/python3.6/site-packages/astroid/interpreter/dunder_lookup.py"", line 67, in _class_lookup
    target=node
astroid.exceptions.AttributeInferenceError: '__getitem__' not found on <ClassDef.generator l.0 at 0x7f06c4310860>.
```


### Expected behavior

No exception.

### ``python -c ""from astroid import __pkginfo__; print(__pkginfo__.version)""`` output
1.5.0
PyCQA/astroid@d0b5acdfebcdda5c949584c32a8cbc0f31d5cf25
PyCQA/pylint@7daed7b8982480c868b0f642a5251f00ffb253c6",start issue,AttributeInferenceError: __getitem__ with Pandas
1,issue_closed,395,pycqa,astroid,PCManticore,2017-03-01 10:11:28,,closed issue,AttributeInferenceError: __getitem__ with Pandas
2,issue_comment,395,pycqa,astroid,degustaf,2017-01-30 15:41:33,"@sscherfke I can see from your traceback that you are using Python3.6, which isn't officially supported yet.  Do you get the same error with other versions of Python?",,
3,issue_comment,395,pycqa,astroid,sscherfke,2017-01-30 19:01:45,Haven’t tried yet – will do it tomorrow. But since Py36 support is on your roadmap anyways. ;-),,
4,issue_comment,395,pycqa,astroid,degustaf,2017-01-30 19:45:57,@sscherfke Not trying to suggest it won't get done.  Just trying to better understand the issue :),,
5,issue_comment,395,pycqa,astroid,ceridwen,2017-01-30 20:22:20,What version of pandas is this with?  I can't replicate this error on Python 2.7 or 3.5 with pandas 0.19.2. For now I'm tagging this issue with 3.6.,,
6,issue_comment,395,pycqa,astroid,sscherfke,2017-01-31 07:39:34,"Hm. I can reproduce this with the system's Python 2.7 and 3.5 as well:
```console
$ mktmpenv --python=/usr/bin/python3
$ pip install pandas
Successfully installed numpy-1.12.0 pandas-0.19.2 python-dateutil-2.6.0 pytz-2016.10
$ pip install git+https://github.com/PyCQA/astroid@d0b5acdfebcdda5c949584c32a8cbc0f31d5cf25
Successfully installed astroid-1.5.0 lazy-object-proxy-1.2.2 wrapt-1.10.8
$ pip install git+https://github.com/PyCQA/pylint@7daed7b8982480c868b0f642a5251f00ffb253c6
Successfully installed editdistance-0.3.1 isort-4.2.5 mccabe-0.6.1 pylint-2.0.0
$ cat /tmp/pylinttest.py
import pandas
pandas.read_sql('spam', engine=None)['key'].value
$ pylint --version
pylint 2.0.0,
astroid 1.5.0
Python 3.5.2 (default, Oct 14 2016, 12:54:53)
[GCC 6.2.1 20160916 (Red Hat 6.2.1-2)]
$ pylint /tmp/pylinttest.py
************* Module pylinttest
W:  2, 0: Expression ""pandas.read_sql('spam', engine=None)['key'].value"" is assigned to nothing (expression-not-assigned)
Traceback (most recent call last):
  File ""/.virtualenvs/tmp-b168b6a226f0cec/bin/pylint"", line 11, in <module>
    load_entry_point('pylint==2.0.0', 'console_scripts', 'pylint')()
  File ""/.virtualenvs/tmp-b168b6a226f0cec/lib/python3.5/site-packages/pylint/__init__.py"", line 13, in run_pylint
    Run(sys.argv[1:])
  File ""/.virtualenvs/tmp-b168b6a226f0cec/lib/python3.5/site-packages/pylint/lint.py"", line 1300, in __init__
    linter.check(args)
  File ""/.virtualenvs/tmp-b168b6a226f0cec/lib/python3.5/site-packages/pylint/lint.py"", line 726, in check
    self._do_check(files_or_modules)
  File ""/.virtualenvs/tmp-b168b6a226f0cec/lib/python3.5/site-packages/pylint/lint.py"", line 855, in _do_check
    self.check_astroid_module(ast_node, walker, rawcheckers, tokencheckers)
  File ""/.virtualenvs/tmp-b168b6a226f0cec/lib/python3.5/site-packages/pylint/lint.py"", line 934, in check_astroid_module
    walker.walk(ast_node)
  File ""/.virtualenvs/tmp-b168b6a226f0cec/lib/python3.5/site-packages/pylint/utils.py"", line 973, in walk
    self.walk(child)
  File ""/.virtualenvs/tmp-b168b6a226f0cec/lib/python3.5/site-packages/pylint/utils.py"", line 973, in walk
    self.walk(child)
  File ""/.virtualenvs/tmp-b168b6a226f0cec/lib/python3.5/site-packages/pylint/utils.py"", line 970, in walk
    cb(astroid)
  File ""/.virtualenvs/tmp-b168b6a226f0cec/lib/python3.5/site-packages/pylint/checkers/typecheck.py"", line 612, in visit_attribute
    infered = list(node.expr.infer())
  File ""/.virtualenvs/tmp-b168b6a226f0cec/lib/python3.5/site-packages/astroid/decorators.py"", line 85, in wrapped
    res = next(generator)
  File ""/.virtualenvs/tmp-b168b6a226f0cec/lib/python3.5/site-packages/astroid/decorators.py"", line 138, in raise_if_nothing_inferred
    yield next(generator)
  File ""/.virtualenvs/tmp-b168b6a226f0cec/lib/python3.5/site-packages/astroid/inference.py"", line 260, in infer_subscript
    assigned = value.getitem(index_value, context)
  File ""/.virtualenvs/tmp-b168b6a226f0cec/lib/python3.5/site-packages/astroid/scoped_nodes.py"", line 1523, in getitem
    methods = dunder_lookup.lookup(self, '__getitem__')
  File ""/.virtualenvs/tmp-b168b6a226f0cec/lib/python3.5/site-packages/astroid/interpreter/dunder_lookup.py"", line 54, in lookup
    return _class_lookup(node, name)
  File ""/.virtualenvs/tmp-b168b6a226f0cec/lib/python3.5/site-packages/astroid/interpreter/dunder_lookup.py"", line 67, in _class_lookup
    target=node
astroid.exceptions.AttributeInferenceError: '__getitem__' not found on <ClassDef.generator l.0 at 0x7fe311ffdbe0>.
```",,
7,issue_comment,395,pycqa,astroid,rr-,2017-02-05 14:01:39,"Minimal example

```python
from typing import Dict

def test(params: Dict[str, str]):
    pass
```
",,
0,issue_title,407,pycqa,astroid,rogalski,2017-02-28 19:22:36,,start issue,Add brain_re.py for correct inference of regex flags in Py3.6
1,issue_closed,407,pycqa,astroid,PCManticore,2017-03-01 09:14:40,,closed issue,Add brain_re.py for correct inference of regex flags in Py3.6
2,pull_request_title,407,pycqa,astroid,rogalski,2017-02-28 19:22:36,,4ebed8c1b6709528d21eb8b69a6a06918fc35ffd,Add brain_re.py for correct inference of regex flags in Py3.6
3,pull_request_merged,407,pycqa,astroid,PCManticore,2017-03-01 09:14:40,Add brain_re.py for correct inference of regex flags in Py3.6,69b65500f7655e4341ccff6f174eea432dac7bc3,Pull request merge from rogalski/astroid:brain_re to PyCQA/astroid:master
4,issue_comment,407,pycqa,astroid,PCManticore,2017-03-01 09:14:34,Looks good. Thanks!,,
5,pull_request_commit,407,pycqa,astroid,rogalski,2017-02-28 19:22:25,Add brain_re.py for correct inference of regex flags in Py3.6,4ebed8c1b6709528d21eb8b69a6a06918fc35ffd,
0,issue_title,409,pycqa,astroid,asottile,2017-02-28 21:37:56,,start issue,No longer install tox / pip twice in travis
1,issue_closed,409,pycqa,astroid,PCManticore,2017-03-01 09:18:54,,closed issue,No longer install tox / pip twice in travis
2,pull_request_title,409,pycqa,astroid,asottile,2017-02-28 21:37:56,,ac9b9cdd92b465c324824f07312d5ca0ca470956,No longer install tox / pip twice in travis
3,pull_request_merged,409,pycqa,astroid,PCManticore,2017-03-01 09:18:54,No longer install tox / pip twice in travis,5f10041b49506129e3daefc285a0308491e1ed21,Pull request merge from asottile/astroid:patch-1 to PyCQA/astroid:master
4,issue_comment,409,pycqa,astroid,asottile,2017-02-28 21:38:45,Seems to be left over from this commit: https://github.com/PyCQA/astroid/commit/8ed837d828692db5b95b3e906bebeacbc68c256f,,
5,issue_comment,409,pycqa,astroid,PCManticore,2017-03-01 09:18:50,Thank you!,,
6,pull_request_commit,409,pycqa,astroid,asottile,2017-02-28 21:37:44,No longer install tox / pip twice in travis,ac9b9cdd92b465c324824f07312d5ca0ca470956,
0,issue_title,399,pycqa,astroid,rogalski,2017-02-07 21:36:51,"See https://www.python.org/dev/peps/pep-0530/ for details
",start issue,Support for asynchronous comprehensions
1,issue_closed,399,pycqa,astroid,rogalski,2017-03-01 18:47:31,,closed issue,Support for asynchronous comprehensions
