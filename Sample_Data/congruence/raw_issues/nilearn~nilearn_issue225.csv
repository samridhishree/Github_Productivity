"rectype","issueid","project_owner","project_name","actor","time","text","action","title"
"issue_title","225","nilearn","nilearn","czarrar","2014-07-09 15:09:18","I would like to do some additional processing to the searchlight data (i.e., `X[:,row]`) before the cross-validation is run. Specifically, within each searchlight, I'd like to remove the mean across voxels for each trial or timepoint. What are my best options to do this? Looking through the code it seems I could either
- Wrap my estimator's fit and score functions to remove the mean and then calculate the fit/score via a call to the parent. Is there anything else I should modify?
- I could modify the `_group_iter_serch_light` (and all functions that call this) to take in another function that would modify the searchlight data before calling `cross_val_score`)

Maybe there are other options too...
","start issue","Removing the mean from searchlight data"
"issue_closed","225","nilearn","nilearn","AlexandreAbraham","2014-09-16 13:07:35","","closed issue","Removing the mean from searchlight data"
"issue_comment","225","nilearn","nilearn","AlexandreAbraham","2014-07-10 12:16:32","Hi czarrar,
I understand what you want to do but I don't really understand why. Could you elaborate on that so I can target your needs more specifically?

Regarding you solutions:
- Wrapping your estimator is not necessary, you can use sklearn Pipelines to do that. Just make a transformer that removes the mean in the transform() function. However, if you chose this solution, be aware that you will remove the mean on the train set and on thetest set separately. If you want to remove the global mean, this is not the way to go.
- The second solution is, for me, the way to go in your case.

This behavior is not available in nilearn because you have a very specific usecase. Sorry for that.
","",""
"issue_comment","225","nilearn","nilearn","AlexandreAbraham","2014-09-16 13:07:35","No update about this issue, I close it. Please reopen if you have another question.
","",""
