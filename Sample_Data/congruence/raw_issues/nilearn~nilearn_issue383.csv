"rectype","issueid","project_owner","project_name","actor","time","text","action","title"
"issue_title","383","nilearn","nilearn","lesteve","2015-02-02 11:23:37","Still some are remaining after #294.

The compromise at the time was to use something like this consistently:

```
niimg: Niimg-like object
    See http://nilearn.github.io/building_blocks/manipulating_mr_images.html#niimg.
```

A hacky one-liner to find a few replacement candidates:

```
~/dev/nilearn $ git grep -n -i -P 'nifti.like|nifti[^1]image' nilearn | grep -v test
nilearn/_utils/niimg_conversions.py:80:        # Copy locally the nifti_image to avoid the side effect of data
nilearn/_utils/niimg_conversions.py:95:        Nifti image to copy.
nilearn/_utils/niimg_conversions.py:123:        If niimg is a string, consider it as a path to Nifti image and
nilearn/_utils/niimg_conversions.py:133:    result: nifti-like
nilearn/_utils/niimg_conversions.py:314:        If niimg is a string, consider it as a path to Nifti image and
nilearn/_utils/niimg_conversions.py:362:    # First image is supposed to be a path or a Nifti-like element
nilearn/_utils/niimg_conversions.py:372:        raise TypeError(""Data must be either a 4D Nifti image or a""
nilearn/_utils/niimg_conversions.py:373:                        "" list of 3D Nifti images. You provided a %s%dD""
nilearn/decomposition/multi_pca.py:161:    `mask_img_`: Nifti like image
nilearn/image/resampling.py:2:Utilities to resample a Nifti Image
nilearn/image/resampling.py:266:    """"""Resample a Nifti image
nilearn/image/resampling.py:272:        Path to a nifti file or nifti-like object
nilearn/image/resampling.py:483:            Path to a nifti file or nifti-like object
nilearn/input_data/base_masker.py:236:            The nifti-like images to fit and transform.
nilearn/input_data/multi_nifti_masker.py:92:    mask_img_: Nifti like image
nilearn/input_data/nifti_masker.py:90:    `mask_img_` : Nifti like image
nilearn/masking.py:31:    mask_img: nifti-like image
nilearn/masking.py:126:        grp_mask: 3D nifti-like image
nilearn/masking.py:349:    mask : 3D nifti-like image
nilearn/masking.py:500:    mask : 3D nifti-like image
nilearn/masking.py:528:    Read the time series from the given nifti images or filepaths,
nilearn/masking.py:684:    mask_img: nifti-like image
nilearn/masking.py:689:    data: nifti-like image (or list of)
nilearn/plotting/displays.py:372:                The nifti-image-like. If it is a masked array, only
nilearn/plotting/displays.py:418:                The Nifti-Image like object to plot
nilearn/plotting/img_plotting.py:2:Functions to do automatic visualization of nifti-like images
nilearn/plotting/img_plotting.py:122:            Path to a nifti file or nifti-like object
nilearn/plotting/img_plotting.py:297:        anat_img : a nifti-image like object or a filename
nilearn/plotting/img_plotting.py:373:        epi_img : a nifti-image like object or a filename
nilearn/plotting/img_plotting.py:443:        roi_img : a nifti-image like object or a filename
nilearn/plotting/img_plotting.py:446:        bg_img : a nifti-image like object or a filename
nilearn/plotting/img_plotting.py:517:        stat_map_img : a nifti-image like object or a filename
nilearn/plotting/img_plotting.py:519:        bg_img : a nifti-image like object or a filename
nilearn/plotting/img_plotting.py:625:        stat_map_img : a nifti-image like object or a filename
```
","start issue","Remaining inconsistent niimg-like docstrings"
"issue_closed","383","nilearn","nilearn","lesteve","2015-02-05 15:50:13","","closed issue","Remaining inconsistent niimg-like docstrings"
"issue_comment","383","nilearn","nilearn","lesteve","2015-02-03 09:00:14","And some more I bumped into:

```
~/dev/alt_nilearn $ git grep -i niimage
nilearn/_utils/niimg_conversions.py:    This function is the equivalent of check_niimg() for niimages with a
nilearn/decomposition/canica.py:    mask: filename, NiImage or MultiNiftiMasker instance, optional
nilearn/decomposition/multi_pca.py:    mask_img: Niimage
nilearn/image/image.py:        One or several niimage(s), either 3D or 4D.
nilearn/image/image.py:        One or several niimage(s), either 3D or 4D (note that these
nilearn/input_data/multi_nifti_masker.py:    mask_img: filename or NiImage, optional
nilearn/input_data/multi_nifti_masker.py:        Affine of the transformed NiImages. If affine is different across
nilearn/input_data/nifti_masker.py:    mask_img : filename or NiImage, optional
nilearn/input_data/nifti_masker.py:        Affine of the transformed NiImages.
nilearn/tests/test_niimg_conversions.py:class PhonyNiimage(object):
nilearn/tests/test_niimg_conversions.py:    # Test a Niimage that does not hold a shape attribute
nilearn/tests/test_niimg_conversions.py:    phony_img = PhonyNiimage()
```
","",""
