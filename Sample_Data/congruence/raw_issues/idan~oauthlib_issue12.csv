"rectype","issueid","project_owner","project_name","actor","time","text","action","title"
"issue_title","12","idan","oauthlib","ib-lundgren","2012-03-16 22:40:49","Very often you will have the POST data in either a dictionary or a list rather than a nicely encoded string. 

```
post = { u""status"" : u""hello world"" }
uri, body, headers = oauth_client.sign_request(update_url, http_method=u""POST"", body=post)
```
","start issue","Allow body=dict/list in sign_request"
"issue_closed","12","idan","oauthlib","dgouldin","2012-03-24 18:02:33","","closed issue","Allow body=dict/list in sign_request"
"pull_request_title","12","idan","oauthlib","ib-lundgren","2012-03-16 22:40:49","Very often you will have the POST data in either a dictionary or a list rather than a nicely encoded string. 

```
post = { u""status"" : u""hello world"" }
uri, body, headers = oauth_client.sign_request(update_url, http_method=u""POST"", body=post)
```
","9ab832ce8a2694e08a2399d3d161bc3bedfb7a50","Allow body=dict/list in sign_request"
"pull_request_merged","12","idan","oauthlib","dgouldin","2012-03-24 18:02:33","Allow body=dict/list in sign_request","0de5bae4c34ff57c92d1eb4e3340529b818bdfbf","Pull request merge from ib-lundgren/oauthlib:dict_and_list_as_body to idan/oauthlib:master"
"issue_comment","12","idan","oauthlib","dgouldin","2012-03-24 17:51:42","Added comment to commit:

https://github.com/ib-lundgren/oauthlib/commit/6059f9b483d9ca0a1f53a1edfc08b75347bc84e0#commitcomment-1127384
","",""
"pull_request_commit","12","idan","oauthlib","ib-lundgren","2012-03-16 22:37:44","Allow body=dict/list in sign_request","6059f9b483d9ca0a1f53a1edfc08b75347bc84e0",""
"pull_request_commit","12","idan","oauthlib","ib-lundgren","2012-03-18 09:52:58","Refactored body check","bd3691cde7124d059162753c35b06cfb41472fa4",""
"pull_request_commit","12","idan","oauthlib","ib-lundgren","2012-03-24 18:00:05","Updated per dgouldins tip + pull","9ab832ce8a2694e08a2399d3d161bc3bedfb7a50",""
"pull_request_commit_comment","12","idan","oauthlib","dgouldin","2012-03-24 17:50:55","list.extend will take any iterable, so it should be tried last.  Something like this would be more robust:

```
if isinstance(body, (str, unicode)):
    params.extend(urlparse.parse_qsl(body))
elif isinstance(body, dict):
    params.extend(body.items())
else:
    try:
        params.extend(body)
    except TypeError:
        raise ValueError(""body must be a string, dict, or iterable"")
```
","6059f9b483d9ca0a1f53a1edfc08b75347bc84e0","(None, None, None)"
