,rectype,issueid,project_owner,project_name,actor,time,text,action,title
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,287,nilearn,nilearn,banilo,2014-11-20 17:53:58,"Several plotting functions do not seem to mention the ""threshold"" argument in their respective docstrings. This appears to be the case for: plot_epi, plot_roi and plot_stat_map.

Should those be added?
",start issue,nilearn.plotting: threshold argument not in docstring
2,issue_closed,287,nilearn,nilearn,lesteve,2014-11-24 07:44:56,,closed issue,nilearn.plotting: threshold argument not in docstring
3,issue_comment,287,nilearn,nilearn,lesteve,2014-11-20 18:29:23,"That'd be great. You could reuse the threshold parameter doc in plot_img. You could even improve it, in particular I would use something like values below the threshold **in absolute value** to be more clear.
",,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,308,nilearn,nilearn,lesteve,2014-12-08 10:14:16,"fixes #195. I pushed the candidate website on my gh-pages, see [here](http://lesteve.github.io/auto_examples/index.html) for the updated examples.

Let me know if things still need to be shuffled around.
",start issue,[MRG] Reorganise examples
2,issue_closed,308,nilearn,nilearn,lesteve,2014-12-10 10:30:32,,closed issue,[MRG] Reorganise examples
3,pull_request_title,308,nilearn,nilearn,lesteve,2014-12-08 10:14:16,"fixes #195. I pushed the candidate website on my gh-pages, see [here](http://lesteve.github.io/auto_examples/index.html) for the updated examples.

Let me know if things still need to be shuffled around.
",cc1101db021596850a3c007b010831ea0dfbc7bc,[MRG] Reorganise examples
4,pull_request_merged,308,nilearn,nilearn,lesteve,2014-12-10 10:30:32,[MRG] Reorganise examples,552e83c4addf79c58abf6c87eb126b6e9a03a44c,Pull request merge from lesteve/nilearn:reorganise-examples to nilearn/nilearn:master
5,issue_comment,308,nilearn,nilearn,lesteve,2014-12-08 10:19:16,"Just for completeness: I left the plot__simple_.py in the ""General"" section and try to put the rest of the examples in the right subfolder.
",,
6,issue_comment,308,nilearn,nilearn,GaelVaroquaux,2014-12-08 10:21:52,"Titles:

  ""Connectivity"" -> ""Funtional connectivit""

  ""Decoding"" -> ""Decoding and predicting from brain images""

Also, it would be nice to have a sentence in each README, below the
title, telling us a tiny bit more, and possibly linking to relevent parts
of the documentation (cross-linking in a documentation is really very
important).
",,
7,issue_comment,308,nilearn,nilearn,lesteve,2014-12-10 10:16:01,"I fixed a few things and pushed to my gh-pages: http://lesteve.github.io/auto_examples/index.html
",,
8,issue_comment,308,nilearn,nilearn,GaelVaroquaux,2014-12-10 10:22:17,"Looks absolutely great. :+1: on my side, if there are no broken links in
the documentation.
",,
9,issue_comment,308,nilearn,nilearn,GaelVaroquaux,2014-12-10 10:31:58,"> Merged #308.

Awesome!
",,
10,pull_request_commit,308,nilearn,nilearn,lesteve,2014-12-08 10:07:40,DOC: reorganise examples,78717998ca9b7e82a588fe0f39a4702fe57217f5,
11,pull_request_commit,308,nilearn,nilearn,lesteve,2014-12-08 10:35:23,DOC: tweak example titles,e6d311d35c0c5db0db987b4749db537cd4d70117,
12,pull_request_commit,308,nilearn,nilearn,lesteve,2014-12-10 09:53:13,Use auto_examples in image target for consistency,471fdb16d3559010c8a09b64a598760c37826469,
13,pull_request_commit,308,nilearn,nilearn,lesteve,2014-12-10 09:53:50,Fix broken links after examples reorganisation,216c9f28791f0dfc4614bc0aa52aed0c28d7f6c3,
14,pull_request_commit,308,nilearn,nilearn,lesteve,2014-12-10 10:07:26,Add links to documentation in examples section,cc1101db021596850a3c007b010831ea0dfbc7bc,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,276,nilearn,nilearn,banilo,2014-11-09 15:51:52,"tries to address #235
",start issue,Parallel() for CanICA class
2,issue_closed,276,nilearn,nilearn,lesteve,2014-11-21 14:00:09,,closed issue,Parallel() for CanICA class
3,pull_request_title,276,nilearn,nilearn,banilo,2014-11-09 15:51:52,"tries to address #235
",35c1805993c33e67a394193c7cae9a3f38a7607f,Parallel() for CanICA class
4,pull_request_merged,276,nilearn,nilearn,lesteve,2014-11-21 14:00:09,Parallel() for CanICA class,2ac9dd093f20a7912ac30908cde553f58322096f,Pull request merge from banilo/nilearn:par_ica to nilearn/nilearn:master
5,issue_comment,276,nilearn,nilearn,bthirion,2014-11-11 10:43:37,"LGTM otherwise.
",,
6,issue_comment,276,nilearn,nilearn,banilo,2014-11-11 14:39:18,"ok, thx.
",,
7,issue_comment,276,nilearn,nilearn,AlexandreAbraham,2014-11-11 18:01:49,"Have you timed the code on a real life exemple ? In particular, I would like to know if the time bottleneck is in the MultiPCA part or the ICA part. My intuition is that we lose more time in MultiPCA but I may be wrong. I think we should parallelized both.
",,
8,issue_comment,276,nilearn,nilearn,banilo,2014-11-12 08:15:06,"In the examples I used for the testing MultiPCA took longer than CanICA.
",,
9,issue_comment,276,nilearn,nilearn,AlexandreAbraham,2014-11-12 17:10:26,"Do you have an approximate ratio between the two?
",,
10,issue_comment,276,nilearn,nilearn,banilo,2014-11-13 20:44:27,"On my laptop in CanICA.fit()...
- MultiPCA.fit() argument takes ~14s
- Parallel(..fastica...) also takes ~14s if n_jobs=1, which is then reduced as a function of the number of jobs
",,
11,issue_comment,276,nilearn,nilearn,banilo,2014-11-19 07:59:49,"Should I perform other/more specific timing tests?
",,
12,issue_comment,276,nilearn,nilearn,GaelVaroquaux,2014-11-19 08:42:26,"With regards to timing, this feature is especially useful if some of the earlier steps have been cached. In this case, the for loop that Danilo has parallelized is the bottleneck.

The situation in which the earlier steps have been cached happens typically when bootstrapping across subjects. I am currently melting down drago doing that.
",,
13,issue_comment,276,nilearn,nilearn,lesteve,2014-11-19 10:15:33,"FWIW some timings I did using `%run -p -s cumulative plot_canica_resting_state.py`:

|  | n_jobs=1 | n_jobs=2 | n_jobs=4 | n_jobs=8 |
| --- | --- | --- | --- | --- |
| PR total | 91.3 | 55.3 | 38.1 | 35.5 |
| PR canica.fit | 87.3 | 51.1 | 34.0 | 30.3 |
| PR multi_pca.fit | 31.0 | 19.8 | 14.7 | 14.7 |
|  |  |  |  |  |
| master total | 80.8 | 70.8 | 67.4 | 65.8 |
| master canica.fit | 76.6 | 66.8 | 63.1 | 61.7 |
| master multi_pca.fit | 31.0 | 19.7 | 16.0 | 14.8 |

so I guess a quick and dirty summary would be that the canica.fit run time is divided by 2 with 8 cores thanks to this PR.

_Edit_: oh and BTW this when the previous steps had been cached already as @GaelVaroquaux mentioned.
",,
14,issue_comment,276,nilearn,nilearn,lesteve,2014-11-19 10:39:33,"Also now that you are familiar with rebase, would you mind squashing a few of your commits. Some of them don't have great commit messages :wink:
",,
15,issue_comment,276,nilearn,nilearn,GaelVaroquaux,2014-11-19 10:53:36,"> FWIW some timings I did using %run -p -s cumulative plot_canica_resting_state.py:

Nice timing, and IMHO quite convincing that this is a useful
functionality
",,
16,issue_comment,276,nilearn,nilearn,banilo,2014-11-19 16:01:38,"Ok, I should have addressed all comments. I hope the squashing was correct this way?
",,
17,issue_comment,276,nilearn,nilearn,lesteve,2014-11-19 17:13:58,"> Ok, I should have addressed all comments. I hope the squashing was correct this way?

Almost, I would just edit the commit message to remove a few unnecessary things like ""new things"" etc... 

You can do that with `git commit --amend` and then `git push -f yourbranch`.
",,
18,issue_comment,276,nilearn,nilearn,banilo,2014-11-20 12:32:54,"Commits squashed and renamed now!
",,
19,issue_comment,276,nilearn,nilearn,banilo,2014-11-21 13:56:46,"Challenge accomplished.
",,
20,issue_comment,276,nilearn,nilearn,lesteve,2014-11-21 14:00:06,"Great stuff, thanks!
",,
21,issue_comment,276,nilearn,nilearn,lesteve,2014-11-21 14:06:37,"@banilo btw I don't know what the github magic words are but I know that if you use ""Fix #issueNumber"" in the PR description it will close the issue automatically when the PR is merged.

More info [here](https://github.com/blog/1506-closing-issues-via-pull-requests)
",,
22,issue_comment,276,nilearn,nilearn,banilo,2014-11-21 14:09:01,"Cool, thx.

2014-11-21 15:06 GMT+01:00 Loïc Estève notifications@github.com:

> @banilo https://github.com/banilo btw I don't know what the github
> magic words are but I know that if you use ""Fix #issueNumber"" in the PR
> description it will close the issue automatically when the PR is merged.
> 
> More info here
> https://github.com/blog/1506-closing-issues-via-pull-requests
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/nilearn/nilearn/pull/276#issuecomment-63973826.

## 

Viele Grüße,
Danilo
",,
23,pull_request_commit_comment,276,nilearn,nilearn,bthirion,2014-11-11 09:38:54,"Please keep this comment. 
",35c1805993c33e67a394193c7cae9a3f38a7607f,"(None, '', u'nilearn/decomposition/canica.py')"
24,pull_request_commit_comment,276,nilearn,nilearn,lesteve,2014-11-19 08:21:03,"For completeness, the comment is still there (a few lines above)
",35c1805993c33e67a394193c7cae9a3f38a7607f,"(None, '', u'nilearn/decomposition/canica.py')"
25,pull_request_commit_comment,276,nilearn,nilearn,GaelVaroquaux,2014-11-19 08:38:32,"If you cannot pass a random_state, you cannot do parallel computing: the random number generation will be duplicated in all the child process, and thus the for loop won't do different initialization.

You should use parallel computing only for versions of scikit-learn above 0.12
",35c1805993c33e67a394193c7cae9a3f38a7607f,"(None, '', u'nilearn/decomposition/canica.py')"
26,pull_request_commit_comment,276,nilearn,nilearn,lesteve,2014-11-19 08:39:39,"I reckon we should use n_jobs=1 in this case I understand correctly what @GaelVaroquaux said in #235:

> Thus we can parallelize the loop only for scikit-learn > 0.13 (I suggest setting n_job to one else)
",35c1805993c33e67a394193c7cae9a3f38a7607f,"(None, '', u'nilearn/decomposition/canica.py')"
27,pull_request_commit_comment,276,nilearn,nilearn,GaelVaroquaux,2014-11-19 08:39:57,"We cannot have parallel computing on by default in examples. On windows boxes it can lead to a fork bomb.
",35c1805993c33e67a394193c7cae9a3f38a7607f,"(None, '', u'plot_canica_resting_state.py')"
28,pull_request_commit_comment,276,nilearn,nilearn,GaelVaroquaux,2014-11-19 08:40:47,"Yes
",35c1805993c33e67a394193c7cae9a3f38a7607f,"(None, '', u'nilearn/decomposition/canica.py')"
29,pull_request_commit_comment,276,nilearn,nilearn,lesteve,2014-11-19 10:29:18,"I reckon the ica_maps_ variable name should be changed because of the for loop -> Parallel restructuring. You could also do the `[2]` and `.T` here. Maybe something like

``` python

results = Parallel(...)
ica_maps_gen_ = (result[2].T for result in results)
```
",35c1805993c33e67a394193c7cae9a3f38a7607f,"(None, '', u'nilearn/decomposition/canica.py')"
30,pull_request_commit_comment,276,nilearn,nilearn,lesteve,2014-11-19 10:36:24,"I believe you could use `min` with a `key` argument here something like (not tested and dependent on another comment above):

``` python
ica_maps_and_sparsities = ((ica_maps, np.sum(np.abs(ica_map)).max()) for ica_maps in ica_maps_gen_)
ica_maps, sparsity = min(ica_maps_and_sparsities, key=operator.itemgetter(-1))
```
",35c1805993c33e67a394193c7cae9a3f38a7607f,"(None, '', u'nilearn/decomposition/canica.py')"
31,pull_request_commit_comment,276,nilearn,nilearn,banilo,2014-11-19 15:42:18,"Nice trick, good to know.
",35c1805993c33e67a394193c7cae9a3f38a7607f,"(None, '', u'nilearn/decomposition/canica.py')"
32,pull_request_commit_comment,276,nilearn,nilearn,lesteve,2014-11-19 17:07:26,"It looks like `os` is not used anywhere in this file
",35c1805993c33e67a394193c7cae9a3f38a7607f,"(None, '', u'nilearn/decomposition/canica.py')"
33,pull_request_commit_comment,276,nilearn,nilearn,lesteve,2014-11-19 17:08:24,"Simpler to just leave n_jobs unspecified, i.e. no need to modify this file.
",35c1805993c33e67a394193c7cae9a3f38a7607f,"(None, '', u'plot_canica_resting_state.py')"
34,pull_request_commit_comment,276,nilearn,nilearn,lesteve,2014-11-20 15:36:51,"Not only is it not PEP8 compliant but this creative alignment makes it really hard to parse this statement, what about something like

``` python

        ica_maps_and_sparsities = [(ica_map,
                                    np.sum(np.abs(ica_map), axis=1).max())
                                   for ica_map in ica_maps_gen_]
```
",35c1805993c33e67a394193c7cae9a3f38a7607f,"(None, '', u'nilearn/decomposition/canica.py')"
35,pull_request_commit_comment,276,nilearn,nilearn,lesteve,2014-11-20 15:36:54,"I believe you can replace square brackets by parentheses here, i.e. use a generator rather than a list comprehension.
",35c1805993c33e67a394193c7cae9a3f38a7607f,"(None, '', u'nilearn/decomposition/canica.py')"
36,pull_request_commit_comment,276,nilearn,nilearn,lesteve,2014-11-21 10:02:34,"Another PEP8 warning. You can use `from distutils.version import LooseVersion` to shorten it. I would even do something like:

``` python
if (LooseVersion(sklearn.__version__) > LooseVersion('0.12')):
```
",35c1805993c33e67a394193c7cae9a3f38a7607f,"(None, '', u'nilearn/decomposition/canica.py')"
37,pull_request_commit,276,nilearn,nilearn,banilo,2014-11-21 13:57:38,Parallelization of CanICA,35c1805993c33e67a394193c7cae9a3f38a7607f,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,302,nilearn,nilearn,banilo,2014-12-04 21:04:50,"At several instances, Nilearn does not complain when a single image or filename/path is expected but an iterable with more than one is actually passed on. This appears to be the case for the following functions (arguments):

``` python
SearchLight(mask_img, process_mask)
CanICA(mask)
MultiPCA(mask)
MultiNiftiMasker(mask_img)
NiftiMasker(mask_img)
NiftiLabelsMasker(mask_img, labels_img)
plot_anat(anat_img)
plot_epi(epi_img)
plot_roi(roi_img, bg_img)
plot_stat_map(stat_map_img, bg_img)
plot_glass_brain(stat_map_img)
img_to_signals_maps(mask_img)
signals_to_img_maps(mask_img)
img_to_signals_labels(labels_img)
signals_to_img_labels(labels_img, mask_img)
[...]
```

How about throwing informative errors, at least for the immediately user-facing functions? ...and perhaps even add corresponding regression tests?
",start issue,Functions with nifti arguments: unexpected iterables not caught
2,issue_closed,302,nilearn,nilearn,lesteve,2015-01-27 12:54:40,,closed issue,Functions with nifti arguments: unexpected iterables not caught
3,issue_comment,302,nilearn,nilearn,lesteve,2014-12-05 08:08:05,"> when a single image or filename/path

I can not believe you didn't use Niimg-like object :wink: 

Do you have a short self-contained example with the traceback?

I would expect these functions to use `_utils.check_niimg(img, assert_3d)`, which throws when its `img` is an iterable only when `assert_3d=True` and `assert_3d` is False by default. Maybe that's just a case for using `assert_3d=True` where appropriate?
",,
4,issue_comment,302,nilearn,nilearn,banilo,2014-12-05 08:14:41,"The thing is that, in most cases, there is probably no error. So the user might be fooled by input arguments being sounds but encounter unexpected outputs anyways. This might be especially true for tools such as NiftiLabelsMasker that are somewhat tricky to get into, IMHO. One might for example think that one image needs to be provided for each label individually.

`assert_3d=True`seems like a very good idea.

Some of those functions also go back to `_load_mask_img`...

In any event, catching unwanted/unexpected iterables of niimgs, could be in large part centralized to check_niimg/_load_mask_img calls, I guess.
",,
5,issue_comment,302,nilearn,nilearn,eickenberg,2014-12-05 08:20:34,"Just taking the first element of an iterable and not warning that it should
be 3d is definitely not the way to go. Using the appropriate kwarg in
check_niimg, whenever 3d needs to be enforced seems to address this neatly
- provided the error message is understood. But I think it should be
  understqndqble the way check_niimg is right now.

On Fri, Dec 5, 2014 at 9:14 AM, Danilo Bzdok notifications@github.com
wrote:

> The thing is that, in most cases, there is probably no error. So the user
> might be fooled by input arguments being sounds but encounter unexpected
> outputs anyways. This might be especially true for tools such as
> NiftiLabelsMasker that are somewhat tricky to get into, IMHO. One might for
> example think that one image needs to be provided for each label
> individually.
> 
> assert_3d=Trueseems like a very good idea.
> 
> Some of those functions also go back to _load_mask_img...
> 
> In any event, catching unwanted/unexpected iterables of niimgs, could be
> in large part centralized to check_niimg/_load_mask_img calls, I guess.
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/nilearn/nilearn/issues/302#issuecomment-65759228.
",,
6,issue_comment,302,nilearn,nilearn,banilo,2014-12-05 12:47:47,"So, how should we attack this?
",,
7,issue_comment,302,nilearn,nilearn,eickenberg,2014-12-05 12:49:59,"As @lesteve suggests, right? Use ensure_3d=True whenever this is necessary

On Fri, Dec 5, 2014 at 1:47 PM, Danilo Bzdok notifications@github.com
wrote:

> So, how should we attack this?
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/nilearn/nilearn/issues/302#issuecomment-65785389.
",,
8,issue_comment,302,nilearn,nilearn,banilo,2014-12-05 12:56:08,"That does not cover all the cases, see first message...
",,
9,issue_comment,302,nilearn,nilearn,eickenberg,2014-12-05 13:00:45,"Which are the ones that remain?
",,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,293,nilearn,nilearn,eickenberg,2014-11-24 10:25:46,"Adding functionality to make colorbar range from 0 to vmax instead of -vmax to +vmax. Which example should I best illustrate this on? @lesteve 
",start issue,[ENH + MRG] added symmetric_range kw to plot_stat_map
2,issue_closed,293,nilearn,nilearn,GaelVaroquaux,2015-02-05 16:55:50,,closed issue,[ENH + MRG] added symmetric_range kw to plot_stat_map
3,pull_request_title,293,nilearn,nilearn,eickenberg,2014-11-24 10:25:46,"Adding functionality to make colorbar range from 0 to vmax instead of -vmax to +vmax. Which example should I best illustrate this on? @lesteve 
",86f3d6b81dcbff8fcd42047eb7e3961d7a43ae08,[ENH + MRG] added symmetric_range kw to plot_stat_map
4,pull_request_merged,293,nilearn,nilearn,GaelVaroquaux,2015-02-05 16:55:50,[ENH + MRG] added symmetric_range kw to plot_stat_map,abe92c206ba778273d61dd3f2302aa3727883eea,Pull request merge from eickenberg/nilearn:plot_symmetric_range to nilearn/nilearn:master
5,issue_comment,293,nilearn,nilearn,eickenberg,2014-11-24 11:52:06,"![symmetric_cbar](https://cloud.githubusercontent.com/assets/1306635/5164473/9aa40dc2-73d8-11e4-83c9-2845373185e1.png) 

### becomes

![non_symmetric_cbar](https://cloud.githubusercontent.com/assets/1306635/5164477/a40dc8f8-73d8-11e4-981f-6a17f259ed99.png)

Without changing a single line of code in `plot_localizer_simple_analysis.py`
",,
6,issue_comment,293,nilearn,nilearn,eickenberg,2014-11-24 11:59:41,"Ah yes, good point. We had discussed that actually. Was too happy when everything worked on the first test :)
",,
7,issue_comment,293,nilearn,nilearn,GaelVaroquaux,2014-11-24 12:00:44,"It's more work, I know, but it will really solve the problem that our
users were having.
",,
8,issue_comment,293,nilearn,nilearn,eickenberg,2014-11-24 12:02:15,"I confirm: Changing to default colormap in the cited example leads to a weird plot.
",,
9,issue_comment,293,nilearn,nilearn,lesteve,2014-11-24 12:18:50,"> I confirm: Changing to default colormap in the cited example leads to a weird plot.

What kind of weird are we talking about, blue pixels associated with non-negative values?
",,
10,issue_comment,293,nilearn,nilearn,eickenberg,2014-11-24 12:23:28,"exactly :) -- I am looking at matplotlib doc to be able to specify the boundaries of the colormap. One can always use an array as a 1D image to make the whole colorbar, but I am checking to see if this situation is provided for already in matplotlib. Do you happen to know if this is the case?
",,
11,issue_comment,293,nilearn,nilearn,GaelVaroquaux,2014-11-24 12:26:21,"> One can always use an array as a 1D image to make the whole colorbar,

I am afraid that you'll have to do this.
",,
12,issue_comment,293,nilearn,nilearn,lesteve,2014-11-24 12:46:46,"What about having cmap default to None and seting the colormap in the two different cases, e.g. the current one if there are both negative and positive values and a more suitable one if there are only positive/negative values?

I would be pretty annoyed if I passed in my favourite colormap and realised that only half of it was used because I was in the ""positive values only"" case.
",,
13,issue_comment,293,nilearn,nilearn,GaelVaroquaux,2014-11-24 12:50:27,"> What about having cmap default to None and seting the colormap in the two
> different cases, e.g. the current one if there are both negative and positive
> values and a more suitable one if there are only positive/negative values?

I think that explicit is better than implicit. More importantly, I want
to make it easy for people to use different colormaps.

> I would be pretty annoyed if I passed in my favourite colormap and
> realised that only half of it was used because I was in the ""positive
> values only"" case.

Then you would set ""symmetric_range"" to False (and we need to point to
that in the docstring of the cmap argument).
",,
14,issue_comment,293,nilearn,nilearn,lesteve,2014-11-24 13:27:38,"Maybe I am missing something here but I think what we are trying to fix here is that the **default** cmap doesn't follow the best practices (i.e. using blue/red when all your values have the same sign), hence my suggestion above. To me it doesn't feel very natural to potentially keep only half of the cmap when the user explicitly specifies one.

> More importantly, I want to make it easy for people to use different colormaps.

I don't understand this, the auto-setting of the colormap would only happen when cmap is left to its default (i.e. None). If the cmap is specified then you left it unmodified.

> Then you would set ""symmetric_range"" to False (and we need to point to that in the docstring of the cmap argument).

I don't know it still feels less than great to have to specify two separate arguments when you just want a different colormap.
",,
15,issue_comment,293,nilearn,nilearn,eickenberg,2014-11-24 15:35:51,"The fact that all nilearn colourmaps are symmetric in this way can be a justification for the `symmetric_range=` keyword etc.

As Gaël (resp. google) rightly said to me (resp. google internal gmail users), ""you are not the user"", when I stated similar reservations wrt this. Now the question is what do the users think about this. 

Coming from using basic matplotlib, I too am annoyed at things not doing what I want them to do. The question is whether the users have used basic matplotlib.
",,
16,issue_comment,293,nilearn,nilearn,GaelVaroquaux,2014-11-24 15:37:00,"> Coming from using basic matplotlib, I too am annoyed at things not
> doing what I want them to do. The question is whether the users have
> used basic matplotlib.

These users should be using plot_img.
",,
17,issue_comment,293,nilearn,nilearn,lesteve,2014-11-25 15:38:50,"About plot_img, one of the major annoyances I bumped into is that it doesn't have a default bg_img + anat dimming so that you have to write a few non-trivial lines when switching from plot_stat_map to plot_img.

Any objections to add the default anat + anat dimming to plot_img?
",,
18,issue_comment,293,nilearn,nilearn,GaelVaroquaux,2014-11-25 15:52:48,"> Any objections to add the default anat + anat dimming to plot_img?

Objection your honor: it shouldn't be on by default. Not every data is in
standard space. Not every data should be plotted would a background.
Actually, most data shouldn't.
",,
19,issue_comment,293,nilearn,nilearn,bthirion,2014-11-25 20:55:40,"Is there a way to test this feature ?
",,
20,issue_comment,293,nilearn,nilearn,lesteve,2014-11-26 09:40:19,"I reckon it could be tested with some matplotlib hackery.

As an aside nilearn plotting functions don't have tests besides smoke tests that only make sure no exception is raised, which is not great. Provided the right matplotlib incantations it is probably possible to check a few things like the threshold logic, the colorbar range, etc...
",,
21,issue_comment,293,nilearn,nilearn,GaelVaroquaux,2014-11-26 10:06:41,"> I reckon it could be tested with some matplotlib hackery.

For now, I think that we want smoke test only. But we definitely want a
smoke test, ie all the lines of code should be covered.
",,
22,issue_comment,293,nilearn,nilearn,GaelVaroquaux,2014-11-26 10:09:29,"As the strategy implemented here is not the ""right"" one, I am changing the title from MRG to WIP. Please change it back to MRG when done.
",,
23,issue_comment,293,nilearn,nilearn,eickenberg,2014-11-26 10:16:12,"thanks, I forgot to do that.
",,
24,issue_comment,293,nilearn,nilearn,bthirion,2014-11-26 10:23:49,"Agreed: a smoke test is better than no test. Simply think of potential issues with different matplotlib versions...
I understand that a real test is hard to make, and would not require it in this PR.
",,
25,issue_comment,293,nilearn,nilearn,eickenberg,2014-12-23 18:57:38,"With some very good input from @AlexandreAbraham I managed to make the requested half colorbar.

It already works on plot_localizer_simple_analysis.

I am now wondering: Do I re-double the xticks?
",,
26,issue_comment,293,nilearn,nilearn,bthirion,2015-01-04 22:14:41,"The example looks good. I don't think you need to add more yticks. 
Could you add a (smoke) test ?
",,
27,issue_comment,293,nilearn,nilearn,eickenberg,2015-01-05 13:29:00,"Added back the typical number of ticks for such a colorbar.

![figure_1](https://cloud.githubusercontent.com/assets/1306635/5613591/f1b35d78-94e6-11e4-8b49-61c6c90813b2.png)

Will add smoke test.
",,
28,issue_comment,293,nilearn,nilearn,eickenberg,2015-01-05 13:48:39,"Travis failure due to smoke tests: Smoke tests for plots invoke saving in order to force rendering. Saving is forced by passing a filename. `img_plotting._plot_img_with_bg` saves the file if a filename is provided and returns `None` instead of the active display object. Changing the colorbar a posteriori in `plot_stat_map` by interacting with the display object is thus impossible and raises an error.

Two possibilities for solving this:
- add `cbar_min`, `cbar_max` kwargs to `_plot_img_with_bg`, making colorbar range editing available to a wider number of functions (is this wanted at all?)
- do the saving by hand in `plot_stat_map` after the colorbar has been rendered.

Neither of the possibilities poses much of a problem. It is more a question of whether specifying `cbar_max` and `cbar_min` independently of `vmax, vmin` is generally useful or not.
",,
29,issue_comment,293,nilearn,nilearn,AlexandreAbraham,2015-01-05 13:54:26,"Option #3: turn _plot_img_with_bg into an object which plot the axis in the __init__, let you mess around with the colorbar, and render it (or save it to a file) in a .show() method. Note that I have not seen the code and therefore don't know if this make sense or not :confused: .
",,
30,issue_comment,293,nilearn,nilearn,lesteve,2015-01-05 14:08:29,"> add cbar_min, cbar_max kwargs to _plot_img_with_bg, making colorbar range editing available to a wider number of functions (is this wanted at all?)

I'd be in favor of this solution even if the colorbar tweaking is only used in plot_stat_map. In my mind _plot_img_with_bg is the generic helper function that user-facing functions call with different parameters.

An other option would be to add a callback that is called with the display as argument just before the save. Not sure which one is simpler.
",,
31,issue_comment,293,nilearn,nilearn,GaelVaroquaux,2015-01-05 15:40:30,">   • add cbar_min, cbar_max kwargs to _plot_img_with_bg, making colorbar range
>     editing available to a wider number of functions (is this wanted at all?)

This sounds about right to me. _plot_img_with_bg is somewhat of a
low-level swiss-army knife, and can thus be made more versatile.
",,
32,issue_comment,293,nilearn,nilearn,eickenberg,2015-01-06 12:58:48,"swiss army knife made and plot_stat_map tested
",,
33,issue_comment,293,nilearn,nilearn,eickenberg,2015-01-07 10:26:41,"Added possibility for fully negative range to be detected. Also made tick marks adapt to the necessary order of magnitude in precision (done using `log10` of the amplitude. Not switching from `%f` to `%e` notation and not invoking any general matplotlib tick formatter -- open to suggestions if such a thing exists).
",,
34,issue_comment,293,nilearn,nilearn,eickenberg,2015-01-07 10:30:29,"Possibly found a recipe for the latter in matplotlib
",,
35,issue_comment,293,nilearn,nilearn,eickenberg,2015-01-07 11:55:34,"Simply not calling `set_tick_labels` causes the colorbar ticks to be formatted in a reasonable manner automatically.
",,
36,issue_comment,293,nilearn,nilearn,eickenberg,2015-01-29 16:41:41,"resolved conflict and squashed commits
",,
37,issue_comment,293,nilearn,nilearn,eickenberg,2015-02-01 15:55:02,"Yeah I somehow reverted to an earlier version, all colorbar logic is back in plot_stat_map instead of _plot_img_with_bg.
",,
38,issue_comment,293,nilearn,nilearn,eickenberg,2015-02-01 19:46:43,"OK this doesn't work for the travis machine with `MATPLOTLIB_VERSION=""1.4.2""`, a newer matplotlib than that which I used to code this feature. I am having troubles installing matplotlib from github right now, so I'll try to fix this on another machine.
",,
39,issue_comment,293,nilearn,nilearn,eickenberg,2015-02-05 12:34:41,"In matplotlib 1.1.1 we have
`ColorbarBase.outline.get_ydata` and `ColorbarBase.outline.set_ydata`

In matplotlib 1.4.2, that doesn't exist, but there is
`ColorbarBase.outline.get_xy` and `ColorbarBase.outline.set_xy`.

There exists no function to this effect that is shared between versions. One way out of this would be to write helper functions `_get_y, _set_y` that render these differences transparent. Should I do that, or is there something smarter I can do?
",,
40,issue_comment,293,nilearn,nilearn,eickenberg,2015-02-05 14:09:07,"Tests passing on matplotlib 1.4.2 as well now.
",,
41,issue_comment,293,nilearn,nilearn,eickenberg,2015-02-05 16:06:45,"Yeah this is/was ready ...
",,
42,issue_comment,293,nilearn,nilearn,eickenberg,2015-02-05 17:05:03,"Thanks!
",,
43,issue_comment,293,nilearn,nilearn,eickenberg,2015-02-06 07:44:12,"had a little après-sprint to make it grow up :)

On Friday, February 6, 2015, Gael Varoquaux notifications@github.com
wrote:

> > Thanks!
> 
> Looks like this merge right before a release was a bit premature :)
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/nilearn/nilearn/pull/293#issuecomment-73188864.
",,
44,pull_request_commit_comment,293,nilearn,nilearn,AlexandreAbraham,2015-01-06 22:35:57,"I would expect the symmetric colorbar to work both ways: upper part of the original cbar if all values are positive and lower part of the cbar if all values are negative.
",86f3d6b81dcbff8fcd42047eb7e3961d7a43ae08,"(None, '', u'nilearn/plotting/img_plotting.py')"
45,pull_request_commit_comment,293,nilearn,nilearn,GaelVaroquaux,2015-01-06 22:37:23,"> I would expect the symmetric colorbar to work both ways: upper part of the
> original cbar if all values are positive and lower part of the cbar if all
> values are negative.

Good point!
",86f3d6b81dcbff8fcd42047eb7e3961d7a43ae08,"(None, '', u'nilearn/plotting/img_plotting.py')"
46,pull_request_commit_comment,293,nilearn,nilearn,eickenberg,2015-01-07 06:50:51,"i would, too. but is this expected to happen for any type of data?

On Tuesday, January 6, 2015, Alexandre Abraham notifications@github.com
wrote:

> In nilearn/plotting/img_plotting.py
> https://github.com/nilearn/nilearn/pull/293#discussion-diff-22557878:
> 
> > @@ -586,7 +611,15 @@ def plot_stat_map(stat_map_img, bg_img=MNI152TEMPLATE, cut_coords=None,
> >                      np.logical_not(stat_map_data._mask)])
> >          stat_map_max = np.nanmax(stat_map_data)
> >          stat_map_min = np.nanmin(stat_map_data)
> > +
> > -    if symmetric_cbar == 'auto':
> > -        symmetric_cbar = stat_map_min < 0
> 
> I would expect the symmetric colorbar to work both ways: upper part of the
> original cbar if all values are positive and lower part of the cbar if all
> values are negative.
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/nilearn/nilearn/pull/293/files#r22557878.
",86f3d6b81dcbff8fcd42047eb7e3961d7a43ae08,"(None, '', u'nilearn/plotting/img_plotting.py')"
47,pull_request_commit_comment,293,nilearn,nilearn,GaelVaroquaux,2015-01-07 06:54:21,"Yes. A t map with the contrast specified with the wrong sign for instance. 

Sent from my phone. Please forgive brevity and mis spelling

On Jan 7, 2015, 07:50, at 07:50, eickenberg notifications@github.com wrote:

> > @@ -586,7 +611,15 @@ def plot_stat_map(stat_map_img,
> > bg_img=MNI152TEMPLATE, cut_coords=None,
> >                      np.logical_not(stat_map_data._mask)])
> >          stat_map_max = np.nanmax(stat_map_data)
> >          stat_map_min = np.nanmin(stat_map_data)
> > +
> > -    if symmetric_cbar == 'auto':
> > -        symmetric_cbar = stat_map_min < 0
> 
> i would, too. but is this expected to happen for any type of data?
> 
> On Tuesday, January 6, 2015, Alexandre Abraham
> notifications@github.com
> wrote:
> 
> > In nilearn/plotting/img_plotting.py
> > 
> > https://github.com/nilearn/nilearn/pull/293#discussion-diff-22557878:
> > 
> > > @@ -586,7 +611,15 @@ def plot_stat_map(stat_map_img,
> > > bg_img=MNI152TEMPLATE, cut_coords=None,
> > >                      np.logical_not(stat_map_data._mask)])
> > >          stat_map_max = np.nanmax(stat_map_data)
> > >          stat_map_min = np.nanmin(stat_map_data)
> > > +
> > > -    if symmetric_cbar == 'auto':
> > > -        symmetric_cbar = stat_map_min < 0
> > 
> > I would expect the symmetric colorbar to work both ways: upper part
> > of the
> > original cbar if all values are positive and lower part of the cbar
> > if all
> > values are negative.
> > 
> > —
> > Reply to this email directly or view it on GitHub
> > https://github.com/nilearn/nilearn/pull/293/files#r22557878.
> 
> ---
> 
> Reply to this email directly or view it on GitHub:
> https://github.com/nilearn/nilearn/pull/293/files#r22572998
",86f3d6b81dcbff8fcd42047eb7e3961d7a43ae08,"(None, '', u'nilearn/plotting/img_plotting.py')"
48,pull_request_commit_comment,293,nilearn,nilearn,eickenberg,2015-01-07 07:04:31,"but t values generally can take both signs and thus should be shown with
the full colorbar, but ok, i see the idea, and will add.

up until now i was thinking that showing only one half of the colorbar
should only be done if the values are necessarily and inherently of only
one sign (eg neg log p values). and in that case one has the choice of the
sign and won't let it be negative.

On Wednesday, January 7, 2015, Gael Varoquaux notifications@github.com
wrote:

> In nilearn/plotting/img_plotting.py
> https://github.com/nilearn/nilearn/pull/293#discussion-diff-22573083:
> 
> > @@ -586,7 +611,15 @@ def plot_stat_map(stat_map_img, bg_img=MNI152TEMPLATE, cut_coords=None,
> >                      np.logical_not(stat_map_data._mask)])
> >          stat_map_max = np.nanmax(stat_map_data)
> >          stat_map_min = np.nanmin(stat_map_data)
> > +
> > -    if symmetric_cbar == 'auto':
> > -        symmetric_cbar = stat_map_min < 0
> 
> Yes. A t map with the contrast specified with the wrong sign for instance.
> Sent from my phone. Please forgive brevity and mis spelling
> … <#14ac32c444d9a712_>
> On Jan 7, 2015, 07:50, at 07:50, eickenberg <notifications@github.com
> <javascript:_e(%7B%7D,'cvml','notifications@github.com');>> wrote: >> @@
> -586,7 +611,15 @@ def plot_stat_map(stat_map_img, >bg_img=MNI152TEMPLATE,
> cut_coords=None, >> np.logical_not(stat_map_data._mask)]) >> stat_map_max =
> np.nanmax(stat_map_data) >> stat_map_min = np.nanmin(stat_map_data) >> + >>
> - if symmetric_cbar == 'auto': >> + symmetric_cbar = stat_map_min < 0 > >i
>   would, too. but is this expected to happen for any type of data? > >On
>   Tuesday, January 6, 2015, Alexandre Abraham ><notifications@github.com
>   <javascript:_e(%7B%7D,'cvml','notifications@github.com');>> >wrote: > In
>   nilearn/plotting/img_plotting.py > <
>   https://github.com/nilearn/nilearn/pull/293#discussion-diff-22557878>: >
>   > > @@ -586,7 +611,15 @@ def plot_stat_map(stat_map_img,
>   bg_img=MNI152TEMPLATE, cut_coords=None, > >
>   np.logical_not(stat_map_data._mask)]) > > stat_map_max =
>   np.nanmax(stat_map_data) > > stat_map_min = np.nanmin(stat_map_data) > > +
>   > > + if symmetric_cbar == 'auto': > > + symmetric_cbar = stat_map_min < 0
>   > > I would expect the symmetric colorbar to work both ways: upper part of
>   the > original cbar if all values are positive and lower part of the cbar
>   if all > values are negative. > > — > Reply to this email directly or view
>   it on GitHub > <
>   https://github.com/nilearn/nilearn/pull/293/files#r22557878>. > --- Reply
>   to this email directly or view it on GitHub:
>   https://github.com/nilearn/nilearn/pull/293/files#r22572998
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/nilearn/nilearn/pull/293/files#r22573083.
",86f3d6b81dcbff8fcd42047eb7e3961d7a43ae08,"(None, '', u'nilearn/plotting/img_plotting.py')"
49,pull_request_commit_comment,293,nilearn,nilearn,bthirion,2015-01-07 07:43:02,"To be frank I don't think I have encountered such a use case in the past: while positive values van be seen for variance images, I have no idea of the equivalent for negative images.
On the other hand, I thinks that adding this use case could be useful in some cases that I can't figure out at the moment, and will not harm. 
",86f3d6b81dcbff8fcd42047eb7e3961d7a43ae08,"(None, '', u'nilearn/plotting/img_plotting.py')"
50,pull_request_commit_comment,293,nilearn,nilearn,GaelVaroquaux,2015-01-07 07:56:14,"Ok

Sent from my phone. Please forgive brevity and mis spelling

On Jan 7, 2015, 08:43, at 08:43, bthirion notifications@github.com wrote:

> > @@ -586,7 +611,15 @@ def plot_stat_map(stat_map_img,
> > bg_img=MNI152TEMPLATE, cut_coords=None,
> >                      np.logical_not(stat_map_data._mask)])
> >          stat_map_max = np.nanmax(stat_map_data)
> >          stat_map_min = np.nanmin(stat_map_data)
> > +
> > -    if symmetric_cbar == 'auto':
> > -        symmetric_cbar = stat_map_min < 0
> 
> To be frank I don't think I have encountered such a use case in the
> past: while positive values van be seen for variance images, I have no
> idea of the equivalent for negative images.
> On the other hand, I thinks that adding this use case could be useful
> in some cases that I can't figure out at the moment, and will not harm.
> 
> ---
> 
> Reply to this email directly or view it on GitHub:
> https://github.com/nilearn/nilearn/pull/293/files#r22573993
",86f3d6b81dcbff8fcd42047eb7e3961d7a43ae08,"(None, '', u'nilearn/plotting/img_plotting.py')"
51,pull_request_commit_comment,293,nilearn,nilearn,AlexandreAbraham,2015-02-05 14:34:35,"Thanks for all these details!
",86f3d6b81dcbff8fcd42047eb7e3961d7a43ae08,"(15, '', u'nilearn/_utils/fixes/matplotlib_backports.py')"
52,pull_request_commit_comment,293,nilearn,nilearn,AlexandreAbraham,2015-02-05 14:36:07,"I prefer to enclose boolean expression in parenthesis `
symmetric_cbar = (stat_map_min < 0 and stat_map_max > 0)`
",86f3d6b81dcbff8fcd42047eb7e3961d7a43ae08,"(None, '', u'nilearn/plotting/img_plotting.py')"
53,pull_request_commit_comment,293,nilearn,nilearn,AlexandreAbraham,2015-02-05 14:38:20,"Same here.
",86f3d6b81dcbff8fcd42047eb7e3961d7a43ae08,"(None, '', u'nilearn/plotting/img_plotting.py')"
54,pull_request_commit_comment,293,nilearn,nilearn,GaelVaroquaux,2015-02-05 16:10:52,"Why are why introducing new keywords: could we use 'vmax' and 'threshold'?
",86f3d6b81dcbff8fcd42047eb7e3961d7a43ae08,"(13, '', u'nilearn/plotting/img_plotting.py')"
55,pull_request_commit_comment,293,nilearn,nilearn,GaelVaroquaux,2015-02-05 16:13:12,"@eickenberg convinced.
",86f3d6b81dcbff8fcd42047eb7e3961d7a43ae08,"(13, '', u'nilearn/plotting/img_plotting.py')"
56,pull_request_commit_comment,293,nilearn,nilearn,GaelVaroquaux,2015-02-05 16:14:26,"I meant: @eickenberg convinced me.
",86f3d6b81dcbff8fcd42047eb7e3961d7a43ae08,"(13, '', u'nilearn/plotting/img_plotting.py')"
57,pull_request_commit_comment,293,nilearn,nilearn,eickenberg,2015-02-05 16:14:44,"[ref](https://github.com/nilearn/nilearn/pull/293/#issuecomment-68725033)
",86f3d6b81dcbff8fcd42047eb7e3961d7a43ae08,"(13, '', u'nilearn/plotting/img_plotting.py')"
58,pull_request_commit,293,nilearn,nilearn,eickenberg,2014-11-24 10:15:52,ENH added symmetric_cbar keyword to plot_stat_map,ab614e7e052c6a06d0ea2771de4dc59b0965fd8d,
59,pull_request_commit,293,nilearn,nilearn,eickenberg,2015-02-05 14:00:56,FIX matplotlib 1.4.2 issue,31ca37307275982f0b4013e790ef97ad4390f917,
60,pull_request_commit,293,nilearn,nilearn,eickenberg,2015-02-05 14:52:49,COS parentheses around boolean expressions,c50184d3e1e49af910153b66ce4531cd145d3063,
61,pull_request_commit,293,nilearn,nilearn,eickenberg,2015-02-05 15:10:13,FIX use hasattr instead of checking versions,86f3d6b81dcbff8fcd42047eb7e3961d7a43ae08,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,299,nilearn,nilearn,bthirion,2014-12-01 22:52:00,"See the code below:

``` python

import nibabel
import matplotlib.pyplot as plt
from nilearn import datasets
from nilearn.plotting import plot_stat_map
dataset_files = datasets.fetch_localizer_calculation_task(n_subjects=1)
img = nibabel.load(dataset_files['cmaps'][0])
plt.figure()
for i in range(2):
    ax = plt.subplot(2, 1, i + 1)
    plot_stat_map(img, axes=ax)
plt.show()
```

![figure](https://cloud.githubusercontent.com/assets/1680079/5259446/87eff726-7a00-11e4-93a2-abca8d838a19.png)
",start issue,The upper colorbar does not display well when using subplots
2,issue_closed,299,nilearn,nilearn,lesteve,2014-12-02 13:03:58,,closed issue,The upper colorbar does not display well when using subplots
3,issue_comment,299,nilearn,nilearn,mrahim,2014-12-02 09:55:38,"Seems that the top border of the figure is cut when plotting, this is what I got inline using the same code (on another map).

![subplots](https://cloud.githubusercontent.com/assets/8612476/5260642/645ced12-7a11-11e4-867d-a51378f5e01e.png)
",,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,305,nilearn,nilearn,banilo,2014-12-06 11:50:26,"...This default behavior has the potential to confuse newly recruited Nilearn fans. What's the rationale?

Use case: when working on VBM data, there is not need to detrend by default.
",start issue,NiftiLabelsMasker: deactivate default detrend/standardize?
2,issue_closed,305,nilearn,nilearn,lesteve,2014-12-11 10:18:33,,closed issue,NiftiLabelsMasker: deactivate default detrend/standardize?
3,issue_comment,305,nilearn,nilearn,eickenberg,2014-12-06 11:53:17,"This has changed several times over development of the package. Almost all combinations of default settings have their advantages and disadvantages, but probably only on specific types of data. Maybe it would indeed be prudent to switch them off by default, e.g. if one assumes that many people will have their data already preprocessed in certain ways before using nilearn.
",,
4,issue_comment,305,nilearn,nilearn,GaelVaroquaux,2014-12-06 11:56:33,"> ...This default behavior has the potential to confuse newly recruited Nilearn
> fans. What's the rationale?

I don't understand: they are off by default, aren't they?
",,
5,issue_comment,305,nilearn,nilearn,eickenberg,2014-12-06 11:58:41,"true https://github.com/nilearn/nilearn/blob/master/nilearn/input_data/nifti_masker.py#L107
",,
6,issue_comment,305,nilearn,nilearn,eickenberg,2014-12-06 12:02:53,"Oops, no they aren't https://github.com/nilearn/nilearn/blob/master/nilearn/input_data/nifti_region.py#L116
",,
7,issue_comment,305,nilearn,nilearn,banilo,2014-12-06 12:03:10,"They seem to be off by default for NiftiMasker and MultiNiftiMasker, but
not for NiftiLabelsMasker.

2014-12-06 12:58 GMT+01:00 eickenberg notifications@github.com:

> true
> https://github.com/nilearn/nilearn/blob/master/nilearn/input_data/nifti_masker.py#L107
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/nilearn/nilearn/issues/305#issuecomment-65894469.

## 

Viele Grüße,
Danilo
",,
8,issue_comment,305,nilearn,nilearn,GaelVaroquaux,2014-12-06 12:05:44,"> They seem to be off by default for NiftiMasker and MultiNiftiMasker, but
> not for NiftiLabelsMasker.

OK, I know why this is there, but it probably needs to be fixed (for
NiftiMapsMasker and NiftiLabelsMasker).

PR welcomed :). And thanks for noticing.
",,
9,issue_comment,305,nilearn,nilearn,banilo,2014-12-06 12:08:30,"Alright, I will make a PR later this day to disable detrend/standardize by default for

```
NiftiLabelsMasker
NiftiMapsMasker
```
",,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,294,nilearn,nilearn,banilo,2014-11-24 16:39:55,"tries to address #292 
",start issue,[ENH] globally unifying _img/_niimg naming in API+variables
2,issue_closed,294,nilearn,nilearn,lesteve,2014-12-04 13:19:46,,closed issue,[ENH] globally unifying _img/_niimg naming in API+variables
3,pull_request_title,294,nilearn,nilearn,banilo,2014-11-24 16:39:55,"tries to address #292 
",12c3053e78d6338256b8556a6b0888b86c27863e,[ENH] globally unifying _img/_niimg naming in API+variables
4,pull_request_merged,294,nilearn,nilearn,lesteve,2014-12-04 13:19:46,[ENH] globally unifying _img/_niimg naming in API+variables,93fce15c1b8a032a4fa30365b3e4ab0401eef63e,Pull request merge from banilo/nilearn:niimg to nilearn/nilearn:master
5,issue_comment,294,nilearn,nilearn,eickenberg,2014-11-25 12:30:51,"I'm finding this not easy to review, because I am not 1000% sure of the criteria. I can go on giving my opinion, but I'd prefer making sure I am reasoning in the right direction first. I kind of liked ""niimg"" ...
",,
6,issue_comment,294,nilearn,nilearn,lesteve,2014-11-25 15:07:17,"Below is my summary of the compromise I gathered from the previous conversations. Please anyone shout if I misunderstood or misrepresented something:
1. Outside of _utils always use _img. In order to avoid ambiguities I am sincerely hoping that all the user-facing functions always accept Nifti-like images via calling _utils.check_img et al.
2. Inside _utils, make the difference between
   - _img: an object that has get_data and get_affine
   - _niimg: either a Nifti filename or an _img

So to take a few realistic examples:

``` python
# plotting/img_plotting.py

def plot_img(img):
    ""are we fine with the check_niimg(img) inconsistency here""
    img = check_niimg(img)  
    # rest of the code
```

``` python
# _utils/niimg_conversions.py

def check_niimg(niimg):
    # whatever the code does to check 'niimg' type 
    # and possibly convert the filename to an image

def is_img(img):
    # check that img has get_data and get_affine
```
",,
7,issue_comment,294,nilearn,nilearn,banilo,2014-11-27 08:49:08,"I would realize Loic's suggestion, then. Unless there are objections?
",,
8,issue_comment,294,nilearn,nilearn,banilo,2014-11-27 09:45:41,"In the last (squashed) commit I attempted the following compromise:

a) functions/variables unambiguously dealing with Nifti1Image objects -> ""img""
b) functions/variables dealing with either Nifti1Image objects or paths to niftis or lists of these -> ""niimg""
",,
9,issue_comment,294,nilearn,nilearn,eickenberg,2014-11-27 09:47:30,"dont squash until you are ready to merge

On Thursday, November 27, 2014, Danilo Bzdok notifications@github.com
wrote:

> In the last (squashed) commit I attempted the following compromise:
> 
> a) functions/variables unambiguously dealing with Nifti1Image objects ->
> ""img""
> b) functions/variables dealing with either Nifti1Image objects or paths to
> niftis or lists of these -> ""niimg""
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/nilearn/nilearn/pull/294#issuecomment-64767176.
",,
10,issue_comment,294,nilearn,nilearn,lesteve,2014-11-27 10:02:58,"> In the last (squashed) commit I attempted the following compromise:
> 
> a) functions/variables unambiguously dealing with Nifti1Image objects -> ""img""
> b) functions/variables dealing with either Nifti1Image objects or paths to niftis or lists of these -> ""niimg""

You followed this only inside _utils, right?
",,
11,issue_comment,294,nilearn,nilearn,banilo,2014-11-27 10:07:20,"Rather, for all changes files, including _utils.*

2014-11-27 11:02 GMT+01:00 Loïc Estève notifications@github.com:

> In the last (squashed) commit I attempted the following compromise:
> 
> a) functions/variables unambiguously dealing with Nifti1Image objects ->
> ""img""
> b) functions/variables dealing with either Nifti1Image objects or paths to
> niftis or lists of these -> ""niimg""
> 
> You followed this only inside _utils, right?
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/nilearn/nilearn/pull/294#issuecomment-64769154.

## 

Viele Grüße,
Danilo
",,
12,issue_comment,294,nilearn,nilearn,lesteve,2014-11-27 10:28:38,"> Rather, for all changes files, including _utils.*

:confused: At first sight, it looks like you did what I proposed so I am going to completely disregard your last comment.
",,
13,issue_comment,294,nilearn,nilearn,banilo,2014-11-27 10:34:41,"Whatever the Watzlawickian communication bottleneck... From what I
understood, we might all agree on the current version of the PR. Let's see.

2014-11-27 11:28 GMT+01:00 Loïc Estève notifications@github.com:

> Rather, for all changes files, including _utils.*
> 
> [image: :confused:] At first sight, it looks like you did what I proposed
> so I am going to completely disregard your last comment.
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/nilearn/nilearn/pull/294#issuecomment-64772258.

## 

Viele Grüße,
Danilo
",,
14,issue_comment,294,nilearn,nilearn,lesteve,2014-11-28 08:58:59,"I think we should come up with a uniform description of the `img` parameter in the docstring as well. At the moment here are a few examples I could find:
- niimg
- string or object
- nilearn nifti image
- a nifti-image like object or a filename

The wording [there](http://nilearn.github.io/building_blocks/manipulating_mr_images.html#niimg-like-objects) seems to be ""Niimg-like object"". We could use this wording but I am not sure how to point to a useful description of what a Niimg-like object inside the docstring.
",,
15,issue_comment,294,nilearn,nilearn,banilo,2014-11-28 21:50:53,"Last commit..
a) restored unnecessary PEP8 fixes
b) change concat_img to concat_niimgs
",,
16,issue_comment,294,nilearn,nilearn,lesteve,2014-12-01 08:05:53,"> a) restored unnecessary PEP8 fixes

There are still some left ...

Besides that I believe the main remaining thing is to come up with a uniform and useful docstring description, see my post above.
",,
17,issue_comment,294,nilearn,nilearn,banilo,2014-12-01 08:14:38,"Regarding the documentation issue: how about docstring-ing 3 baseline entities:
a) img: a nibabel.Nifti1Image object, with .get_affine(), .get_data() and shape
b) str: filename/path to a nifti image
c) niimg (restriced to _utils): (iterable of) a or b
",,
18,issue_comment,294,nilearn,nilearn,lesteve,2014-12-01 15:12:26,"There are still `niimg` occurences lingering in other files, e.g. nilearn/decoding/searchlight.py
",,
19,issue_comment,294,nilearn,nilearn,lesteve,2014-12-01 15:18:52,"> There are still niimg occurences lingering in other files, e.g. nilearn/decoding/searchlight.py

Also in nilearn/image/resampling.py
",,
20,issue_comment,294,nilearn,nilearn,banilo,2014-12-01 19:05:39,"Ok, how about the current status?
",,
21,issue_comment,294,nilearn,nilearn,lesteve,2014-12-01 19:16:24,"> Ok, how about the current status?

Looking closer but a few of my comments are still visible, meaning they have been missed  ...
",,
22,issue_comment,294,nilearn,nilearn,banilo,2014-12-02 10:08:25,"Ok, last touches done

:dancers: 
",,
23,issue_comment,294,nilearn,nilearn,banilo,2014-12-02 13:22:07,"Last last touches done...

:ghost: 
",,
24,issue_comment,294,nilearn,nilearn,banilo,2014-12-02 15:35:37,"Last last touches done...

:dancer: :dancer: :dancer: :dancer: :dancer: :dancer: :dancer: 
",,
25,issue_comment,294,nilearn,nilearn,banilo,2014-12-04 08:35:32,"Voilà, commits squashed... resolved 1 merge conflict in plot_oasis... on the way.

Regarding test: final commit has works-on-my-machine certificat
",,
26,issue_comment,294,nilearn,nilearn,lesteve,2014-12-04 10:06:25,"plot_oasis_vbm.py is broken: you left some niimg in there
",,
27,issue_comment,294,nilearn,nilearn,lesteve,2014-12-04 10:08:57,"there are still some niimg left in decoding/searchlight.py
",,
28,issue_comment,294,nilearn,nilearn,lesteve,2014-12-04 10:11:26,"Outside the last few comments, I think we are closing in on near-perfection. I am sure we missed a few but they will be fixed incrementally.
",,
29,issue_comment,294,nilearn,nilearn,lesteve,2014-12-04 13:19:36,"All right, we got there or close enough in the end :fireworks:!

Kudos for going through the pain to bring this to completion.
",,
30,issue_comment,294,nilearn,nilearn,GaelVaroquaux,2014-12-04 13:39:38,"Hurray! Thanks

<div>-------- Original message --------</div><div>From: Loïc Estève notifications@github.com </div><div>Date:04/12/2014  14:19  (GMT+01:00) </div><div>To: nilearn/nilearn nilearn@noreply.github.com </div><div>Subject: Re: [nilearn] [ENH] globally unifying _img/_niimg naming in
  API+variables (#294) </div><div>
</div>Merged #294.

—
Reply to this email directly or view it on GitHub.
",,
31,pull_request_commit_comment,294,nilearn,nilearn,eickenberg,2014-11-25 12:11:04,"maybe go for `is_img` because 'a' isn't the right article for 'img'. Interesting that this said ""niimg"" to begin with -- this function will not accept filenames as valid images.
",12c3053e78d6338256b8556a6b0888b86c27863e,"(None, '', u'nilearn/_utils/niimg_conversions.py')"
32,pull_request_commit_comment,294,nilearn,nilearn,eickenberg,2014-11-25 12:11:33,"wait for another opinion before making this change
",12c3053e78d6338256b8556a6b0888b86c27863e,"(None, '', u'nilearn/_utils/niimg_conversions.py')"
33,pull_request_commit_comment,294,nilearn,nilearn,eickenberg,2014-11-25 12:12:42,"this function also doesn't accept filenames, so good change.
",12c3053e78d6338256b8556a6b0888b86c27863e,"(23, '', u'nilearn/_utils/niimg_conversions.py')"
34,pull_request_commit_comment,294,nilearn,nilearn,eickenberg,2014-11-25 12:14:50,"I would write ""image"" here or stay with ""niimg"" (but again, it can't be a filename here)
",12c3053e78d6338256b8556a6b0888b86c27863e,"(None, '', u'nilearn/_utils/niimg_conversions.py')"
35,pull_request_commit_comment,294,nilearn,nilearn,banilo,2014-11-27 08:51:19,"Yes, is_img appears to be a good solution. Objections?
",12c3053e78d6338256b8556a6b0888b86c27863e,"(None, '', u'nilearn/_utils/niimg_conversions.py')"
36,pull_request_commit_comment,294,nilearn,nilearn,banilo,2014-11-27 08:52:57,"Suggestion: Should we just tend to use ""image"" in docstrings and comments as a human-language correlate of img objects?
",12c3053e78d6338256b8556a6b0888b86c27863e,"(None, '', u'nilearn/_utils/niimg_conversions.py')"
37,pull_request_commit_comment,294,nilearn,nilearn,lesteve,2014-11-27 14:56:02,"Unnecessary change
",12c3053e78d6338256b8556a6b0888b86c27863e,"(None, '', u'nilearn/_utils/testing.py')"
38,pull_request_commit_comment,294,nilearn,nilearn,lesteve,2014-11-27 14:58:58,"I guess you should use img rather than nifti_image here.
",12c3053e78d6338256b8556a6b0888b86c27863e,"(None, '', u'nilearn/_utils/niimg_conversions.py')"
39,pull_request_commit_comment,294,nilearn,nilearn,lesteve,2014-11-27 14:59:24,"a_n_ image
",12c3053e78d6338256b8556a6b0888b86c27863e,"(None, '', u'nilearn/_utils/niimg_conversions.py')"
40,pull_request_commit_comment,294,nilearn,nilearn,lesteve,2014-11-27 15:05:09,"I thought we agree that we would keep niimg in this kind of cases:
- we are in _utils so we bother about making the img/niimg distinction
- niimgs can be a list of paths or image objects (since we called check_niimg on them)
",12c3053e78d6338256b8556a6b0888b86c27863e,"(None, '', u'nilearn/_utils/niimg_conversions.py')"
41,pull_request_commit_comment,294,nilearn,nilearn,lesteve,2014-11-27 15:11:41,"I am guessing your editor removes newlines at the end of the file automatically. It would be nice to disable that since that introduces unnecessary noise in the diff.
",12c3053e78d6338256b8556a6b0888b86c27863e,"(None, '', u'nilearn/image/__init__.py')"
42,pull_request_commit_comment,294,nilearn,nilearn,lesteve,2014-11-27 15:39:47,"Still some unnecessary PEP8 fixes like this in a few places. Can you look at your diff and remove all of them?
",12c3053e78d6338256b8556a6b0888b86c27863e,"(None, '', u'nilearn/plotting/img_plotting.py')"
43,pull_request_commit_comment,294,nilearn,nilearn,banilo,2014-11-27 21:21:04,"Yes indeed...i will disable this Feature 
",12c3053e78d6338256b8556a6b0888b86c27863e,"(None, '', u'nilearn/image/__init__.py')"
44,pull_request_commit_comment,294,nilearn,nilearn,banilo,2014-11-28 21:15:14,"Fixed this uncalled for default behavior of atom editor now!
",12c3053e78d6338256b8556a6b0888b86c27863e,"(None, '', u'nilearn/_utils/testing.py')"
45,pull_request_commit_comment,294,nilearn,nilearn,lesteve,2014-12-01 14:26:41,"niimgs?
",12c3053e78d6338256b8556a6b0888b86c27863e,"(None, '', u'nilearn/_utils/niimg_conversions.py')"
46,pull_request_commit_comment,294,nilearn,nilearn,lesteve,2014-12-01 14:28:58,"iterable of niimg-like objects?
",12c3053e78d6338256b8556a6b0888b86c27863e,"(None, '', u'nilearn/_utils/niimg_conversions.py')"
47,pull_request_commit_comment,294,nilearn,nilearn,lesteve,2014-12-01 14:30:40,"Keep niimg here and the line above, since you are iterating over niimgs?
",12c3053e78d6338256b8556a6b0888b86c27863e,"(None, '', u'nilearn/_utils/niimg_conversions.py')"
48,pull_request_commit_comment,294,nilearn,nilearn,lesteve,2014-12-01 14:31:21,"Same thing here img -> niimg
",12c3053e78d6338256b8556a6b0888b86c27863e,"(None, '', u'nilearn/_utils/niimg_conversions.py')"
49,pull_request_commit_comment,294,nilearn,nilearn,lesteve,2014-12-01 14:32:12,"iter_img -> iter_niimg
",12c3053e78d6338256b8556a6b0888b86c27863e,"(None, '', u'nilearn/_utils/niimg_conversions.py')"
50,pull_request_commit_comment,294,nilearn,nilearn,lesteve,2014-12-01 14:33:10,"I would keep the (iterable of)*
",12c3053e78d6338256b8556a6b0888b86c27863e,"(None, '', u'nilearn/_utils/niimg_conversions.py')"
51,pull_request_commit_comment,294,nilearn,nilearn,lesteve,2014-12-01 14:33:34,"Still a new line here
",12c3053e78d6338256b8556a6b0888b86c27863e,"(None, '', u'nilearn/_utils/testing.py')"
52,pull_request_commit_comment,294,nilearn,nilearn,lesteve,2014-12-01 14:34:07,"list of Niimg-like objects + URL
",12c3053e78d6338256b8556a6b0888b86c27863e,"(None, '', u'nilearn/decomposition/canica.py')"
53,pull_request_commit_comment,294,nilearn,nilearn,lesteve,2014-12-01 14:34:47,"I would keep ""list of""
",12c3053e78d6338256b8556a6b0888b86c27863e,"(None, '', u'nilearn/decomposition/multi_pca.py')"
54,pull_request_commit_comment,294,nilearn,nilearn,lesteve,2014-12-01 14:35:49,"Niimg-like object, instance of NiftiMasker ...
",12c3053e78d6338256b8556a6b0888b86c27863e,"(None, '', u'nilearn/decomposition/multi_pca.py')"
55,pull_request_commit_comment,294,nilearn,nilearn,lesteve,2014-12-01 14:35:59,"List of
",12c3053e78d6338256b8556a6b0888b86c27863e,"(None, '', u'nilearn/decomposition/multi_pca.py')"
56,pull_request_commit_comment,294,nilearn,nilearn,lesteve,2014-12-01 14:36:30,"Niimg-like object?
",12c3053e78d6338256b8556a6b0888b86c27863e,"(None, '', u'nilearn/decomposition/multi_pca.py')"
57,pull_request_commit_comment,294,nilearn,nilearn,lesteve,2014-12-01 14:37:38,"List of or plural?
",12c3053e78d6338256b8556a6b0888b86c27863e,"(None, '', u'nilearn/decomposition/multi_pca.py')"
58,pull_request_commit_comment,294,nilearn,nilearn,lesteve,2014-12-01 14:37:59,"Niimg-like objects
",12c3053e78d6338256b8556a6b0888b86c27863e,"(None, '', u'nilearn/image/__init__.py')"
59,pull_request_commit_comment,294,nilearn,nilearn,lesteve,2014-12-01 14:39:03,"Niimg-like object
",12c3053e78d6338256b8556a6b0888b86c27863e,"(None, '', u'nilearn/image/image.py')"
60,pull_request_commit_comment,294,nilearn,nilearn,lesteve,2014-12-01 14:40:58,"I would add ""or iterable of Niimg-like object""
",12c3053e78d6338256b8556a6b0888b86c27863e,"(None, '', u'nilearn/image/image.py')"
61,pull_request_commit_comment,294,nilearn,nilearn,lesteve,2014-12-01 14:43:07,"Niimg-like object + URL
",12c3053e78d6338256b8556a6b0888b86c27863e,"(None, '', u'nilearn/image/image.py')"
62,pull_request_commit_comment,294,nilearn,nilearn,lesteve,2014-12-01 14:43:28,"Niimg-like object + URL
",12c3053e78d6338256b8556a6b0888b86c27863e,"(None, '', u'nilearn/image/image.py')"
63,pull_request_commit_comment,294,nilearn,nilearn,lesteve,2014-12-01 14:43:53,"Niimg-like object
",12c3053e78d6338256b8556a6b0888b86c27863e,"(None, '', u'nilearn/image/image.py')"
64,pull_request_commit_comment,294,nilearn,nilearn,lesteve,2014-12-01 14:44:46,"Should we say image here?
",12c3053e78d6338256b8556a6b0888b86c27863e,"(None, '', u'nilearn/image/image.py')"
65,pull_request_commit_comment,294,nilearn,nilearn,lesteve,2014-12-01 14:45:13,"Add ""or iterable of Niimg-like objects""
",12c3053e78d6338256b8556a6b0888b86c27863e,"(None, '', u'nilearn/image/image.py')"
66,pull_request_commit_comment,294,nilearn,nilearn,lesteve,2014-12-01 14:45:55,"Do we need the explanation now that we have the link to the doc?
",12c3053e78d6338256b8556a6b0888b86c27863e,"(None, '', u'nilearn/image/image.py')"
67,pull_request_commit_comment,294,nilearn,nilearn,lesteve,2014-12-01 14:48:51,"a_n_ img
",12c3053e78d6338256b8556a6b0888b86c27863e,"(None, '', u'nilearn/masking.py')"
68,pull_request_commit_comment,294,nilearn,nilearn,lesteve,2014-12-01 14:49:28,"a_n_ img
",12c3053e78d6338256b8556a6b0888b86c27863e,"(None, '', u'nilearn/masking.py')"
69,pull_request_commit_comment,294,nilearn,nilearn,lesteve,2014-12-01 14:49:47,"a_n_ img
",12c3053e78d6338256b8556a6b0888b86c27863e,"(None, '', u'plot_mask_computation.py')"
70,pull_request_commit_comment,294,nilearn,nilearn,lesteve,2014-12-01 14:52:29,"list of Niimg-like objects
",12c3053e78d6338256b8556a6b0888b86c27863e,"(None, '', u'nilearn/masking.py')"
71,pull_request_commit_comment,294,nilearn,nilearn,lesteve,2014-12-01 14:58:29,"list of?
",12c3053e78d6338256b8556a6b0888b86c27863e,"(None, '', u'nilearn/masking.py')"
72,pull_request_commit_comment,294,nilearn,nilearn,lesteve,2014-12-01 14:58:40,"Niimg-like object + URL?
",12c3053e78d6338256b8556a6b0888b86c27863e,"(None, '', u'nilearn/masking.py')"
73,pull_request_commit_comment,294,nilearn,nilearn,lesteve,2014-12-01 14:59:31,"Niimg-like object
",12c3053e78d6338256b8556a6b0888b86c27863e,"(None, '', u'nilearn/plotting/slicers.py')"
74,pull_request_commit_comment,294,nilearn,nilearn,lesteve,2014-12-01 15:03:19,"Niimg-like object + URL
",12c3053e78d6338256b8556a6b0888b86c27863e,"(None, '', u'nilearn/region.py')"
75,pull_request_commit_comment,294,nilearn,nilearn,lesteve,2014-12-01 15:03:21,"and again
",12c3053e78d6338256b8556a6b0888b86c27863e,"(None, '', u'nilearn/region.py')"
76,pull_request_commit_comment,294,nilearn,nilearn,lesteve,2014-12-01 15:04:28,"Niimg-like object
",12c3053e78d6338256b8556a6b0888b86c27863e,"(None, '', u'nilearn/region.py')"
77,pull_request_commit_comment,294,nilearn,nilearn,lesteve,2014-12-01 15:05:04,"Niimg-like object
",12c3053e78d6338256b8556a6b0888b86c27863e,"(None, '', u'nilearn/region.py')"
78,pull_request_commit_comment,294,nilearn,nilearn,lesteve,2014-12-01 15:05:13,"Niimg-like object
",12c3053e78d6338256b8556a6b0888b86c27863e,"(None, '', u'nilearn/region.py')"
79,pull_request_commit_comment,294,nilearn,nilearn,lesteve,2014-12-01 15:05:56,"Niimg-like object + URL
",12c3053e78d6338256b8556a6b0888b86c27863e,"(None, '', u'nilearn/region.py')"
80,pull_request_commit_comment,294,nilearn,nilearn,lesteve,2014-12-01 15:06:03,"and again
",12c3053e78d6338256b8556a6b0888b86c27863e,"(None, '', u'nilearn/region.py')"
81,pull_request_commit_comment,294,nilearn,nilearn,lesteve,2014-12-02 12:40:22,"I think what the (...)\* meant was: Niimg-like object or iterable of Niimg-like objects.

Maybe we should use the wording ""4D Niimg-like object"" to follow the doc URL .
",12c3053e78d6338256b8556a6b0888b86c27863e,"(None, '', u'nilearn/_utils/niimg_conversions.py')"
82,pull_request_commit_comment,294,nilearn,nilearn,lesteve,2014-12-02 12:41:18,"list of Niimg-like objects
",12c3053e78d6338256b8556a6b0888b86c27863e,"(None, '', u'nilearn/decomposition/canica.py')"
83,pull_request_commit_comment,294,nilearn,nilearn,lesteve,2014-12-02 12:42:01,"object_s_
",12c3053e78d6338256b8556a6b0888b86c27863e,"(None, '', u'nilearn/decomposition/multi_pca.py')"
84,pull_request_commit_comment,294,nilearn,nilearn,lesteve,2014-12-02 12:42:15,"object_s_
",12c3053e78d6338256b8556a6b0888b86c27863e,"(None, '', u'nilearn/decomposition/multi_pca.py')"
85,pull_request_commit_comment,294,nilearn,nilearn,lesteve,2014-12-02 12:42:27,"object_s_
",12c3053e78d6338256b8556a6b0888b86c27863e,"(None, '', u'nilearn/masking.py')"
86,pull_request_commit_comment,294,nilearn,nilearn,lesteve,2014-12-02 12:43:23,"and keep 4D. Something like ""list of 4D Niimg-like object""
",12c3053e78d6338256b8556a6b0888b86c27863e,"(None, '', u'nilearn/masking.py')"
87,pull_request_commit_comment,294,nilearn,nilearn,lesteve,2014-12-02 12:45:14,"Syntax error
",12c3053e78d6338256b8556a6b0888b86c27863e,"(None, '', u'nilearn/plotting/img_plotting.py')"
88,pull_request_commit_comment,294,nilearn,nilearn,lesteve,2014-12-02 12:48:31,"Still some unwanted PEP8 changes
",12c3053e78d6338256b8556a6b0888b86c27863e,"(None, '', u'nilearn/plotting/slicers.py')"
89,pull_request_commit_comment,294,nilearn,nilearn,lesteve,2014-12-02 12:48:41,"and again
",12c3053e78d6338256b8556a6b0888b86c27863e,"(None, '', u'nilearn/plotting/slicers.py')"
90,pull_request_commit_comment,294,nilearn,nilearn,lesteve,2014-12-02 12:48:45,"and again
",12c3053e78d6338256b8556a6b0888b86c27863e,"(None, '', u'nilearn/plotting/slicers.py')"
91,pull_request_commit_comment,294,nilearn,nilearn,lesteve,2014-12-02 12:48:50,"and again
",12c3053e78d6338256b8556a6b0888b86c27863e,"(None, '', u'nilearn/plotting/slicers.py')"
92,pull_request_commit_comment,294,nilearn,nilearn,lesteve,2014-12-02 12:48:54,"and again
",12c3053e78d6338256b8556a6b0888b86c27863e,"(None, '', u'nilearn/plotting/slicers.py')"
93,pull_request_commit_comment,294,nilearn,nilearn,lesteve,2014-12-02 12:48:59,"and again
",12c3053e78d6338256b8556a6b0888b86c27863e,"(None, '', u'nilearn/plotting/slicers.py')"
94,pull_request_commit_comment,294,nilearn,nilearn,lesteve,2014-12-02 12:49:03,"and again
",12c3053e78d6338256b8556a6b0888b86c27863e,"(None, '', u'nilearn/plotting/slicers.py')"
95,pull_request_commit_comment,294,nilearn,nilearn,lesteve,2014-12-02 12:49:20,"missing URL?
",12c3053e78d6338256b8556a6b0888b86c27863e,"(None, '', u'nilearn/plotting/slicers.py')"
96,pull_request_commit_comment,294,nilearn,nilearn,lesteve,2014-12-02 12:55:11,"should we use 4D Niimg-like object here and everywhere that check_niimg_s_ is used?
",12c3053e78d6338256b8556a6b0888b86c27863e,"(None, '', u'nilearn/region.py')"
97,pull_request_commit_comment,294,nilearn,nilearn,lesteve,2014-12-02 13:13:47,"list of ...
",12c3053e78d6338256b8556a6b0888b86c27863e,"(None, '', u'nilearn/masking.py')"
98,pull_request_commit_comment,294,nilearn,nilearn,lesteve,2014-12-02 13:51:06,"Niimg-like object + URL
",12c3053e78d6338256b8556a6b0888b86c27863e,"(None, '', u'nilearn/input_data/nifti_region.py')"
99,pull_request_commit_comment,294,nilearn,nilearn,lesteve,2014-12-02 13:51:12,"Niimg-like object + URL
",12c3053e78d6338256b8556a6b0888b86c27863e,"(None, '', u'nilearn/input_data/nifti_region.py')"
100,pull_request_commit_comment,294,nilearn,nilearn,lesteve,2014-12-02 13:52:44,"Niimg-like object + URL
",12c3053e78d6338256b8556a6b0888b86c27863e,"(None, '', u'nilearn/input_data/nifti_region.py')"
101,pull_request_commit_comment,294,nilearn,nilearn,lesteve,2014-12-02 13:52:51,"Niimg-like object + URL
",12c3053e78d6338256b8556a6b0888b86c27863e,"(None, '', u'nilearn/input_data/nifti_region.py')"
102,pull_request_commit_comment,294,nilearn,nilearn,lesteve,2014-12-02 14:01:11,"list of Niimg-like objects + URL
",12c3053e78d6338256b8556a6b0888b86c27863e,"(None, '', u'nilearn/masking.py')"
103,pull_request_commit_comment,294,nilearn,nilearn,lesteve,2014-12-02 14:51:10,"list of Niimg-like objects
",12c3053e78d6338256b8556a6b0888b86c27863e,"(None, '', u'nilearn/input_data/base_masker.py')"
104,pull_request_commit_comment,294,nilearn,nilearn,lesteve,2014-12-02 14:55:20,"4D Niimg-like object (I think ...)
",12c3053e78d6338256b8556a6b0888b86c27863e,"(None, '', u'nilearn/input_data/multi_nifti_masker.py')"
105,pull_request_commit_comment,294,nilearn,nilearn,lesteve,2014-12-02 14:59:11,"Actually I don't understand the code in detail, just follow the old docstring i.e.:
list of Niimg-like objects
",12c3053e78d6338256b8556a6b0888b86c27863e,"(None, '', u'nilearn/input_data/multi_nifti_masker.py')"
106,pull_request_commit_comment,294,nilearn,nilearn,lesteve,2014-12-02 15:03:36,"Again, I don't follow the code completely but based on the old docstring I would use:
list of Niimg-like objects
",12c3053e78d6338256b8556a6b0888b86c27863e,"(None, '', u'nilearn/input_data/multi_nifti_masker.py')"
107,pull_request_commit_comment,294,nilearn,nilearn,lesteve,2014-12-02 15:05:23,"list of Niimg-like objects
",12c3053e78d6338256b8556a6b0888b86c27863e,"(None, '', u'nilearn/input_data/nifti_masker.py')"
108,pull_request_commit_comment,294,nilearn,nilearn,lesteve,2014-12-02 15:10:17,"same thing as above, I don't understand the code well enough, but I would follow the hint of the old docstring and go for:
list of Niimg-like objects
",12c3053e78d6338256b8556a6b0888b86c27863e,"(None, '', u'nilearn/input_data/nifti_masker.py')"
109,pull_request_commit_comment,294,nilearn,nilearn,lesteve,2014-12-04 10:04:07,"missing URL
",12c3053e78d6338256b8556a6b0888b86c27863e,"(None, '', u'nilearn/region.py')"
110,pull_request_commit_comment,294,nilearn,nilearn,lesteve,2014-12-04 10:04:15,"missing URL
",12c3053e78d6338256b8556a6b0888b86c27863e,"(None, '', u'nilearn/region.py')"
111,pull_request_commit_comment,294,nilearn,nilearn,lesteve,2014-12-04 10:04:23,"missing URL
",12c3053e78d6338256b8556a6b0888b86c27863e,"(None, '', u'nilearn/region.py')"
112,pull_request_commit,294,nilearn,nilearn,banilo,2014-12-04 11:55:16,API: globally unifying niimg/img in functions/variables,12c3053e78d6338256b8556a6b0888b86c27863e,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,298,nilearn,nilearn,lesteve,2014-12-01 13:46:09,"On a black background, the white colorbar ticks were not visible in the saved figure.
# Master

![without_facecolor](https://cloud.githubusercontent.com/assets/1680079/5246351/475fd64c-7968-11e4-8424-7c58517ba740.png)
# This PR

![with_facecolor](https://cloud.githubusercontent.com/assets/1680079/5246353/4b36e83c-7968-11e4-9073-e5fc65338db8.png)

Objections anyone? 
",start issue,Use facecolor and edgecolor when saving figure in gen_rst
2,issue_closed,298,nilearn,nilearn,lesteve,2014-12-01 14:18:39,,closed issue,Use facecolor and edgecolor when saving figure in gen_rst
3,pull_request_title,298,nilearn,nilearn,lesteve,2014-12-01 13:46:09,"On a black background, the white colorbar ticks were not visible in the saved figure.
# Master

![without_facecolor](https://cloud.githubusercontent.com/assets/1680079/5246351/475fd64c-7968-11e4-8424-7c58517ba740.png)
# This PR

![with_facecolor](https://cloud.githubusercontent.com/assets/1680079/5246353/4b36e83c-7968-11e4-9073-e5fc65338db8.png)

Objections anyone? 
",c129cef923e6c8b6b01366c72f70364d646b600b,Use facecolor and edgecolor when saving figure in gen_rst
4,pull_request_merged,298,nilearn,nilearn,lesteve,2014-12-01 14:18:39,Use facecolor and edgecolor when saving figure in gen_rst,fcfbf5027da46515d89ef8a70ffb3578dff2b6d9,Pull request merge from lesteve/nilearn:gen-rst-facecolor-tweak to nilearn/nilearn:master
5,issue_comment,298,nilearn,nilearn,GaelVaroquaux,2014-12-01 14:14:39,"No objection.

This needs to go in the upstream project, Cc @Titan-C 
",,
6,issue_comment,298,nilearn,nilearn,AlexandreAbraham,2014-12-01 14:18:06,"No objections.
",,
7,issue_comment,298,nilearn,nilearn,lesteve,2014-12-01 14:18:35,"Cheers, merging.
",,
8,issue_comment,298,nilearn,nilearn,GaelVaroquaux,2014-12-01 14:19:43,"> Merged #298.

Once again: careful that it get propagated to sphinx-gallery. Remember:
this things is our future.
",,
9,issue_comment,298,nilearn,nilearn,lesteve,2014-12-01 15:02:08,"> Once again: careful that it get propagated to sphinx-gallery. Remember: this things is our future.

Yep I'll make a note to myself and/or open an issue in sphinx-gallery
",,
10,issue_comment,298,nilearn,nilearn,lesteve,2014-12-01 15:30:43,"Hmm maybe that wasn't entirely the right thing to do ... Now you get the default gray matplotlib background for the figure without `facecolor` set explicitly:

![gen_rst_gray_background](https://cloud.githubusercontent.com/assets/1680079/5247959/24b114c6-7977-11e4-9bc6-ec3e1f84c983.png)
",,
11,issue_comment,298,nilearn,nilearn,GaelVaroquaux,2014-12-01 19:24:51,"Ooops. Yeah :$. Maybe we don't want that
",,
12,issue_comment,298,nilearn,nilearn,banilo,2014-12-01 19:29:42,"Fits the current season, though ;-)

2014-12-01 20:24 GMT+01:00 Gael Varoquaux notifications@github.com:

> Ooops. Yeah :$. Maybe we don't want that
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/nilearn/nilearn/pull/298#issuecomment-65119664.

## 

Viele Grüße,
Danilo
",,
13,pull_request_commit,298,nilearn,nilearn,lesteve,2014-12-01 13:38:09,"Use facecolor and edgecolor when saving figure in gen_rst

On a black background, the white colorbar ticks were not visible in the saved figure",c129cef923e6c8b6b01366c72f70364d646b600b,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,289,nilearn,nilearn,banilo,2014-11-21 16:18:24,"Fixes a number of PEP8 violations in affine matrix example.
",start issue,PEP8 fixes in plot_affine_transformation.py
2,issue_closed,289,nilearn,nilearn,lesteve,2014-11-24 10:55:24,,closed issue,PEP8 fixes in plot_affine_transformation.py
3,pull_request_title,289,nilearn,nilearn,banilo,2014-11-21 16:18:24,"Fixes a number of PEP8 violations in affine matrix example.
",bacdc849c54e32c880e1da1cea7058c9a464cc97,PEP8 fixes in plot_affine_transformation.py
4,pull_request_merged,289,nilearn,nilearn,lesteve,2014-11-24 10:55:24,PEP8 fixes in plot_affine_transformation.py,46b3f2f3d070666d29de70e1ff81b6e98aa5cacb,Pull request merge from banilo/nilearn:ex_affine to nilearn/nilearn:master
5,issue_comment,289,nilearn,nilearn,bthirion,2014-11-23 21:08:50,"LGTM. makes emacs happy.

That's probably only a matter of test, but I'd rather have the 4 examples on one figure with subplots.
",,
6,issue_comment,289,nilearn,nilearn,lesteve,2014-11-24 07:42:44,"> That's probably only a matter of test, but I'd rather have the 4 examples on one figure with subplots.

The only downside with a single figure is that it sometimes clashes with the way we use examples as step by step instructions. For example: [here](http://nilearn.github.io/building_blocks/manipulating_mr_images.html#smoothing) and [there](http://nilearn.github.io/building_blocks/manipulating_mr_images.html#selecting-features). Two plots were put on the same figure and it is slightly misleading.
",,
7,issue_comment,289,nilearn,nilearn,GaelVaroquaux,2014-11-24 10:03:20,"> That's probably only a matter of test, but I'd rather have the 4 examples on
> one figure with subplots.

I'd rather not. It's much easier to insert in the documentation in the
current state, and this example is mostly made for the narrative
documentation.
",,
8,issue_comment,289,nilearn,nilearn,bthirion,2014-11-24 10:05:24,"OK, let's keep it as is.
",,
9,issue_comment,289,nilearn,nilearn,banilo,2014-11-24 10:37:38,"Fixed missing word. Looks like it might be mergable now...
",,
10,issue_comment,289,nilearn,nilearn,lesteve,2014-11-24 10:55:39,"Merged, thanks for this!
",,
11,pull_request_commit_comment,289,nilearn,nilearn,bthirion,2014-11-23 21:02:00,"missing 'without' ?
",bacdc849c54e32c880e1da1cea7058c9a464cc97,"(None, '', u'plot_affine_transformation.py')"
12,pull_request_commit_comment,289,nilearn,nilearn,lesteve,2014-11-24 08:03:37,"> missing 'without' ?

Looks like it, good catch. @banilo if you fix that, I'll merge this one.
",bacdc849c54e32c880e1da1cea7058c9a464cc97,"(None, '', u'plot_affine_transformation.py')"
13,pull_request_commit_comment,289,nilearn,nilearn,dohmatob,2014-11-24 08:11:57,"+1 for merge.

On Mon, Nov 24, 2014 at 9:03 AM, Loïc Estève notifications@github.com
wrote:

> In plot_affine_transformation.py:
> 
> > @@ -25,9 +25,19 @@
> >     given and no shape given
> >  3) 4x4 affine matrix given and no shape given
> > 
> > ## -While 1) needs no further explanation (it returns an image exactly as specified, with a new view on the data in millimeter space), 2) and 3) are missing some specification, which is subsequently inferred by `resample_img`: If the affine offset is missing (3x3 transformation, case 2), then the new image will be the closest bounding box possible around the data along the new axes. If the affine offset is given, but no shape provided, the resulting image will be the closest bounding box around the union of the data points and the affine offset.
> > 
> > -Note that specifying a shape specifying a 3x3 transformation matrix causes an error message, because `resample_img` will not know where to start the bounding box (there is no intelligent way of inferring this given the bounding box shape).
> > +While 1) needs no further explanation (it returns an image exactly as
> > +specified, with a new view on the data in millimeter space), 2) and 3) are
> > +missing some specification, which is subsequently inferred by `resample_img`:
> > +If the affine offset is missing (3x3 transformation, case 2), then the new
> > +image will be the closest bounding box possible around the data along the
> > +new axes. If the affine offset is given, but no shape provided, the
> > +resulting image will be the closest bounding box around the union of the
> > +data points and the affine offset.
> > +
> > +Note that specifying a shape specifying a 3x3 transformation matrix causes
> 
>  missing 'without' ?
> 
> Looks like it, good catch. @banilo https://github.com/banilo if you fix
> that, I'll merge this one.
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/nilearn/nilearn/pull/289/files#r20776194.

## 

DED
",bacdc849c54e32c880e1da1cea7058c9a464cc97,"(None, '', u'plot_affine_transformation.py')"
14,pull_request_commit,289,nilearn,nilearn,banilo,2014-11-21 16:19:08,PEP8 fixes,9f89edf4b4e09262c1367388ac3331ff269732ec,
15,pull_request_commit,289,nilearn,nilearn,banilo,2014-11-24 10:38:00,restored omitted word,bacdc849c54e32c880e1da1cea7058c9a464cc97,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,318,nilearn,nilearn,AlexandreAbraham,2014-12-12 15:21:14,"Conda handles dependencies better than pip so we could submit nilearn here. It would be easier to install for non-technical people.
",start issue,Conda install nilearn
2,issue_closed,318,nilearn,nilearn,AlexandreAbraham,2016-06-17 12:09:39,,closed issue,Conda install nilearn
3,issue_comment,318,nilearn,nilearn,lesteve,2014-12-12 15:42:26,"FWIW nibabel is not available in conda.
",,
4,issue_comment,318,nilearn,nilearn,GaelVaroquaux,2014-12-12 16:09:12,"> FWIW nibabel is not available in conda.

Maybe this can be sorted out using https://binstar.org/ (not sure, worth
checking)
",,
5,issue_comment,318,nilearn,nilearn,AlexandreAbraham,2016-06-17 12:09:53,"Solved itself. `conda install -c=conda-forge nilearn`
",,
6,issue_comment,318,nilearn,nilearn,AlexandreAbraham,2016-06-17 12:27:46,"> I probably need to do something to have nilearn 0.2.5 available in conda-forge

https://conda-forge.github.io/#update_recipe

Basically, we just have to do a PR to increment a version number in the yaml recipe file.

> Why? Pip works, why confuse users?

I would like to know if there is any benefit in using conda-forge. If not, we may advertise not to use it as we do not control the diffusion. If, during a tutorial, somebody uses anaconda to install nilearn and does not have the right version, I can't imagine what will happen if he uses pip on top of that to upgrade it.
",,
7,issue_comment,318,nilearn,nilearn,AlexandreAbraham,2016-06-17 12:41:42,"No, I did not looked a the commits and, in conda-forge, I've seen a lot of packages that seems migrated automatically from pypi though an automated script. Also, I've missed a lot of team meetings recently ;).

OK, so, in that case, it's already in good hands.
",,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,278,nilearn,nilearn,banilo,2014-11-11 16:48:06,"in response to #203

@AlexandreAbraham: Does this make any sense and is it approximately what you guys had in mind?
",start issue,[ENH] Shelving option for NiftiMasker
2,issue_closed,278,nilearn,nilearn,lesteve,2014-11-19 08:08:52,,closed issue,[ENH] Shelving option for NiftiMasker
3,pull_request_title,278,nilearn,nilearn,banilo,2014-11-11 16:48:06,"in response to #203

@AlexandreAbraham: Does this make any sense and is it approximately what you guys had in mind?
",31969337e86e3d6dff5568d08c2911096bf0333c,[ENH] Shelving option for NiftiMasker
4,issue_comment,278,nilearn,nilearn,banilo,2014-11-11 16:58:49,"Units tests fail for CanICA although I didn't change anything there??

# 

## FAIL: nilearn.decomposition.tests.test_canica.test_canica_square_img

Traceback (most recent call last):
  File ""/Users/admin/anaconda/lib/python2.7/site-packages/nose/case.py"", line 197, in runTest
    self.test(*self.arg)
  File ""/git/nilearn/nilearn/decomposition/tests/test_canica.py"", line 60, in test_canica_square_img
    assert_true(np.sum(K_abs > .9) == 4)
AssertionError: False is not true
    'False is not true' = self._formatMessage('False is not true', ""%s is not true"" % safe_repr(False))

> >  raise self.failureException('False is not true')
",,
5,issue_comment,278,nilearn,nilearn,AlexandreAbraham,2014-11-11 22:00:47,"The CanICA test can fail randomly, don't worry about that.
",,
6,issue_comment,278,nilearn,nilearn,AlexandreAbraham,2014-11-11 22:07:30,"I already have code to add this feature so you don't need to do it yourself. BTW, you should not use MemorizedFunc directly, nor use a temporary directory (shelving has no sense if the results is lost after reboot).

This issue has not been resolved yet because the problem is not in adding shelving support in MultiNiftiMasker. This is the easy part. The question is: how do we handle shelved data in the rest of the library? What if a user wants to use a scikit-learn algorithm on shelved data? We have no answer for these questions. I think this should be discussed with the whole nilearn team.
",,
7,pull_request_commit,278,nilearn,nilearn,banilo,2014-11-11 16:45:41,experimenting naively with Shelving,31969337e86e3d6dff5568d08c2911096bf0333c,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,325,nilearn,nilearn,GaelVaroquaux,2014-12-18 13:53:51,"I saw that by doing twice a display.add_contour with different thresholds:

<pre>
            thr = 1e-1 * vmax
            import copy
            slicer.add_contours(copy.deepcopy(this_img),
                               colors=[colors_light[color],
                                       colors_light[color], ],
                               levels=[-thr, thr],
                               #linestyles='dotted',
                               linewidths=1,
                               label=condition)

            thr = 5e-1 * vmax
            slicer.add_contours(this_img,
                               colors=[colors_light[color],
                                       colors_light[color], ],
                               levels=[-thr, thr],
                               linewidths=2,
                               label=condition)
</pre>


Without the 'deepcopy', the above doesn't seem to work.
",start issue,display.add_contour seems to modify the input data
2,issue_closed,325,nilearn,nilearn,lesteve,2014-12-19 11:22:20,,closed issue,display.add_contour seems to modify the input data
3,issue_comment,325,nilearn,nilearn,lesteve,2014-12-18 17:59:02,"I can reproduce the issue, I haven't looked into why this is happening, but it seems like the affine get translated:

``` python
from nilearn import datasets, plotting

dataset = datasets.fetch_localizer_contrasts(['checkerboard'], n_subjects=1, get_anats=True)

import nibabel
cmap_filename = dataset.cmaps[0]
img = nibabel.load(cmap_filename)
print 'original affine:\n', img.get_affine()

display = plotting.plot_anat(dataset.anats[0])
display.add_contours(img, levels=[-10, 10], colors=['y', 'g'])
print 'affine after first add_contour:\n', img.get_affine()
display.add_contours(img, levels=[-1, 1], colors=['r', 'c'])
print 'affine after second add_contour:\n', img.get_affine()

display = plotting.plot_anat(dataset.anats[0])
display.add_contours(cmap_filename, levels=[-10, 10], colors=['y', 'g'])
display.add_contours(cmap_filename, levels=[-1, 1], colors=['r', 'c'])
```

output:

```
original affine:
[[  -3.    0.    0.   78.]
 [   0.    3.    0. -111.]
 [   0.    0.    3.  -51.]
 [   0.    0.    0.    1.]]
affine after first add_contour:
[[  -3.    0.    0.  -78.]
 [   0.    3.    0. -111.]
 [   0.    0.    3.  -51.]
 [   0.    0.    0.    1.]]
affine after second add_contour:
[[  -3.    0.    0. -234.]
 [   0.    3.    0. -111.]
 [   0.    0.    3.  -51.]
 [   0.    0.    0.    1.]]
```

plots:
![broken](https://cloud.githubusercontent.com/assets/1680079/5493118/1a2c4bd2-86e8-11e4-822a-7be5d7111326.png)
![working](https://cloud.githubusercontent.com/assets/1680079/5493119/1a65ad28-86e8-11e4-8f9c-d941915ed8e5.png)
",,
4,issue_comment,325,nilearn,nilearn,GaelVaroquaux,2014-12-18 18:03:08,"Thanks! You are really our life insurance!
",,
5,issue_comment,325,nilearn,nilearn,lesteve,2014-12-19 11:23:38,"This is fixed in master. The culprit was reorder_img which was modifying the input img affine.
",,
6,issue_comment,325,nilearn,nilearn,GaelVaroquaux,2014-12-19 11:31:18,"Thanks! !!

<div>-------- Original message --------</div><div>From: Loïc Estève notifications@github.com </div><div>Date:19/12/2014  12:23  (GMT+01:00) </div><div>To: nilearn/nilearn nilearn@noreply.github.com </div><div>Cc: Gael Varoquaux gael.varoquaux@normalesup.org </div><div>Subject: Re: [nilearn] display.add_contour seems to modify the input data
  (#325) </div><div>
</div>This is fixed in master. The culprit was reorder_img which was modifying the input img affine.

—
Reply to this email directly or view it on GitHub.
",,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,321,nilearn,nilearn,banilo,2014-12-16 13:56:42,"...because there is niimg_conversions/is_img.py now.
",start issue,remove obsolete comments
2,issue_closed,321,nilearn,nilearn,lesteve,2014-12-17 10:14:43,,closed issue,remove obsolete comments
3,pull_request_title,321,nilearn,nilearn,banilo,2014-12-16 13:56:42,"...because there is niimg_conversions/is_img.py now.
",aef66ce2bb5b49e689ff03ef0ff04e34d9174fdd,remove obsolete comments
4,pull_request_merged,321,nilearn,nilearn,lesteve,2014-12-17 10:14:43,remove obsolete comments,e756adc5d384c6f8083757b29e5d547e1c52a93d,Pull request merge from banilo/nilearn:comments to nilearn/nilearn:master
5,issue_comment,321,nilearn,nilearn,banilo,2014-12-16 14:23:36,"...but this makes the following 4 tests fail:

```
test_compute_multi_epi_mask()
test_masking.test_compute_background_mask()
test_compute_epi_mask()
test_multi_nifti_masker.test_nan()
```
",,
6,issue_comment,321,nilearn,nilearn,banilo,2014-12-16 20:23:02,"...fixed.
",,
7,issue_comment,321,nilearn,nilearn,lesteve,2014-12-17 07:46:56,"Looks good, could you squash your commits in a single one to have a nicer history?
",,
8,issue_comment,321,nilearn,nilearn,banilo,2014-12-17 09:45:23,"...squashed.
",,
9,pull_request_commit,321,nilearn,nilearn,banilo,2014-12-17 09:47:25,replaced outdated comments by check_niimgs,aef66ce2bb5b49e689ff03ef0ff04e34d9174fdd,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,316,nilearn,nilearn,AlexandreAbraham,2014-12-12 15:17:31,"We should maybe hide the RQL request in the URL because it is a bit scary for non brainomics users.
",start issue,Brainomics URLs are scary
2,issue_closed,316,nilearn,nilearn,AlexandreAbraham,2015-01-08 14:50:10,,closed issue,Brainomics URLs are scary
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,295,nilearn,nilearn,lesteve,2014-11-25 09:42:35,"``` python
from nilearn import datasets

data = datasets.fetch_localizer_contrasts(['checkerboard'], n_subjects=1, get_masks=True)
```

I don't think that's super critical but @AlexandreAbraham you may have a suggestion off the top of your head? I looked at it a bit but I couldn't figure out what was happening. From what I understood, the file was downloaded and unzipped fine but then the target file was not where it was supposed to be somehow.

The full traceback:

```
Downloading data from http://brainomics.cea.fr/localizer/brainomics_data_27.zip?rql=Any%20X,XT,XL,XI,XF,XD%20WHERE%20X%20is%20Scan,%20X%20type%20XT,%20X%20label%20XL,%20X%20identifier%20XI,%20X%20format%20XF,%20X%20description%20XD,%20X%20type%20IN(%22c%20map%22),%20X%20label%20%22checkerboard%22&vid=data-zip ...
...done. (3 seconds, 0 min)
extracting data from /home/lesteve/nilearn_data/brainomics_localizer/4a38c99692981d6a0cf064516435b8d8/brainomics_data_27.zip...
Downloaded 23552650 of 23552650 bytes (100.00%,    0.0s remaining)  maining)  
Downloaded 8192 of 774277 bytes (1.06%,    0.0s remaining)  
Downloading data from http://brainomics.cea.fr/localizer/brainomics_data_masks.zip?rql=Any%20X,XT,XL,XI,XF,XD%20WHERE%20X%20is%20Scan,%20X%20type%20XT,%20X%20label%20XL,%20X%20identifier%20XI,%20X%20format%20XF,%20X%20description%20XD,%20X%20type%20IN(%22boolean%20mask%22),%20X%20label%20%22mask%22&vid=data-zip ...
...done. (1 seconds, 0 min)
extracting data from /home/lesteve/nilearn_data/brainomics_localizer/4a38c99692981d6a0cf064516435b8d8/brainomics_data_masks.zip...
   ...done.
Downloaded 774277 of 774277 bytes (100.00%,    0.0s remaining)  
nilearn/datasets.py:603: UserWarning: An error occured while fetching brainomics_data/S01/boolean_mask.nii.gz
  warnings.warn('An error occured while fetching %s' % file_)
---------------------------------------------------------------------------
IOError                                   Traceback (most recent call last)
<ipython-input-3-034b6aa8fee8> in <module>()
----> 1 data = datasets.fetch_localizer_contrasts(['checkerboard'], n_subjects=1, get_masks=True)

/home/lesteve/dev/nilearn/nilearn/datasets.pyc in fetch_localizer_contrasts(contrasts, n_subjects, get_tmaps, get_masks, get_anats, data_dir, url, resume, verbose)
   1962     # Actual data fetching
   1963     data_dir = _get_dataset_dir('brainomics_localizer', data_dir=data_dir)
-> 1964     files = _fetch_files(data_dir, filenames)
   1965     anats = None
   1966     masks = None

/home/lesteve/dev/nilearn/nilearn/datasets.pyc in _fetch_files(data_dir, files, resume, mock, verbose)
    610             if os.path.exists(temp_dir):
    611                 shutil.rmtree(temp_dir)
--> 612             raise IOError('Fetching aborted: ' + abort)
    613         files_.append(target_file)
    614     # If needed, move files from temps directory to final directory.

IOError: Fetching aborted: Target file cannot be found
```
",start issue,Error with fetch_localizer_contrasts when setting get_masks=True
2,issue_closed,295,nilearn,nilearn,lesteve,2014-12-16 17:40:10,,closed issue,Error with fetch_localizer_contrasts when setting get_masks=True
3,issue_comment,295,nilearn,nilearn,AlexandreAbraham,2014-11-25 13:36:05,"The expected name for the file is `boolean_mask.nii.gz` but if you download the file, you can see that the files are actually named `boolean_mask_mask.nii.gz`. We should ask brainomics people if it's a (temporary) error or if this is the new name. This is not the first time that file names change in this fetcher.
",,
4,issue_comment,295,nilearn,nilearn,lesteve,2014-12-16 14:19:23,"More user-friendly [link](http://brainomics.cea.fr/localizer/brainomics_data_masks.zip?rql=Any%20X,XT,XL,XI,XF,XD%20WHERE%20X%20is%20Scan,%20X%20type%20XT,%20X%20label%20XL,%20X%20identifier%20XI,%20X%20format%20XF,%20X%20description%20XD,%20X%20type%20IN%28%22boolean%20mask%22%29,%20X%20label%20%22mask%22&vid=data-zip) hiding the RQL.
",,
5,issue_comment,295,nilearn,nilearn,DimitriPapadopoulos,2014-12-16 15:45:37,"What worries me is that we haven't changed anything on the server for more than a year. I don't understand how such an error could be transient.

Concerning the initial Localizer 94 data, the only _mask_ file I am able to find is `mask.nii.gz`.

Concerning the code that generates the ZIP file on the Brainomics server, I recall [version 0.4.5 of module _brainomics_](http://hg.logilab.org/review/cubes/brainomics/rev/1943ec3fcebc) is being used. Specifically have a look at `views/download.py`. Unfortunately bowsing the source code on the above server is currently broken and I don't have the time to fetch the code and have a look at it on my machine.

I don' t have access to the server either. I would have to sit down with one of the sysadmins and examine the issue. It would take to much time to organize.

I suggest you stick to `boolean_mask_mask.nii.gz` - the current behavior. It shouldn't change because the server is fozen. If it ever does, please come back to me and I will investigate.
",,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,315,nilearn,nilearn,AlexandreAbraham,2014-12-12 15:16:28,"All in the title. It should stop the download and erase the temporary directory.
",start issue,Ctrl + C doesn't work during dataset downloading
2,issue_closed,315,nilearn,nilearn,AlexandreAbraham,2014-12-15 10:28:23,,closed issue,Ctrl + C doesn't work during dataset downloading
3,issue_comment,315,nilearn,nilearn,AlexandreAbraham,2014-12-15 10:28:23,"Cannot reproduce. It seemed to be the case on Baptiste's computer but on mine Ctrl + C works as expected.
",,
4,issue_comment,315,nilearn,nilearn,dohmatob,2014-12-15 12:02:04,"Probably the SIGINT is hijacked by something system-specific

On Mon, Dec 15, 2014 at 11:28 AM, Alexandre Abraham <
notifications@github.com> wrote:

> Closed #315 https://github.com/nilearn/nilearn/issues/315.
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/nilearn/nilearn/issues/315#event-207522273.

## 

DED
",,
5,issue_comment,315,nilearn,nilearn,AlexandreAbraham,2014-12-15 13:42:15,"Yes, but then it's a user specific problem!
",,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,286,nilearn,nilearn,banilo,2014-11-20 12:55:41,"When using SpaceNet for classification, specifying l1_ratio=0 causes a chain of NaN outputs. Division by zero somewhere?
",start issue,SpaceNet: NaN snowball effect
2,issue_closed,286,nilearn,nilearn,lesteve,2014-11-24 08:07:34,,closed issue,SpaceNet: NaN snowball effect
3,issue_comment,286,nilearn,nilearn,dohmatob,2014-11-20 13:01:48,"OK tracing the bug, I find it's caused by formula `alpha_max /= (X.shape[0] * l1_ratio)`, which has a pole of order 1 at `l1_ratio = 0`. Fixing ...
",,
4,issue_comment,286,nilearn,nilearn,dohmatob,2014-11-20 13:13:30,"BTW, note that the case `l1_ratio = 0` (pure TV) is not to be done in practice. More over, alpha_max = infinity when `l1_ratio = 0`. Also note that `alpha = infinity` means 'Forget the data, let's do this thing without data!'.

Good catch though, @banilo
",,
5,issue_comment,286,nilearn,nilearn,lesteve,2014-11-24 08:07:33,"I believe this one should have been created in @dohmatob's fork, closing.
",,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,319,nilearn,nilearn,lesteve,2014-12-15 09:03:52,"to ensure compatibility with Python 2.6 since unitest assertRaisesRegexp, and thus nose.tools.assert_raises_regexp, appeared in 2.7.

Also:
- move assert_warns to nilearn._utils.testing
- amended tests that were meant to use assert_raises_regexp but didn't for backward-compatibility reasons
",start issue,Add assert_raises_regexp in nilearn._utils.testing
2,issue_closed,319,nilearn,nilearn,lesteve,2014-12-15 14:22:21,,closed issue,Add assert_raises_regexp in nilearn._utils.testing
3,pull_request_title,319,nilearn,nilearn,lesteve,2014-12-15 09:03:52,"to ensure compatibility with Python 2.6 since unitest assertRaisesRegexp, and thus nose.tools.assert_raises_regexp, appeared in 2.7.

Also:
- move assert_warns to nilearn._utils.testing
- amended tests that were meant to use assert_raises_regexp but didn't for backward-compatibility reasons
",a0c7693e0325dea9c7ce04a8512936eede881d32,Add assert_raises_regexp in nilearn._utils.testing
4,pull_request_merged,319,nilearn,nilearn,lesteve,2014-12-15 14:22:21,Add assert_raises_regexp in nilearn._utils.testing,0fba998a4907cd28bd524f40c45642ccddc2bc00,Pull request merge from lesteve/nilearn:add-assert-raises-regexp to nilearn/nilearn:master
5,pull_request_commit,319,nilearn,nilearn,lesteve,2014-12-15 09:00:18,"Add assert_raises_regexp in nilearn._utils.testing

for compatibility with Python 2.6. Also:
* move assert_warns to nilearn._utils.testing
* amended tests that were meant to use assert_raises_regexp",eefb559de43bd5aaf6dfd41dda58a75343b6114e,
6,pull_request_commit,319,nilearn,nilearn,lesteve,2014-12-15 09:36:28,"Stay clear from sklearn.utils.testing.assert_raises_regexp

sklearn 0.15 assert_raises_regexp is using match rather than search
which is very misleading. Definition copied and pasted from sklearn master
where this bug has been fixed",a0c7693e0325dea9c7ce04a8512936eede881d32,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,195,nilearn,nilearn,VirgileFritsch,2014-05-21 13:45:54,"Scheduled for the first release (see https://github.com/nilearn/nilearn/pull/189#issuecomment-43651495). The examples should be structured so that the user does can easily find what it is looking for.

Maybe a folder with ""advanced examples"" would be useful (amongst others).
Indeed, some examples are technical whereas some depict typical use-cases.
",start issue,Organize examples
2,issue_closed,195,nilearn,nilearn,lesteve,2014-12-10 10:30:32,,closed issue,Organize examples
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,231,nilearn,nilearn,GaelVaroquaux,2014-09-08 11:42:35,"We should show the threshold in the colorbar, for example by graying out the corresponding part of the colorbar.
",start issue,Show threshold in colorbar
2,issue_closed,231,nilearn,nilearn,lesteve,2014-12-15 20:43:38,,closed issue,Show threshold in colorbar
3,issue_comment,231,nilearn,nilearn,AlexandreAbraham,2014-09-15 12:42:25,"Just a tought: if you are displaying an acitvation (colorbar hot for example) over a (grayscale) anatomical background, and if you display a colorbar with a gray part, then people may be misleaded and think that part of the background brain are actually grayed out activations. Not sure about that though.
",,
4,issue_comment,231,nilearn,nilearn,bthirion,2014-09-15 13:27:42,"But the grey part of the colorbar would be uniform ? That would not create ambiguities.
",,
5,issue_comment,231,nilearn,nilearn,AlexandreAbraham,2014-09-15 13:36:29,"Oh, OK! It's easy then.
",,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,306,nilearn,nilearn,banilo,2014-12-06 16:54:07,"addresses #305
",start issue,NiftMaps/LabelsMasker: deact. detrend/standardize
2,issue_closed,306,nilearn,nilearn,lesteve,2014-12-11 10:18:14,,closed issue,NiftMaps/LabelsMasker: deact. detrend/standardize
3,pull_request_title,306,nilearn,nilearn,banilo,2014-12-06 16:54:07,"addresses #305
",f6e03f383608416395bfa6ccee09a80ac42ae51d,NiftMaps/LabelsMasker: deact. detrend/standardize
4,pull_request_merged,306,nilearn,nilearn,lesteve,2014-12-11 10:18:14,NiftMaps/LabelsMasker: deact. detrend/standardize,8d00364a9e7058e73f41db4ebad0b0fe7805aa52,Pull request merge from banilo/nilearn:maskerauto to nilearn/nilearn:master
5,issue_comment,306,nilearn,nilearn,eickenberg,2014-12-06 16:55:03,"Flawless, LGTM :)
",,
6,issue_comment,306,nilearn,nilearn,bthirion,2014-12-07 17:26:19,"nosetest agrees.
",,
7,pull_request_commit,306,nilearn,nilearn,banilo,2014-12-06 16:56:30,NiftMaps/LabelsMasker: deact. detrend/standardize,f6e03f383608416395bfa6ccee09a80ac42ae51d,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,323,nilearn,nilearn,lesteve,2014-12-17 15:32:57,"to make it more obvious that the *_img functions can take filenames as input. In general it is not very clear what kind of object bunch.cmaps[0] is.

Other minor fixes went in while I was at it, amongs these:
- use dataset consistently for the object return by fetch_*
- use from nilearn.datasets import fetch_... to avoid dataset (the object returned by the fetcher) being confused with datasets (the module)
- pep8 fixes here and there

Comments more than welcome!
",start issue,Use filename variables in examples
2,issue_closed,323,nilearn,nilearn,lesteve,2014-12-18 12:39:24,,closed issue,Use filename variables in examples
3,pull_request_title,323,nilearn,nilearn,lesteve,2014-12-17 15:32:57,"to make it more obvious that the *_img functions can take filenames as input. In general it is not very clear what kind of object bunch.cmaps[0] is.

Other minor fixes went in while I was at it, amongs these:
- use dataset consistently for the object return by fetch_*
- use from nilearn.datasets import fetch_... to avoid dataset (the object returned by the fetcher) being confused with datasets (the module)
- pep8 fixes here and there

Comments more than welcome!
",84941cb6eef46604b9938d0b653f5109da340493,Use filename variables in examples
4,pull_request_merged,323,nilearn,nilearn,lesteve,2014-12-18 12:39:24,Use filename variables in examples,cb3acbc065df48b8df249d470da3ca60b3c9731e,Pull request merge from lesteve/nilearn:use-filename-variables-in-examples to nilearn/nilearn:master
5,issue_comment,323,nilearn,nilearn,GaelVaroquaux,2014-12-17 15:34:35,"I like the idea!

I didn't have to look at the exact implementation.
",,
6,issue_comment,323,nilearn,nilearn,AlexandreAbraham,2014-12-17 15:57:25,"Small comments, no strong feelings about them. I think that the PR effectively makes the examples clearer.

Quick comments:
- you know my position on file paths, I won't repeat it here ;)
- for subjective changes like that, bring the subject during a coffee break. Because if the PR was rejected, you would have lost time for nothing.
",,
7,issue_comment,323,nilearn,nilearn,lesteve,2014-12-18 07:51:34,"> for subjective changes like that, bring the subject during a coffee break. Because if the PR was rejected, you would have lost time for nothing.

Makes sense, funny you should say that because this PR actually originated from a coffee break discussion. I probably wasn't clear enough about actually starting to work on it.
",,
8,issue_comment,323,nilearn,nilearn,lesteve,2014-12-18 09:49:48,"New commit mostly changed `from nilearn.datasets import fetch_` to `from nilearn import datasets`.

I did commit --amend + push -f and all comments are gone, another reason to do the comments in ""Files changed"" rather than in the file directly ...
",,
9,issue_comment,323,nilearn,nilearn,AlexandreAbraham,2014-12-18 10:22:29,"Using any `push -f` operation during PR review is generally a bad habit and should be kept for the final cleanup... IDK why I commented directly in the commit this time, I probably misclicked, but it is very common in big PR (otherwise the separation in commits is worthless).
",,
10,pull_request_commit,323,nilearn,nilearn,lesteve,2014-12-17 15:22:35,"Use filename variables in examples

to make it more obvious that the _img functions can take filenames as
input. Other minor fixes went in while I was at it.

Please enter the commit message for your changes. Lines starting",84941cb6eef46604b9938d0b653f5109da340493,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,307,nilearn,nilearn,banilo,2014-12-06 18:41:02,"Some functions with mask arguments did not complain about iterables of niimg-like objects.

attempts to address #302 
",start issue,Added missing 3d-image enforcements
2,issue_closed,307,nilearn,nilearn,lesteve,2015-01-09 15:05:05,,closed issue,Added missing 3d-image enforcements
3,pull_request_title,307,nilearn,nilearn,banilo,2014-12-06 18:41:02,"Some functions with mask arguments did not complain about iterables of niimg-like objects.

attempts to address #302 
",46c8cac595072cd7384b5747b8a65a2411226615,Added missing 3d-image enforcements
4,pull_request_merged,307,nilearn,nilearn,lesteve,2015-01-09 15:05:04,Added missing 3d-image enforcements,e7e1592c4da38e3924639e9fe6a2df609961b4f7,Pull request merge from banilo/nilearn:enforce3Dargs to nilearn/nilearn:master
5,issue_comment,307,nilearn,nilearn,bthirion,2014-12-07 17:11:15,"LGTM otherwise.
",,
6,issue_comment,307,nilearn,nilearn,banilo,2014-12-18 15:30:54,"Voilà, changed asserts to regexp, now. ...and squashed commits.
",,
7,issue_comment,307,nilearn,nilearn,lesteve,2014-12-19 09:22:56,"Other than the minor comments, looks good
",,
8,issue_comment,307,nilearn,nilearn,banilo,2014-12-23 13:44:35,"last requests done.
",,
9,issue_comment,307,nilearn,nilearn,banilo,2015-01-06 14:45:06,"Any news on this PR?
",,
10,pull_request_commit_comment,307,nilearn,nilearn,eickenberg,2014-12-06 18:51:53,"Can you motivate this change?
",46c8cac595072cd7384b5747b8a65a2411226615,"(None, '', u'nilearn/input_data/tests/test_multi_nifti_masker.py')"
11,pull_request_commit_comment,307,nilearn,nilearn,eickenberg,2014-12-06 18:54:16,"Is ""type"" here referring to wrong type of shape?
",46c8cac595072cd7384b5747b8a65a2411226615,"(None, '', u'nilearn/tests/test_masking.py')"
12,pull_request_commit_comment,307,nilearn,nilearn,banilo,2014-12-06 18:54:46,"The variable name appears to be misleading, it's passed on as 'mask_img' a few lines below.
",46c8cac595072cd7384b5747b8a65a2411226615,"(None, '', u'nilearn/input_data/tests/test_multi_nifti_masker.py')"
13,pull_request_commit_comment,307,nilearn,nilearn,banilo,2014-12-06 18:56:17,"This lines is now caught by check_niiimg, causing a TypeError, rather than a ValueError because of the shape as before.
",46c8cac595072cd7384b5747b8a65a2411226615,"(None, '', u'nilearn/tests/test_masking.py')"
14,pull_request_commit_comment,307,nilearn,nilearn,bthirion,2014-12-07 17:10:59,"Yes, but why do you make it a 3D image ? 
",46c8cac595072cd7384b5747b8a65a2411226615,"(None, '', u'nilearn/input_data/tests/test_multi_nifti_masker.py')"
15,pull_request_commit_comment,307,nilearn,nilearn,banilo,2014-12-11 14:51:43,"After discussion with Junior, masks for MultiNiftiMasker are always 3D. Thus, there appeared indeed to be a little bug in this test since a 4D images was passed on to the object as mask argument.
",46c8cac595072cd7384b5747b8a65a2411226615,"(None, '', u'nilearn/input_data/tests/test_multi_nifti_masker.py')"
16,pull_request_commit_comment,307,nilearn,nilearn,lesteve,2014-12-19 09:19:47,"I am guessing the assert_raises import is not necessary any more
",46c8cac595072cd7384b5747b8a65a2411226615,"(None, '', u'nilearn/input_data/tests/test_base_masker.py')"
17,pull_request_commit_comment,307,nilearn,nilearn,lesteve,2014-12-19 09:22:15,"Can you use assert_raises_regexp for this one?
",46c8cac595072cd7384b5747b8a65a2411226615,"(None, '', u'nilearn/tests/test_masking.py')"
18,pull_request_commit_comment,307,nilearn,nilearn,banilo,2014-12-23 13:19:22,"assert_raises is still used in test_auto_mask(), which is not touched by this PR.
",46c8cac595072cd7384b5747b8a65a2411226615,"(None, '', u'nilearn/input_data/tests/test_base_masker.py')"
19,pull_request_commit_comment,307,nilearn,nilearn,lesteve,2015-01-05 09:52:02,"Unless I am missing something, assert_raises is not used in test_base_masker.py.
",46c8cac595072cd7384b5747b8a65a2411226615,"(None, '', u'nilearn/input_data/tests/test_base_masker.py')"
20,pull_request_commit,307,nilearn,nilearn,banilo,2014-12-18 15:12:37,enforced missing 3d arguments,d9f7127241840d25516fbabbf36536a8a959c7a3,
21,pull_request_commit,307,nilearn,nilearn,banilo,2015-01-07 09:59:03,unnecessary import,4cbc107b192a428b568ce6bdadf2c0732c4f61f7,
22,pull_request_commit,307,nilearn,nilearn,banilo,2015-01-07 10:03:20,used _regexp in test,46c8cac595072cd7384b5747b8a65a2411226615,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,314,nilearn,nilearn,AlexandreAbraham,2014-12-12 15:15:45,"When downloading a dataset, the message indicating the data path is lost in a lot of logs. We should make it clearer.
",start issue,The message indicating dataset repository path is not clear enough
2,issue_closed,314,nilearn,nilearn,AlexandreAbraham,2015-02-11 09:47:34,,closed issue,The message indicating dataset repository path is not clear enough
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,310,nilearn,nilearn,lesteve,2014-12-11 13:42:15,"Some tweaking to the way `__version__` works was needed because dependencies are checked at `import nilearn` time. That meant that setup.py couldn't run unless the dependencies were installed.
",start issue,Add nibabel dependency to setup.py
2,issue_closed,310,nilearn,nilearn,lesteve,2014-12-15 10:22:20,,closed issue,Add nibabel dependency to setup.py
3,pull_request_title,310,nilearn,nilearn,lesteve,2014-12-11 13:42:15,"Some tweaking to the way `__version__` works was needed because dependencies are checked at `import nilearn` time. That meant that setup.py couldn't run unless the dependencies were installed.
",e0c665f500ed8c28fe99260de1b926238ae37541,Add nibabel dependency to setup.py
4,pull_request_merged,310,nilearn,nilearn,lesteve,2014-12-15 10:22:20,Add nibabel dependency to setup.py,c9265ff9e731dd4f0be09fa9ae45d950c46eb94d,Pull request merge from lesteve/nilearn:add-nibabel-dependency-to-setup-py to nilearn/nilearn:master
5,issue_comment,310,nilearn,nilearn,lesteve,2014-12-12 10:48:12,"I implemented the proposed changes. I am not going to claim I understand why exactly but:

### with numpy installed
- pip install works fine. Note that the `-U` flag in the install instructions will cause nibabel to be upgraded to the latest version but not numpy.
- python setup.py install works fine

### without numpy installed
- pip install works fine
- python setup.py install will try to pip install numpy which is what we were trying to avoid.
",,
6,pull_request_commit_comment,310,nilearn,nilearn,GaelVaroquaux,2014-12-11 13:44:33,"I would prefer tackling this problem the same way than in scikit-learn (check how the setup.py and **init**.py work).
",e0c665f500ed8c28fe99260de1b926238ae37541,"(None, '', u'setup.py')"
7,pull_request_commit_comment,310,nilearn,nilearn,lesteve,2014-12-11 14:20:27,"OK I have looked at how it is done in scikit-learn but if I am completely honest it feels more obscure than the proposed solution.

FWIW one of the place I took some inspiration is [here](https://github.com/audreyr/cookiecutter-pypackage/issues/1).
",e0c665f500ed8c28fe99260de1b926238ae37541,"(None, '', u'setup.py')"
8,pull_request_commit_comment,310,nilearn,nilearn,GaelVaroquaux,2014-12-11 14:42:32,"> OK I have looked at how it is done in scikit-learn but if I am completely
> honest it feels more obscure than the proposed solution.

We feel it's more robust (by passing the import mechanism of Python is
dangerous). Please discuss this with @ogrisel. I'll trust whatever
conclusion you come up with.
",e0c665f500ed8c28fe99260de1b926238ae37541,"(None, '', u'setup.py')"
9,pull_request_commit_comment,310,nilearn,nilearn,ogrisel,2014-12-11 14:45:28,"I prefer the `exec(open('nilearn/version.py').read())` solution. It's Python 2 & 3 compat and breaks any possible cyclic import dependencies.

I wanted to do it in sklearn but failed to do so.
",e0c665f500ed8c28fe99260de1b926238ae37541,"(None, '', u'setup.py')"
10,pull_request_commit_comment,310,nilearn,nilearn,GaelVaroquaux,2014-12-11 14:49:35,"> I prefer the exec(open('nilearn/version.py').read()) solution. It's Python 2 &
> 3 compat and breaks any possible cyclic import dependencies.

OK for the general idea, but I'd rather avoid injecting variable in the
global/local namespaces. It's bad practice.

I'd rather have somethig like (adapted from
http://stackoverflow.com/a/437857/413856):

version_dict = {}
exec(open('nilearn/version.py').read(), version_dict, version_dict)

and then fish the version variable from version_dict.
",e0c665f500ed8c28fe99260de1b926238ae37541,"(None, '', u'setup.py')"
11,pull_request_commit_comment,310,nilearn,nilearn,ogrisel,2014-12-11 15:12:46,"Good.
",e0c665f500ed8c28fe99260de1b926238ae37541,"(None, '', u'setup.py')"
12,pull_request_commit,310,nilearn,nilearn,lesteve,2014-12-11 13:29:19,"Add nibabel dependency to setup.py

Needed to change the way __version__ works because dependencies are checked in nilearn/__init__.py
so that setup.py could not be executed when nibabel was not installed",fb73a64a0e65c924b95596e621da8ce9962ec87f,
13,pull_request_commit,310,nilearn,nilearn,lesteve,2014-12-11 13:38:19,"Remove nibabel section from the install instructions

now that nibabel is an explicit dependency in setup.py",77efd3a16279109db20d7f0862b6b7ba1e1637ae,
14,pull_request_commit,310,nilearn,nilearn,lesteve,2014-12-12 10:24:28,Use exec instead of deprecated im.load_source,e0c665f500ed8c28fe99260de1b926238ae37541,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,311,nilearn,nilearn,GaelVaroquaux,2014-12-12 10:55:46,"2 problems:
- The ""pre"" flag does not seem to exist in old versions of pip
- When the package installs, it spits out a few errors/warnings that look ugly.

<pre>
$ pip install -U --pre --user nilearn
Usage: /usr/bin/pip install [OPTIONS] PACKAGE_NAMES...

/usr/bin/pip install: error: no such option: --pre

$ pip install -U --user nilearn
Downloading/unpacking nilearn
  Downloading nilearn-0.1a1.tar.gz (614Kb): 614Kb downloaded
  Running setup.py egg_info for package nilearn
    
    package init file 'nilearn/data/__init__.py' not found (or not a regular file)
    package init file 'nilearn/plotting/glass_brain_files/__init__.py' not found (or not a regular file)
    package init file 'nilearn/tests/data/__init__.py' not found (or not a regular file)
Installing collected packages: nilearn
  Found existing installation: nilearn 0.1-git
    Uninstalling nilearn:
      Successfully uninstalled nilearn
  Running setup.py install for nilearn
    package init file 'nilearn/data/__init__.py' not found (or not a regular file)
    package init file 'nilearn/plotting/glass_brain_files/__init__.py' not found (or not a regular file)
    package init file 'nilearn/tests/data/__init__.py' not found (or not a regular file)
    
Successfully installed nilearn
</pre>
",start issue,Installation instructions are not suited to ubuntu 12.04
2,issue_closed,311,nilearn,nilearn,GaelVaroquaux,2015-01-08 13:56:56,,closed issue,Installation instructions are not suited to ubuntu 12.04
3,issue_comment,311,nilearn,nilearn,lesteve,2014-12-12 12:32:00,"`--pre` option was new in pip 1.4. Excerpt from [there](https://pip.pypa.io/en/latest/news.html):

> 1.4 (2013-07-23)
> 
>    BACKWARD INCOMPATIBLE pip now only installs stable versions by default, and offers a new --pre option to also find pre-release and development versions. (Pull #834)

 I'll update the install instructions to differentiate between the two cases.
",,
4,issue_comment,311,nilearn,nilearn,GaelVaroquaux,2014-12-12 12:35:12,"> I'll update the install instructions to differentiate between the two cases.

That's kinda nasty, because it makes those instructions more lengthy,
which is what we are trying to avoid. It does tell us that we need to
release a 0.1 soon. Let's say as a Christmas present?
",,
5,issue_comment,311,nilearn,nilearn,lesteve,2014-12-17 10:34:31,"FWIW the warnings about missing `__init__.py` during install should have been fixed in 5a309af2b9f07550c8d07d542453839f3a285f4b. 
",,
6,issue_comment,311,nilearn,nilearn,AlexandreAbraham,2015-01-06 21:34:12,"Should we release it soon?
",,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,309,nilearn,nilearn,lesteve,2014-12-10 12:28:21,"I could not get the existing setup.py play nice with sdist so I started from the PyPA [sample project](https://github.com/pypa/sampleproject)
- remove the 2to3 stuff since I don't think Python3 support is the focus at the moment
- remove lines in setup.py I didn't understand and seem related to uploading documentation to pythonhosted.org and creating eggs. Also from looking at joblib, it seems like generate_help needs setupegg.py to define it.

Comments welcome!
",start issue,Fix setup.py for release
2,issue_closed,309,nilearn,nilearn,lesteve,2014-12-10 15:37:55,,closed issue,Fix setup.py for release
3,pull_request_title,309,nilearn,nilearn,lesteve,2014-12-10 12:28:21,"I could not get the existing setup.py play nice with sdist so I started from the PyPA [sample project](https://github.com/pypa/sampleproject)
- remove the 2to3 stuff since I don't think Python3 support is the focus at the moment
- remove lines in setup.py I didn't understand and seem related to uploading documentation to pythonhosted.org and creating eggs. Also from looking at joblib, it seems like generate_help needs setupegg.py to define it.

Comments welcome!
",7520bb492f40154002e858d4c1db2c8ae4825434,Fix setup.py for release
4,pull_request_merged,309,nilearn,nilearn,lesteve,2014-12-10 15:37:55,Fix setup.py for release,79c012cc3d3cdd877fb8bf53c7fcad0867c33443,Pull request merge from lesteve/nilearn:fix-setup-py-for-release to nilearn/nilearn:master
5,issue_comment,309,nilearn,nilearn,GaelVaroquaux,2014-12-10 12:31:02,">   • remove lines in setup.py I didn't understand and seem related to uploading
>     documentation to pythonhosted.org and creating eggs. Also from looking at
>     joblib, it seems like generate_help needs setupegg.py to define it.

Yes, we don't need generate_help in nilearn.
",,
6,pull_request_commit,309,nilearn,nilearn,lesteve,2014-12-08 15:16:25,"Rewrite setup.py from scratch

or rather using https://github.com/pypa/sampleproject. Also disable alias in setup.cfg",aa31c60145c67ba8cf510c183f81f915dcb85e1c,
7,pull_request_commit,309,nilearn,nilearn,lesteve,2014-12-10 11:58:33,"Remove setup.py aliases

They only seem to make sense when the doc is hosted on pythonhosted.org",6a88e9a82eb7a7e0d4209a3c8e082a47937dde08,
8,pull_request_commit,309,nilearn,nilearn,lesteve,2014-12-10 12:26:17,Set version in setup.py,37115f1e8ebbd6aaccba373c9da7d5b8c9b44dd1,
9,pull_request_commit,309,nilearn,nilearn,lesteve,2014-12-10 13:32:58,"Add missing __init__.py

to make sure tests are included in sdist",229e85fe8ae603a15c96e1d516024e4b42c8c696,
10,pull_request_commit,309,nilearn,nilearn,lesteve,2014-12-10 13:56:51,Use find_packages and specify a few data packages,e3c0531fec44b6acfac0a23a56b6d1782da04fb7,
11,pull_request_commit,309,nilearn,nilearn,lesteve,2014-12-10 14:10:31,"Follow PEP 440 for version name

and use nilearn.__version__ in setup.py",7520bb492f40154002e858d4c1db2c8ae4825434,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,328,nilearn,nilearn,bcipolli,2014-12-19 15:07:03,"Great package here!

Not sure if I've done something improperly, but during both `pip install` and the development cloning process, I had dependency errors.  I came back and saw the dependencies and resolved them manually.

Rather than declaring dependencies in the `README.md` file, what about declaring in a `requirements.txt` file? ([documentation](https://pip.pypa.io/en/latest/user_guide.html#requirements-files)).

This should allow `pip` to resolve dependencies when installing the package, and should make getting the development version after cloning `nilearn` up and running more easily.

I'd be happy to do this, if it sounds good! 
",start issue,Add package dependencies to a requirements.txt file
2,issue_closed,328,nilearn,nilearn,lesteve,2015-01-16 14:03:37,,closed issue,Add package dependencies to a requirements.txt file
3,issue_comment,328,nilearn,nilearn,lesteve,2014-12-19 15:37:18,"Thanks for the kind words!

We could also have defined the dependencies in setup.py. The thing is that for example numpy needs to be compiled from source when using pip install. This compilation step is likely to fail (for example because you don't have the package with the required C headers on Linux, or even more likely on Windows where most of our users don't have any C compiler installed) 

Basically we are strongly encouraging users to install numpy, scipy and scikit-learn via their OS package managers on Linux or Anaconda on Windows and OSX.

@GaelVaroquaux @AlexandreAbraham any other opinions?
",,
4,issue_comment,328,nilearn,nilearn,GaelVaroquaux,2014-12-19 15:53:52,"> @GaelVaroquaux @AlexandreAbraham any other opinions?

Not much to add to what you said. That said, we should note that since
the alpha release, we have added the nibabel dependency in the
requirement file. So things will be a bit more streamlined in the next
release.

Time for an beta?
",,
5,issue_comment,328,nilearn,nilearn,bcipolli,2014-12-19 17:12:12,"Ok.  Perhaps having an explicit way to (a) install dependencies that play nice and (b) a way to error out the `pip install` of `nilearn` when they don't have `numpy`, `scipy`, or `scikit-learn` will help more novice  (installation-wise) users understand what's expected of them.

Glad to look into how to accomplish this in a `setup.py` file (sounds like a `requirements.txt` file may not be flexible enough to accomplish the above), if that sounds like a reasonable direction.
",,
6,issue_comment,328,nilearn,nilearn,GaelVaroquaux,2014-12-19 17:51:51,"> Ok. Perhaps having an explicit way to (a) install dependencies that play nice
> and (b) a way to error out the pip install of nilearn when they don't have
> numpy, scipy, or scikit-learn will help more novice (installation-wise) users
> understand what's expected of them.

Maybe shooting a warning (or an error) in the setup.py would be a good
way to do this.

To do this, we should probably move the '_check_dependencies' out from
nilearn/__init__.py to nilearn.version and 'import' it in the setup.py as
the version number is currently imported.

I think that we would accept a PR (pull request) doing that.
Unfortunately, I'll be offline for 2 weeks starting tomorrow. So I cannot
review it, but maybe other people of the nilearn team will be able to.
",,
7,issue_comment,328,nilearn,nilearn,lesteve,2014-12-19 18:12:19,"> To do this, we should probably move the '_check_dependencies' out from nilearn/__init__.py to nilearn.version and 'import' it in the setup.py as the version number is currently imported. 

I think the general idea has legs but needs to be tweaked a bit. The caveat is that you don't want to throw when nibabel is not installed in setup.py because setup.py is supposed to install it.

Also it'd be good to check what setup.py install error exactly looks like, to make sure we get an error that is actually helpful.
",,
8,issue_comment,328,nilearn,nilearn,GaelVaroquaux,2014-12-19 18:40:52,"> I think the general idea has legs but needs to be tweaked a bit. The caveat is
> that you don't want to throw when nibabel is not installed in setup.py because
> setup.py is supposed to install it.

Good point. That means that you probably need to have a keyword argument
in the dependency checker.

Also, we should raise an error only if an install is asked, and not other
options.
",,
9,issue_comment,328,nilearn,nilearn,bcipolli,2015-01-08 15:35:00,"@GaelVaroquaux I was planning to take a look at this after Jan. 15 (I have two things due then); would that work for you?
",,
10,issue_comment,328,nilearn,nilearn,bcipolli,2015-01-08 18:47:55,"OK.  If this is something you'd like in the release, just give me an idea of your timelines and I'll make time to do it!
",,
11,issue_comment,328,nilearn,nilearn,bcipolli,2015-01-09 05:25:25,"I will take a look at this now.
",,
12,issue_comment,328,nilearn,nilearn,bcipolli,2015-01-09 07:15:21,"Pull request is all set.  Will be heading to bed shortly, but tried to document what I did in the PR.  Will be able to discuss / update with any requests in the morning!
",,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,290,nilearn,nilearn,banilo,2014-11-21 16:36:33,"Fixes #287
",start issue,Adding missing 'threshold' docstrings in plotting functions
2,issue_closed,290,nilearn,nilearn,lesteve,2014-11-24 07:44:56,,closed issue,Adding missing 'threshold' docstrings in plotting functions
3,pull_request_title,290,nilearn,nilearn,banilo,2014-11-21 16:36:33,"Fixes #287
",233b5d15b048dcc8ae369fea170d8cc6019fa151,Adding missing 'threshold' docstrings in plotting functions
4,pull_request_merged,290,nilearn,nilearn,lesteve,2014-11-24 07:44:56,Adding missing 'threshold' docstrings in plotting functions,36dae11cae193b771f0d87237e5a1d25940b7e5f,Pull request merge from banilo/nilearn:doc_thresh to nilearn/nilearn:master
5,issue_comment,290,nilearn,nilearn,lesteve,2014-11-21 17:59:04,"What about fixing the one [here](https://github.com/nilearn/nilearn/blob/master/nilearn/plotting/slicers.py#L311) while you are at it? The ""in absolute value"" is missing I think.

Note that there is no 'auto' threshold logic to add_overlay so it should be removed from the docstring.
",,
6,issue_comment,290,nilearn,nilearn,banilo,2014-11-21 18:28:57,"Ad 1) I was only git-grepping ""threshold:"" not with the space, which is why
I missed this one

Ad 2) ok, done

2014-11-21 18:59 GMT+01:00 Loïc Estève notifications@github.com:

> What about fixing the one here
> https://github.com/nilearn/nilearn/blob/master/nilearn/plotting/slicers.py#L311
> while you are at it? The ""in absolute value"" is missing I think.
> 
> Note that there is no 'auto' threshold logic to add_overlay so it should
> be removed from the docstring.
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/nilearn/nilearn/pull/290#issuecomment-64010953.

## 

Viele Grüße,
Danilo
",,
7,issue_comment,290,nilearn,nilearn,banilo,2014-11-22 13:14:20,"Updated accordingly!
",,
8,issue_comment,290,nilearn,nilearn,bthirion,2014-11-23 21:54:21,"LGTM (haven't rebuilt the doc though).
",,
9,issue_comment,290,nilearn,nilearn,lesteve,2014-11-24 07:45:00,"Merging this one, thanks.
",,
10,pull_request_commit,290,nilearn,nilearn,banilo,2014-11-21 16:36:05,completed docstrings,03aa5dcf6c689e731c5a051faa0e3d2a914ea0f2,
11,pull_request_commit,290,nilearn,nilearn,banilo,2014-11-21 18:29:33,corrected add_overlay() docstring,233b5d15b048dcc8ae369fea170d8cc6019fa151,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,320,nilearn,nilearn,lesteve,2014-12-15 15:01:54,"when localizer datasets has not been downloaded. The main issue was that
the data was fetched for all the subjects irrespective of
n_subjects. This was more than 1GB data for anats.

Also some minor clean-up.

This fixes #317.
",start issue,Speed up plot_demo_plotting.py
2,issue_closed,320,nilearn,nilearn,lesteve,2014-12-15 15:27:29,,closed issue,Speed up plot_demo_plotting.py
3,pull_request_title,320,nilearn,nilearn,lesteve,2014-12-15 15:01:54,"when localizer datasets has not been downloaded. The main issue was that
the data was fetched for all the subjects irrespective of
n_subjects. This was more than 1GB data for anats.

Also some minor clean-up.

This fixes #317.
",cd2ec60f01a8666de8e729b786991170efe1e0c7,Speed up plot_demo_plotting.py
4,pull_request_merged,320,nilearn,nilearn,lesteve,2014-12-15 15:27:29,Speed up plot_demo_plotting.py,e1f12f594b363b2da66548502f2e74f0b1c1c320,Pull request merge from lesteve/nilearn:reduce-localizer-download-time to nilearn/nilearn:master
5,issue_comment,320,nilearn,nilearn,AlexandreAbraham,2014-12-15 15:06:27,":+1: 
",,
6,pull_request_commit_comment,320,nilearn,nilearn,lesteve,2014-12-15 15:13:48,"@AlexandreAbraham BTW not sure what

> However, the caching system only checks for the presence of the n_subjects first subjects on disk.

means exactly. Any idea?
",cd2ec60f01a8666de8e729b786991170efe1e0c7,"(7, '', u'nilearn/datasets.py')"
7,pull_request_commit,320,nilearn,nilearn,lesteve,2014-12-15 14:57:53,"Speed up plot_demo_plotting.py

when localizer datasets has not been downloaded. The main issue was that
the data was fetched for all the subjects irrespective of
n_subjects. This was more than 1GB data for anats.

Also some minor clean-up.",cd2ec60f01a8666de8e729b786991170efe1e0c7,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,327,nilearn,nilearn,lesteve,2014-12-18 15:36:38,"fixes #313. Splitted in two examples, one simple and one more advanced.
",start issue,Break down plotting example
2,issue_closed,327,nilearn,nilearn,lesteve,2014-12-19 08:35:19,,closed issue,Break down plotting example
3,pull_request_title,327,nilearn,nilearn,lesteve,2014-12-18 15:36:38,"fixes #313. Splitted in two examples, one simple and one more advanced.
",f2bb4b0f3a17fc51ceceaed9a073c55da7d750df,Break down plotting example
4,pull_request_merged,327,nilearn,nilearn,lesteve,2014-12-19 08:35:18,Break down plotting example,bed55bdb897a53d2b42a0580b390837b03fcb79c,Pull request merge from lesteve/nilearn:break-down-plotting-examples to nilearn/nilearn:master
5,pull_request_commit,327,nilearn,nilearn,lesteve,2014-12-18 15:29:53,"Break down plot_demo_plotting.py in two smaller examples

plot_demo_more_plotting.py contains the most advanced usages of plotting",eac294713e6ea772cdba813caa4ce21455b95241,
6,pull_request_commit,327,nilearn,nilearn,lesteve,2014-12-18 15:30:29,Fix broken links related to plotting documentation,f2bb4b0f3a17fc51ceceaed9a073c55da7d750df,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,252,nilearn,nilearn,banilo,2014-10-04 13:03:15,"A useful feature for nilearn/image could be splitting of an image into its constituent continuously connected clusters.

Use case: significance-corrected activation or connectivity maps that needs to be split into individual images with one of the result blobs in each
",start issue,New feature: split image into connected clusters
2,issue_closed,252,nilearn,nilearn,lesteve,2014-11-21 09:52:37,,closed issue,New feature: split image into connected clusters
3,issue_comment,252,nilearn,nilearn,banilo,2014-10-04 13:54:39,"a) It's something many people need frequently (the largest portion of which will rather redraw the future seeds manually by hand in an image viewer à la MRIcro or Mango rather than learn scipy to get the job done)
b) how about nilearn/_utils then?
",,
4,issue_comment,252,nilearn,nilearn,banilo,2014-10-05 12:49:36,"You are right, this example is probably sufficient in demonstrating how seed-region extraction can be done by ndimage.label.

However, it could perhaps be made even more explicit by showing 2 plots with the individual/separated ROIs (instead of a merged one with color-coding)?
",,
5,issue_comment,252,nilearn,nilearn,banilo,2014-10-05 15:50:31,"After the current PR, I will send the modified ROI example, ok.

2014-10-05 17:46 GMT+02:00 Gael Varoquaux notifications@github.com:

> > However, it could perhaps be made even more explicit by showing 2 plots
> > with
> > the individual/separated ROIs (instead of a merged one with
> > color-coding)?
> 
> I think that this is a great suggestion. Do you want to send us a PR to
> do this? (I do have in mind that we still have to merge your current PR).
> In general, anything that improves documentation is priceless.
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/nilearn/nilearn/issues/252#issuecomment-57940199.

## 

Viele Grüße,
Danilo
",,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,292,nilearn,nilearn,banilo,2014-11-24 08:53:19,"I have the impression that variable and function names tend to include a ""_data"" suffix when dealing with 3D/4D numpy arrays and an ""_img"" suffix when dealing with Nifti1Image instances. Yet, often one can also read ""_niimg"" in the code, which appears to conflict with the uniqueness of ""_img"". A little summary shows that ""_img"" is more consistently used than ""_niimg"":

```
git grep -ni ""_img"" | wc -l
1039
git grep -ni ""_niimg"" | wc -l
145
```

Thus, shouldn't we rename as many of the ""_niimg""'s as possible into ""_img""'s?

**Soft solution:** to rename the following functions and all calls to those:

```
- _utils.check_niimg
- _utils.check_niimgs
- _utils._repr_niimgs
- _utils.concat_niimgs
- input_data.base_masker.transform_single_niimgs
- input_data.base_masker.transform_niimgs
- tests.test_niimg_conversions
- tests.test_check_niimg
- tests.test_check_niimgs
- tests.test_repr_niimgs
- test.test_concat_niimgs
```

**Hard solution:** rename any ""_niimg"" string into ""_img"" in the entire code, thus including variables etc.
",start issue,"API inconsistency: ""_niimg(s)"" versus ""_img(s)"" suffixes"
2,issue_closed,292,nilearn,nilearn,lesteve,2014-12-15 20:42:49,,closed issue,"API inconsistency: ""_niimg(s)"" versus ""_img(s)"" suffixes"
3,issue_comment,292,nilearn,nilearn,GaelVaroquaux,2014-11-24 11:36:51,"Hey Danilo,

I agree with most of your analysis. In believe that in general, functions
and variable names should end with ""_img"". However, there is one thing
that we have in nilearn: we call 'niimage', and not 'img', or 'image' the
type ""NiftiImage-like, or string pointing to a nifti file"". Thus I
believe that check_niims, check_niimg, repr_niimgs should stay with
niimg, because they are about dealing with this specific type.

Aside from that, I would say that a PR is most welcome, as ideally we
want to address these issues before the beta release.
",,
4,issue_comment,292,nilearn,nilearn,banilo,2014-11-24 11:48:56,"Ok, so we are going for the hard solution? That is change suffixes in both functions and variables in all *.py, except for the three functions you mentioned that deal with nifti/list hybrids?

Sent from my iPhone

> On 24 Nov 2014, at 12:36, Gael Varoquaux notifications@github.com wrote:
> 
> Hey Danilo,
> 
> I agree with most of your analysis. In believe that in general, functions
> and variable names should end with ""_img"". However, there is one thing
> that we have in nilearn: we call 'niimage', and not 'img', or 'image' the
> type ""NiftiImage-like, or string pointing to a nifti file"". Thus I
> believe that check_niims, check_niimg, repr_niimgs should stay with
> niimg, because they are about dealing with this specific type.
> 
> Aside from that, I would say that a PR is most welcome, as ideally we
> want to address these issues before the beta release.
> —
> Reply to this email directly or view it on GitHub.
",,
5,issue_comment,292,nilearn,nilearn,GaelVaroquaux,2014-11-24 11:50:47,"> Ok, so we are going for the hard solution? That is change suffixes in both
> functions and variables in all *.py, except for the three functions you
> mentioned that deal with nifti/list hybrids?

Yes, and the corresponding tests.
",,
6,issue_comment,292,nilearn,nilearn,lesteve,2014-11-24 12:53:47,"Hmm, just trying to understand this subtle distinction in more details. What's exactly is different between _img and _niimg? Is the former an object which has get_data and get_affine whereas the latter can also be a filename and may have some NiftiImage specific properties.

Also, `nilearn.plotting.plot_img` is calling `check_niimg`so it accepts a NiftiImage-like object. Does that mean it should be called `plot_niimg` instead? This is probably not the only example as check_niimg(s) is used quite a bit.

Also just curious, do we have some code that only works with Nifti-images?
",,
7,issue_comment,292,nilearn,nilearn,GaelVaroquaux,2014-11-24 12:56:27,"> Also just curious, do we have some code that only works with Nifti-images?

No, the goal is to have code that works with niimgs every where. I am
just thinking that for the check and repr, that are the basic engineering
to support this, I want to be explicit in the names, as these are the
functions that pretty much define what a niimg is.
",,
8,issue_comment,292,nilearn,nilearn,banilo,2014-11-24 15:24:35,"Why not add a small note in the check_niimg(s) and repr_niimgs docstrings,
such as ""As a general rule, nilearn function with Nifti1Image input carry
""_img"" in their name. This function is carries ""niimg"" because, as an
exception, it accepts both paths and Nifti1Image objects.""

2014-11-24 13:56 GMT+01:00 Gael Varoquaux notifications@github.com:

> > Also just curious, do we have some code that only works with
> > Nifti-images?
> 
> No, the goal is to have code that works with niimgs every where. I am
> just thinking that for the check and repr, that are the basic engineering
> to support this, I want to be explicit in the names, as these are the
> functions that pretty much define what a niimg is.
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/nilearn/nilearn/issues/292#issuecomment-64190105.

## 

Viele Grüße,
Danilo
",,
9,issue_comment,292,nilearn,nilearn,eickenberg,2014-11-24 15:58:17,"> as an exception, it accepts both paths and Nifti1Image objects

but this is the rule as far as I know the codebase.

To me the distinction is more about putting `_img` when we want to forget about/hide/render transparent the fact that niimgs can be a lot of things and putting `_niimg` when we need to be aware of this fact.
",,
10,issue_comment,292,nilearn,nilearn,GaelVaroquaux,2014-11-24 15:59:09,"> but this is the rule as far as I know the codebase.

Yes.

> To me the distinction is more about putting _img when we want to forget
> about/ hide/render transparent the fact that niimgs can be a lot of
> things and putting _niimg when we need to be aware of this fact.

Well put.
",,
11,issue_comment,292,nilearn,nilearn,AlexandreAbraham,2014-11-24 16:22:28,"Another that has been bugging me and may be considered before release is the NiftiMasker (and MultiNiftiMasker). I thing it would more consistent to call them NiimgMasker and NiimgsMasker.
",,
12,issue_comment,292,nilearn,nilearn,eickenberg,2014-11-24 16:27:03,"(Or `ImgMasker`. Or `Masker`)
",,
13,issue_comment,292,nilearn,nilearn,GaelVaroquaux,2014-11-24 16:36:10,"> Another that has been bugging me and may be considered before release is the
> NiftiMasker (and MultiNiftiMasker). I thing it would more consistent to call
> them NiimgMasker and NiimgsMasker.

Niimg is jargon that has no meaning outside of nilearn. Thus I am -1 on
that.
",,
14,issue_comment,292,nilearn,nilearn,banilo,2014-11-25 12:06:47,"Do you think the suggested changes are ok like this?
",,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,296,nilearn,nilearn,banilo,2014-11-25 21:41:17,"attemps to adress #231

Here is an example for threshold=5 of what it currently looks like:

![bildschirmfoto 2014-11-25 um 18 53 21](https://cloud.githubusercontent.com/assets/3907396/5191981/85c179e6-74f3-11e4-8def-b032366a3684.png)

Greetings from Berlin
",start issue,added thresholded colorbar
2,issue_closed,296,nilearn,nilearn,lesteve,2014-12-15 15:26:29,,closed issue,added thresholded colorbar
3,pull_request_title,296,nilearn,nilearn,banilo,2014-11-25 21:41:17,"attemps to adress #231

Here is an example for threshold=5 of what it currently looks like:

![bildschirmfoto 2014-11-25 um 18 53 21](https://cloud.githubusercontent.com/assets/3907396/5191981/85c179e6-74f3-11e4-8def-b032366a3684.png)

Greetings from Berlin
",0095853236306d7d357f9c41d6289b2cdf818f26,added thresholded colorbar
4,pull_request_merged,296,nilearn,nilearn,lesteve,2014-12-15 15:26:29,added thresholded colorbar,5baa862b794149ee541be38eb68197c54728686c,Pull request merge from banilo/nilearn:colorbar to nilearn/nilearn:master
5,issue_comment,296,nilearn,nilearn,GaelVaroquaux,2014-11-26 10:27:08,"Two comments: I think that the background shouldn't be a grey colormap, but a uniform color. The reason being that it looks like a colormap. We need to make it very visually explicit that this is a threshold.

Also, I am worried that this will conflict will ongoing work by @eickenberg . You should sync with him.
",,
6,issue_comment,296,nilearn,nilearn,banilo,2014-11-26 16:54:13,"Ok thanks, should this PR just wait for Michael's to finish?

Sent from my iPhone

> On 26 Nov 2014, at 11:27, Gael Varoquaux notifications@github.com wrote:
> 
> Two comments: I think that the background shouldn't be a grey colormap, but a uniform color. The reason being that it looks like a colormap. We need to make it very visually explicit that this is a threshold.
> 
> Also, I am worried that this will conflict will ongoing work by @eickenberg . You should sync with him.
> 
> —
> Reply to this email directly or view it on GitHub.
",,
7,issue_comment,296,nilearn,nilearn,eickenberg,2014-11-26 18:27:24,"ill see to it first thing tomorrow

On Wednesday, November 26, 2014, Danilo Bzdok notifications@github.com
wrote:

> Ok thanks, should this PR just wait for Michael's to finish?
> 
> Sent from my iPhone
> 
> > On 26 Nov 2014, at 11:27, Gael Varoquaux <notifications@github.com
> > <javascript:_e(%7B%7D,'cvml','notifications@github.com');>> wrote:
> > 
> > Two comments: I think that the background shouldn't be a grey colormap,
> > but a uniform color. The reason being that it looks like a colormap. We
> > need to make it very visually explicit that this is a threshold.
> > 
> > Also, I am worried that this will conflict will ongoing work by
> > @eickenberg . You should sync with him.
> > 
> > —
> > Reply to this email directly or view it on GitHub.
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/nilearn/nilearn/pull/296#issuecomment-64676037.
",,
8,issue_comment,296,nilearn,nilearn,lesteve,2014-11-27 07:45:29,"> Ok thanks, should this PR just wait for Michael's to finish?

I don't think there it too much of a risk of conflict between the two PRs. @eickenberg is changing plot_stat_map in img_plotting.py and aims at changing the cmap before doing the imshow. @banilo is changing stuff mostly in slicers.py and doesn't change the cmap before the imshow but only when the colorbar is displayed.
",,
9,issue_comment,296,nilearn,nilearn,banilo,2014-11-27 11:00:11,"Ok, cool.

Here is the next code update then.
Gray is now unicolor, more visually speaking:

![image](https://cloud.githubusercontent.com/assets/3907396/5215944/c79b1dec-762c-11e4-80b5-4e3596780ad7.png)
",,
10,issue_comment,296,nilearn,nilearn,eickenberg,2014-11-27 13:08:25,"Looking at this again, I am becoming convinced that this PR needs to be merged before the symmetric/non-symmetric colormap one. The changes I need to make for the will have to go into `plot_img_with_bg` and will have to pass colorbar min/max bounds or something. This PR should lay the basis for it.

Currently though, I am not 1000% convinced of the optimality of the ""colorbar hacking"" passage in the code. But at the same time I am not enough of a matplotlib wizard to be able to propose the simple canonical solution.
",,
11,issue_comment,296,nilearn,nilearn,banilo,2014-11-28 20:28:52,"Ok, I am happy to follow other peoples' advice on how to create our user-defined colormap in a more professional way.
",,
12,issue_comment,296,nilearn,nilearn,banilo,2014-11-28 21:13:19,"Ok, a) removed redundant data masking and b) compute the threshold offsets in the cmap by im.norm as suggested by @lesteve.
",,
13,issue_comment,296,nilearn,nilearn,banilo,2014-12-05 14:51:46,"As suggested by Loic, the code does also work without having a special case for threshold==0. Looks unsuspicous.

![image](https://cloud.githubusercontent.com/assets/3907396/5316554/6e0e50a2-7c8d-11e4-9dae-0b1d077b5cfa.png)

Here is the new comit...
",,
14,issue_comment,296,nilearn,nilearn,GaelVaroquaux,2014-12-06 10:02:04,"Last image in there is _beautiful_!
",,
15,issue_comment,296,nilearn,nilearn,banilo,2014-12-10 15:23:05,"Now supports threshold=None and threshold=0.
",,
16,issue_comment,296,nilearn,nilearn,GaelVaroquaux,2014-12-10 17:55:25,"What does threshold=None do? 

<div>-------- Original message --------</div><div>From: Danilo Bzdok notifications@github.com </div><div>Date:10/12/2014  16:23  (GMT+01:00) </div><div>To: nilearn/nilearn nilearn@noreply.github.com </div><div>Cc: Gael Varoquaux gael.varoquaux@normalesup.org </div><div>Subject: Re: [nilearn] added thresholded colorbar (#296) </div><div>
</div>Now supports threshold=None and threshold=0.

—
Reply to this email directly or view it on GitHub.
",,
17,issue_comment,296,nilearn,nilearn,banilo,2014-12-10 18:06:05,"threshold=None means ""no threshold/gray area in the colorbar, please"". It behaves the same as threshold=0.
",,
18,issue_comment,296,nilearn,nilearn,lesteve,2014-12-10 20:20:53,"> It behaves the same as threshold=0.

not entirely True, threshold=0 will mask out zero values, threshold=None won't.
",,
19,issue_comment,296,nilearn,nilearn,banilo,2014-12-15 13:08:05,"Just addressed last comment.
",,
20,issue_comment,296,nilearn,nilearn,lesteve,2014-12-15 15:27:06,"This one eventually got merged, great stuff!
",,
21,issue_comment,296,nilearn,nilearn,banilo,2014-12-15 15:29:37,":palm_tree: 
",,
22,pull_request_commit_comment,296,nilearn,nilearn,eickenberg,2014-11-25 21:45:50,"`range`, `rng` is reserved for random number generators
",0095853236306d7d357f9c41d6289b2cdf818f26,"(None, '', u'nilearn/plotting/slicers.py')"
23,pull_request_commit_comment,296,nilearn,nilearn,eickenberg,2014-11-25 21:46:10,"wish
",0095853236306d7d357f9c41d6289b2cdf818f26,"(None, '', u'nilearn/plotting/slicers.py')"
24,pull_request_commit_comment,296,nilearn,nilearn,eickenberg,2014-11-25 21:46:50,"sorry, `data_range`
",0095853236306d7d357f9c41d6289b2cdf818f26,"(None, '', u'nilearn/plotting/slicers.py')"
25,pull_request_commit_comment,296,nilearn,nilearn,lesteve,2014-11-26 07:42:51,"Please refrain to do broad PEP8 fixes like the ones you did in this commit. This is likely to cause merge conflicts for ongoing PRs. The rule of thumb I go with is only fix PEP8 in the vicinity of the lines I touched.
",0095853236306d7d357f9c41d6289b2cdf818f26,"(None, '', u'nilearn/plotting/img_plotting.py')"
26,pull_request_commit_comment,296,nilearn,nilearn,lesteve,2014-11-26 07:46:14,"You can actually use pl.cm to access the matplotlib colormap module. That's what I have seen used in a few places e.g. plotting/img_plotting.py.
",0095853236306d7d357f9c41d6289b2cdf818f26,"(None, '', u'nilearn/plotting/slicers.py')"
27,pull_request_commit_comment,296,nilearn,nilearn,lesteve,2014-11-26 07:47:33,"I don't think this function should have a default for threshold
",0095853236306d7d357f9c41d6289b2cdf818f26,"(None, '', u'nilearn/plotting/slicers.py')"
28,pull_request_commit_comment,296,nilearn,nilearn,lesteve,2014-11-26 07:54:16,"Why is there a special case for 1e-6? Also magical numbers like this are best promoted to a module variable.
",0095853236306d7d357f9c41d6289b2cdf818f26,"(None, '', u'nilearn/plotting/slicers.py')"
29,pull_request_commit_comment,296,nilearn,nilearn,lesteve,2014-11-26 07:54:58,"Not really convinced this function is the best place to do this kind of safety checks ...
",0095853236306d7d357f9c41d6289b2cdf818f26,"(None, '', u'nilearn/plotting/slicers.py')"
30,pull_request_commit_comment,296,nilearn,nilearn,lesteve,2014-11-26 08:08:20,":confused: why are you using jet here? You should use the cmap specified by the user, I think im.cmap will do.
",0095853236306d7d357f9c41d6289b2cdf818f26,"(None, '', u'nilearn/plotting/slicers.py')"
31,pull_request_commit_comment,296,nilearn,nilearn,lesteve,2014-11-26 08:10:32,"Same comment as above, why is there a special case for 1e-6? 
",0095853236306d7d357f9c41d6289b2cdf818f26,"(None, '', u'nilearn/plotting/slicers.py')"
32,pull_request_commit_comment,296,nilearn,nilearn,lesteve,2014-11-26 08:11:46,"I believe we want to use a single gray color here. _cm.gray is a variable gray colormap.
",0095853236306d7d357f9c41d6289b2cdf818f26,"(None, '', u'nilearn/plotting/slicers.py')"
33,pull_request_commit_comment,296,nilearn,nilearn,lesteve,2014-11-26 08:37:40,"Just curious, what was wrong with the original  `figure.colorbar(im, cax=self._colorbar_ax, ticks=ticks)` ?
",0095853236306d7d357f9c41d6289b2cdf818f26,"(None, '', u'nilearn/plotting/slicers.py')"
34,pull_request_commit_comment,296,nilearn,nilearn,lesteve,2014-11-26 10:33:13,"I don't think we should threshold the anat
",0095853236306d7d357f9c41d6289b2cdf818f26,"(None, '', u'nilearn/plotting/img_plotting.py')"
35,pull_request_commit_comment,296,nilearn,nilearn,lesteve,2014-11-26 10:35:21,"Now I am wondering whether the masking inside [-threshold, threshold] l.93, 94 is necessary. The add_overlay will do the masking.
",0095853236306d7d357f9c41d6289b2cdf818f26,"(None, '', u'nilearn/plotting/img_plotting.py')"
36,pull_request_commit_comment,296,nilearn,nilearn,banilo,2014-11-26 16:20:42,"Shouldn't the theshold be symmetrical by construction?

Sent from my iPhone

> On 26 Nov 2014, at 11:35, Loïc Estève notifications@github.com wrote:
> 
> In nilearn/plotting/img_plotting.py:
> 
> > @@ -94,7 +94,7 @@ def _plot_img_with_bg(img, bg_img=None, cut_coords=None,
> >              data = np.ma.masked_inside(data, -threshold, threshold, copy=False)
> >          slicer.add_overlay(nibabel.Nifti1Image(data, affine),
> >                             interpolation=interpolation, colorbar=colorbar,
> > -                           **kwargs)
> > -                           threshold=threshold, **kwargs)
> >   Now I am wondering whether the masking inside [-threshold, threshold] l.93, 94 is necessary. The add_overlay will do the masking.
> 
> —
> Reply to this email directly or view it on GitHub.
",0095853236306d7d357f9c41d6289b2cdf818f26,"(None, '', u'nilearn/plotting/img_plotting.py')"
37,pull_request_commit_comment,296,nilearn,nilearn,banilo,2014-11-26 16:23:38,"Ups...

Sent from my iPhone

> On 26 Nov 2014, at 11:33, Loïc Estève notifications@github.com wrote:
> 
> In nilearn/plotting/img_plotting.py:
> 
> > @@ -86,7 +86,7 @@ def _plot_img_with_bg(img, bg_img=None, cut_coords=None,
> > 
> > ```
> >  if bg_img is not None:
> >      slicer.add_overlay(bg_img,
> > ```
> > -                           vmin=bg_vmin, vmax=bg_vmax,
> > -                           vmin=bg_vmin, vmax=bg_vmax, threshold=threshold,
> >   I don't think we should threshold the anat
> 
> —
> Reply to this email directly or view it on GitHub.
",0095853236306d7d357f9c41d6289b2cdf818f26,"(None, '', u'nilearn/plotting/img_plotting.py')"
38,pull_request_commit_comment,296,nilearn,nilearn,banilo,2014-11-26 16:27:34,"I did not get it to take the self defined colormap.

Sent from my iPhone

> On 26 Nov 2014, at 09:37, Loïc Estève notifications@github.com wrote:
> 
> In nilearn/plotting/slicers.py:
> 
> > -        bounds = np.linspace(im.norm.vmin, im.norm.vmax, 100)
> > -        our_cmap = _cm.jet
> >   +
> > -        if threshold != 1e-6:
> > -            # some colormap hacking
> > -            cmaplist = [our_cmap(i) for i in range(our_cmap.N)]
> > -            rng = float(im.norm.vmax + abs(im.norm.vmin))
> > -            start = (rng - 2 \* threshold) / 2  # in data space
> > -            stop = rng - start
> > -            istart = int(our_cmap.N \* start / rng)  # colormap space
> > -            istop = int(our_cmap.N \* stop / rng)
> > -            for i in range(istart, istop):
> > -                cmaplist[i] = _cm.gray(i)
> > -            our_cmap = our_cmap.from_list('Custom cmap', cmaplist, our_cmap.N)
> >   +
> > -        ColorbarBase(self._colorbar_ax, ticks=ticks, norm=im.norm,
> >   Just curious, what was wrong with the original figure.colorbar(im, cax=self._colorbar_ax, ticks=ticks) ?
> 
> —
> Reply to this email directly or view it on GitHub.
",0095853236306d7d357f9c41d6289b2cdf818f26,"(None, '', u'nilearn/plotting/slicers.py')"
39,pull_request_commit_comment,296,nilearn,nilearn,banilo,2014-11-26 16:29:25,"Ok

Sent from my iPhone

> On 26 Nov 2014, at 09:11, Loïc Estève notifications@github.com wrote:
> 
> In nilearn/plotting/slicers.py:
> 
> > ```
> >      ticks = np.linspace(im.norm.vmin, im.norm.vmax, 5)
> > ```
> > -        figure.colorbar(im, cax=self._colorbar_ax, ticks=ticks)
> > -        bounds = np.linspace(im.norm.vmin, im.norm.vmax, 100)
> > -        our_cmap = _cm.jet
> >   +
> > -        if threshold != 1e-6:
> > -            # some colormap hacking
> > -            cmaplist = [our_cmap(i) for i in range(our_cmap.N)]
> > -            rng = float(im.norm.vmax + abs(im.norm.vmin))
> > -            start = (rng - 2 \* threshold) / 2  # in data space
> > -            stop = rng - start
> > -            istart = int(our_cmap.N \* start / rng)  # colormap space
> > -            istop = int(our_cmap.N \* stop / rng)
> > -            for i in range(istart, istop):
> > -                cmaplist[i] = _cm.gray(i)
> >   I believe we want to use a single gray color here. _cm.gray is a variable gray colormap.
> 
> —
> Reply to this email directly or view it on GitHub.
",0095853236306d7d357f9c41d6289b2cdf818f26,"(None, '', u'nilearn/plotting/slicers.py')"
40,pull_request_commit_comment,296,nilearn,nilearn,banilo,2014-11-26 16:30:19,"This magic number happened to be the default for threshold in other parts of the code.

Sent from my iPhone

> On 26 Nov 2014, at 09:10, Loïc Estève notifications@github.com wrote:
> 
> In nilearn/plotting/slicers.py:
> 
> > ```
> >      ticks = np.linspace(im.norm.vmin, im.norm.vmax, 5)
> > ```
> > -        figure.colorbar(im, cax=self._colorbar_ax, ticks=ticks)
> > -        bounds = np.linspace(im.norm.vmin, im.norm.vmax, 100)
> > -        our_cmap = _cm.jet
> >   +
> > -        if threshold != 1e-6:
> >   Same comment as above, why is there a special case for 1e-6?
> 
> —
> Reply to this email directly or view it on GitHub.
",0095853236306d7d357f9c41d6289b2cdf818f26,"(None, '', u'nilearn/plotting/slicers.py')"
41,pull_request_commit_comment,296,nilearn,nilearn,banilo,2014-11-26 16:33:10,"Rather in add_overlay then?

Sent from my iPhone

> On 26 Nov 2014, at 08:54, Loïc Estève notifications@github.com wrote:
> 
> In nilearn/plotting/slicers.py:
> 
> > @@ -406,7 +407,20 @@ def _map_show(self, img, type='imshow', **kwargs):
> >              ims.append(im)
> >          return ims
> > -    def _colorbar_show(self, im):
> > -    def _colorbar_show(self, im, threshold=1e-6):
> > -        # sanity-check threshold
> > -        if threshold != 1e-6:
> > -            if threshold < 0:
> > -                raise ValueError(""The set threshold (%f) can't be negative""
> >   Not really convinced this function is the best place to do this kind of safety checks ...
> 
> —
> Reply to this email directly or view it on GitHub.
",0095853236306d7d357f9c41d6289b2cdf818f26,"(None, '', u'nilearn/plotting/slicers.py')"
42,pull_request_commit_comment,296,nilearn,nilearn,banilo,2014-11-26 16:35:23,"So the default behavior should not be not to have a gray area in the colorbar?

Sent from my iPhone

> On 26 Nov 2014, at 08:47, Loïc Estève notifications@github.com wrote:
> 
> In nilearn/plotting/slicers.py:
> 
> > @@ -406,7 +407,20 @@ def _map_show(self, img, type='imshow', **kwargs):
> >              ims.append(im)
> >          return ims
> > -    def _colorbar_show(self, im):
> > -    def _colorbar_show(self, im, threshold=1e-6):
> >   I don't think this function should have a default for threshold
> 
> —
> Reply to this email directly or view it on GitHub.
",0095853236306d7d357f9c41d6289b2cdf818f26,"(None, '', u'nilearn/plotting/slicers.py')"
43,pull_request_commit_comment,296,nilearn,nilearn,banilo,2014-11-26 16:35:51,"Thanks 

Sent from my iPhone

> On 26 Nov 2014, at 08:46, Loïc Estève notifications@github.com wrote:
> 
> In nilearn/plotting/slicers.py:
> 
> > @@ -14,7 +14,8 @@
> > 
> >  try:
> >      import pylab as pl
> > -    from matplotlib import transforms
> > -    from matplotlib import transforms, cm as _cm
> >   You can actually use pl.cm to access the matplotlib colormap module. That's what I have seen used in a few places e.g. plotting/img_plotting.py.
> 
> —
> Reply to this email directly or view it on GitHub.
",0095853236306d7d357f9c41d6289b2cdf818f26,"(None, '', u'nilearn/plotting/slicers.py')"
44,pull_request_commit_comment,296,nilearn,nilearn,lesteve,2014-11-27 07:38:47,"All I meant to say is that self._colorbar_show is always called with two arguments in the code so there is no need to a default for threshold here.
",0095853236306d7d357f9c41d6289b2cdf818f26,"(None, '', u'nilearn/plotting/slicers.py')"
45,pull_request_commit_comment,296,nilearn,nilearn,lesteve,2014-11-27 07:40:45,"Probably not because you don't have access to im.vmin and im.vmax there. In any case it seems best done as a separate PR.
",0095853236306d7d357f9c41d6289b2cdf818f26,"(None, '', u'nilearn/plotting/slicers.py')"
46,pull_request_commit_comment,296,nilearn,nilearn,lesteve,2014-11-27 07:43:46,"I know (see my comment about promoting it to a module constant above) but still. I don't really understand why 1e-6 should be treated differently from any other threshold. Shouldn't you try to gray the area between [-1e-6, 1e-6]? It will probably only show up a a gray line at 0 I would have thought.
",0095853236306d7d357f9c41d6289b2cdf818f26,"(None, '', u'nilearn/plotting/slicers.py')"
47,pull_request_commit_comment,296,nilearn,nilearn,lesteve,2014-11-27 07:49:35,"I don't get your question. Basically all I am saying is that in img_plotting.py you masked the data inside [-threshold, threshold] [here](https://github.com/banilo/nilearn/blob/colorbar/nilearn/plotting/img_plotting.py#L94) but then you call add_overlay with a threshold argument which will mask the data again [there](https://github.com/banilo/nilearn/blob/colorbar/nilearn/plotting/slicers.py#L335).
",0095853236306d7d357f9c41d6289b2cdf818f26,"(None, '', u'nilearn/plotting/img_plotting.py')"
48,pull_request_commit_comment,296,nilearn,nilearn,eickenberg,2014-11-27 10:22:07,"Actually, I think the directive is to `import matplotlib.pyplot as plt` instead of `import pylab as pl`
",0095853236306d7d357f9c41d6289b2cdf818f26,"(None, '', u'nilearn/plotting/slicers.py')"
49,pull_request_commit_comment,296,nilearn,nilearn,eickenberg,2014-11-27 10:27:03,"Could you motivate the `abs` in that line? That means that if the minimal value is positive, then the range will assume it was actually its negative symmetric.
",0095853236306d7d357f9c41d6289b2cdf818f26,"(None, '', u'nilearn/plotting/slicers.py')"
50,pull_request_commit_comment,296,nilearn,nilearn,lesteve,2014-11-27 10:30:40,"Agreed but we still have `import pylab as pl` in a few places. Should probably be fixed in a separate PR.
",0095853236306d7d357f9c41d6289b2cdf818f26,"(None, '', u'nilearn/plotting/slicers.py')"
51,pull_request_commit_comment,296,nilearn,nilearn,banilo,2014-11-27 10:30:52,"Thanks for pointing this one out - I am not sure yet, to be honest, how to
handle a threshold of e.g. 4 when e.g. vmax=10 and vmin = 2. We just gray 2
to 4?

2014-11-27 11:27 GMT+01:00 eickenberg notifications@github.com:

> In nilearn/plotting/slicers.py:
> 
> > ```
> >      ticks = np.linspace(im.norm.vmin, im.norm.vmax, 5)
> > ```
> > -        figure.colorbar(im, cax=self._colorbar_ax, ticks=ticks)
> > -        bounds = np.linspace(im.norm.vmin, im.norm.vmax, 100)
> > -        our_cmap = _cm.jet
> >   +
> > -        if threshold != 1e-6:
> > -            # some colormap hacking
> > -            cmaplist = [our_cmap(i) for i in range(our_cmap.N)]
> > -            rng = float(im.norm.vmax + abs(im.norm.vmin))
> 
> Could you motivate the abs in that line? That means that if the minimal
> value is positive, then the range will assume it was actually its negative
> symmetric.
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/nilearn/nilearn/pull/296/files#r20988126.

## 

Viele Grüße,
Danilo
",0095853236306d7d357f9c41d6289b2cdf818f26,"(None, '', u'nilearn/plotting/slicers.py')"
52,pull_request_commit_comment,296,nilearn,nilearn,banilo,2014-11-27 10:31:23,"good idea!

2014-11-27 11:30 GMT+01:00 Loïc Estève notifications@github.com:

> In nilearn/plotting/slicers.py:
> 
> > @@ -14,7 +14,8 @@
> > 
> >  try:
> >      import pylab as pl
> > -    from matplotlib import transforms
> > -    from matplotlib import transforms, cm as _cm
> 
> Agreed but we still have import pylab as pl in a few places. Should
> probably be fixed in a separate PR.
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/nilearn/nilearn/pull/296/files#r20988283.

## 

Viele Grüße,
Danilo
",0095853236306d7d357f9c41d6289b2cdf818f26,"(None, '', u'nilearn/plotting/slicers.py')"
53,pull_request_commit_comment,296,nilearn,nilearn,banilo,2014-11-27 10:32:21,"Looks like we mostly do this in tests:

11:07:50-admin/git/nilearn (mask_time)$ git grep -ni ""import pylab as pl""

nilearn/plotting/img_plotting.py:24:    _import pylab as pl_

nilearn/plotting/slicers.py:16:    _import pylab as pl_

nilearn/plotting/tests/test_cm.py:11:    _import pylab as pl_

nilearn/plotting/tests/test_cm.py:22:    _import pylab as pl_

nilearn/plotting/tests/test_cm.py:29:    _import pylab as pl_

nilearn/plotting/tests/test_img_plotting.py:14:    _import pylab as pl_

nilearn/plotting/tests/test_img_plotting.py:49:    _import pylab as pl_

nilearn/plotting/tests/test_img_plotting.py:62:    _import pylab as pl_

nilearn/plotting/tests/test_img_plotting.py:97:    _import pylab as pl_

nilearn/plotting/tests/test_img_plotting.py:114:    _import pylab as pl_

nilearn/plotting/tests/test_slicers.py:10:    _import pylab as pl_

nilearn/plotting/tests/test_slicers.py:24:    _import pylab as pl_

nilearn/plotting/tests/test_slicers.py:36:    _import pylab as pl_

plot_demo_plotting.py:86:_import pylab as pl_

plot_haxby_simple.py:82:_import pylab as pl_t

plot_ica_resting_state.py:53:_import pylab as pl_t

2014-11-27 11:31 GMT+01:00 Danilo Bzdok danilobzdok@gmail.com:

> good idea!
> 
> 2014-11-27 11:30 GMT+01:00 Loïc Estève notifications@github.com:
> 
> > In nilearn/plotting/slicers.py:
> > 
> > > @@ -14,7 +14,8 @@
> > > 
> > >  try:
> > >      import pylab as pl
> > > -    from matplotlib import transforms
> > > -    from matplotlib import transforms, cm as _cm
> > 
> > Agreed but we still have import pylab as pl in a few places. Should
> > probably be fixed in a separate PR.
> > 
> > —
> > Reply to this email directly or view it on GitHub
> > https://github.com/nilearn/nilearn/pull/296/files#r20988283.
> 
> ## 
> 
> Viele Grüße,
> Danilo

## 

Viele Grüße,
Danilo
",0095853236306d7d357f9c41d6289b2cdf818f26,"(None, '', u'nilearn/plotting/slicers.py')"
54,pull_request_commit_comment,296,nilearn,nilearn,banilo,2014-11-27 10:37:35,"The masking of the data has already been therefore. This PR is about the thresholding depicted in the colorbar, not the thresholding int he depicted brain image, which remained unchanged.
",0095853236306d7d357f9c41d6289b2cdf818f26,"(None, '', u'nilearn/plotting/img_plotting.py')"
55,pull_request_commit_comment,296,nilearn,nilearn,banilo,2014-11-27 10:37:52,"Good to know, thanks.
",0095853236306d7d357f9c41d6289b2cdf818f26,"(None, '', u'nilearn/plotting/img_plotting.py')"
56,pull_request_commit_comment,296,nilearn,nilearn,lesteve,2014-11-27 10:39:34,"I could have sworn I posted something about this part of the code but apparently not. There has to be a better way than doing the mapping from data space to colormap space by hand. In particular your code assumes that the mapping is linear. 

One way which may not be the best approach: im.norm is a callable that maps the data space to [0, 1] and then you can multiply by our_cmap.N - 1 to get istart and istop.
",0095853236306d7d357f9c41d6289b2cdf818f26,"(None, '', u'nilearn/plotting/slicers.py')"
57,pull_request_commit_comment,296,nilearn,nilearn,eickenberg,2014-11-27 10:45:48,"I think there had already been a pass through most of the non-test code correcting this.
",0095853236306d7d357f9c41d6289b2cdf818f26,"(None, '', u'nilearn/plotting/slicers.py')"
58,pull_request_commit_comment,296,nilearn,nilearn,banilo,2014-11-27 10:50:45,"a) I would like to promote threshold=0 as a default
b) where do you want me to put the default_threshold constant?
",0095853236306d7d357f9c41d6289b2cdf818f26,"(None, '', u'nilearn/plotting/slicers.py')"
59,pull_request_commit_comment,296,nilearn,nilearn,lesteve,2014-11-27 12:04:28,"But since you are fixing the fact that threshold wasn't passed to add_overlay you may as well remove the unnecessary masking here ...
",0095853236306d7d357f9c41d6289b2cdf818f26,"(None, '', u'nilearn/plotting/img_plotting.py')"
60,pull_request_commit_comment,296,nilearn,nilearn,eickenberg,2014-11-27 12:58:59,"Do we really need to proceed this way? Splitting a continuous colormap into the arbitrary and probably visible binning of 100 shouldn't be necessary.
",0095853236306d7d357f9c41d6289b2cdf818f26,"(None, '', u'nilearn/plotting/slicers.py')"
61,pull_request_commit_comment,296,nilearn,nilearn,banilo,2014-11-28 20:26:24,"That's because I changed back to the lower level ColorbarBase() call since it permits a user-defined cmap as an argument. Without specifying bounds the colorbar did not work out.
",0095853236306d7d357f9c41d6289b2cdf818f26,"(None, '', u'nilearn/plotting/slicers.py')"
62,pull_request_commit_comment,296,nilearn,nilearn,eickenberg,2014-11-28 20:28:21,"then it needs to scale with the dpi of the figure i guess. maybe overkill

On Friday, November 28, 2014, Danilo Bzdok notifications@github.com wrote:

> In nilearn/plotting/slicers.py:
> 
> > ```
> >      ticks = np.linspace(im.norm.vmin, im.norm.vmax, 5)
> > ```
> > -        figure.colorbar(im, cax=self._colorbar_ax, ticks=ticks)
> > -        bounds = np.linspace(im.norm.vmin, im.norm.vmax, 100)
> 
> That's because I changed back to the lower level ColorbarBase() call since
> it permits a user-defined cmap as an argument. Without specifying bounds
> the colorbar did not work out.
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/nilearn/nilearn/pull/296/files#r21043629.
",0095853236306d7d357f9c41d6289b2cdf818f26,"(None, '', u'nilearn/plotting/slicers.py')"
63,pull_request_commit_comment,296,nilearn,nilearn,banilo,2014-11-28 20:29:57,"How about cmap.N, that is, the number of maximum color entries that the colormap has to offer.
",0095853236306d7d357f9c41d6289b2cdf818f26,"(None, '', u'nilearn/plotting/slicers.py')"
64,pull_request_commit_comment,296,nilearn,nilearn,banilo,2014-11-28 20:40:45,"You are completely right, of course. Removed the one in l.93/94 as masking the data is moved to add_overlay now.
",0095853236306d7d357f9c41d6289b2cdf818f26,"(None, '', u'nilearn/plotting/img_plotting.py')"
65,pull_request_commit_comment,296,nilearn,nilearn,banilo,2014-11-28 21:09:52,"Works like a charm, thanks.
",0095853236306d7d357f9c41d6289b2cdf818f26,"(None, '', u'nilearn/plotting/slicers.py')"
66,pull_request_commit_comment,296,nilearn,nilearn,GaelVaroquaux,2014-12-06 10:00:39,"> a) I would like to promote threshold=0 as a default

No. An converged algorithm (for l1 penalties) typically gives non-zero
coeffs where they are zero in practice. 1e-6 is a good compromise,
because most often values that should not be zeros are above that, and
sparse algorithms converge below that.
",0095853236306d7d357f9c41d6289b2cdf818f26,"(None, '', u'nilearn/plotting/slicers.py')"
67,pull_request_commit_comment,296,nilearn,nilearn,bthirion,2014-12-10 21:57:17,"Sorry if I missed the point, but for me no error should be raised if the threshold is greater than any value of the map: visualizing an empty map is a perfectly valid use case.
Similarly, I don't see immediately why negative thresholds are forbidden (maybe I'm missing some context here).
",0095853236306d7d357f9c41d6289b2cdf818f26,"(None, '', u'nilearn/plotting/displays.py')"
68,pull_request_commit_comment,296,nilearn,nilearn,lesteve,2014-12-11 10:04:47,"> Sorry if I missed the point, but for me no error should be raised if the threshold is greater than any value of the map: visualizing an empty map is a perfectly valid use case.

I kind of agree on this one. I think the grayed cmap logic has to handle this case.

> Similarly, I don't see immediately why negative thresholds are forbidden (maybe I'm missing some context here).

At the moment, the treshold logic is such that values in [-threshold, threshold] are masked so it doesn't make too much sense to have a negative threshold (full disclosure: currently it may well be the case that `threshold=-threshold` works exactly the same as `threshold=threshold` by accident)
",0095853236306d7d357f9c41d6289b2cdf818f26,"(None, '', u'nilearn/plotting/displays.py')"
69,pull_request_commit_comment,296,nilearn,nilearn,banilo,2014-12-11 10:18:07,"a) I will take out the check for too big threshold choices

b) Any other decisions to take at this point?

2014-12-11 11:04 GMT+01:00 Loïc Estève notifications@github.com:

> In nilearn/plotting/displays.py
> https://github.com/nilearn/nilearn/pull/296#discussion-diff-21667142:
> 
> > @@ -401,8 +402,19 @@ def add_overlay(self, img, threshold=1e-6, colorbar=False, **kwargs):
> > 
> > ```
> >      ims = self._map_show(img, type='imshow', **kwargs)
> > ```
> > -        if threshold is not None:
> > -            if threshold < 0:
> > -                raise ValueError(""The set threshold (%.2f) can't be negative""
> > -                                 % threshold)
> > -            if threshold > ims[0].norm.vmax:
> > -                raise ValueError('The set threshold (%.2f) is higher than '
> > -                                 'vmax (%.2f)' % (threshold, ims[0].norm.vmax))
> > -            if threshold > abs(ims[0].norm.vmax):
> > -                raise ValueError('The set threshold (%.2f) is lower than '
> > -                                 'vmin (%.2f)' % (threshold, ims[0].norm.vmin))
> >   +
> 
>  Sorry if I missed the point, but for me no error should be raised if the
> threshold is greater than any value of the map: visualizing an empty map is
> a perfectly valid use case.
> 
> I kind of agree on this one. I think the grayed cmap logic has to handle
> this case.
> 
> Similarly, I don't see immediately why negative thresholds are forbidden
> (maybe I'm missing some context here).
> 
> At the moment, the treshold logic is such that values in [-threshold,
> threshold] are masked so it doesn't make too much sense to have a negative
> threshold (full disclosure: currently it may well be the case that
> threshold=-threshold works exactly the same as threshold=threshold by
> accident)
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/nilearn/nilearn/pull/296/files#r21667142.

## 

Viele Grüße,
Danilo
",0095853236306d7d357f9c41d6289b2cdf818f26,"(None, '', u'nilearn/plotting/displays.py')"
70,pull_request_commit_comment,296,nilearn,nilearn,lesteve,2014-12-11 10:38:56,"Can you use `threshold=threshold` i.e. use a keyword argument here? I reckon this is good practice, see for [example](https://code.google.com/p/soc/wiki/PythonStyleGuide#Function_Arguments)
",0095853236306d7d357f9c41d6289b2cdf818f26,"(None, '', u'nilearn/plotting/img_plotting.py')"
71,pull_request_commit_comment,296,nilearn,nilearn,lesteve,2014-12-11 10:43:00,"I am not a big fan of comments that don't add much like this because they tend to become out of sync with the code. If you think it was not clear enough, why not do something like (I assumed the not so clear part was what color was used for):

``` python
tick_color = 'w' if self._black_bg else 'k'
for tick in self._colorbar_ax.yaxis.get_ticklabels():
    tick.set_color(tick_color)
```
",0095853236306d7d357f9c41d6289b2cdf818f26,"(None, '', u'nilearn/plotting/displays.py')"
72,pull_request_commit_comment,296,nilearn,nilearn,bthirion,2014-12-11 13:18:08,"OK, but what should we do about the following use case (people do on SPM all the time): visualize dissymetric ranges of values: [th, +\infty]. This is because in many (most) neuroimaging studies, people are interested in A>B but do not care about B>A, and so do not want to have their image cluttered with negative peaks if they don't care about it.  I agree that this should not be the default, but I would leave this possibility open (through another kwarg ?).
",0095853236306d7d357f9c41d6289b2cdf818f26,"(None, '', u'nilearn/plotting/displays.py')"
73,pull_request_commit_comment,296,nilearn,nilearn,GaelVaroquaux,2014-12-11 13:20:09,"Loic, Michael, Danilo, how about reusing the logic that Michael is
developping for the range of the colorbar?
",0095853236306d7d357f9c41d6289b2cdf818f26,"(None, '', u'nilearn/plotting/displays.py')"
74,pull_request_commit_comment,296,nilearn,nilearn,lesteve,2014-12-11 14:03:31,"> OK, but what should we do about the following use case (people do on SPM all the time): visualize dissymetric ranges of values: [th, +\infty]. This is because in many (most) neuroimaging studies, people are interested in A>B but do not care about B>A

I would say that we should definitely add this feature but that this should be done outside of this PR.
",0095853236306d7d357f9c41d6289b2cdf818f26,"(None, '', u'nilearn/plotting/displays.py')"
75,pull_request_commit_comment,296,nilearn,nilearn,banilo,2014-12-11 14:06:27,"I am for finishing this PR up first (just commited new changes) and get to
Michaels code dans un deuxième temps.

2014-12-11 15:03 GMT+01:00 Loïc Estève notifications@github.com:

> In nilearn/plotting/displays.py
> https://github.com/nilearn/nilearn/pull/296#discussion-diff-21677276:
> 
> > @@ -401,8 +402,19 @@ def add_overlay(self, img, threshold=1e-6, colorbar=False, **kwargs):
> > 
> > ```
> >      ims = self._map_show(img, type='imshow', **kwargs)
> > ```
> > -        if threshold is not None:
> > -            if threshold < 0:
> > -                raise ValueError(""The set threshold (%.2f) can't be negative""
> > -                                 % threshold)
> > -            if threshold > ims[0].norm.vmax:
> > -                raise ValueError('The set threshold (%.2f) is higher than '
> > -                                 'vmax (%.2f)' % (threshold, ims[0].norm.vmax))
> > -            if threshold > abs(ims[0].norm.vmax):
> > -                raise ValueError('The set threshold (%.2f) is lower than '
> > -                                 'vmin (%.2f)' % (threshold, ims[0].norm.vmin))
> >   +
> 
>  OK, but what should we do about the following use case (people do on SPM
> all the time): visualize dissymetric ranges of values: [th, +\infty]. This
> is because in many (most) neuroimaging studies, people are interested in
> A>B but do not care about B>A
> 
> I would say that we should definitely add this feature but that this
> should be done outside of this PR.
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/nilearn/nilearn/pull/296/files#r21677276.

## 

Viele Grüße,
Danilo
",0095853236306d7d357f9c41d6289b2cdf818f26,"(None, '', u'nilearn/plotting/displays.py')"
76,pull_request_commit_comment,296,nilearn,nilearn,GaelVaroquaux,2014-12-11 14:44:00,"> I am for finishing this PR up first (just commited new changes) and get to
> Michaels code dans un deuxième temps.

+1.
",0095853236306d7d357f9c41d6289b2cdf818f26,"(None, '', u'nilearn/plotting/displays.py')"
77,pull_request_commit_comment,296,nilearn,nilearn,lesteve,2014-12-12 15:35:12,"Move this statement a few lines below. You have separated the comment and the line it was pertaining to i.e.:

``` python
nb_ticks = 5 if im.norm.vmin != im.norm.vmax else 1
```
",0095853236306d7d357f9c41d6289b2cdf818f26,"(None, '', u'nilearn/plotting/displays.py')"
78,pull_request_commit,296,nilearn,nilearn,banilo,2014-12-12 13:22:27,display: add threshold for colorbar,b63a928c6b5e3c7007c1bc2454fc3576306592b4,
79,pull_request_commit,296,nilearn,nilearn,banilo,2014-12-12 13:26:49,restored comment,1be1f48fa0acc0392fa04d678d6add55b739ab91,
80,pull_request_commit,296,nilearn,nilearn,banilo,2014-12-15 13:09:37,cleanups + readjusted comment position,0095853236306d7d357f9c41d6289b2cdf818f26,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,288,nilearn,nilearn,lesteve,2014-11-21 11:17:04,"The goal is to use plot_stat_map and al. in examples rather than bespoke `plt.imshow(np.rot90(...))` arcane combinations.

Contributions via PR to my branch more than welcome!
",start issue,[WIP] Use nilearn plotting functions in examples
2,issue_closed,288,nilearn,nilearn,GaelVaroquaux,2014-11-24 11:39:51,,closed issue,[WIP] Use nilearn plotting functions in examples
3,pull_request_title,288,nilearn,nilearn,lesteve,2014-11-21 11:17:04,"The goal is to use plot_stat_map and al. in examples rather than bespoke `plt.imshow(np.rot90(...))` arcane combinations.

Contributions via PR to my branch more than welcome!
",422881afa09ccd1e5a19ae31a38638e04d6eae7d,[WIP] Use nilearn plotting functions in examples
4,pull_request_merged,288,nilearn,nilearn,GaelVaroquaux,2014-11-24 11:39:51,[WIP] Use nilearn plotting functions in examples,c47a21ee05601ca49fc9a1d3ebe9bcb3a04861ec,Pull request merge from lesteve/nilearn:use-nilearn-plotting-in-examples to nilearn/nilearn:master
5,issue_comment,288,nilearn,nilearn,lesteve,2014-11-21 12:34:34,"Here is one of the plot coming from plot_haxby_different_estimators.py for comparison purposes:

master:
![svc_weights_face_vs_house](https://cloud.githubusercontent.com/assets/1680079/5142446/c1f7d604-7182-11e4-84b0-9c81fc0d81a2.png)

this PR:
![svc_weights_face_vs_house_with_nilearn_plotting](https://cloud.githubusercontent.com/assets/1680079/5142447/c1ffc918-7182-11e4-86ef-69941e67eddf.png)

They look ok to me. The title hiding the L/R labels is something which is outside the scope of this PR I would say.

When comparing the two plots, note that there is a left-right inversion for some reason.
",,
6,issue_comment,288,nilearn,nilearn,GaelVaroquaux,2014-11-21 12:36:58,"R-L inversion is not a problem (it's actually good news, because now we are generating figures in the neurological convention).

I wouldn't worry about the hiding of the labels. This goods good.
",,
7,issue_comment,288,nilearn,nilearn,bthirion,2014-11-21 12:53:00,"Looks good -provided that there is a colorbar attached to it...
",,
8,issue_comment,288,nilearn,nilearn,lesteve,2014-11-21 12:59:38,"> Looks good -provided that there is a colorbar attached to it...

Adding the colorbar is straighforward, I was just trying to get as close as possible as the existing plots.
",,
9,issue_comment,288,nilearn,nilearn,lesteve,2014-11-21 13:28:13,"Here is the plot with the colorbar added (and the default figure size as well):

![svc_weights_face_vs_house_nilearn_plotting_with_colorbar](https://cloud.githubusercontent.com/assets/1680079/5142937/59388c32-718a-11e4-9692-cc0ec18b32c6.png)
",,
10,issue_comment,288,nilearn,nilearn,bthirion,2014-11-23 21:51:14,"Good to merge for me.
(As a side not: sklearn's ridge regression takes edges, which hints at a bug... but this is a different topic.)
",,
11,issue_comment,288,nilearn,nilearn,lesteve,2014-11-24 07:46:48,"> Good to merge for me.

I was hoping to do all the examples in one PR. I reckon there are maybe five more to go.
",,
12,issue_comment,288,nilearn,nilearn,lesteve,2014-11-24 09:31:24,"Master:
![plot_localizer_simple_analysis_before](https://cloud.githubusercontent.com/assets/1680079/5162823/9ddc2470-73c4-11e4-8651-75d798e17d48.png)

After this PR:
![plot_localizer_simple_analysis_after](https://cloud.githubusercontent.com/assets/1680079/5162822/9dbbded6-73c4-11e4-9c63-86e55fb4ab1d.png)

I guess one of the possible complaint is that `plot_stat_map` insists on having a symmetrical colormap around zero (as was already noted by @eickenberg and @mrahim) which doesn't really make sense in this case.
",,
13,issue_comment,288,nilearn,nilearn,eickenberg,2014-11-24 09:48:23,"Slightly off topic, but the reason for which I was tagged: After discussing with @GaelVaroquaux the THM were the following:
- `plot_stat_map` is designed to plot statistical maps and plot them nicely, with useful defaults.
- Anybody who wants to do anything that differs from what is proposed in `plot_stat_map` should use `plot_img`
- An enhancement of `plot_stat_map` would be to add a keyword argument `symmetric_range=True`, which if specified to `False` will make the colorbar go from 0 to the positives.

Since there are many subtleties to discuss, I'd propose a separate PR. I'll set it up quickly.
",,
14,issue_comment,288,nilearn,nilearn,GaelVaroquaux,2014-11-24 09:55:03,"I would remove the cmap argument on this plot, or use plot_img, as the cmap given isn't a symmetrical cmap, and thus doesn't make much sens.
",,
15,issue_comment,288,nilearn,nilearn,eickenberg,2014-11-24 11:28:27,"Made https://github.com/nilearn/nilearn/pull/293 to change the symmetric range colorbar problem, but would need an example to show how it works. Would take e.g. the last image of what @lesteve showed us. But that would cause merge conflicts. Any other good ones I can try this on?
",,
16,issue_comment,288,nilearn,nilearn,GaelVaroquaux,2014-11-24 11:34:17,"> Made #293 to change the symmetric range colorbar problem, but would need an
> example to show how it works. Would take e.g. the last image of what @lesteve
> showed us.

Any reason not to merge the work by @lesteve?
",,
17,issue_comment,288,nilearn,nilearn,eickenberg,2014-11-24 11:38:35,"Not from my side -- If the symmetric hot colorbar is OK as an intermediate solution before merge of #293 then perfect. As soon as it is merged, I'll change the example to `symmetric_range=False`.
",,
18,issue_comment,288,nilearn,nilearn,GaelVaroquaux,2014-11-24 11:40:12,"Merged. More improvements can be done later.

Thanks team! You are a power house.
",,
19,issue_comment,288,nilearn,nilearn,eickenberg,2014-11-24 11:55:28,"Thanks! With this example in and _without changing its code_, #293 makes it select the right colorbar range now.
",,
20,pull_request_commit,288,nilearn,nilearn,lesteve,2014-11-21 11:13:44,Use nilearn plotting in plot_haxby_different_estimators.py,ca4ef887db50c9b57ab6277c7d8412a305866904,
21,pull_request_commit,288,nilearn,nilearn,lesteve,2014-11-21 13:27:18,Add colorbar and use default figure size,b6ef497853c2d2641a47e61fc0503fe162a37877,
22,pull_request_commit,288,nilearn,nilearn,lesteve,2014-11-24 09:26:50,Use nilearn plotting functions in plot_localizer_simple_analysis.py,422881afa09ccd1e5a19ae31a38638e04d6eae7d,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,284,nilearn,nilearn,lesteve,2014-11-18 10:57:47,"See [here](http://nilearn.github.io/auto_examples/plot_haxby_anova_svm.html). Maybe this is partly due to the slice which is chosen for the plot.
- The support of the SVC doesn't look right
- accuracy is 73% whereas a comment at the bottom of the example claims 98%
",start issue,Haxby anova example looks suspicious
2,issue_closed,284,nilearn,nilearn,GaelVaroquaux,2014-11-19 21:28:44,,closed issue,Haxby anova example looks suspicious
3,issue_comment,284,nilearn,nilearn,GaelVaroquaux,2014-11-18 11:08:59,"I can reproduce. I agree that it looks suspicious.
",,
4,issue_comment,284,nilearn,nilearn,AlexandreAbraham,2014-11-18 15:24:16,"You get better results if you don't standardize.
",,
5,issue_comment,284,nilearn,nilearn,AlexandreAbraham,2014-11-18 17:22:53,"Just to clarify my last remark: this is not a good solution but it explains why it has worked so far. The problem here is that, if the data is standardized, the feature selection will select noisy voxels (around the brain).
",,
6,issue_comment,284,nilearn,nilearn,lesteve,2014-11-19 15:27:53,"> You get better results if you don't standardize.

Just for completeness, @AlexandreAbraham is right with standardize=False in the NiftiMasker, the plot looks more familiar:
![plot_haxby_anova_not_standardize](https://cloud.githubusercontent.com/assets/1680079/5108153/fe6bca18-7007-11e4-9ad7-aa7d3f3b9ad9.png)
",,
7,issue_comment,284,nilearn,nilearn,GaelVaroquaux,2014-11-19 15:33:09,"> Just for completeness, @AlexandreAbraham is right with
> standardize=False in the NiftiMasker, the plot looks more familiar:
> plot_haxby_anova_not_standardize

Hum, could it be that the NiftiMasker standardizes on all the data,
whereas we would really like to standardize only on the time points used
for learning? Could you check this (for instance by using scikit-learn's
standardizer only on the selected time points?

In which case, it is really an argument for:
- The Decoder object that @schwarty and Andres are working on (it can
  solve the problem by doing the standardization for the user)
- Having a selection vector to select time points in the NiftiMasker
",,
8,issue_comment,284,nilearn,nilearn,bthirion,2014-11-19 21:02:10,"The culprit is line 27. It should be done once the masking has been applied. It is actually strange that NiftiMasker does not throw an error...
",,
9,issue_comment,284,nilearn,nilearn,GaelVaroquaux,2014-11-19 21:28:36,"Good catch. Fixed by 5428760
",,
10,issue_comment,284,nilearn,nilearn,GaelVaroquaux,2014-11-19 22:25:24,"I've added some proper error capture to avoid such problem in the future, in 2886dfc
",,
11,issue_comment,284,nilearn,nilearn,lesteve,2014-11-20 10:29:28,"FYI I have done a make install to update the website
",,
12,issue_comment,284,nilearn,nilearn,GaelVaroquaux,2014-11-20 10:31:31,"> FYI I have done a make install to update the website

Thank you. I was hesitating to ask you to do this, and decided not to
burden you with too many things to do.
",,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,324,nilearn,nilearn,lesteve,2014-12-18 12:35:12,"- load from/save to file
- access data and affine
- some other thing like using filename or images for _img functions, basic plotting
",start issue,Add example to show simple nilearn functionality
2,issue_closed,324,nilearn,nilearn,lesteve,2014-12-18 14:10:54,,closed issue,Add example to show simple nilearn functionality
3,pull_request_title,324,nilearn,nilearn,lesteve,2014-12-18 12:35:12,"- load from/save to file
- access data and affine
- some other thing like using filename or images for _img functions, basic plotting
",4e9c00f8dda54d2fa8afe1325866182fe836140c,Add example to show simple nilearn functionality
4,pull_request_merged,324,nilearn,nilearn,lesteve,2014-12-18 14:10:54,Add example to show simple nilearn functionality,353e757fe066b7651168b25e8a2a5de45d8e5471,Pull request merge from lesteve/nilearn:add-simple-example to nilearn/nilearn:master
5,issue_comment,324,nilearn,nilearn,lesteve,2014-12-18 12:38:54,"For completeness, here are the images generated by the example:
![anat](https://cloud.githubusercontent.com/assets/1680079/5488235/27be9d7c-86bb-11e4-93ff-97406918f676.png)
![smooth_anat](https://cloud.githubusercontent.com/assets/1680079/5488234/27be13b6-86bb-11e4-9fac-12d070d70aac.png)
",,
6,issue_comment,324,nilearn,nilearn,GaelVaroquaux,2014-12-18 12:41:43,"Looks good. However, I think that this file should be in the 'manipulating images' section of the examples, not in the general examples.
",,
7,issue_comment,324,nilearn,nilearn,lesteve,2014-12-18 12:47:05,"> I think that this file should be in the 'manipulating images'

It was meant as an introductory example hence why I put it there
",,
8,issue_comment,324,nilearn,nilearn,GaelVaroquaux,2014-12-18 13:09:17,"> It was meant as an introductory example hence why I put it there

OK, I change my mind :)
",,
9,pull_request_commit_comment,324,nilearn,nilearn,AlexandreAbraham,2014-12-18 12:40:08,"No need to put a space here. It is added automatically with the comma.
",4e9c00f8dda54d2fa8afe1325866182fe836140c,"(None, '', u'examples/plot_nilearn_101.py')"
10,pull_request_commit,324,nilearn,nilearn,lesteve,2014-12-18 12:25:39,"Add simple example

that shows how to:
* load from/save to file
* access data and affine
* some other simple functionalities

Remove unnecessary space",4e9c00f8dda54d2fa8afe1325866182fe836140c,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,285,nilearn,nilearn,lesteve,2014-11-20 09:59:25,"Replace + by - to ensure that some voxels pass the threshold. 

I seem to bump on this line on occasions and I figured I would ask whether I was missing something.
",start issue,Fix auto threshold in img_plotting.py
2,issue_closed,285,nilearn,nilearn,GaelVaroquaux,2014-11-20 10:00:26,,closed issue,Fix auto threshold in img_plotting.py
3,pull_request_title,285,nilearn,nilearn,lesteve,2014-11-20 09:59:25,"Replace + by - to ensure that some voxels pass the threshold. 

I seem to bump on this line on occasions and I figured I would ask whether I was missing something.
",12db24e92f81f40ba9e5ebf406d5b6e9cbfb0163,Fix auto threshold in img_plotting.py
4,pull_request_merged,285,nilearn,nilearn,GaelVaroquaux,2014-11-20 10:00:26,Fix auto threshold in img_plotting.py,ef98b58530b588fb342ef145eb6deffa013abe89,Pull request merge from lesteve/nilearn:auto-threshold to nilearn/nilearn:master
5,issue_comment,285,nilearn,nilearn,GaelVaroquaux,2014-11-20 10:00:24,"Good catch!
",,
6,issue_comment,285,nilearn,nilearn,lesteve,2014-11-20 11:00:52,"BTW just curious, is the 1e-5 coming from somewhere in particular? The reason I ask is because 1e-15 is used [here](https://github.com/nilearn/nilearn/blob/master/nilearn/plotting/find_cuts.py#L75) instead.
",,
7,issue_comment,285,nilearn,nilearn,GaelVaroquaux,2014-11-20 11:07:07,"> BTW just curious, is the 1e-5 coming from somewhere in particular? The
> reason I ask is because 1e-15 is used here instead.

1e-15 is for numerical instability. 1e-5 is because some algorithms do
not converge at a precision such that what should be 0 is actually 0, but
more 1e-5 think of it as xtol in an optimization framework).
",,
8,issue_comment,285,nilearn,nilearn,lesteve,2014-11-20 11:15:28,"Maybe I could have been more clear. In both of the cases I mentioned you just offset an activation threshold by an epsilon, except that the epsilon is not the same (1e-5 or 1e-15). Basically just curious about the reason of the difference if there is any good one. Also it could have been a typo given how close they are (in typing distance). 
",,
9,issue_comment,285,nilearn,nilearn,GaelVaroquaux,2014-11-20 15:17:03,"I just realized that I did a mistake merging your PR. I am doing too many
things in parallel.

I think that the code was correct. The goal of this code is to say that
when you are thresholding at 1, the segment [-1, 1](ie 1 included) is
not displayed. The main usecase is to threshold a O, in which case, you
want to set transparent {0} and not the null ensemble.

If you agree with the reasonning above (in particular the usecase) could
please commit (directly into master) a commit that reverts your change
and explains the code better based on my explaination.
",,
10,issue_comment,285,nilearn,nilearn,lesteve,2014-11-20 18:58:50,"I am not too sure about the use case, because in most cases I have seen, `np.ma.masked_inside(data, -threshold, threshold)` is used to mask the array and this function mask the values inclusively, so zero would be masked.

Note that this code is only used when using `threshold='auto'` in which case your auto threshold is the 80% percentile of np.abs(data).

The use case I thought the code was trying to solve is when you are unlucky enough that no voxel value is _strictly_ greater in absolute value than the auto threshold. I may be wrong about that obviously.
",,
11,issue_comment,285,nilearn,nilearn,GaelVaroquaux,2014-11-20 21:17:16,"> Note that this code is only used when using threshold='auto' in which
> case your auto threshold is the 80% percentile of np.abs(data).
> 
> The use case I thought the code was trying to solve is when you are
> unlucky enough that no voxel value is strictly greater in absolute
> value than the auto threshold. I may be wrong about that obviously.

Now I think that it comes back to me (I wrote this code, but years ago; I
do remember that this detail was important) suppose that you have a
binary image, only zeros and 1. You don't want 1 to be masked, even if
there are more than 20% of 1. I think that this is the usecase that the
code was solving (I _think_).
",,
12,issue_comment,285,nilearn,nilearn,lesteve,2014-11-21 09:45:41,"> You don't want 1 to be masked, even if there are more than 20% of 1. I think that this is the usecase that the code was solving (I _think_).

So this agrees with what I had in mind. We definitely want a - sign which is what this PR was about.
",,
13,issue_comment,285,nilearn,nilearn,GaelVaroquaux,2014-11-21 09:59:22,"> So this agrees with what I had in mind. We definitely want a - sign which is
> what this PR was about.

OK. I think that you are right and I am wrong. Is it possible to write a
test for this or not (ie is the function structure right, or do we have a
tangle). If it's easy to do so, it would be great if you could write a
test. If it's not easy, just give up.
",,
14,issue_comment,285,nilearn,nilearn,lesteve,2014-11-21 10:21:49,"Off the top of my head, I seem to remember this auto threshold logic is deep inside the plotting functions. I guess one quick and dirty way to do it would be to use the plotting function with some toy image and look at the image vmin and vmax (we can probably retrieve them in some way from the display object).
",,
15,issue_comment,285,nilearn,nilearn,GaelVaroquaux,2014-11-21 10:23:58,"> I seem to remember this auto threshold logic is deep inside the
> plotting functions.

Me too :(.

> I guess one quick and dirty way to do it would be to use the plotting
> function with some toy image and look at the image vmin and vmax (we
> can probably retrieve them in some way from the display object).

If it's easy, go for it. It's a functional test that makes sens!
",,
16,pull_request_commit,285,nilearn,nilearn,lesteve,2014-11-20 09:57:13,"Fix auto threshold in img_plotting.py

Replace + by - to ensure that some voxels pass the threshold",12db24e92f81f40ba9e5ebf406d5b6e9cbfb0163,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,301,nilearn,nilearn,lesteve,2014-12-02 12:21:37,"Fixes #299. The fourth argument of add_axes was using y1 instead of a width (credits go to @AlexandreAbraham for finding out the root cause of this).

I tweak the margin logic to make it scale invariant. Updated plots:

![plot_stat_map_with_multiple_axes](https://cloud.githubusercontent.com/assets/1680079/5262417/d9aeac72-7a25-11e4-895e-dc91f56b00e2.png)

![plot_stat_map_default](https://cloud.githubusercontent.com/assets/1680079/5262419/de330b30-7a25-11e4-92fe-d106f6d3ebf5.png)
",start issue,Fix colorbar positioning when using 'axes' argument
2,issue_closed,301,nilearn,nilearn,lesteve,2014-12-02 13:03:58,,closed issue,Fix colorbar positioning when using 'axes' argument
3,pull_request_title,301,nilearn,nilearn,lesteve,2014-12-02 12:21:37,"Fixes #299. The fourth argument of add_axes was using y1 instead of a width (credits go to @AlexandreAbraham for finding out the root cause of this).

I tweak the margin logic to make it scale invariant. Updated plots:

![plot_stat_map_with_multiple_axes](https://cloud.githubusercontent.com/assets/1680079/5262417/d9aeac72-7a25-11e4-895e-dc91f56b00e2.png)

![plot_stat_map_default](https://cloud.githubusercontent.com/assets/1680079/5262419/de330b30-7a25-11e4-92fe-d106f6d3ebf5.png)
",a13fa316283ae93ce707494c5fc78d189f079492,Fix colorbar positioning when using 'axes' argument
4,pull_request_merged,301,nilearn,nilearn,lesteve,2014-12-02 13:03:58,Fix colorbar positioning when using 'axes' argument,a37c502d40d9e8acbc954f9c4cef2d69285b7dae,Pull request merge from lesteve/nilearn:fix-plotting-with-axes-argument to nilearn/nilearn:master
5,issue_comment,301,nilearn,nilearn,AlexandreAbraham,2014-12-02 12:53:54,"Your solution is great, I think that you can merge it.
",,
6,issue_comment,301,nilearn,nilearn,lesteve,2014-12-02 13:03:54,"ok thanks merging this one.
",,
7,pull_request_commit,301,nilearn,nilearn,lesteve,2014-12-02 12:17:33,"Fix colorbar positioning when using 'axes' argument

The fourth argument of add_axes was using y1 instead of a width. Some cosmetic changes too",a13fa316283ae93ce707494c5fc78d189f079492,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,245,nilearn,nilearn,lesteve,2014-09-26 09:57:48,"This pull request is WIP for now and was only opened to get some feedback, both visualisation-wise and code-wise.

Here is how it looks like atm:
![glass_brain](https://cloud.githubusercontent.com/assets/1680079/4442285/9d705a8c-47dd-11e4-9732-31fc07802367.png)

The code to generate the plots is [there](https://github.com/lesteve/nilearn/blob/glass-brain/nilearn/plotting/glass_brain_scripts/plot_glass_brain.py).
",start issue,[MRG] Glass brain visualisation
2,issue_closed,245,nilearn,nilearn,lesteve,2014-12-04 15:21:44,,closed issue,[MRG] Glass brain visualisation
3,pull_request_title,245,nilearn,nilearn,lesteve,2014-09-26 09:57:48,"This pull request is WIP for now and was only opened to get some feedback, both visualisation-wise and code-wise.

Here is how it looks like atm:
![glass_brain](https://cloud.githubusercontent.com/assets/1680079/4442285/9d705a8c-47dd-11e4-9732-31fc07802367.png)

The code to generate the plots is [there](https://github.com/lesteve/nilearn/blob/glass-brain/nilearn/plotting/glass_brain_scripts/plot_glass_brain.py).
",88f70361a337a72718e3697a83d3a614ef7876be,[MRG] Glass brain visualisation
4,pull_request_merged,245,nilearn,nilearn,lesteve,2014-12-04 15:21:44,[MRG] Glass brain visualisation,9c6fab537cdebd818f0c1f6b559ba2b162520723,Pull request merge from lesteve/nilearn:glass-brain to nilearn/nilearn:master
5,issue_comment,245,nilearn,nilearn,agramfort,2014-09-26 11:05:14,"indeed ! really nice !
",,
6,issue_comment,245,nilearn,nilearn,GaelVaroquaux,2014-10-13 14:06:19,"Is this PR still a WIP, or should it be changed to MRG? In other terms, what is there to be done remaining?

What's the test coverage? Are the plots pretty? Have the docs been updated?
",,
7,issue_comment,245,nilearn,nilearn,lesteve,2014-10-13 14:30:49,"I just added tests and a fix for the buglet involving the colorbar plotting I mentioned above.

I think what remains to be done is:
- [x] add plot_glass_brain to the documentation 
- [x] import plot_glass_brain it in `nilearn/plotting/__init__.py`
- [x] add some example plots in plot_demo_plotting.py

The test coverage for nilearn.plotting.glass_brain is 96% according to nosetests.

IMHO, I reckon the plots are reasonably pretty (they haven't changed from the pictures posted above), maybe the last minor thing would be to decide if we want to set a default alpha for the brain schematics. To be honest, I am wondering whether it isn't best to tackle any further aesthetic enhancements involving tweaking the svg in a new PR.
",,
8,issue_comment,245,nilearn,nilearn,GaelVaroquaux,2014-10-13 14:34:31,"> The test coverage for nilearn.plotting.glass_brain is 96% according to
> nosetests.

That's good enough!

> IMHO, I reckon the plots are reasonably pretty (they haven't changed from the
> pictures posted above),

I am worried that the default setting look pretty bad. Could you replace
the colormap by an alpha one, to see how things look like. We would need
things to be good by default, and right now it is not the case. My
suggestion would be to use a transparent colorbar starting fully
transparant at the threshold, and becoming fully non transparent at the
max value.

> I am wondering whether it isn't best to tackle any further aesthetic
> enhancements involving tweaking the svg in a new PR.

Agreed!
",,
9,issue_comment,245,nilearn,nilearn,lesteve,2014-10-14 06:38:53,"> My suggestion would be to use a transparent colorbar starting fully transparant at the threshold, and becoming fully non transparent at the max value.

I'll take a look at that

Also a tiny detail I forgot about is the 
- [x] choice of the default threshold for plot_glass_brain

For now it is set to the same value as for plot_stat_map, namely 1e-6. Does that sound reasonable?
",,
10,issue_comment,245,nilearn,nilearn,lesteve,2014-10-14 14:38:46,"Here is an example with transparent colormap, i.e. `cmap=nilearn.plotting.cm.red_transparent`:
![glass_brain_transparent_cmap](https://cloud.githubusercontent.com/assets/1680079/4630508/d4a9c4c6-53ad-11e4-842d-949a739e1013.png)

And to compare it with, an example using a non-transparent, i.e. `cmap=plt.cm.Reds`:
![glass_brain_red_cmap](https://cloud.githubusercontent.com/assets/1680079/4630545/2df07764-53ae-11e4-94f0-199933a814f0.png)

By the way I reckon the colorbar range setting is wrong in the projection case, probably because it is set using the 3d data, rather than the projected data.
",,
11,issue_comment,245,nilearn,nilearn,GaelVaroquaux,2014-10-14 14:46:18,"> By the way I reckon the colorbar range setting is wrong in the
> projection case, probably because it is set using the 3d data, rather
> than the projected data.

Yes, and that's quite clearly a problem. I am afraid that the colormap
setting might also be wrong, which would explain the saturation effect
that I have the impression that I am seeing in the figures above.
",,
12,issue_comment,245,nilearn,nilearn,lesteve,2014-10-14 17:14:46,"> I am afraid that the colormap setting might also be wrong

From a quick look at the [code](https://github.com/nilearn/nilearn/blob/master/nilearn/plotting/cm.py#L94), the alpha goes from 0.5 to 1. They may be a reason for that though.
",,
13,issue_comment,245,nilearn,nilearn,GaelVaroquaux,2014-10-15 05:07:37,"> From a quick look at the code, the alpha goes from 0.5 to 1. They may be a
> reason for that though.

It doesn't suit our purposes. You should probably add an extra argument
to the colormap-generating function to control the lower value for alpha,
and set it to 0 in the case of the glass-brain.
",,
14,issue_comment,245,nilearn,nilearn,banilo,2014-10-29 15:34:43,"Just as a general note/idea, we have already discussed with Loïc: it would be nice if the glass brain plot supports plotting simple label atlases (in line with existing NiftiLabelsMasker-like API) and that the plots are compatible with corresponding discrete colormaps. Though, I have no good ideas how the potential perspective issues (overlaps between different of homotop regions) might be handled elegantly.
",,
15,issue_comment,245,nilearn,nilearn,bthirion,2014-10-30 22:01:10,"Note that glass brain is often used for Maximum Intensity projection (at least in the SPM interface), which of course does not work well in case of label images. Actually it works reasonably well if you have a single-label image, but the visualization becomes cluttered very quickly with multiple labels. My opinion is thus:
- Not in this PR
- Could you come with an example ?
",,
16,issue_comment,245,nilearn,nilearn,banilo,2014-10-30 22:53:40,"Some loose thoughts would be:
- parcellation results are turning into a generally accepted neuroimaging modality; e.g., the NeuroVault paper claims explicit support for these
- parcellation is often performed by clustering, which is a type of learning from data, which would relate it to Nilearn
- explicit example here (sorry for the self-reference):

![image](https://cloud.githubusercontent.com/assets/3907396/4853592/77c275c8-6087-11e4-80f7-55656c6c4615.png)
",,
17,issue_comment,245,nilearn,nilearn,GaelVaroquaux,2014-11-05 10:04:48,"I agree with @banilo that we should open the door to supporting visualization of labels. I am not sure how to do it. Maybe by introducing a new projection strategy that takes the value last non-zero coefficient along the projection axis.
",,
18,issue_comment,245,nilearn,nilearn,GaelVaroquaux,2014-11-05 10:05:16,"@lesteve : could you paste here the current view of the generate plot, as I see that a lot has changed recently.
",,
19,issue_comment,245,nilearn,nilearn,lesteve,2014-11-05 10:31:35,"I have some wip stuff in my local branch atm. Let me tidy that up before posting an updated picture.
",,
20,issue_comment,245,nilearn,nilearn,GaelVaroquaux,2014-11-05 10:32:10,"> I have some wip stuff in my local branch atm. Let me tidy that up before
> posting an updated picture.

Sure. Thanks!
",,
21,issue_comment,245,nilearn,nilearn,lesteve,2014-11-13 10:51:53,"Updated plots with red transparent color maps using the full alpha range:

![glass_brain](https://cloud.githubusercontent.com/assets/1680079/5027080/6156a38c-6b2b-11e4-9a34-4d4f4f265d71.png)
",,
22,issue_comment,245,nilearn,nilearn,GaelVaroquaux,2014-11-13 11:59:51,"Looks good! We are making progress.

The black images look really nice. I'd say that they are almost there. On the white background images, the colormap is fading to a grayish color. I think that it would be much better if it could fade to white. I suspect that the issue is somewhat subtle, maybe related to the way the colormap traverses the space of colors.
",,
23,issue_comment,245,nilearn,nilearn,lesteve,2014-11-13 12:12:52,"I agree on the aesthetic judgement but I am not too sure about the technical problem yet ...
",,
24,issue_comment,245,nilearn,nilearn,banilo,2014-11-13 12:28:34,"Looks great! Yet,

a) there seems to be activation outside of the broad on the 2 lower panels.

b) I already mentioned this, but it would be nice to include the main neuroanatomical realities into the template: especially the
- Gyrus temporalis superior et inferior
- perhas make the Sulcus centralis bold because it separates Lobus frontalis from Lobus parietalis, and is therefore an actually important  landmark, rather than the lines that are currently in bold
  Other than this, it looks greaty from a neuroanatomical standpoint in my humble opinion
",,
25,issue_comment,245,nilearn,nilearn,lesteve,2014-11-13 12:40:15,"> a) there seems to be activation outside of the broad on the 2 lower panels.

There is already a discussion about this one above.

> b) I already mentioned this, but it would be nice to include the main neuroanatomical realities into the template:

It is definitely in the back of my mind. My take on it is to defer this kind of enhancements to further PRs.
",,
26,issue_comment,245,nilearn,nilearn,lesteve,2014-11-18 08:47:56,"I looked at the grayness issue a bit more and I can reproduce it with a simple snippet. Not an alpha colormap expert but this does look a bit strange to me...

``` python
import numpy as np

import matplotlib.pyplot as plt
from matplotlib.colors import LinearSegmentedColormap

import matplotlib

matplotlib.rcParams['figure.facecolor'] = 'white'


cm_dict = {'red':  ((0.0, 1.0, 1.0),
                    (1.0, 1.0, 1.0)),
           'green': ((0.0, 0.0, 0.0),
                     (1.0, 0.0, 0.0)),
           'blue':  ((0.0, 0.0, 0.0),
                     (1.0, 0.0, 0.0)),
           'alpha': ((0.0, 0.0, 0.0),
                     (1.0, 1.0, 1.0))
          }

my_cm = LinearSegmentedColormap('my_cm', cm_dict)

vals = np.tile(np.linspace(-1, 1, 30), (20, 1))

fig = plt.figure()
ax = plt.imshow(vals, cmap=my_cm)
plt.colorbar()
plt.show()
```

![alpha_gradient](https://cloud.githubusercontent.com/assets/1680079/5085765/5a1520b0-6f15-11e4-9f87-bd6306368ec2.png)
",,
27,issue_comment,245,nilearn,nilearn,GaelVaroquaux,2014-11-18 09:27:27,"I am confused. I can reproduce the pb. I suggest that you ask on the
matplotlib mailing list.
",,
28,issue_comment,245,nilearn,nilearn,lesteve,2014-11-18 09:43:25,"> I suggest that you ask on the matplotlib mailing list.

Yep I'll do that. FWIW I also noticed that this matplotlib 1.2.1 seems exempt from this issue:

![alpha_gradient_1 2](https://cloud.githubusercontent.com/assets/1680079/5085781/7f1b5a3c-6f15-11e4-9db8-7c1afde0da4d.png)
",,
29,issue_comment,245,nilearn,nilearn,GaelVaroquaux,2014-11-18 09:45:42,"> Yep I'll do that. FWIW I also noticed that this matplotlib 1.2.1 seems exempt
> from this issue:

Shit, we'll probably get this answer.
",,
30,issue_comment,245,nilearn,nilearn,lesteve,2014-11-18 09:50:17,"> FWIW I also noticed that this matplotlib 1.2.1 seems exempt from this issue:

TBH maybe it's just that I have been staring at this way too long and that I am now unable to reliably distinguish gray from transparent red any more...
",,
31,issue_comment,245,nilearn,nilearn,GaelVaroquaux,2014-11-18 10:08:45,"> TBH maybe it's just that I have been staring at this way too long and that I am now unable to reliably distinguish gray from transparent red any more...

No, no, I confirm.
",,
32,issue_comment,245,nilearn,nilearn,lesteve,2014-11-24 08:46:08,"OK an attempt to use a non transparent colormap (plt.cm.Reds, better suggestion welcome). Default threshold is still 1e-6 (same as plot_stat_map):

![glass_brain_plt_reds](https://cloud.githubusercontent.com/assets/1680079/5162329/4fc4a1be-73be-11e4-96a5-4395a33e63f1.png)
",,
33,issue_comment,245,nilearn,nilearn,GaelVaroquaux,2014-11-24 10:10:05,"This looks better, but it's still not there.

The first thing that worries me is that the colormap doesn't seem to go all the way to white. Do you understand why?

The second thing is that on the black bg, we should probably have a colormap going to black (which tells us that the argument that we take should maybe be a color, not a colormap, and we would generate the corresponding colormap.

The last thing is that the threshold is wrong. But maybe we should not try to guess a threshold, and let the user specify one, or give us thresholded maps. By the way, are you applying the threshold on the projected maps? I think that we should apply it on the raw maps, and then project, as this is what a user would want to do when visualizing a statistical map: do not display any voxel that has too small a statistic.
",,
34,issue_comment,245,nilearn,nilearn,lesteve,2014-11-24 10:45:06,"> The first thing that worries me is that the colormap doesn't seem to go all the way to white. Do you understand why?

I think it does, there are a few very negative values in the eyes that survive the max along an axis.

> The second thing is that on the black bg, we should probably have a colormap going to black (which tells us that the argument that we take should maybe be a color, not a colormap, and we would generate the corresponding colormap.

We could have the cmap default to None and then do the logic in plot_glass_brain to switch between the white and black background. The white background would have a colormap going from white to red and the black one a colormap going from black to red.

> I think that we should apply it on the raw maps, and then project, as this is what a user would want to do when visualizing a statistical map: do not display any voxel that has too small a statistic.

I believe that's what we are doing at the moment. That would explain why you see some white pixels (e.g. top left or bottom left) with the threshold=10 which are not here with the default threshold. The threshold removes small positive values and you are left with the more extreme negative ones. 

One last comment, the data is actually contrast data, I am wondering whether it would be worth calculating p-values like this [example](http://nilearn.github.io/auto_examples/plot_localizer_simple_analysis.html#example-plot-localizer-simple-analysis-py) to have a more realistic use case.
",,
35,issue_comment,245,nilearn,nilearn,GaelVaroquaux,2014-11-24 10:57:37,"> I think it does, there are a few very negative values in the eyes that survive
> the max along an axis.

Ah, OK. Shouldn't we be taking the absolutely value before summing?

> We could have the cmap default to None and then do the logic in
> plot_glass_brain to switch between the white and black background. The white
> background would have a colormap going from white to red and the black one a
> colormap going from black to red.

That's an option. It's simple and would do the trick. Let's go for this.

> One last comment, the data is actually contrast data, I am wondering
> whether it would be worth calculating p-values like this example to
> have a more realistic use case.

These are T maps? If they are T maps, that's a pretty good example of
standard usecase.
",,
36,issue_comment,245,nilearn,nilearn,lesteve,2014-11-24 13:49:36,"> Ah, OK. Shouldn't we be taking the absolutely value before summing?

I went back on forth on this one, that's what I did naively at first but I got convinced by @bthirion to only take the max (something related to the fact that you can easily transformation t-tests into F-test and that the latter only has only positive values). Also as a side comment, note we are not summing but taking the max along an axis.

> These are T maps? If they are T maps, that's a pretty good example of standard usecase.

I think we are using the contrasts via `datasets.get_localizer_contrasts`. I hadn't seen until now that you could get t_maps by setting `get_tmaps=True` in this function. I'll try that.
",,
37,issue_comment,245,nilearn,nilearn,lesteve,2014-11-27 14:33:21,"OK now with localizer t-maps and a cmap that changes depending on the background. My choices of cmap were mostly dictated by finding matplotlib built-in ones which is black for low values. Better suggestions of colorbar more than welcome!

![glass_brain_t_maps](https://cloud.githubusercontent.com/assets/1680079/5218204/4d677a98-764a-11e4-85a0-cfb6ec9bb296.png)
",,
38,issue_comment,245,nilearn,nilearn,lesteve,2014-11-27 14:45:40,"Oops, I unintentionally added the colormap for the last plots I posted. Now fixed:
![glass_brain_t_maps](https://cloud.githubusercontent.com/assets/1680079/5218374/5cb76c22-764c-11e4-99c0-73cbf9c293fb.png)
",,
39,issue_comment,245,nilearn,nilearn,GaelVaroquaux,2014-11-27 14:59:00,"That last things looks really good. I think that the lines should all be
a little bit thinner (like .66 times their current value), but aside from
that, I think that this is a final good iteration on the visual aspects.

I still need to review the code...
",,
40,issue_comment,245,nilearn,nilearn,lesteve,2014-11-28 09:58:41,"Now with thinner lines:

![glass_brain_t_maps_thinner_lines](https://cloud.githubusercontent.com/assets/1680079/5226205/753d1724-76ec-11e4-8ccc-bda9b9a26692.png)
",,
41,issue_comment,245,nilearn,nilearn,GaelVaroquaux,2014-11-28 10:36:04,"I think that this looks awesome! Absolutely awesome. I'll review the code on Tuesday (deadline Monday night). In the mean time, maybe someone like @AlexandreAbraham or @eickenberg can have a look at the code.
",,
42,issue_comment,245,nilearn,nilearn,lesteve,2014-12-02 08:45:25,"Added inferior temporal sulcus to make @banilo happy:
![glass_brain_inferior_temporal_sulcus](https://cloud.githubusercontent.com/assets/1680079/5259883/d098ade0-7a07-11e4-8e22-b40b5859af8d.png)
",,
43,issue_comment,245,nilearn,nilearn,banilo,2014-12-02 08:48:40,":+1:  Perfect, good job!
",,
44,issue_comment,245,nilearn,nilearn,GaelVaroquaux,2014-12-02 21:43:29,"OK, I have finished my review. Only very minor, cosmetic comments. This is almost merged. Hurray!
",,
45,issue_comment,245,nilearn,nilearn,AlexandreAbraham,2014-12-03 16:15:24,"A small visual effect is bugging me. If you look at the last figure posted by @lesteve, on the left column (black background) you can see in the first subplot (the yellow one) that they gray ""internal"" lines are very contrasted while the white ""external"" lines are not visible. On the contrary, when the plot is mainly red (just below) the white lines are visible but not the gray ones. I think that the problem here is that the color of the lines should not depend on the background color, but on the context of the line.

I don't think that matplotlib allows complex overlays of images. And it is technically doable but it would require some dirty code. But it may be good enough for the users to allow a custom value for these colors.
",,
46,issue_comment,245,nilearn,nilearn,GaelVaroquaux,2014-12-03 16:25:42,"> I don't think that matplotlib allows complex overlays of images. And it is
> technically doable but it would require some dirty code. But it may be good
> enough for the users to allow a custom value for these colors.

Let's move on. We have spent enough time on that. We need nilearn to be
moving on as a bigger picture (and niconnect as a result).
",,
47,issue_comment,245,nilearn,nilearn,lesteve,2014-12-04 12:45:31,"I realised one of the main remaining sticking point was in a folded [comment](https://github.com/nilearn/nilearn/pull/245#discussion-diff-21186596), so I am duplicating it here for more visibility. tl; dr. I am going to leave kwargs undocumented and will leave visual improvements for further PRs.

> Please document what the kwargs are (what they are passed for, and where to find what values they can take).

This is a kludge that is only used to be able to get the alpha to percolate from img_plotting.plot_glass_brain to brain_glass.plot_brain_schematics. Eventually they get passed to the matplotlib patches of the brain schematics.

To be honest I am not sure we need alpha. The plots do look better with alpha=0.7 (which has been used for the most recent snapshots) but maybe we can achieve a similar effect by just tweaking the color of the lines in the svg.

**alpha=0.7**
![glass_brain_alpha_07](https://cloud.githubusercontent.com/assets/1680079/5279213/770ce332-7ae2-11e4-9b85-d9c94fb7d80d.png)

**alpha=1**
![glass_brain_alpha_1](https://cloud.githubusercontent.com/assets/1680079/5279241/d802030c-7ae2-11e4-8b05-da056d89f428.png)
",,
48,issue_comment,245,nilearn,nilearn,GaelVaroquaux,2014-12-04 13:40:45,"I saw that, but I prefer it with the alpha. 
",,
49,issue_comment,245,nilearn,nilearn,lesteve,2014-12-04 15:21:38,"OK merging this long standing one ! 
",,
50,issue_comment,245,nilearn,nilearn,GaelVaroquaux,2014-12-04 16:37:45,"Fucking Ay!

Can you rebuild the online docs, please;
",,
51,issue_comment,245,nilearn,nilearn,lesteve,2014-09-27 06:48:09,"The outline comes from an SVG with a little bit of work to extract the coordinates of the nodes from the SVG and draw the Bézier curves in matplotlib.

The SVG was created by Gaël by vectorising and simplifying a bitmap picture.
",,
52,issue_comment,245,nilearn,nilearn,lesteve,2014-09-29 20:52:46,"I was wondering about where these data points outside the brain were coming from and I was told it may well be the eyes. Those regions can be seen in the [plotting examples](https://nilearn.github.io/auto_examples/plot_demo_plotting.html) too for example this one:
![picture](https://nilearn.github.io/_images/plot_demo_plotting_7.png).

If there is a way to remove these regions automatically, it's probably worth doing. Something interesting to note, is that the values are pretty high (in this case very negative) and setting a high threshold won't make them go away.

Definitely a good idea to get some feedback from neuroscientists at one point in the future.
",,
53,issue_comment,245,nilearn,nilearn,lesteve,2014-09-29 20:59:33,"That's a valid point indeed but then maybe it's still worth removing these regions in an ad-hoc way in our examples.
",,
54,issue_comment,245,nilearn,nilearn,lesteve,2014-10-07 13:36:07,"Same plots with an alpha of 0.7:
![glass_brain](https://cloud.githubusercontent.com/assets/1680079/4542937/d018707e-4e26-11e4-955e-b8486952ee95.png)
",,
55,issue_comment,245,nilearn,nilearn,lesteve,2014-10-10 08:10:52,"@GaelVaroquaux I think I tackled the comments you had the other day
",,
56,issue_comment,245,nilearn,nilearn,lesteve,2014-10-10 08:34:40,"> We should rename 'slicers.py'. But we need a better name. Any suggestions?

I was thinking about displays.py
",,
57,issue_comment,245,nilearn,nilearn,lesteve,2014-10-10 09:05:40,"> What's your feeling on the code? I personnaly like a lot what I am seeing. I have the impression that this is a good design for what we need.

I would agree using only functions glass_brain.py is simpler. Having the glass brain plotting as part of the Axes makes sense but you need to jump through a few more levels (the `**kwargs` I added to a few methods [recently](https://github.com/lesteve/nilearn/commit/9909e211752197a844a18dd26043eb6792b8a5e0)). Other than that, there are still coord (axes level) and cut_coords (display level) in a few places in slicers.py which is a bit awkward given that it doesn't really apply to the glass brain use case.

> Next step is to add smoke tests, so that the test coverage is as high as possible (we aim for 90% or more).

Yep I started doing that but I bumped into errors I don't really understand yet.
",,
58,pull_request_commit_comment,245,nilearn,nilearn,bthirion,2014-09-29 21:19:38,"What do these values come from ? It's a bit disturbing for users who don't understand them.
",88f70361a337a72718e3697a83d3a614ef7876be,"(None, '', u'nilearn/plotting/glass_brain_scripts/plot_glass_brain.py')"
59,pull_request_commit_comment,245,nilearn,nilearn,bthirion,2014-09-29 21:24:01,"This seems of a much wider interest than glass brain plotting. This should go to some utils subdir, and possibly to another library in the future.
",88f70361a337a72718e3697a83d3a614ef7876be,"(None, '', u'nilearn/plotting/glass_brain_scripts/svg_to_json_converter.py')"
60,pull_request_commit_comment,245,nilearn,nilearn,GaelVaroquaux,2014-09-29 21:28:07,"> This seems of a much wider interest than glass brain plotting. This should go
> to some utils subdir, and possibly to another library in the future.

Agreed for the utils, but I don't want to invest time in something like a
library that is of no use to us. People are welcome to take the code and
make it a library.
",88f70361a337a72718e3697a83d3a614ef7876be,"(None, '', u'nilearn/plotting/glass_brain_scripts/svg_to_json_converter.py')"
61,pull_request_commit_comment,245,nilearn,nilearn,lesteve,2014-09-30 06:48:31,"I tweaked these values by hand to have a nicer color range. To be honest, the only use of this plot is to align the brain schematics with the anatomy and eventually hand-tweak the SVG to make them fit a bit better. I don't think it will stay as an example plot.
",88f70361a337a72718e3697a83d3a614ef7876be,"(None, '', u'nilearn/plotting/glass_brain_scripts/plot_glass_brain.py')"
62,pull_request_commit_comment,245,nilearn,nilearn,bthirion,2014-09-30 16:43:09,"Sorry, I don't understand the status of this in the codebase. Is it supposed to be removed ?
",88f70361a337a72718e3697a83d3a614ef7876be,"(None, '', u'nilearn/plotting/glass_brain_scripts/plot_align_svg.py')"
63,pull_request_commit_comment,245,nilearn,nilearn,GaelVaroquaux,2014-09-30 16:44:34,"> Sorry, I don't understand the status of this in the codebase. Is it
> supposed to be removed ?

Probably moved into a 'utils' directory (not a module: this would not be
code that we would deploy on the user's computer).
",88f70361a337a72718e3697a83d3a614ef7876be,"(None, '', u'nilearn/plotting/glass_brain_scripts/plot_align_svg.py')"
64,pull_request_commit_comment,245,nilearn,nilearn,bthirion,2014-09-30 16:54:37,"pending TODO
",88f70361a337a72718e3697a83d3a614ef7876be,"(None, '', u'nilearn/plotting/img_plotting.py')"
65,pull_request_commit_comment,245,nilearn,nilearn,lesteve,2014-09-30 16:56:35,"Yeah, this script main purpose is to check the good alignment of the anat and the svg. It could be useful to keep it in case we need to tweak the svg further at one point in the future. It does makes sense to move it out of the way.
",88f70361a337a72718e3697a83d3a614ef7876be,"(None, '', u'nilearn/plotting/glass_brain_scripts/plot_align_svg.py')"
66,pull_request_commit_comment,245,nilearn,nilearn,lesteve,2014-09-30 17:04:45,"There are definitely a few of those TODOs sprinkled in the code. I'll add a note to myself to make sure I tackled all of them before merging.
",88f70361a337a72718e3697a83d3a614ef7876be,"(None, '', u'nilearn/plotting/img_plotting.py')"
67,pull_request_commit_comment,245,nilearn,nilearn,lesteve,2014-10-07 09:10:20,"I am still inheriting from the cut-based slicer and disabling a few methods which is rather hacky. There must be a better way to structure this code, suggestions welcome!
",88f70361a337a72718e3697a83d3a614ef7876be,"(580, '', u'nilearn/plotting/slicers.py')"
68,pull_request_commit_comment,245,nilearn,nilearn,GaelVaroquaux,2014-10-07 09:20:39,"> I am still inheriting from the cut-based slicer and disabling a few methods
> which is rather hacky. There must be a better way to structure this code,
> suggestions welcome!

I would say: add a base class, and inherit from it in the OrthoSlicer,
where you add methods, and in your own projector, where you add different
methods.
",88f70361a337a72718e3697a83d3a614ef7876be,"(580, '', u'nilearn/plotting/slicers.py')"
69,pull_request_commit_comment,245,nilearn,nilearn,GaelVaroquaux,2014-10-07 12:16:23,"Is there a reason to have a staticmethod, rather than a function, here? (ie something not linked to the class).
",88f70361a337a72718e3697a83d3a614ef7876be,"(None, '', u'nilearn/plotting/glass_brain/brain_schematics.py')"
70,pull_request_commit_comment,245,nilearn,nilearn,GaelVaroquaux,2014-10-07 12:18:50,"Same remark: why a staticmethod?
",88f70361a337a72718e3697a83d3a614ef7876be,"(None, '', u'nilearn/plotting/glass_brain/brain_schematics.py')"
71,pull_request_commit_comment,245,nilearn,nilearn,lesteve,2014-10-07 13:31:53,"The main reason is that this is a helper function which is only used within the class. I could change it to a module-level function but you would then lose the hint.
",88f70361a337a72718e3697a83d3a614ef7876be,"(None, '', u'nilearn/plotting/glass_brain/brain_schematics.py')"
72,pull_request_commit_comment,245,nilearn,nilearn,lesteve,2014-10-07 13:32:41,"Mostly the same reason as above
",88f70361a337a72718e3697a83d3a614ef7876be,"(None, '', u'nilearn/plotting/glass_brain/brain_schematics.py')"
73,pull_request_commit_comment,245,nilearn,nilearn,GaelVaroquaux,2014-10-07 13:50:23,"> The main reason is that this is a helper function which is only used
> within the class. I could change it to a module-level function but you
> would then lose the hint.

But it's not a method. An object is more than a namespace of methods. It
has an internal state and methods act on its internal state. That's why
reading code that is object-oriented is harder to read: you never know
what has changed and what has not.

Thus, I would really push for using functions rather than staticmethods.
",88f70361a337a72718e3697a83d3a614ef7876be,"(None, '', u'nilearn/plotting/glass_brain/brain_schematics.py')"
74,pull_request_commit_comment,245,nilearn,nilearn,lesteve,2014-10-07 14:18:46,"Yeah I think we quickly chatted about that already before. I just see this low-level helper functions as not important enough to warrant polluting the module namespace. During a first read of the code, I feel it is easier to ignore these unnecessary details if they are nested within the class they are related to.
",88f70361a337a72718e3697a83d3a614ef7876be,"(None, '', u'nilearn/plotting/glass_brain/brain_schematics.py')"
75,pull_request_commit_comment,245,nilearn,nilearn,GaelVaroquaux,2014-10-10 08:29:14,"Unused import

You should use pyflakes in your editor, it is great to detect these things. See http://scipy-lectures.github.io/advanced/debugging/index.html#a-type-as-go-spell-checker-like-integration
",88f70361a337a72718e3697a83d3a614ef7876be,"(None, '', u'nilearn/plotting/slicers.py')"
76,pull_request_commit_comment,245,nilearn,nilearn,GaelVaroquaux,2014-10-10 08:31:26,"Good idea to rename the method!

I think that I would prefer it to be named something like 'draw_volume'. Also, we should probably make it private: it's for the internals of the object, not for end-users to call.
",88f70361a337a72718e3697a83d3a614ef7876be,"(None, '', u'nilearn/plotting/slicers.py')"
77,pull_request_commit_comment,245,nilearn,nilearn,GaelVaroquaux,2014-10-10 08:32:40,"Please disregard the comment on making it private: I hadn't seen that it was in our Axes object. End users are not meant to use this object anyhow, so let's not bother.
",88f70361a337a72718e3697a83d3a614ef7876be,"(None, '', u'nilearn/plotting/slicers.py')"
78,pull_request_commit_comment,245,nilearn,nilearn,lesteve,2014-10-10 08:33:49,"Actually something like this configured already. I just didn't spot this one.
",88f70361a337a72718e3697a83d3a614ef7876be,"(None, '', u'nilearn/plotting/slicers.py')"
79,pull_request_commit_comment,245,nilearn,nilearn,lesteve,2014-10-10 08:37:30,"The thing is that `draw` actually draws some 2d data. I could rename it `draw_2d` to make it more explicit.

As a side comment I also plan to go over the file and remove the `cut*` occurrences where easily doable.
",88f70361a337a72718e3697a83d3a614ef7876be,"(None, '', u'nilearn/plotting/slicers.py')"
80,pull_request_commit_comment,245,nilearn,nilearn,GaelVaroquaux,2014-10-10 08:41:58,"> The thing is that draw actually draws some 2d data. I could rename it draw_2d
> to make it more explicit.

Yes, that's a good suggestion.

> As a side comment I also plan to go over the file and remove the cut*
> occurrences where easily doable.

Good idea. Thanks!
",88f70361a337a72718e3697a83d3a614ef7876be,"(None, '', u'nilearn/plotting/slicers.py')"
81,pull_request_commit_comment,245,nilearn,nilearn,GaelVaroquaux,2014-12-02 19:52:06,"Thanks for renaming slicer to display in the docs!
",88f70361a337a72718e3697a83d3a614ef7876be,"(119, '', u'doc/building_blocks/plotting.rst')"
82,pull_request_commit_comment,245,nilearn,nilearn,GaelVaroquaux,2014-12-02 20:00:20,"Please document what the kwargs are (what they are passed for, and where to find what values they can take).
",88f70361a337a72718e3697a83d3a614ef7876be,"(None, '', u'nilearn/plotting/displays.py')"
83,pull_request_commit_comment,245,nilearn,nilearn,GaelVaroquaux,2014-12-02 20:48:43,"I think that I'd prefer a name like: transform_to_2d, or project_to_2d?
",88f70361a337a72718e3697a83d3a614ef7876be,"(None, '', u'nilearn/plotting/displays.py')"
84,pull_request_commit_comment,245,nilearn,nilearn,GaelVaroquaux,2014-12-02 20:52:48,"When can d be None? What warrants that not all ds are None?
",88f70361a337a72718e3697a83d3a614ef7876be,"(None, '', u'nilearn/plotting/displays.py')"
85,pull_request_commit_comment,245,nilearn,nilearn,GaelVaroquaux,2014-12-02 20:55:21,"Is there really a reason to use an izip instead of a zip? It seems to me that the list will always be small, so expanding it isn't a problem.

In addition, I believe that in Python3, itervalues is deprecated, and you should use 'values', that returns some clever view that is not an expanded list.
",88f70361a337a72718e3697a83d3a614ef7876be,"(None, '', u'nilearn/plotting/displays.py')"
86,pull_request_commit_comment,245,nilearn,nilearn,GaelVaroquaux,2014-12-02 21:09:58,"I think that I would prefer this attribute to be named '_axes_class' (ie to be private).
",88f70361a337a72718e3697a83d3a614ef7876be,"(None, '', u'nilearn/plotting/displays.py')"
87,pull_request_commit_comment,245,nilearn,nilearn,GaelVaroquaux,2014-12-02 21:10:53,"A small module-level docstring would be great here.
",88f70361a337a72718e3697a83d3a614ef7876be,"(5, '', u'nilearn/plotting/glass_brain.py')"
88,pull_request_commit_comment,245,nilearn,nilearn,GaelVaroquaux,2014-12-02 21:14:08,"A comment in this file saying what it does would be a good thing.
",88f70361a337a72718e3697a83d3a614ef7876be,"(1, '', u'nilearn/plotting/glass_brain_files/generate_json.sh')"
89,pull_request_commit_comment,245,nilearn,nilearn,GaelVaroquaux,2014-12-02 21:15:52,"I'd like a module-level docstring here too :). I am trying to make it as easy as possible for someone to follow up on this work.
",88f70361a337a72718e3697a83d3a614ef7876be,"(6, '', u'nilearn/plotting/glass_brain_files/plot_align_svg.py')"
90,pull_request_commit_comment,245,nilearn,nilearn,GaelVaroquaux,2014-12-02 21:23:06,"https://twitter.com/GaelVaroquaux/status/539892002092228608 :)
",88f70361a337a72718e3697a83d3a614ef7876be,"(6, '', u'nilearn/plotting/glass_brain_files/plot_align_svg.py')"
91,pull_request_commit_comment,245,nilearn,nilearn,GaelVaroquaux,2014-12-02 21:27:25,"What's the point of the partial? I don't think that you are using other values elsewhere for these arguments. Maybe you should just define the function as:

def add_brain_schematic(display, options=dict(alpha=.5, ...)):
",88f70361a337a72718e3697a83d3a614ef7876be,"(None, '', u'nilearn/plotting/glass_brain_files/plot_align_svg.py')"
92,pull_request_commit_comment,245,nilearn,nilearn,GaelVaroquaux,2014-12-02 21:31:37,"Module-level docstring :)  (remember, the serial killer)
",88f70361a337a72718e3697a83d3a614ef7876be,"(None, '', u'nilearn/plotting/glass_brain_files/plot_glass_brain.py')"
93,pull_request_commit_comment,245,nilearn,nilearn,GaelVaroquaux,2014-12-02 21:32:17,"Actually, is there a specific reason that this file is here, and not as an example. It would do a great example, IMHO.
",88f70361a337a72718e3697a83d3a614ef7876be,"(None, '', u'nilearn/plotting/glass_brain_files/plot_glass_brain.py')"
94,pull_request_commit_comment,245,nilearn,nilearn,GaelVaroquaux,2014-12-02 21:34:05,"Ouch, code smell: we should be able to deal with nans in the data (because, as you are witnessing, it is often the case in neuroimaging)

I'd be very happy if we could write this example without using nibabel, as an exercise to check that our API is good.
",88f70361a337a72718e3697a83d3a614ef7876be,"(None, '', u'nilearn/plotting/glass_brain_files/plot_glass_brain.py')"
95,pull_request_commit_comment,245,nilearn,nilearn,GaelVaroquaux,2014-12-02 21:34:58,"Module level docstring
- why the uft-8? I prefer files not to have utf-8 (because it can be hard to type and hard to read).
",88f70361a337a72718e3697a83d3a614ef7876be,"(None, '', u'nilearn/plotting/glass_brain_files/svg_to_json_converter.py')"
96,pull_request_commit_comment,245,nilearn,nilearn,GaelVaroquaux,2014-12-02 21:36:02,"It doesn't really make much sens to plot an anat in a glass brain. I think that you should remove the few lines above.
",88f70361a337a72718e3697a83d3a614ef7876be,"(None, '', u'nilearn/plotting/glass_brain_files/plot_glass_brain.py')"
97,pull_request_commit_comment,245,nilearn,nilearn,GaelVaroquaux,2014-12-02 21:38:39,"You should probably document that new argument.
",88f70361a337a72718e3697a83d3a614ef7876be,"(None, '', u'nilearn/plotting/img_plotting.py')"
98,pull_request_commit_comment,245,nilearn,nilearn,GaelVaroquaux,2014-12-02 21:40:02,"Why the future tense? ""are added"", I would say.
",88f70361a337a72718e3697a83d3a614ef7876be,"(None, '', u'nilearn/plotting/img_plotting.py')"
99,pull_request_commit_comment,245,nilearn,nilearn,GaelVaroquaux,2014-12-02 21:41:25,"Nice design: this function is very tight.
",88f70361a337a72718e3697a83d3a614ef7876be,"(None, '', u'nilearn/plotting/img_plotting.py')"
100,pull_request_commit_comment,245,nilearn,nilearn,lesteve,2014-12-03 08:00:46,"Nice one, I knew it with the ""and knew where you live"" addition but maybe that didn't fit in 140 characters :smile:
",88f70361a337a72718e3697a83d3a614ef7876be,"(6, '', u'nilearn/plotting/glass_brain_files/plot_align_svg.py')"
101,pull_request_commit_comment,245,nilearn,nilearn,GaelVaroquaux,2014-12-03 08:05:19,"Indeed. It's hard to do philosophy with 140 chars. 
",88f70361a337a72718e3697a83d3a614ef7876be,"(6, '', u'nilearn/plotting/glass_brain_files/plot_align_svg.py')"
102,pull_request_commit_comment,245,nilearn,nilearn,lesteve,2014-12-03 08:08:55,"plot_glass_brain.py was mostly used to produce the plots I was showing in this PR. I think it can go. There is an example of glass brain in plot_demo_plotting.py already.
",88f70361a337a72718e3697a83d3a614ef7876be,"(None, '', u'nilearn/plotting/glass_brain_files/plot_glass_brain.py')"
103,pull_request_commit_comment,245,nilearn,nilearn,lesteve,2014-12-03 08:10:19,"Agreed, the anat was only plotted for alignment purposes. This can probably go to plot_svg_align.py.
",88f70361a337a72718e3697a83d3a614ef7876be,"(None, '', u'nilearn/plotting/glass_brain_files/plot_glass_brain.py')"
104,pull_request_commit_comment,245,nilearn,nilearn,GaelVaroquaux,2014-12-03 08:10:19,"Ok
",88f70361a337a72718e3697a83d3a614ef7876be,"(None, '', u'nilearn/plotting/glass_brain_files/plot_glass_brain.py')"
105,pull_request_commit_comment,245,nilearn,nilearn,lesteve,2014-12-03 08:45:30,"This is an internal function without detailed documentation for other arguments. It says refer to the docstring of plot_img but that doesn't apply to quite a few arguments like bg_vmin, bg_vmax, interpolation, ...

For completeness create_display_fun is the function that takes a display_mode argument and return a display class. Suggestions for better naming welcome!
",88f70361a337a72718e3697a83d3a614ef7876be,"(None, '', u'nilearn/plotting/img_plotting.py')"
106,pull_request_commit_comment,245,nilearn,nilearn,GaelVaroquaux,2014-12-03 08:47:47,"I think that mayber we should document only the parameters not explained
in plot_img.

> For completeness create_display_fun is the function that takes a display_mode
> argument and return a display class. Suggestions for better naming welcome!

This is usually called a 'factory'. At least in C++/java world :). So I
would call it 'display_factory'.
",88f70361a337a72718e3697a83d3a614ef7876be,"(None, '', u'nilearn/plotting/img_plotting.py')"
107,pull_request_commit_comment,245,nilearn,nilearn,lesteve,2014-12-03 09:55:46,"There is a README.md in the glass_brain_files folder but maybe that's not good enough
",88f70361a337a72718e3697a83d3a614ef7876be,"(1, '', u'nilearn/plotting/glass_brain_files/generate_json.sh')"
108,pull_request_commit_comment,245,nilearn,nilearn,lesteve,2014-12-03 10:02:18," The logic was there before me: an IndexError is caught and ignored when plotting slices. In this case data_2d will be None.

This is slicer-specific so this can probably be improved.
",88f70361a337a72718e3697a83d3a614ef7876be,"(None, '', u'nilearn/plotting/displays.py')"
109,pull_request_commit_comment,245,nilearn,nilearn,lesteve,2014-12-03 10:52:53,"This is a kludge that is only used to be able to get the alpha to percolate from img_plotting.plot_glass_brain to brain_glass.plot_brain_schematics. Eventually they get passed to the matplotlib patches of the brain schematics.

To be honest I am not sure we need alpha. The plots do look better with alpha=0.7 (which has been used for the most recent snapshots) but maybe we can achieve a similar effect by just tweaking the color of the lines in the svg.

**alpha=0.7**
![glass_brain_alpha_07](https://cloud.githubusercontent.com/assets/1680079/5279213/770ce332-7ae2-11e4-9b85-d9c94fb7d80d.png)

**alpha=1**
![glass_brain_alpha_1](https://cloud.githubusercontent.com/assets/1680079/5279241/d802030c-7ae2-11e4-8b05-da056d89f428.png)
",88f70361a337a72718e3697a83d3a614ef7876be,"(None, '', u'nilearn/plotting/displays.py')"
110,pull_request_commit_comment,245,nilearn,nilearn,lesteve,2014-12-03 13:52:24,"Done.
",88f70361a337a72718e3697a83d3a614ef7876be,"(5, '', u'nilearn/plotting/glass_brain.py')"
111,pull_request_commit_comment,245,nilearn,nilearn,lesteve,2014-12-03 13:52:34,"> A comment in this file saying what it does would be a good thing.

Done
",88f70361a337a72718e3697a83d3a614ef7876be,"(1, '', u'nilearn/plotting/glass_brain_files/generate_json.sh')"
112,pull_request_commit_comment,245,nilearn,nilearn,lesteve,2014-12-03 13:53:24,"> I'd like a module-level docstring here too :)

Done
",88f70361a337a72718e3697a83d3a614ef7876be,"(6, '', u'nilearn/plotting/glass_brain_files/plot_align_svg.py')"
113,pull_request_commit_comment,245,nilearn,nilearn,GaelVaroquaux,2014-12-03 13:54:33,"Merge when you feel ready!
",88f70361a337a72718e3697a83d3a614ef7876be,"(6, '', u'nilearn/plotting/glass_brain_files/plot_align_svg.py')"
114,pull_request_commit_comment,245,nilearn,nilearn,AlexandreAbraham,2014-12-03 15:38:34,"Not Python 3.
",88f70361a337a72718e3697a83d3a614ef7876be,"(443, '', u'nilearn/plotting/displays.py')"
115,pull_request_commit_comment,245,nilearn,nilearn,AlexandreAbraham,2014-12-03 15:40:10,"Deprecated.
",88f70361a337a72718e3697a83d3a614ef7876be,"(502, '', u'nilearn/plotting/displays.py')"
116,pull_request_commit_comment,245,nilearn,nilearn,AlexandreAbraham,2014-12-03 15:40:20,"Deprecated too.
",88f70361a337a72718e3697a83d3a614ef7876be,"(503, '', u'nilearn/plotting/displays.py')"
117,pull_request_commit_comment,245,nilearn,nilearn,AlexandreAbraham,2014-12-03 15:41:50,"Not Python 3
",88f70361a337a72718e3697a83d3a614ef7876be,"(542, '', u'nilearn/plotting/displays.py')"
118,pull_request_commit_comment,245,nilearn,nilearn,AlexandreAbraham,2014-12-03 16:17:53,"Why do you do that?
",88f70361a337a72718e3697a83d3a614ef7876be,"(13, '', u'nilearn/plotting/glass_brain_files/plot_align_svg.py')"
119,pull_request_commit_comment,245,nilearn,nilearn,lesteve,2014-12-03 17:29:26,"Probably the remains of using %run inside ipython to run the script repeatedly between incremental tweakings of the SVG alignment parameters. I can remove it. 
",88f70361a337a72718e3697a83d3a614ef7876be,"(13, '', u'nilearn/plotting/glass_brain_files/plot_align_svg.py')"
120,pull_request_commit_comment,245,nilearn,nilearn,lesteve,2014-12-03 17:37:56,"@eickenberg  ahah I didn't remember at all since that happened ages ago in this branch but I actually fixed the whish -> wish ...
",88f70361a337a72718e3697a83d3a614ef7876be,"(245, '', u'nilearn/plotting/displays.py')"
121,pull_request_commit,245,nilearn,nilearn,lesteve,2014-09-08 14:12:54,"First commit of glass brain related scripts

* svg_to_json_converter.py: exporter which leverages off https://github.com/cjlano/svg and exports the points of the paths in the svg to json
* brain_plotter.py: read from the exported json and plots on a matplotlib axes
* align_svg.py: script with by-hand alignment of the svg on top of the anatomy image",5856e7ca5078a0803024a0c3d11a57077758d3bb,
122,pull_request_commit,245,nilearn,nilearn,lesteve,2014-09-08 15:33:20,Added a README.md + simple bash script to generate the json files,e17cf3698afbc27590fe3fd135322eb0f02a9a48,
123,pull_request_commit,245,nilearn,nilearn,lesteve,2014-09-08 15:41:02,Removed svg folder,15c72369f14d3f9d1ffe297176e34ecc46a6ec6c,
124,pull_request_commit,245,nilearn,nilearn,lesteve,2014-09-09 15:27:59,Tiny markdown improvement,6c66244863327a4c50aff182025b4735bf822255,
125,pull_request_commit,245,nilearn,nilearn,lesteve,2014-09-26 07:41:24,First stab at implementing high-level function in img_plotting for glass brain visualisation,ef0687cd0391afc50405144313826273f0267057,
126,pull_request_commit,245,nilearn,nilearn,lesteve,2014-09-26 07:55:06,Remove stale comment,2fbcdfe9cee33bcd179bd080a40f74fe5aaf1d80,
127,pull_request_commit,245,nilearn,nilearn,lesteve,2014-09-26 09:57:14,Add demo for glass brain visualisation,724a4c45ebcbd9ba08cb107b4479f3b723251aa0,
128,pull_request_commit,245,nilearn,nilearn,lesteve,2014-09-26 11:34:15,"Rename align_svg.py to get the Travis tests to run

nose is trying to import align_svg.py which is trying to do plots and fail with an error like ""Failure: TclError (no display name and no $DISPLAY environment variable)""",16d0f8010a493a1e56bfca78991e889080582860,
129,pull_request_commit,245,nilearn,nilearn,lesteve,2014-09-26 12:07:11,Additional hack to get the Travis tests to run,90b73222f93740fcea14e489121fc20f5bf1e194,
130,pull_request_commit,245,nilearn,nilearn,lesteve,2014-09-26 12:26:06,"Move glass_brain_scripts inside plotting

Hoping that the backend magic in plotting/__init__.py will help for the Travis tests",e578705a787bac8ee2f69a2a0fca14d244a7e1b5,
131,pull_request_commit,245,nilearn,nilearn,lesteve,2014-09-26 12:27:46,glass_brain_scripts has been moved inside plotting. Also use generic location for json rather than the one on my machine,185404bd8512b32040419e3f9f14a7b0217bfece,
132,pull_request_commit,245,nilearn,nilearn,lesteve,2014-09-26 12:34:59,MAINT: remove unneeded svg_bak folder,f493f2702b9ddd4b5abe4b6699425c50e3a69932,
133,pull_request_commit,245,nilearn,nilearn,lesteve,2014-09-29 13:35:12,Brain schematics inverts its colors with a black background,e5df5b6255873d5414b0fff337738a2a18126633,
134,pull_request_commit,245,nilearn,nilearn,lesteve,2014-09-29 14:30:17,"Add svg bounds into the json document and update brain_plotter accordingly.

Regenerated the json documents.",0dbdfc8e8a9966290069af1a23c91dce3ed9a604,
135,pull_request_commit,245,nilearn,nilearn,lesteve,2014-09-29 14:36:08,Revert addition of object bounds margin and only use it when plotting brain schematics,8b8b22d8c927998ab6c6ce69f15cfb3c1a3e580c,
136,pull_request_commit,245,nilearn,nilearn,lesteve,2014-10-07 07:33:15,"Rename glass_brain_scripts to glass_brain and brain_plotter to brain_schematics.

Also tidied up brain_schematics a little bit",ffaa6609e1d0ea774b35888acfd4f0537ff2befa,
137,pull_request_commit,245,nilearn,nilearn,lesteve,2014-10-07 07:53:50,Move a few files to nilearn/plotting/glass_brain/scripts,29af2c3b49b61b289bbe5fa71acd0fed25ba7d2e,
138,pull_request_commit,245,nilearn,nilearn,lesteve,2014-10-07 08:57:43,"First stab at tidying up slicers.py and img_plotting.py

* Add BaseAxes as a common class to cut-based and projection-based Axes.
* Rename do_cut -> transform_2d and draw_cut -> draw
* Add OrthoProjector to display projections of 3D data. Add derived classes
to chose which directions to display.",b69ef471820f356e7d8579f899c196145c421bc1,
139,pull_request_commit,245,nilearn,nilearn,lesteve,2014-10-07 11:50:02,Add optional alpha argument to plot_glass_brain.,24a5838870940227bf7abb9704857b5467b88515,
140,pull_request_commit,245,nilearn,nilearn,lesteve,2014-10-08 07:16:55,"Reuse _plot_img_with_bg in plot_glass_brain

Also:
* tidied up plot_glass_brain parameters and documentation
* fix whish -> wish typo",1c25b857a3dce40df9a6bff48ca7a5d66dfec171,
141,pull_request_commit,245,nilearn,nilearn,lesteve,2014-10-08 07:35:45,Fix wrong class variable name,2d579577fe09b503097d0d85170d583695758d66,
142,pull_request_commit,245,nilearn,nilearn,lesteve,2014-10-08 08:49:44,"Move slice finding code to BaseStackedSlicer.find_cut_coords

cut_coords has been changed from 12 to 7 to mirror what the code was doing in img_plotting",d4098099ad13e5ac53db6e280041c66a783e748b,
143,pull_request_commit,245,nilearn,nilearn,lesteve,2014-10-08 14:06:10,"Flatten the glass brain related folders

* plotting.glass_brain.brain_schematics moved to plotting.glass_brain
* plotting/glass_brain/scripts/* moved to plotting/glass_brain_files",24e7bea54ab5a9b56f644c4578b228a14e8b5290,
144,pull_request_commit,245,nilearn,nilearn,lesteve,2014-10-09 13:09:01,Refactor nilearn.plotting.glass_brain to use functions,4b4c4c766cba58fba47db019070cca07e7591c79,
145,pull_request_commit,245,nilearn,nilearn,lesteve,2014-10-10 08:08:21,"Move the brain schematic plotting to the Axes rather than the display

A few methods needed **kwargs, so that additional arguments find their way
from img_plotting.plot_glass_brain to glass_brain.plot_brain_schematics in GlassBrainAxes.__init__",00cd6ad663a6f119134bbcbebc04726ffcb2e7e2,
146,pull_request_commit,245,nilearn,nilearn,lesteve,2014-10-10 08:25:43,"Update plot_align_svg.py now that add_brain_schematics has been removed from displays

Tweak it to use additional arguments to ease alignment + remove commented code",ad2dc036111193f373db88dacda35ed27adcc456,
147,pull_request_commit,245,nilearn,nilearn,lesteve,2014-10-10 09:47:55,Fix bug for display_mode != 'ortho',f5ec85bc64b3155bc07c47e1a8e9a13ce197373e,
148,pull_request_commit,245,nilearn,nilearn,lesteve,2014-10-10 11:52:41,"Minor renaming/tidy-up
* BaseAxes.draw -> BaseAxes.draw_2d
* cut_ax -> display_ax
* other minor changes",aca9483b329467da3039d5c44824d245810cae1e,
149,pull_request_commit,245,nilearn,nilearn,lesteve,2014-10-10 12:00:41,"Rename slicers.py -> displays.py
* Update doc to use display rather than slicer
* Update slicers imports",4ed433fad1b967fe120581de1c1646de9f0a0ca9,
150,pull_request_commit,245,nilearn,nilearn,lesteve,2014-10-10 13:16:03,PEP8 fix since since I touched this line,610ef8ac497c6742aee32b3deb9ad80d22d1f86d,
151,pull_request_commit,245,nilearn,nilearn,lesteve,2014-10-13 14:18:03,"Add tests for plot_glass_brain.
Also fix edge case bug when plotting the colorbar and the data has a single value",4a90f4632edab1fa93ee373af84502895a4aea1c,
152,pull_request_commit,245,nilearn,nilearn,lesteve,2014-10-16 15:48:43,"Remove colorbar from plot_glass_brain

Because we are summing along one axis the value does not mean much for example when you are summing z-values.
Also remove TODO comment",583784ddfdc206d2c501e2f266bd6449c5dd4b7e,
153,pull_request_commit,245,nilearn,nilearn,lesteve,2014-10-17 09:24:26,Add plot_glass_brain to nilearn.plotting,1720900108dc9634470477e558387c59b5c7e8a8,
154,pull_request_commit,245,nilearn,nilearn,lesteve,2014-10-17 09:31:33,"Add glass brain plot to plot_demo_plotting.py

Automatically generated figure names needed renaming since the glass
brain plot was inserted in the middle of plot_demo_plotting.py",a355f5a20b13399d3311f04125982a2c34047969,
155,pull_request_commit,245,nilearn,nilearn,lesteve,2014-10-17 11:04:56,"Add plot_glass_brain to documentation.

Needed to reformat the rst table in order to fit plot_glass_brain in the
first column",5ad6ff4fb8463a3b5f34a50bf3ef96aac5f25312,
156,pull_request_commit,245,nilearn,nilearn,lesteve,2014-10-20 13:23:07,Fix typo tran*s*form_2d,a5f4fb572f7dd23808630ee4a09aca2a4ac9af1e,
157,pull_request_commit,245,nilearn,nilearn,lesteve,2014-11-05 10:50:51,"Use max rather than sum along an axis

Analog to SPM maximum intensity projection",92c5f8ca6c53ad0883d8c566bfa4a3ce8e8348a3,
158,pull_request_commit,245,nilearn,nilearn,lesteve,2014-11-13 10:26:20,"vmin and vmax are determined by the 2d data min and max

rather than doing the min and max of the 3D volume",5e3cd5a9f1dfc0e320d3ff5a384505bf06904365,
159,pull_request_commit,245,nilearn,nilearn,lesteve,2014-11-13 10:48:16,"Add transparent color maps using the full alpha range

* Use it in the glass brain plot by default
* Minort tweaks in plot_glass_brain.py to use the default color map",5aa0a6a1fab6354a121e589009ca6f91250f9c63,
160,pull_request_commit,245,nilearn,nilearn,lesteve,2014-11-18 09:38:11,Removal of redundant if statement,31ce2c96d39eec8f539f7e400c43c9079f912933,
161,pull_request_commit,245,nilearn,nilearn,lesteve,2014-11-20 15:05:42,"The color should stay constant for transparent colormap

Otherwise the colormap goes gray towards the low alpha values",6cada3a43c7935be1b842e1f7854564d1f5a181d,
162,pull_request_commit,245,nilearn,nilearn,lesteve,2014-11-25 09:58:22,Use t-maps rather than contrasts in plot_glass_brain.py,7d17f985def68822fe0ac8b72a2d6b47bdc71d90,
163,pull_request_commit,245,nilearn,nilearn,lesteve,2014-11-27 14:12:38,Use max(abs(data)) for 2d projection rather than max(data),d4d51e4298a702057d48b5486eafe99161d13612,
164,pull_request_commit,245,nilearn,nilearn,lesteve,2014-11-27 14:42:27,"Change default plot_glass_brain colormap

depending on black_bg. Also black_bg default to False because 'auto' makes sense only
when plotting an anat. Updated plot_glass_brain.py accordingly.",f5ef98cc9bf6a2c49c3a6c539d83ab613243950b,
165,pull_request_commit,245,nilearn,nilearn,lesteve,2014-11-28 09:34:37,"Simplified glass brain SVGs

- Only three kind of stroke-widths: 1.2, 2.5, 3
- Did some ungrouping in brain_schematics_top.svg
- Regenerated JSONs",66dfaa4e1ad4977ded3492e19d500a9d0f178a82,
166,pull_request_commit,245,nilearn,nilearn,lesteve,2014-11-28 09:41:24,"Remove invisible path

in brain_schematics_top.svg. Regenerated JSON",9f011d7996d4c3c46020febbcfc4726ac2fb36fb,
167,pull_request_commit,245,nilearn,nilearn,lesteve,2014-11-28 09:52:04,"Thiner lines in the glass brain SVGs

and regenerated JSONs",4e1a37bf37ef0c5933d634d8423ea324beaf8177,
168,pull_request_commit,245,nilearn,nilearn,lesteve,2014-11-28 12:03:50,Use auto threshold for glass brain,927fa06de0a561b4561d1056d76bd6e4ad183779,
169,pull_request_commit,245,nilearn,nilearn,lesteve,2014-11-28 12:26:55,Tweak glass brain example in plot_demo_plotting.py,c2a6bf9f01436500053be7db857db6c1d4ded6b4,
170,pull_request_commit,245,nilearn,nilearn,lesteve,2014-12-02 08:41:42,Add inferior temporal sulcus,7bcf1a2e04b41e7f9b9b54e32799e4521cb2dae9,
171,pull_request_commit,245,nilearn,nilearn,lesteve,2014-12-03 08:58:11,Rename some lingering slicer to display,8a42985efed7eb736cabf03307ac298ef7a81521,
172,pull_request_commit,245,nilearn,nilearn,lesteve,2014-12-03 09:11:56,Fix max instead of min typo in auto vmin logic,9c8f0b6539f9d855319912c6450fefb01ef94ad3,
173,pull_request_commit,245,nilearn,nilearn,lesteve,2014-12-03 09:50:50,"Cosmits

* transform_2d -> transform_to_2d
* axes_class -> _axes_class
* other minor stuff",f37072bba78c1dc71b40df5bca3a149d92fa32ee,
174,pull_request_commit,245,nilearn,nilearn,lesteve,2014-12-03 10:14:15,Add module docstrings,3e25fe601c65acc83cf526194f93570560697ce9,
175,pull_request_commit,245,nilearn,nilearn,lesteve,2014-12-03 10:21:34,"Document more parameters in _plot_img_with_bg

Also:
* create_display_fun renamed to display_factory
* removed unused import
* PEP8 fix",d97191733c787f7f41dad97536f80f51209a7466,
176,pull_request_commit,245,nilearn,nilearn,lesteve,2014-12-03 12:37:30,Added OrthoProjector smoke test,71c81114f16817bc6717038bd5aaba38461ff740,
177,pull_request_commit,245,nilearn,nilearn,lesteve,2014-12-03 12:59:11,"Add anatomy in plot_align_svg.py

Also other minor tweaks",4db09951b571a122f86cfc6b68282a3d9337bcd8,
178,pull_request_commit,245,nilearn,nilearn,lesteve,2014-12-04 12:50:48,"Explicitly say that input data needs to be in MNI space

in plot_glass_brain in order to be aligned with brain schematics",bc75c30fdd9f2d6de383c4cdad64a545a91709e8,
179,pull_request_commit,245,nilearn,nilearn,lesteve,2014-12-04 12:51:54,"Use alpha=0.7 by default for the brain schematics

This is the value that was used in all the latest screen snapshots from the PR",a58cc1507492ee687b8862a7b7251b0e10d0ad94,
180,pull_request_commit,245,nilearn,nilearn,lesteve,2014-12-04 12:59:24,"Remove plot_glass_brain.py

This script was mostly useful to produce the snapshots in the PR",88f70361a337a72718e3697a83d3a614ef7876be,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,313,nilearn,nilearn,AlexandreAbraham,2014-12-12 15:12:21,"The visualization example downloads quite a lot of data and generates too many images. We should break it in several small examples, in particular for the (amazing) glass brain.
",start issue,Visualization example is too big
2,issue_closed,313,nilearn,nilearn,lesteve,2014-12-19 08:35:19,,closed issue,Visualization example is too big
3,issue_comment,313,nilearn,nilearn,lesteve,2014-12-15 15:35:49,"The ""quite a lot of data"" got fixed in #320. Not sure it is still worth splitting the examples in different files. Personally I find it quite nice to have the main plotting function variations in the same file, rather than having to look through a few files to find the one you are after.
",,
4,issue_comment,313,nilearn,nilearn,GaelVaroquaux,2014-12-15 15:40:00,"> The ""quite a lot of data"" got fixed in #320. Not sure it is still worth
> splitting the examples in different files.

OK, but we should have at least one very simple example that generates
the figure on the first page of the project. That way people don't get
frightened.

G
",,
5,issue_comment,313,nilearn,nilearn,lesteve,2014-12-16 08:46:52,"Sorry, I see your point just now: people clicking on the glass brain picture on the home page should be redirected to a simpler script because they probably don't care about all the different variations on plotting.

Maybe break down examples in the simplest then. I'd probably go for breakdown by function (plot_stat_map, plot_glass_brain, plot_roi, plot_epi, ...) + one for more advanced stuff where you get a display object and use add_overlay, add_contours, add_edges on it.
",,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,291,nilearn,nilearn,banilo,2014-11-22 17:51:32,"tries to fix #165 
",start issue,[ENH] NiftiMasker: added time mask
2,issue_closed,291,nilearn,nilearn,lesteve,2015-02-12 10:07:09,,closed issue,[ENH] NiftiMasker: added time mask
3,pull_request_title,291,nilearn,nilearn,banilo,2014-11-22 17:51:32,"tries to fix #165 
",ca858367317cf691a62672b29623cbd9e27af87a,[ENH] NiftiMasker: added time mask
4,pull_request_merged,291,nilearn,nilearn,lesteve,2015-02-12 10:07:09,[ENH] NiftiMasker: added time mask,2d3912a3dc8ff56a09d3a4b7cb6ae5ee36572c26,Pull request merge from banilo/nilearn:mask_time to nilearn/nilearn:master
5,issue_comment,291,nilearn,nilearn,banilo,2014-11-27 10:05:41,"Thanks for your help!
a) I changed the mask name to ""mask_time"" in analogy to the ""mask_img"" argument -> better?
b) Am I right in understanding that we stick with passing the 4D mask to NiftiMasker directly instead of its transform function?
",,
6,issue_comment,291,nilearn,nilearn,AlexandreAbraham,2015-01-21 09:07:06,"I have seen that time masking is done before the other pre-treatments. It makes sens the remove noisy scans at the beginning of a session, but for a condition mask (like Haxby), it would make more sense to me to apply it after the pretreatments (detrending, filtering...). So I'm wondering if it's a good idea to keep this name.
",,
7,issue_comment,291,nilearn,nilearn,banilo,2015-01-25 09:51:03,"@AlexandreAbraham: Do you think it makes sense to include an option for either pre- or post-pretreatment application of the 4D filter?
",,
8,issue_comment,291,nilearn,nilearn,GaelVaroquaux,2015-01-25 09:54:00,"> @AlexandreAbraham: Do you think it makes sense to include an option for either
> pre- or post-pretreatment application of the 4D filter?

We need to make a choice. Too many options are detrimental. It should
probably be 'pre application', because these are the only semantics that
make sens in general. However, this will blend a bit the masked data with
the non masked data in the case of time filtering, so we will have to
warn the user.
",,
9,issue_comment,291,nilearn,nilearn,banilo,2015-02-10 15:41:18,"Comments hopefully addressed. Mask is currently applied pre-treatment.
",,
10,issue_comment,291,nilearn,nilearn,GaelVaroquaux,2015-02-10 16:38:09,"LGTM: minor rephrasing to do, and a rebase necessary to address merge conflicts.
",,
11,issue_comment,291,nilearn,nilearn,banilo,2015-02-10 18:42:07,"rephrased + rebased.
",,
12,issue_comment,291,nilearn,nilearn,banilo,2015-02-11 09:38:43,"Docstring updated!
",,
13,issue_comment,291,nilearn,nilearn,banilo,2015-02-11 14:31:15,"Ok, done.
",,
14,issue_comment,291,nilearn,nilearn,lesteve,2015-02-12 10:07:25,"Looks good, merging, thanks a lot.
",,
15,issue_comment,291,nilearn,nilearn,eickenberg,2015-02-02 15:06:35,"+1

mask_time is weird

timecourse_mask would be another option.

however, the axis we are referring to can be more general than time. we
could also select conditions with it for decoding, see e.g. the haxby
example. in this perspective the name time_mask is a little restrictive.
samples_mask would be more generic, and still understandable/correct

On Monday, February 2, 2015, Gael Varoquaux notifications@github.com
wrote:

> > 1. I am still in favor of time_mask vs mask_time, be it only because it
> >    is
> >    closer to how you would call it in plain English.
> 
> +1
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/nilearn/nilearn/pull/291#issuecomment-72468504.
",,
16,issue_comment,291,nilearn,nilearn,eickenberg,2015-02-02 17:05:18,"detrending and standardization cannot be done on the haxby example before
the chunks are cut up. One can also get by without doing it. In general I
was thinking more along the lines of series of beta maps from a rapid
event-related paradigm. You don't detrend or standardize those.

On Mon, Feb 2, 2015 at 4:27 PM, Alexandre Abraham notifications@github.com
wrote:

> however, the axis we are referring to can be more general than time. we
> could also select conditions with it for decoding, see e.g. the haxby
> example. in this perspective the name time_mask is a little restrictive.
> samples_mask would be more generic, and still understandable/correct
> 
> In the case of Haxby example, don't you select conditions after the
> pre-treatment (ie detrending, etc)?
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/nilearn/nilearn/pull/291#issuecomment-72475594.
",,
17,issue_comment,291,nilearn,nilearn,eickenberg,2015-02-02 17:09:45,"because they come from different runs. It doesn't make sense to detrend or
standardize over the borders of runs. scipy.signal.detrend takes
breakpoints, but they are not exposed in the niftimasker. I also don't
think that this is a general case. As already discussed with Bertrand,
datasets from nowadays are usually kept in one file per run because they
are already large on their own. It is only with datasets that at present
one can consider ""old"" that such concatenations become feasible.

On Mon, Feb 2, 2015 at 6:06 PM, Gael Varoquaux notifications@github.com
wrote:

> > detrending and standardization cannot be done on the haxby example before
> > the chunks are cut up.
> 
> Why?
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/nilearn/nilearn/pull/291#issuecomment-72494655.
",,
18,issue_comment,291,nilearn,nilearn,eickenberg,2015-02-02 17:41:45,"They are 12 acquisition runs, the scanning is stopped after each one of them (that is my point) - but yes, one scanner session. Total acquisition time 3630 seconds.
",,
19,issue_comment,291,nilearn,nilearn,eickenberg,2015-02-02 17:42:29,"(All in one file, runs labeled from 0 to 11 in the column ""chunk"")
",,
20,issue_comment,291,nilearn,nilearn,eickenberg,2015-02-03 10:20:56,":) I had to reproduce the original study once, so I was forced to read all the small print at one point.

> centering would be taken care off by defining the session vector as a confound.

Indeed, in a GLM, but we have typically done decoding directly on the data.

My point is that one could use the ""Time Masker"" to mask conditions here. However, since these data are still temporally structured, the example is bad. If you consider a dataset consisting of many beta maps (such as an event-related paradigm), the is nothing time-related at all involved, but one may still be tempted to use the ""Time Masking"" to select images according to certain conditions.

Hence my proposition to use a name that is more general than the word ""time"", e.g. ""sample"". That said, I have no problem using something that has the name ""time"" in it on my non-temporal 4th axis.
",,
21,issue_comment,291,nilearn,nilearn,AlexandreAbraham,2015-02-02 15:27:48,"> however, the axis we are referring to can be more general than time. we could also select conditions with it for decoding, see e.g. the haxby example. in this perspective the name time_mask is a little restrictive. samples_mask would be more generic, and still understandable/correct

In the case of Haxby example, don't you select conditions after the pre-treatment (ie detrending, etc)?
",,
22,issue_comment,291,nilearn,nilearn,banilo,2015-01-14 09:37:37,"I promise to do it still some time today...

2015-01-14 10:36 GMT+01:00 Loïc Estève notifications@github.com:

> @banilo https://github.com/banilo could you look at the merge conflicts
> on this one?
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/nilearn/nilearn/pull/291#issuecomment-69890735.

## 

Viele Grüße,
Danilo
",,
23,issue_comment,291,nilearn,nilearn,banilo,2015-01-14 17:29:41,"fixed merge conflicts + restored empty lines at file end + squashed
",,
24,issue_comment,291,nilearn,nilearn,banilo,2015-01-30 08:40:03,"Ok, time masking now uses Loics index_img :)
",,
25,issue_comment,291,nilearn,nilearn,banilo,2015-02-03 10:24:41,"> ""sample_mask"" seems like a reasonnable name

+1 on this
",,
26,pull_request_commit_comment,291,nilearn,nilearn,bthirion,2014-11-23 22:00:39,"I don't understand this part ?

Also, this functionality probably deserves a bit of narrative documentation: what is the use case ? 
",ca858367317cf691a62672b29623cbd9e27af87a,"(None, '', u'nilearn/input_data/nifti_masker.py')"
27,pull_request_commit_comment,291,nilearn,nilearn,GaelVaroquaux,2014-11-24 11:39:01,"> I don't understand this part ?

I think that the name is bad.

> Also, this functionality probably deserves a bit of narrative documentation:
> what is the use case ?

Avoiding the bug we had in the anova haxby example :).
",ca858367317cf691a62672b29623cbd9e27af87a,"(None, '', u'nilearn/input_data/nifti_masker.py')"
28,pull_request_commit_comment,291,nilearn,nilearn,AlexandreAbraham,2014-11-24 16:33:28,"> I think that the name is bad.
> +1
> 
> Avoiding the bug we had in the anova haxby example :).
> The bug was mainly due to the fact that the shape of the session mask was not checked. I think that the main advantage is to be able to apply a condition mask to the data without having to load them manually (and still delegate that to the NiftiMasker).

However, given that this is only used for transform, shouldn't it be a parameter for the transform function rather than for the Masker in general?
",ca858367317cf691a62672b29623cbd9e27af87a,"(None, '', u'nilearn/input_data/nifti_masker.py')"
29,pull_request_commit_comment,291,nilearn,nilearn,GaelVaroquaux,2014-11-24 16:35:44,"> However, given that this is only used for transform, shouldn't it be a
> parameter for the transform function rather than for the Masker in general?

Possible. The real argument is that it's data dependent (ie has a shape
in n_samples) thus giving it at build-time break cross validation.

Which tells us that sessions shouldn't be given at build time :$
",ca858367317cf691a62672b29623cbd9e27af87a,"(None, '', u'nilearn/input_data/nifti_masker.py')"
30,pull_request_commit_comment,291,nilearn,nilearn,AlexandreAbraham,2014-11-24 17:20:06,"Exactly. We can even go further by saying that this is a form of sample extraction and that it could exist as its own object. Because, for exemple, when working on Haxby, maybe I would like to work first on face vs house and then cat vs chair.
",ca858367317cf691a62672b29623cbd9e27af87a,"(None, '', u'nilearn/input_data/nifti_masker.py')"
31,pull_request_commit_comment,291,nilearn,nilearn,bthirion,2014-12-05 10:59:12,"You probably mean: Data processing ignores the mask-time arguments and takes into account the whole sequence of image.
",ca858367317cf691a62672b29623cbd9e27af87a,"(None, '', u'nilearn/input_data/nifti_masker.py')"
32,pull_request_commit_comment,291,nilearn,nilearn,lesteve,2015-01-16 08:50:33,"It feels quite restrictive that mask_time has to be a list of bool, shouldn't it be something that can be passed into a numpy array indexing operation:

``` python
imgs = Nifti1Image(
    imgs.get_data()[..., np.asarray(mask_time)],
    imgs.get_affine())
```

For example, a slice object, a list of indices, etc...

Not sure what's the best way to make sure that mask_time can be used inside a indexing operation.
",ca858367317cf691a62672b29623cbd9e27af87a,"(None, '', u'nilearn/input_data/base_masker.py')"
33,pull_request_commit_comment,291,nilearn,nilearn,banilo,2015-01-16 08:53:33,"Why not, it's a design choice. Boolean arrays is however what naturally comes out of target/non-target label comparison operations.
",ca858367317cf691a62672b29623cbd9e27af87a,"(None, '', u'nilearn/input_data/base_masker.py')"
34,pull_request_commit_comment,291,nilearn,nilearn,GaelVaroquaux,2015-01-16 08:55:09,"Agreed with Loic. I wouldn't even call 'asarray' on it, so that it is
possible to pass Slice objects.

And do we want to call it 'mask_time' or 'time_mask' :)
",ca858367317cf691a62672b29623cbd9e27af87a,"(None, '', u'nilearn/input_data/base_masker.py')"
35,pull_request_commit_comment,291,nilearn,nilearn,banilo,2015-01-20 20:01:02,"> And do we want to call it 'mask_time' or 'time_mask' :)

I went for 'mask_time' in analogy to 'mask_img', to allude to the 4D-3D complementary. Should we change that?
",ca858367317cf691a62672b29623cbd9e27af87a,"(None, '', u'nilearn/input_data/base_masker.py')"
36,pull_request_commit_comment,291,nilearn,nilearn,banilo,2015-01-20 20:02:07,"> Agreed with Loic. I wouldn't even call 'asarray' on it, so that it is
> possible to pass Slice objects.

Can't we combine this with Loics ongoing indexing/slicing PR?
",ca858367317cf691a62672b29623cbd9e27af87a,"(None, '', u'nilearn/input_data/base_masker.py')"
37,pull_request_commit_comment,291,nilearn,nilearn,bthirion,2015-01-20 21:56:37,"Indeed, it is unclear for me what are the use cases addressed here that are not also addressed in the indexing/slicing PR ?
@banilo, do you have any example to motivate it ?
",ca858367317cf691a62672b29623cbd9e27af87a,"(None, '', u'nilearn/input_data/base_masker.py')"
38,pull_request_commit_comment,291,nilearn,nilearn,GaelVaroquaux,2015-01-20 22:01:36,"> Indeed, it is unclear for me what are the use cases addressed here that
> are not also addressed in the indexing/slicing PR ?

The indexing/slicing PR does make things much easier. However, suppose
that you want, eg to remove the 3 first volumes. With Danilo's PR, it is
trivial to do this in a pipeline, in distributed computing. Manually
using slicing would require more work.

However, the slicing PR should be merged, and then this PR updated to use
it.
",ca858367317cf691a62672b29623cbd9e27af87a,"(None, '', u'nilearn/input_data/base_masker.py')"
39,pull_request_commit_comment,291,nilearn,nilearn,banilo,2015-01-20 22:06:25,"A practical use case would be sub-selection as part of some sklearn-pipeline. Using this PR, memory is safed by avoiding creation of a tempory (sliced) nifti to pass on to the masker (index is provided at the time of masker instance creation). Just having idexing/slicing from Loic's PR cannot avoid this in a pipeline setting. ...I think.
",ca858367317cf691a62672b29623cbd9e27af87a,"(None, '', u'nilearn/input_data/base_masker.py')"
40,pull_request_commit_comment,291,nilearn,nilearn,bthirion,2015-01-20 22:08:39,"All right, thanks.
",ca858367317cf691a62672b29623cbd9e27af87a,"(None, '', u'nilearn/input_data/base_masker.py')"
41,pull_request_commit_comment,291,nilearn,nilearn,AlexandreAbraham,2015-01-20 22:15:05,">  Just having idexing/slicing from Loic's PR cannot avoid this in a pipeline setting. ...I think.

You have the exact same behavior if you use Loïc's PR and a NiftiMasker (and do the loop yourself).
",ca858367317cf691a62672b29623cbd9e27af87a,"(None, '', u'nilearn/input_data/base_masker.py')"
42,pull_request_commit_comment,291,nilearn,nilearn,eickenberg,2015-01-20 22:16:29,"> Using this PR, memory is safed

line 74 makes a copy... 

If Loic's slicing PR permits slices into memmapped .nii files, then that is the best possible way of saving memory.

So the sole advantage of having time slicing (once Loic's is merged) in the NiftiMasker is the fact that it can go in a pipeline.
",ca858367317cf691a62672b29623cbd9e27af87a,"(None, '', u'nilearn/input_data/base_masker.py')"
43,pull_request_commit_comment,291,nilearn,nilearn,lesteve,2015-02-02 14:37:24,"import is already a few lines below.
",ca858367317cf691a62672b29623cbd9e27af87a,"(None, '', u'nilearn/input_data/tests/test_nifti_masker.py')"
44,pull_request_commit_comment,291,nilearn,nilearn,lesteve,2015-02-02 14:44:28,"> Data preprocessing will ignore the time mask whereas NiftiMasker.transform will only consider time-masked images.

I thought this wasn't true anymore, i.e. the indexing was done before the other treatments like filtering.

> Use case: Avoid creation of a temporary 4D data nifti, potentially expensive in memory, before application of NiftiMasker.

Not sure what you mean by that, it seems to be that indexing does create a temporary 4D image but maybe I am missing something.
",ca858367317cf691a62672b29623cbd9e27af87a,"(None, '', u'nilearn/input_data/nifti_masker.py')"
45,pull_request_commit_comment,291,nilearn,nilearn,lesteve,2015-02-02 14:46:20,"Also maybe the ""pipelinability"" should be mentioned in this docstring.
",ca858367317cf691a62672b29623cbd9e27af87a,"(None, '', u'nilearn/input_data/nifti_masker.py')"
46,pull_request_commit_comment,291,nilearn,nilearn,lesteve,2015-02-02 14:53:11,"This is quite convoluted. I am sure there must be something better than this. mask.sum() should work but maybe there is something more generic.
",ca858367317cf691a62672b29623cbd9e27af87a,"(None, '', u'nilearn/input_data/tests/test_nifti_masker.py')"
47,pull_request_commit_comment,291,nilearn,nilearn,lesteve,2015-02-02 14:53:56,"Could we not check that applying index_img and then the mask without time_mask is the same as applying the mask with time_mask to the original image?
",ca858367317cf691a62672b29623cbd9e27af87a,"(None, '', u'nilearn/input_data/tests/test_nifti_masker.py')"
48,pull_request_commit_comment,291,nilearn,nilearn,lesteve,2015-02-02 15:10:35,"minor comment, I would use `time/fourth dimension` rather than `time/4D dimension`
",ca858367317cf691a62672b29623cbd9e27af87a,"(None, '', u'nilearn/input_data/nifti_masker.py')"
49,pull_request_commit_comment,291,nilearn,nilearn,banilo,2015-02-02 15:12:02,"Ok
",ca858367317cf691a62672b29623cbd9e27af87a,"(None, '', u'nilearn/input_data/tests/test_nifti_masker.py')"
50,pull_request_commit_comment,291,nilearn,nilearn,banilo,2015-02-02 15:14:19,"In real-world (float typed) binary mask niftis this did sometimes not give the same result, but here I will shift to sum() as suggested.
",ca858367317cf691a62672b29623cbd9e27af87a,"(None, '', u'nilearn/input_data/tests/test_nifti_masker.py')"
51,pull_request_commit_comment,291,nilearn,nilearn,banilo,2015-02-02 15:17:36,"I will make sure the 4D mask is 'pre application', as suggested by Gael
",ca858367317cf691a62672b29623cbd9e27af87a,"(None, '', u'nilearn/input_data/nifti_masker.py')"
52,pull_request_commit_comment,291,nilearn,nilearn,lesteve,2015-02-02 15:18:34,"Depending on your use case, you could use something like `mask.astype(bool).sum()` or `np.isclose(mask, 0).sum()`. Note that the latter has some default absolute and relative tolerance that you may want to tweak.
",ca858367317cf691a62672b29623cbd9e27af87a,"(None, '', u'nilearn/input_data/tests/test_nifti_masker.py')"
53,pull_request_commit_comment,291,nilearn,nilearn,GaelVaroquaux,2015-02-10 16:36:52,"Rather than 'usecase: ...' I would say: 'this is useful to perform...'
",ca858367317cf691a62672b29623cbd9e27af87a,"(None, '', u'nilearn/input_data/nifti_masker.py')"
54,pull_request_commit_comment,291,nilearn,nilearn,lesteve,2015-02-11 10:26:21,"You may as well use index_img now that it exists.
",ca858367317cf691a62672b29623cbd9e27af87a,"(None, '', u'nilearn/input_data/tests/test_nifti_masker.py')"
55,pull_request_commit_comment,291,nilearn,nilearn,banilo,2015-02-11 10:27:31,"Should the tests not be as basic and transparent as possible?
",ca858367317cf691a62672b29623cbd9e27af87a,"(None, '', u'nilearn/input_data/tests/test_nifti_masker.py')"
56,pull_request_commit_comment,291,nilearn,nilearn,lesteve,2015-02-11 10:31:54,"Isn't it simpler to do (please use better names than mine):

``` python

masker2 = NiftiMasker(mask_img=mask_img)
masker2.fit()
data_imgs_subset = index_img(data_imgs, sample_mask)
data_trans_direct = masker2.transform(data_imgs_subset)
```

Basically you want to make sure that using sample_mask in the masker is the same as using index_img on the data and then a masker without sample_mask.
",ca858367317cf691a62672b29623cbd9e27af87a,"(None, '', u'nilearn/input_data/tests/test_nifti_masker.py')"
57,pull_request_commit_comment,291,nilearn,nilearn,lesteve,2015-02-11 10:48:38,"it looks like you moved away from PEP8 here
",ca858367317cf691a62672b29623cbd9e27af87a,"(None, '', u'nilearn/input_data/base_masker.py')"
58,pull_request_commit_comment,291,nilearn,nilearn,lesteve,2015-02-11 10:51:51,"Yes. By the way, just curious, any particular reason you are not using data_img_4d in the transform call?
",ca858367317cf691a62672b29623cbd9e27af87a,"(None, '', u'nilearn/input_data/tests/test_nifti_masker.py')"
59,pull_request_commit_comment,291,nilearn,nilearn,lesteve,2015-02-11 10:53:53,"Maybe it's just me but I would do:

``` python
imgs = _utils.check_niimgs(imgs, accept_3d=True)

if sample_mask is not None:
    imgs = image.index_img(imgs, sample_mask)
```
",ca858367317cf691a62672b29623cbd9e27af87a,"(None, '', u'nilearn/input_data/base_masker.py')"
60,pull_request_commit_comment,291,nilearn,nilearn,banilo,2015-02-11 10:54:59,"That is used in line 143.
",ca858367317cf691a62672b29623cbd9e27af87a,"(None, '', u'nilearn/input_data/tests/test_nifti_masker.py')"
61,pull_request_commit_comment,291,nilearn,nilearn,banilo,2015-02-11 10:55:33,"It has been like that before, Alex wanted me to change it this way.
",ca858367317cf691a62672b29623cbd9e27af87a,"(None, '', u'nilearn/input_data/base_masker.py')"
62,pull_request_commit_comment,291,nilearn,nilearn,AlexandreAbraham,2015-02-11 14:45:38,"I suggested that because I thought that `index_img` could be faster if `imgs` was a list of 3D imgs. Given that it's not the case, I would be in favor of what @lesteve proposes.
",ca858367317cf691a62672b29623cbd9e27af87a,"(None, '', u'nilearn/input_data/base_masker.py')"
63,pull_request_commit_comment,291,nilearn,nilearn,lesteve,2015-02-12 08:35:07,"OK just this one to do and it should be good to go.
",ca858367317cf691a62672b29623cbd9e27af87a,"(None, '', u'nilearn/input_data/base_masker.py')"
64,pull_request_commit_comment,291,nilearn,nilearn,banilo,2015-02-12 08:42:31,"changed back to how it was before, as suggested.
",ca858367317cf691a62672b29623cbd9e27af87a,"(None, '', u'nilearn/input_data/base_masker.py')"
65,pull_request_commit,291,nilearn,nilearn,banilo,2015-01-14 17:31:55,ENH NiftiMasker: add time mask,08faed3c6c9cc860a3ce1896db2bd51a1e3a202d,
66,pull_request_commit,291,nilearn,nilearn,banilo,2015-01-30 08:12:46,integrated Loics index_img,1878b105e8249990ba34d164111f59ad86f4fe66,
67,pull_request_commit,291,nilearn,nilearn,banilo,2015-01-30 08:33:16,corrected variable type,8f2fdeaab7184d77e6a859498db199b66ec683f5,
68,pull_request_commit,291,nilearn,nilearn,banilo,2015-02-10 15:40:11,switched to sample_mask + upgrates,380c0681bf8b9252befec411d12b71b0678222c6,
69,pull_request_commit,291,nilearn,nilearn,banilo,2015-02-10 18:38:46,rephrasing,713202b9d7f3e9ff7a4b087d59cc5ccd13b95e96,
70,pull_request_commit,291,nilearn,nilearn,banilo,2015-02-11 10:03:30,adapted docstring,168c9383f8ca8b986b6a1bec1a480e259221e899,
71,pull_request_commit,291,nilearn,nilearn,banilo,2015-02-11 14:27:46,simplifications + PEP8,51d6b543e193cf385f97ff216400a7f0f54f289a,
72,pull_request_commit,291,nilearn,nilearn,banilo,2015-02-12 08:41:30,improved data flow,ca858367317cf691a62672b29623cbd9e27af87a,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,303,nilearn,nilearn,lesteve,2014-12-05 09:38:20,"For now just moving them without further restructuring
",start issue,Move examples to dedicated 'examples' subfolder
2,issue_closed,303,nilearn,nilearn,lesteve,2014-12-05 09:52:41,,closed issue,Move examples to dedicated 'examples' subfolder
3,pull_request_title,303,nilearn,nilearn,lesteve,2014-12-05 09:38:20,"For now just moving them without further restructuring
",44f59f742539495cd502837226447ef8652eae63,Move examples to dedicated 'examples' subfolder
4,pull_request_merged,303,nilearn,nilearn,lesteve,2014-12-05 09:52:41,Move examples to dedicated 'examples' subfolder,f27498b4722b6f62b64ea8776a3011b613fc5acf,Pull request merge from lesteve/nilearn:move-examples-to-subfolder to nilearn/nilearn:master
5,pull_request_commit,303,nilearn,nilearn,lesteve,2014-12-05 08:59:54,Move nilearn examples to dedicated subfolder,2f06c34b985406fa84018119194ab080ea0e460e,
6,pull_request_commit,303,nilearn,nilearn,lesteve,2014-12-05 09:01:11,Tweak examples README.txt,44f59f742539495cd502837226447ef8652eae63,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,326,nilearn,nilearn,dohmatob,2014-12-18 14:19:11,"doc/gen_rst.py  badly needs to be cleaned up. Problems include:
- Non pep*
- Ubiquitous references to scikit learn (change to nilearn)
- unsed variables in functions (time_m, time_s, short_name, etc.)
",start issue,gen/gen_rst.py needs thorough cleanup
2,issue_closed,326,nilearn,nilearn,lesteve,2014-12-18 14:35:53,,closed issue,gen/gen_rst.py needs thorough cleanup
3,issue_comment,326,nilearn,nilearn,lesteve,2014-12-18 14:35:45,"The kind of secret everybody is aware of ... The future of gen_rst.py is [sphinx-gallery](https://github.com/sphinx-gallery/sphinx-gallery). I would encourage you to follow its developments, maybe wait until it matures a bit, and forward your concerns there.
",,
4,issue_comment,326,nilearn,nilearn,AlexandreAbraham,2014-12-18 14:41:01,":rage3:
",,
5,issue_comment,326,nilearn,nilearn,dohmatob,2014-12-18 14:52:42,"OK, are you saying ""sphinx-gallery"" will save us from the trailing ""scikit learn references"" and unused variables in the doc generation engine ? Great, I'm looking forward to that!
",,
6,issue_comment,326,nilearn,nilearn,dohmatob,2014-12-18 14:55:33,"BTW, I'd have left the issue open, just to keep track (maybe with a different label). With the issue closed, we'll definitively loose track of the problem.
",,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,322,nilearn,nilearn,banilo,2014-12-17 09:39:12,"Working with HCP resting-state data, it seems I have encountered three potentially new bugs using resample_img:

a) using input images that have bad affines can cause segmentation faults, quitting python directly

b) using interpolation=nearest can cause ""completely messed up"" niftis, similar to the recent resample_img bug related to endianess

c) comparing 4d niftis before and after resampling in FSLView, in one case, turned out to look fine for the first 500 images, yet resulted in rather different histogramms in images in the second 500 volumes

I will try to provide python scripts reproducing these things and the corresponding data.
",start issue,3 bugs in resample_img
2,issue_closed,322,nilearn,nilearn,AlexandreAbraham,2015-01-14 00:18:36,,closed issue,3 bugs in resample_img
3,issue_comment,322,nilearn,nilearn,banilo,2014-12-18 16:57:12,"``` python
# resample_img bug 1
# -> Segmentation fault: 11 in resample_img()

from nilearn.image import resample_img
import numpy as np
from nibabel import Nifti1Image

shape_in = (91, 109, 91)
aff_in = np.array([[  -2.,    0.,    0.,   90.], 
                  [   0.,    2.,    0., -126.],
                  [   0.,    0.,    2.,  -72.],
                  [   0.,    0.,    0.,    1.]])

shape_out = (53, 63, 46)
aff_out = np.array([[  -3.,    0.,    0.,   78.],
                   [   0.,    3.,    0., -111.],
                   [   0.,    0.,    3.,  -51.],
                   [   0.,    0.,    0.,    1.]])

data = np.zeros(shape_in + (1000, ), dtype=np.float)

for i_img in range(data.shape[-1]):
    data[..., i_img] = i_img + 1
img_in = Nifti1Image(data, aff_in)

for mode in ['nearest', 'continuous']:
    print ""Resampling (%s)..."" % mode
    img_out = resample_img(img_in, target_shape=shape_out,
        target_affine=aff_out, interpolation=mode)
    data_out = img_out.get_data()
    print ""Resampling done.""
    for i_img in range(data.shape[-1]):
        print ""%i..."" % i_img
        assert(data_out[..., i_img] == i_img + 1)
```
",,
4,issue_comment,322,nilearn,nilearn,banilo,2014-12-19 08:54:26,"I am still uploading one of the data files (should be accessible by noon today) but here is a script for reproducing bug 3 from above.

``` python
# resample_img bug 3
# -> image order messed up?
# (seems fine until 500th volume, but compare input preproc_RS_1000.nii.gz
#  and output resampled_4d.nii.gz at e.g. volume 600 in FSLView)
#
# Please download necessary data files:
# https://dl.dropboxusercontent.com/u/4403154/grey10_icbm.nii
# https://dl.dropboxusercontent.com/u/4403154/expression_intention-control_z_map.nii
# https://dl.dropboxusercontent.com/u/4403154/preproc_RS_1000.nii.gz

from nilearn.image import resample_img
from nilearn.input_data import NiftiMasker
import numpy as np
import nibabel as nib

mask_image = 'grey10_icbm.nii'
target_space_img = 'expression_intention-control_z_map.nii'
firstdataimg = nib.load(target_space_img)
masknii = resample_img(mask_image, target_shape=firstdataimg.shape,
                       target_affine=firstdataimg.get_affine(),
                       interpolation='nearest')
mask = masknii.get_data().astype(np.bool)
nifti_masker = NiftiMasker(mask_img=masknii, smoothing_fwhm=False,
                           standardize=False)
nifti_masker.fit()
tar_aff = np.array([[  -3.,    0.,    0.,   78.],
                    [   0.,    3.,    0., -111.],
                    [   0.,    0.,    3.,  -51.],
                    [   0.,    0.,    0.,    1.]])

r_nii = resample_img(
    nib.load('preproc_RS_1000.nii.gz'),
    target_shape=(53, 63, 46),
    target_affine=tar_aff,
    interpolation='continuous').to_filename('resampled_4d.nii.gz')
```
",,
5,issue_comment,322,nilearn,nilearn,AlexandreAbraham,2015-01-07 11:56:14,"I can't download the data.
",,
6,issue_comment,322,nilearn,nilearn,AlexandreAbraham,2015-01-07 12:30:04,"Using the code you posted, I have a bounding box issue (part of the cerebellum is cut). Apart from that, both files are identical.
",,
7,issue_comment,322,nilearn,nilearn,AlexandreAbraham,2015-01-07 13:48:09,"I have the same histograms, however in my case the 2 images look alike. The difference in the distribution may be due to the cropping (I would however expect more 0s in the original image...).
",,
8,issue_comment,322,nilearn,nilearn,AlexandreAbraham,2015-01-11 22:29:48,"2 other bugs are:
- the brain is cropped during resampling
- data is very different from original after resampling: this is due to a bug in FSLview on Mac OS X
",,
9,issue_comment,322,nilearn,nilearn,AlexandreAbraham,2015-01-14 00:18:36,"I can't reproduce the cropping bug. I close this one, let's open other issues with precise examples if the problem comes up again.
",,
10,issue_comment,322,nilearn,nilearn,banilo,2015-01-07 12:04:52,"Smells like a dropbox-access issue.
",,
11,issue_comment,322,nilearn,nilearn,banilo,2015-01-07 13:09:32,"Regarding resample_img bug 3:

Nilearn seems to say that the 4D images - before and after resampling - are not the same.

```
plot_epi(nib.Nifti1Image(nib.load('resampled_4d.nii.gz').get_data()[..., 599], np.eye(4)))
```

![image](https://cloud.githubusercontent.com/assets/3907396/5645968/a757183c-9676-11e4-8016-e82021147d94.png)

```
plot_epi(nib.Nifti1Image(nib.load('preproc_RS_1000.nii.gz').get_data()[..., 599], np.eye(4)))
```

![image](https://cloud.githubusercontent.com/assets/3907396/5645962/a20f8d0a-9676-11e4-979f-94c82521b635.png)
",,
12,issue_comment,322,nilearn,nilearn,banilo,2015-01-07 13:33:33,"...this also seems to show in the histogramms:

```
plt.hist(nib.load('preproc_RS_1000.nii.gz').get_data()[..., 599].ravel(), bins=200, range=(1e-3,1))
```

![image](https://cloud.githubusercontent.com/assets/3907396/5646232/fe8c66fe-9679-11e4-8c05-015609870ba3.png)

```
plt.hist(nib.load('resampled_4d.nii.gz').get_data()[..., 599].ravel(), bins=200, range=(1e-3,1))
```

![image](https://cloud.githubusercontent.com/assets/3907396/5646230/f228072e-9679-11e4-95d9-f9d0bf79a9c4.png)
",,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,235,nilearn,nilearn,GaelVaroquaux,2014-09-10 16:04:42,"In CanICA, the fastica loop could be parallelized.

I have in mind the 'for rs in range(self.n_init)...' loop in the fit of CanICA.

One thing to keep in mind is that random_state need to be reseeded after a fork (elsewhere the seed is the same everywhere). Thus we can parallelize the loop only for scikit-learn > 0.13 (I suggest setting n_job to one else) and we need to use a pattern resembling https://github.com/scikit-learn/scikit-learn/blob/master/sklearn/cluster/k_means_.py#L306
",start issue,The CanICA loop could be made parallel
2,issue_closed,235,nilearn,nilearn,lesteve,2014-11-21 14:01:59,,closed issue,The CanICA loop could be made parallel
3,issue_comment,235,nilearn,nilearn,AlexandreAbraham,2014-09-10 16:11:30,"Isn't there a bug on line 158 of canica.py? Shouldn't it be `rs` instead of `random_state`?
",,
4,issue_comment,235,nilearn,nilearn,GaelVaroquaux,2014-09-10 16:14:41,"No, it's fine, because we are not forking, for now. Thus we are simply passing a RNG, and more data is drawn from this RNG.
",,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,317,nilearn,nilearn,AlexandreAbraham,2014-12-12 15:18:48,"Downloading localizer for the examples is very long (because the website generate a zip archive on the fly). We should create a ""minimal localizer"" dataset and host it on NITRC.
",start issue,Localizer download is long
2,issue_closed,317,nilearn,nilearn,lesteve,2014-12-15 15:27:29,,closed issue,Localizer download is long
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,300,nilearn,nilearn,lesteve,2014-12-02 08:56:18,"Further tweak to #298. Only pass facecolor/edgecolor arguments to savefig when they are different
than rcParams['figure.facecolor']/rcParams['figure.edgecolor'].

This seems to work well with both default and black facecolor backgrounds.
",start issue,Use correct facecolor/edgecolor savefig arguments in gen_rst.py
2,issue_closed,300,nilearn,nilearn,lesteve,2014-12-04 10:41:54,,closed issue,Use correct facecolor/edgecolor savefig arguments in gen_rst.py
3,pull_request_title,300,nilearn,nilearn,lesteve,2014-12-02 08:56:18,"Further tweak to #298. Only pass facecolor/edgecolor arguments to savefig when they are different
than rcParams['figure.facecolor']/rcParams['figure.edgecolor'].

This seems to work well with both default and black facecolor backgrounds.
",cdc7af8795821a04de96c5035ca3714f8a726765,Use correct facecolor/edgecolor savefig arguments in gen_rst.py
4,pull_request_merged,300,nilearn,nilearn,lesteve,2014-12-04 10:41:54,Use correct facecolor/edgecolor savefig arguments in gen_rst.py,824e0f124566ad142526b54796b1e5b6cc0717fd,Pull request merge from lesteve/nilearn:gen-rst-facecolor-tweak-bis to nilearn/nilearn:master
5,issue_comment,300,nilearn,nilearn,lesteve,2014-12-02 10:45:23,"ccing @Titan-C to keep him in the loop
",,
6,pull_request_commit,300,nilearn,nilearn,lesteve,2014-12-02 08:54:12,"Use correct savefig arguments in gen_rst.py

Only pass facecolor/edgecolor arguments to savefig when they are different
than rcParams['figure.facecolor']/rcParams['figure.edgecolor']",cdc7af8795821a04de96c5035ca3714f8a726765,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,312,nilearn,nilearn,AlexandreAbraham,2014-12-12 15:10:59,"In documentation, shell lines are prefixed by $. For example:

`$ pip install -U --user nibabel`

The meaning of it is not obvious for non developers, we should remove it.
",start issue,Misleading $ in shell lines in documentation
2,issue_closed,312,nilearn,nilearn,lesteve,2014-12-16 08:06:17,,closed issue,Misleading $ in shell lines in documentation
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,297,nilearn,nilearn,lesteve,2014-11-27 10:01:08,"I think this is good to go. A few things worth noting:
- The scripts generally need z_slice for the plotting function and k_slice, e.g. to figure out the number of detections in the slice. I didn't know better than to use coord_transform. I am wondering whether there is a better way to do this.
- For long titles, using plot_stat_map with a title argument is not going to work out. In theses cases, I had to hand-tweak the figure size and use `display.title` with a carefully chosen y > 1. Better suggestions more than welcome!
- In plot_haxby_mass_univariate.py I had to give up on the ImageGrid and have two separate plots. plot_stat_map colorbar is quite off when specifying an axes parameter.
",start issue,[MRG] Use nilearn plotting in examples bis
2,issue_closed,297,nilearn,nilearn,lesteve,2014-12-03 15:02:41,,closed issue,[MRG] Use nilearn plotting in examples bis
3,pull_request_title,297,nilearn,nilearn,lesteve,2014-11-27 10:01:08,"I think this is good to go. A few things worth noting:
- The scripts generally need z_slice for the plotting function and k_slice, e.g. to figure out the number of detections in the slice. I didn't know better than to use coord_transform. I am wondering whether there is a better way to do this.
- For long titles, using plot_stat_map with a title argument is not going to work out. In theses cases, I had to hand-tweak the figure size and use `display.title` with a carefully chosen y > 1. Better suggestions more than welcome!
- In plot_haxby_mass_univariate.py I had to give up on the ImageGrid and have two separate plots. plot_stat_map colorbar is quite off when specifying an axes parameter.
",464fc7015ee32daca63c8b37f15d9af6d3730151,[MRG] Use nilearn plotting in examples bis
4,pull_request_merged,297,nilearn,nilearn,lesteve,2014-12-03 15:02:41,[MRG] Use nilearn plotting in examples bis,2ba584ebe63b2487e9b8cf8a30330cfb9108eaca,Pull request merge from lesteve/nilearn:use-nilearn-plotting-in-examples-bis to nilearn/nilearn:master
5,issue_comment,297,nilearn,nilearn,lesteve,2014-12-02 10:08:41,"I used my gh-pages to lower the barrier to entry for comments:

[current website examples](http://nilearn.github.io/auto_examples) vs [this PR examples](http://lesteve.github.io/auto_examples)

# plot_haxby_masks

[current website](http://nilearn.github.io/auto_examples/plot_haxby_masks.html) vs [this PR](http://lesteve.github.io/auto_examples/plot_haxby_masks.html)

# plot_oasis_vbm

[current website](http://nilearn.github.io/auto_examples/plot_oasis_vbm.html) vs [this PR](http://lesteve.github.io/auto_examples/plot_oasis_vbm.html)

# plot_localizer_mass_univariate_methods

[current website](http://nilearn.github.io/auto_examples/plot_localizer_mass_univariate_methods.html) vs [this PR](http://lesteve.github.io/auto_examples/plot_localizer_mass_univariate_methods.html)

# plot_haxby_mass_univariate

[current website](http://nilearn.github.io/auto_examples/plot_haxby_mass_univariate.html) vs [this PR](http://lesteve.github.io/auto_examples/plot_haxby_mass_univariate.html)
",,
6,issue_comment,297,nilearn,nilearn,lesteve,2014-12-02 10:29:35,"While I am at it I fixed two examples with a similar sessions length bug as before in 5bd8cbd2ee89156f00bd981957603692d2942b51.

# plot_haxby_multiclass

This one seems reasonable: the cv scores go up from 0.2 to 0.7
[current website](http://nilearn.github.io/auto_examples/plot_haxby_multiclass.html) vs [new candidate](http://lesteve.github.io/auto_examples/plot_haxby_multiclass.html)

# plot_haxby_grid_search

This one I am not sure the cv profiles change quite a bit, especially the Left-out validation scores that start quite high up in the 0.7 before going back to 0.5 when k grows.
[current website](http://nilearn.github.io/auto_examples/plot_haxby_grid_search.html) vs [new candidate](http://lesteve.github.io/auto_examples/plot_haxby_grid_search.html)
",,
7,issue_comment,297,nilearn,nilearn,bthirion,2014-12-03 09:12:30,"The examples look much better, thanks.

I'm a bit worried about x axis flipping: could you make sure to keep the 'L' 'R'  annotations on the images ?
",,
8,issue_comment,297,nilearn,nilearn,lesteve,2014-12-03 09:44:25,"> I'm a bit worried about x axis flipping: could you make sure to keep the 'L' 'R' annotations on the images ?

Are you saying they are hidden by the title from time to time? Maybe they don't show for some other reason.
",,
9,issue_comment,297,nilearn,nilearn,lesteve,2014-12-03 13:31:37,"@AlexandreAbraham if you have 5 minutes to look at this one before I merge it
",,
10,issue_comment,297,nilearn,nilearn,AlexandreAbraham,2014-12-03 14:43:31,"LGTM.
",,
11,pull_request_commit_comment,297,nilearn,nilearn,lesteve,2014-11-27 10:05:11,"While I am at it, should I rename all the _unmasked instances by _img?
",464fc7015ee32daca63c8b37f15d9af6d3730151,"(20, '', u'plot_haxby_mass_univariate.py')"
12,pull_request_commit_comment,297,nilearn,nilearn,banilo,2014-11-27 10:19:54,"Grammatical: slice has not been plotted at this point -> ""slice to be plotted""?
",464fc7015ee32daca63c8b37f15d9af6d3730151,"(51, '', u'plot_haxby_mass_univariate.py')"
13,pull_request_commit_comment,297,nilearn,nilearn,banilo,2014-11-27 10:24:46,"cf. above
",464fc7015ee32daca63c8b37f15d9af6d3730151,"(17, '', u'plot_localizer_mass_univariate_methods.py')"
14,pull_request_commit,297,nilearn,nilearn,lesteve,2014-11-26 13:54:58,Use nilearn plotting functions in plot_haxby_mass_univariate.py,ebeaa193280d2b5d5243380601ca684fe8d059b5,
15,pull_request_commit,297,nilearn,nilearn,lesteve,2014-11-26 14:39:34,Use nilearn plotting functions in plot_localizer_mass_univariate_methods.py,b2dd671ae10e70a51ccb65e744e8cea38a0d1018,
16,pull_request_commit,297,nilearn,nilearn,lesteve,2014-11-27 08:38:01,Use nilearn plotting functions in plot_oasis_vbm.py,e4c483120e5b812755f590fa4c0cae6b7c8b94bd,
17,pull_request_commit,297,nilearn,nilearn,lesteve,2014-11-27 09:03:16,Use nilearn plotting functions in plot_haxby_masks.py,464fc7015ee32daca63c8b37f15d9af6d3730151,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,304,nilearn,nilearn,lesteve,2014-12-05 13:52:47,"as per the title.
",start issue,Add glass brain plot to website carousel
2,issue_closed,304,nilearn,nilearn,lesteve,2014-12-05 13:55:52,,closed issue,Add glass brain plot to website carousel
3,pull_request_title,304,nilearn,nilearn,lesteve,2014-12-05 13:52:47,"as per the title.
",5689de1b89d5d316801c442c9c07f2106655e68d,Add glass brain plot to website carousel
4,pull_request_merged,304,nilearn,nilearn,lesteve,2014-12-05 13:55:52,Add glass brain plot to website carousel,84236c4d5b8f2bd24b0b7ae6a048cedf5ca8ce91,Pull request merge from lesteve/nilearn:add-glass-brain-to-carousel to nilearn/nilearn:master
5,issue_comment,304,nilearn,nilearn,AlexandreAbraham,2014-12-05 13:54:00,"You can commit that in master directly.
",,
6,issue_comment,304,nilearn,nilearn,lesteve,2014-12-05 14:01:35,"> You can commit that in master directly.

I know but now I can advertise the rejuvenated look of the website more easily :wink:
",,
7,pull_request_commit,304,nilearn,nilearn,lesteve,2014-12-05 13:18:18,Add glass brain plot to website carousel,5689de1b89d5d316801c442c9c07f2106655e68d,
