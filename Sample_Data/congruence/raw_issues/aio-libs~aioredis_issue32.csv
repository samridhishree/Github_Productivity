"rectype","issueid","project_owner","project_name","actor","time","text","action","title"
"issue_title","32","aio-libs","aioredis","tailhook","2014-07-21 10:37:52","This is only a test. I think you'll come up with a fix pretty easily.

In case it's not obvious `value` in line 247 is `QUEUED` 
","start issue","Add tests for incorrect transaction handling"
"issue_closed","32","aio-libs","aioredis","popravich","2014-07-21 12:19:42","","closed issue","Add tests for incorrect transaction handling"
"pull_request_title","32","aio-libs","aioredis","tailhook","2014-07-21 10:37:52","This is only a test. I think you'll come up with a fix pretty easily.

In case it's not obvious `value` in line 247 is `QUEUED` 
","cd8fee7638973a27fb254653ef34176c07e9b833","Add tests for incorrect transaction handling"
"pull_request_merged","32","aio-libs","aioredis","popravich","2014-07-21 12:19:42","Add tests for incorrect transaction handling","03228ea91eac028b576286e58c925615d502a3c5","Pull request merge from tailhook/aioredis:pool_err_test to aio-libs/aioredis:master"
"issue_comment","32","aio-libs","aioredis","popravich","2014-07-21 11:57:07","Thanks,
I wil add assertion in `pool.release` method
","",""
"issue_comment","32","aio-libs","aioredis","tailhook","2014-07-21 12:26:04","I believe assertion is not good or not enough, because it may hide real exception. It's better to close multi-exec or close connection. I.e. in case like:

```
try:
  with (yield from pool) as redis:
    redis.multi()
    1/0
    redis.exec()
except ZeroDivisionError:
   print('zero division')
```

Would be nice to see exception and be able to catch it instead of getting assertion error
","",""
"issue_comment","32","aio-libs","aioredis","popravich","2014-07-21 12:32:45","that makes sense
","",""
"pull_request_commit","32","aio-libs","aioredis","tailhook","2014-07-21 10:35:15","Add tests for incorrect transaction handling","cd8fee7638973a27fb254653ef34176c07e9b833",""
