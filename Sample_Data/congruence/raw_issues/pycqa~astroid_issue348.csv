"rectype","issueid","project_owner","project_name","actor","time","text","action","title"
"issue_title","348","pycqa","astroid","PCManticore","2016-07-18 18:17:31","Ideally, we should be able to infer this:

```
from astroid import extract_node
n = extract_node('''
""""""Hello""""""
from __future__ import (
    absolute_import,
    division,
    print_function,
    unicode_literals,
)
from six import add_metaclass

class Meta(type):

    def __getitem__(cls, arg):
        return arg

@add_metaclass(Meta)
class Works(object):
    pass

    def __getitem__(self, arg): return arg



x = Works['hello']
x
''')
i = next(n.infer())
print(i)
```
","start issue","__getitem__ inference for classes (using the metaclass)"
"issue_closed","348","pycqa","astroid","PCManticore","2017-01-22 12:49:31","","closed issue","__getitem__ inference for classes (using the metaclass)"
"issue_comment","348","pycqa","astroid","euresti","2017-01-04 05:02:57","Hope you don't mind.  I needed this for my type comment work.  :)","",""
"issue_comment","348","pycqa","astroid","PCManticore","2017-01-04 09:22:05","Of course I don't mind!","",""
