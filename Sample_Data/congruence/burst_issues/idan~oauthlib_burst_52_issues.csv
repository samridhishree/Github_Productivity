,rectype,issueid,project_owner,project_name,actor,time,text,action,title
0,issue_title,456,idan,oauthlib,empiricalthought,2017-01-05 15:10:32,These log statements would help me not tear my hair out while implementing LTI tool providers.,start issue,Add log statements to except clauses
1,issue_closed,456,idan,oauthlib,thedrow,2017-03-31 09:09:28,,closed issue,Add log statements to except clauses
2,pull_request_title,456,idan,oauthlib,empiricalthought,2017-01-05 15:10:32,These log statements would help me not tear my hair out while implementing LTI tool providers.,66260fab4a9bd81ba9e74323147bad3f25ddcd56,Add log statements to except clauses
3,pull_request_merged,456,idan,oauthlib,thedrow,2017-03-31 09:09:28,Add log statements to except clauses,6115f2259831a3d16e0d8e9a630a1c109f366c09,Pull request merge from empiricalthought/oauthlib:master to idan/oauthlib:master
4,pull_request_commit_comment,456,idan,oauthlib,bjmc,2017-01-08 19:26:28,Nitpick: single-letter variable names are hard to grep for. Consider `err` or `error` instead?,66260fab4a9bd81ba9e74323147bad3f25ddcd56,"(None, '', u'oauthlib/oauth1/rfc5849/endpoints/signature_only.py')"
5,pull_request_commit_comment,456,idan,oauthlib,empiricalthought,2017-01-09 14:26:26,Sure -- I was following the convention(?) in https://github.com/idan/oauthlib/blob/67f973ff7f98bb3d892a33eda67ba1dab3bddead/oauthlib/oauth2/rfc6749/endpoints/base.py#L58 though -- down to the logging message.,66260fab4a9bd81ba9e74323147bad3f25ddcd56,"(None, '', u'oauthlib/oauth1/rfc5849/endpoints/signature_only.py')"
6,pull_request_commit_comment,456,idan,oauthlib,bjmc,2017-01-09 14:41:01,"Yeah, I don't love that one, either. But let sleeping dogs lie.

Thanks for changing it.",66260fab4a9bd81ba9e74323147bad3f25ddcd56,"(None, '', u'oauthlib/oauth1/rfc5849/endpoints/signature_only.py')"
7,pull_request_commit,456,idan,oauthlib,steve.huwig@unizin.org,2017-01-05 15:07:22,Add log statements to except clauses,47f38135620f9ee515df265bf4ec3877b3ef6500,
8,pull_request_commit,456,idan,oauthlib,steve.huwig@unizin.org,2017-01-09 14:32:29,Use a more grep-able variable name,66260fab4a9bd81ba9e74323147bad3f25ddcd56,
0,issue_title,453,idan,oauthlib,kippandrew,2016-12-07 05:26:29,"According to [RC7009 Section 2.1](https://tools.ietf.org/html/rfc7009#section-2.1), a client should include authentication credentials when revoking its tokens. As discussed in #339, this is not make sense for public clients. However, in that case, the public client should still be checked that is infact a public client (`authenticate_client_id`).

I also fixed a what appears to be a bad merge (`test_revoke_token_without_client_authentication` was defined twice), which is why the diff is a little messy.",start issue,Public clients should be validated when revoking tokens
1,issue_closed,453,idan,oauthlib,thedrow,2017-03-31 09:11:18,,closed issue,Public clients should be validated when revoking tokens
2,pull_request_title,453,idan,oauthlib,kippandrew,2016-12-07 05:26:29,"According to [RC7009 Section 2.1](https://tools.ietf.org/html/rfc7009#section-2.1), a client should include authentication credentials when revoking its tokens. As discussed in #339, this is not make sense for public clients. However, in that case, the public client should still be checked that is infact a public client (`authenticate_client_id`).

I also fixed a what appears to be a bad merge (`test_revoke_token_without_client_authentication` was defined twice), which is why the diff is a little messy.",4297a7e3db43b5bf293537964e0f51332dcb181f,Public clients should be validated when revoking tokens
3,pull_request_merged,453,idan,oauthlib,thedrow,2017-03-31 09:11:18,Public clients should be validated when revoking tokens,70262c730450b28e07d3543c1a6d48c13cd7ea1e,Pull request merge from kippandrew/oauthlib:fix-revocation-public-clients to idan/oauthlib:master
4,issue_comment,453,idan,oauthlib,kippandrew,2017-02-15 22:15:24,Bump! Any chance someone can review this or merge it! Thanks!,,
5,issue_comment,453,idan,oauthlib,thedrow,2017-03-31 09:10:19,Sorry. I missed this PR.,,
6,pull_request_commit,453,idan,oauthlib,kippandrew,2016-12-07 04:55:39,Authenticate public clients before revocation,bf2f9dbff3e04addd16ad825e6dae30537677afc,
7,pull_request_commit,453,idan,oauthlib,kippandrew,2016-12-07 04:57:00,Fix tests,619db8c1e0cee28182011e9802efddaf1bd5e237,
8,pull_request_commit,453,idan,oauthlib,kippandrew,2016-12-07 05:30:59,Python 3 fixes,4297a7e3db43b5bf293537964e0f51332dcb181f,
0,issue_title,467,idan,oauthlib,ajpaul510,2017-03-06 18:12:33,Fixed grammar on line 7.,start issue,Fixed client.rst
1,issue_closed,467,idan,oauthlib,thedrow,2017-03-31 08:59:54,,closed issue,Fixed client.rst
2,pull_request_title,467,idan,oauthlib,ajpaul510,2017-03-06 18:12:33,Fixed grammar on line 7.,92a269aac7b5772e8b5860930f8edb3e0741b91c,Fixed client.rst
3,pull_request_merged,467,idan,oauthlib,thedrow,2017-03-31 08:59:54,Fixed client.rst,cd19a1af2a9639fef65d706c99b877b723ffbdb3,Pull request merge from Unknown:master to idan/oauthlib:master
4,issue_comment,467,idan,oauthlib,thedrow,2017-03-31 09:00:00,Thanks. Feel free to add yourself to the AUTHORS file.,,
5,issue_comment,467,idan,oauthlib,ajpaul510,2017-05-05 05:35:19,"Hi,
I’m a computer science student looking to make some contributions to your repo. 
Do you have any suggestions on how I can better understand how everything works? I am new to the open source community. 

Thanks,
Aj

> On Mar 31, 2017, at 2:00 AM, Omer Katz <notifications@github.com> wrote:
> 
> Thanks. Feel free to add yourself to the AUTHORS file.
> 
> —
> You are receiving this because you authored the thread.
> Reply to this email directly, view it on GitHub <https://github.com/idan/oauthlib/pull/467#issuecomment-290658300>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AP2TRs3TjmRGUPD-pJMKQO21ZsTkHEwkks5rrMCRgaJpZM4MUgBH>.
> 

",,
6,pull_request_commit,467,idan,oauthlib,ajpaul510,2017-03-06 18:11:16,"Fixed client.rst

Fixed grammar on line 7.",92a269aac7b5772e8b5860930f8edb3e0741b91c,
0,issue_title,464,idan,oauthlib,cknave,2017-02-23 20:30:12,"Proxy keys weren't being filled in on CaseInsensitiveDict.update(), causing lookups to fail.",start issue,Update proxy keys on CaseInsensitiveDict.update()
1,issue_closed,464,idan,oauthlib,thedrow,2017-03-31 09:05:13,,closed issue,Update proxy keys on CaseInsensitiveDict.update()
2,pull_request_title,464,idan,oauthlib,cknave,2017-02-23 20:30:12,"Proxy keys weren't being filled in on CaseInsensitiveDict.update(), causing lookups to fail.",10308ccdf1d6fc92cfed8a3b25779e7cbb73f9b0,Update proxy keys on CaseInsensitiveDict.update()
3,pull_request_merged,464,idan,oauthlib,thedrow,2017-03-31 09:05:13,Update proxy keys on CaseInsensitiveDict.update(),e6c6ddb8fd25032d51a07623d549f310ded68fc8,Pull request merge from cknave/oauthlib:case-insensitive-dict-update to idan/oauthlib:master
4,issue_comment,464,idan,oauthlib,thedrow,2017-03-31 09:05:19,Thanks. Feel free to add yourself to the AUTHORS file.,,
5,pull_request_commit,464,idan,oauthlib,kevinv@aweber.com,2017-02-23 20:26:36,Update proxy keys on CaseInsensitiveDict.update(),10308ccdf1d6fc92cfed8a3b25779e7cbb73f9b0,
0,issue_title,469,idan,oauthlib,orenmazor,2017-03-29 17:14:22,"@thedrow @bjmc Hey guys, looks like there are some  problems validating redirect_uris that have anchors in unexpected places (eg angular uris).

I extended the regex and added a really basic test.

thoughts?",start issue,Add anchors to valid chars in a redirect_uri
1,issue_closed,469,idan,oauthlib,thedrow,2017-03-31 08:59:30,,closed issue,Add anchors to valid chars in a redirect_uri
2,pull_request_title,469,idan,oauthlib,orenmazor,2017-03-29 17:14:22,"@thedrow @bjmc Hey guys, looks like there are some  problems validating redirect_uris that have anchors in unexpected places (eg angular uris).

I extended the regex and added a really basic test.

thoughts?",52f197eae760d87791f1fdc85d558da1f4554635,Add anchors to valid chars in a redirect_uri
3,issue_comment,469,idan,oauthlib,kevin-brown,2017-03-30 04:51:18,"What's accepted by `pchar` is formally defined in [RFC 3986, Section 3.3](https://tools.ietf.org/html/rfc3986#section-3.3) and it doesn't contain `#` or `?`. This is because `pchar` defines what characters are allowed in the path, and the `#` defines the start of the fragment.

The problem that you're running into is that the fragment is not formally defined as a part of the [absolute URI](https://tools.ietf.org/html/rfc3986#section-4.3), This should not normally be a problem, since the `redirect_uri` must be a ""URI"" and not an ""Absolute URI"" [per the specification](https://tools.ietf.org/html/rfc6749#appendix-A.6), but oauthlib is [validating it as an absolute URI](https://github.com/idan/oauthlib/blob/d2c7be6c38c9cc2dd3f5ba0dffaf38be42fcb418/oauthlib/oauth2/rfc6749/grant_types/authorization_code.py#L299-L300).

But oauthlib is actually doing it correctly, since there is a note in [RFC 6749, Section 3.1.2](https://tools.ietf.org/html/rfc6749#section-3.1.2) which defines acceptable redirection endpoints, which explicitly says

> The redirection endpoint URI MUST be an absolute URI as defined by [[RFC3986] Section 4.3](https://tools.ietf.org/html/rfc3986#section-4.3).

And later

> The endpoint URI MUST NOT include a fragment component.

So, there is an inconsistency within the specification, and oauthlib opted to lean on the safer side. After looking through [the errata](https://www.rfc-editor.org/errata_search.php?rfc=6749), I don't believe it's been reported.",,
4,issue_comment,469,idan,oauthlib,bjmc,2017-03-30 07:33:04,"You might check out this document, [""The correct use of the state parameter in OAuth 2""](http://www.thread-safe.com/2014/05/the-correct-use-of-state-parameter-in.html) by one of the authors of the RFC. It suggests encoding extra parameters your application needs into the `state` parameter that gets round-tripped during an OAuth2 authorization flow. Maybe that would be appropriate for your use-case?",,
5,issue_comment,469,idan,oauthlib,orenmazor,2017-03-30 13:31:12,"@bjmc I feel like it's wrong to use the `state` param as a generic bucket when it should be encourated to be used for security (i.e. csrf style). but also this is a uri issue and not extra parameters type of thing.

@kevin-brown your comments make sense. but the long and the short of it is that angular uses these fragments for routing. as far as some more modern frameworks are concerned, routing requests via fragments is acceptable. which means that if I use oauthlib in my authentication server, people who use angular can't authenticate it.

so the question becomes, do we want this to be strictly adhering or do we allow a superset of functionality?",,
6,issue_comment,469,idan,oauthlib,bjmc,2017-03-30 13:39:16,"@orenmazor It's not an either-or question. You can use `state` for csrf security and *also* encode extra information in the parameter. For example, a signed JWT that contains a nonce could also contain other information. If one of the spec authors is specifically saying it's intended to be used that way, I don't think it's wrong.

I don't know very much about Angular, but it seems like it can be configured to work with URLs [without a fragment identifier?](http://stackoverflow.com/questions/14771091/removing-the-fragment-identifier-from-angularjs-urls-symbol)",,
7,issue_comment,469,idan,oauthlib,kevin-brown,2017-03-30 13:41:43,"> so the question becomes, do we want this to be strictly adhering or do we allow a superset of functionality?

I can't speak for the project owners, but I will just leave the description here.

> _A generic, spec-compliant, thorough implementation of the OAuth request-signing logic for python_",,
8,issue_comment,469,idan,oauthlib,orenmazor,2017-03-30 13:42:22,"@bjmc ah thats true. I kind of always wanted to keep `state` as small as possible but I guess nothing stops somebody from throwing as much of Genesis as you can fit in there :)

I don't know much about angular either, but as far as it's concerned, those are valid urls. I don't know that I can dictate to people who integrate with us how they should structure their routing, to be honest (tho I'd definitely like to)",,
9,issue_comment,469,idan,oauthlib,bjmc,2017-03-30 13:53:42,"I obviously don't know the specifics of your situation with your users, but I think you'd be on pretty firm ground to say ""The RFC says it has to be this way...""

FWIW, it seems like [the practice in Angular-land](https://www.thepolyglotdeveloper.com/2015/03/using-oauth-2-0-in-your-web-browser-with-angularjs/) is to have one page that's just responsible for handling OAuth2 callbacks, and then that will redirect back into the main application. That client-side redirect could be driven off something encoded in the `state` if they wanted.

There may even be [library support](https://github.com/JamesRandall/AngularJS-OAuth2) so the app devs don't have to implement this all themselves.",,
10,issue_comment,469,idan,oauthlib,orenmazor,2017-03-30 14:42:19,"@bjmc totally. the only problem with that link is that its for implicit grants, which isn't what we're doing here :(

the only other solution than updating the regex to allow more complex urls is to rely on the default redirect uri feature in oauthlib. the downside to this is that I'm then taking away their ability to have multiple possible redirect uris.

tbh the regex solution smells the rightest, as the likelyhood of fragment urls going away anytime soon is basically 0. but if you guys are a strong no on this then I'll need to solve the problem some other way.",,
11,issue_comment,469,idan,oauthlib,bjmc,2017-03-30 14:55:25,"What are they wanting to do in Angular that isn't the implicit grant? A public Javascript client can't protect its `client_secret` so in that case they'll have to have some kind of back-end component, anyway.

Modifying `pchar` to violate the spec smells wrong to me. I'm not one of the project owners so it's not my place to give a final decision, but I'm pretty iffy on it.",,
12,issue_comment,469,idan,oauthlib,orenmazor,2017-03-30 14:57:04,"> What are they wanting to do in Angular that isn't the implicit grant? A public Javascript client can't protect its client_secret so in that case they'll have to have some kind of back-end component, anyway.

thats a great point actually. I assumed they're just piping the request to a backend, but if thats the case then maybe the backend can be reached directly.",,
13,issue_comment,469,idan,oauthlib,thedrow,2017-03-31 08:59:27,I agree with @bjmc I don't think this PR should be accepted. I'd rather stick to the spec as best as I can in order to avoid security issues and/or compatibility issues with other clients.,,
14,issue_comment,469,idan,oauthlib,orenmazor,2017-03-31 09:08:03,":+1: cool beans
On Fri, Mar 31, 2017 at 4:59 AM Omer Katz <notifications@github.com> wrote:

> Closed #469 <https://github.com/idan/oauthlib/pull/469>.
>
> —
> You are receiving this because you were mentioned.
> Reply to this email directly, view it on GitHub
> <https://github.com/idan/oauthlib/pull/469#event-1023729192>, or mute the
> thread
> <https://github.com/notifications/unsubscribe-auth/AAXdF8P3MhuTmX4Zf_agSYm5Ws10esYLks5rrMBzgaJpZM4MtSN3>
> .
>
",,
15,pull_request_commit_comment,469,idan,oauthlib,bjmc,2017-03-29 17:42:31,Why are the requirements expanding as a result of this?,52f197eae760d87791f1fdc85d558da1f4554635,"(None, '', u'requirements.txt')"
16,pull_request_commit_comment,469,idan,oauthlib,bjmc,2017-03-29 17:43:27,"IMHO, requirements that are only needed for tests should go in a separate `test_requirements.txt` file, not part of the main `requirements.txt`",52f197eae760d87791f1fdc85d558da1f4554635,"(None, '', u'requirements.txt')"
17,pull_request_commit_comment,469,idan,oauthlib,bjmc,2017-03-29 17:45:26,"Can this be parameterized to be several different test cases, rather than one test that makes multiple assertions?",52f197eae760d87791f1fdc85d558da1f4554635,"(None, '', u'tests/oauth2/rfc6749/test_utils.py')"
18,pull_request_commit_comment,469,idan,oauthlib,orenmazor,2017-03-29 17:46:33,I ran the test suite and it was failing because these guys were missing,52f197eae760d87791f1fdc85d558da1f4554635,"(None, '', u'requirements.txt')"
19,pull_request_commit_comment,469,idan,oauthlib,orenmazor,2017-03-29 17:46:52,ahh didn't see the test_requirements. totally. fixing.,52f197eae760d87791f1fdc85d558da1f4554635,"(None, '', u'requirements.txt')"
20,pull_request_commit_comment,469,idan,oauthlib,orenmazor,2017-03-29 17:48:33,"totally. there were zero tests so I wasn't sure what strategy you guys would prefer, so I went with the laziest one. I'll split these guys up.

what we should do is get some kind of better list of good/bad urls and have them iterated on.",52f197eae760d87791f1fdc85d558da1f4554635,"(None, '', u'tests/oauth2/rfc6749/test_utils.py')"
21,pull_request_commit,469,idan,oauthlib,orenmazor,2017-03-29 16:36:41,missing deps,b1697259b494a28afc3f4c27fcd5863d9ef77cc8,
22,pull_request_commit,469,idan,oauthlib,orenmazor,2017-03-29 17:12:11,add # to the pchar list,c1fd094fd013d0447fb10a3b668552d992bb1da1,
23,pull_request_commit,469,idan,oauthlib,orenmazor,2017-03-29 17:47:12,"Revert ""missing deps""

This reverts commit b1697259b494a28afc3f4c27fcd5863d9ef77cc8.",09b2bdf3bc6d72034082c4bcc0ef83d1d38f8a68,
24,pull_request_commit,469,idan,oauthlib,orenmazor,2017-03-29 17:49:38,split the tests up a bit,52f197eae760d87791f1fdc85d558da1f4554635,
0,issue_title,462,idan,oauthlib,skion,2017-02-14 23:53:00,Address missing OIDC errors and fix a typo in the `AccountSelectionRequired` exception.,start issue,Add remaining OIDC errors
1,issue_closed,462,idan,oauthlib,thedrow,2017-03-31 09:03:07,,closed issue,Add remaining OIDC errors
2,pull_request_title,462,idan,oauthlib,skion,2017-02-14 23:53:00,Address missing OIDC errors and fix a typo in the `AccountSelectionRequired` exception.,9e4ac2ca22ecaf260b67ef6a93dd06b6eedb1da7,Add remaining OIDC errors
3,pull_request_merged,462,idan,oauthlib,thedrow,2017-03-31 09:03:07,Add remaining OIDC errors,0573457a1f32417f9b280b5102a123ee49739bbf,Pull request merge from skion/oauthlib:oidc-errors to idan/oauthlib:master
4,pull_request_commit,462,idan,oauthlib,skion,2017-02-14 23:47:03,Add missing OpenID Connect error codes.,91529519442795c3e21cb4fbf5dd2f331185d633,
5,pull_request_commit,462,idan,oauthlib,skion,2017-02-14 23:51:05,Fix typo in account_selection_required exception name.,9e4ac2ca22ecaf260b67ef6a93dd06b6eedb1da7,
0,issue_title,463,idan,oauthlib,skion,2017-02-21 21:53:31,OIDC errors should be redirected as indicated by the `response_mode` parameter. This PR attempts to do that without breaking OAuth2 flows.,start issue,Redirect errors according to OIDC's response_mode.
1,issue_closed,463,idan,oauthlib,thedrow,2017-03-31 09:06:56,,closed issue,Redirect errors according to OIDC's response_mode.
2,pull_request_title,463,idan,oauthlib,skion,2017-02-21 21:53:31,OIDC errors should be redirected as indicated by the `response_mode` parameter. This PR attempts to do that without breaking OAuth2 flows.,739c67342f71c94d10b0f2af869202a9391ae3f4,Redirect errors according to OIDC's response_mode.
3,pull_request_merged,463,idan,oauthlib,thedrow,2017-03-31 09:06:56,Redirect errors according to OIDC's response_mode.,e8d8e0a81ced977c3e476c1f54f0856117ef3b74,Pull request merge from skion/oauthlib:fragment-errors to idan/oauthlib:master
4,issue_comment,463,idan,oauthlib,duaneking,2017-10-18 04:44:39,"@skion This breaks flask-authlib installs per the above :'(

Is there anything I can do to help or at least get a workaround so everybody can get a working oauth2 flow doing between an identity server and its client app?

I'm actually one of the ones trying to get an app built, and I'm unable to get even a simple oauth2 demo working using @lepture  flask-oauth and oauthlib and all I can find in google are the issues referenced above.  Its been very frustrating.  Anything I can do to get a fix so we can get oauth working again, please just let me know.",,
5,issue_comment,463,idan,oauthlib,skion,2017-10-18 12:52:54,"@duaneking This should be addressed in #487 already, are you able to try?",,
6,issue_comment,463,idan,oauthlib,duaneking,2017-10-18 15:10:30,"Sadly I already have the updated packages and when I pull the flask-oauthlib source itself directly from github, the tests for it do not even pass when they are run using nosetests or pytests unless I pin to a version that is earlier.

Edit:
They pin to version oauthlib==1.1.2 to get their tests passing.",,
7,issue_comment,463,idan,oauthlib,lepture,2017-10-18 15:33:49,@duaneking I've released oauthlib 2.0.5. Try it now.,,
8,issue_comment,463,idan,oauthlib,duaneking,2017-10-18 16:17:03,"Thank You @lepture 

I notice you are still pinned to the older version of oauthlib per https://github.com/lepture/flask-oauthlib/blob/master/requirements.txt may I ask when that will be upgraded?
",,
9,issue_comment,463,idan,oauthlib,duaneking,2017-10-18 20:45:08,"If I pin the requirments.txt request to install oauthlib and pin it on the system after I install flask-oauthlib (as that itself pins to a much older version of oauthlib) I get the following errors on every single attempt to authenticate a simple 'email' scope grant in a ""hello world"" style app/client pair:
 
```
[Wed Oct 18 20:34:13.444475 2017] [:error] [pid 28301] [remote 127.0.0.1:45331] mod_wsgi (pid=28301): Exception occurred processing WSGI script '/opt/python/current/app/application.py'.
[Wed Oct 18 20:34:13.444515 2017] [:error] [pid 28301] [remote 127.0.0.1:45331] Traceback (most recent call last):
[Wed Oct 18 20:34:13.444533 2017] [:error] [pid 28301] [remote 127.0.0.1:45331]   File ""/opt/python/run/venv/lib/python2.7/site-packages/flask/app.py"", line 1997, in __call__
[Wed Oct 18 20:34:13.445008 2017] [:error] [pid 28301] [remote 127.0.0.1:45331]     return self.wsgi_app(environ, start_response)
[Wed Oct 18 20:34:13.445026 2017] [:error] [pid 28301] [remote 127.0.0.1:45331]   File ""/opt/python/run/venv/lib/python2.7/site-packages/flask/app.py"", line 1985, in wsgi_app
[Wed Oct 18 20:34:13.445043 2017] [:error] [pid 28301] [remote 127.0.0.1:45331]     response = self.handle_exception(e)
[Wed Oct 18 20:34:13.445050 2017] [:error] [pid 28301] [remote 127.0.0.1:45331]   File ""/opt/python/run/venv/lib/python2.7/site-packages/flask/app.py"", line 1540, in handle_exception
[Wed Oct 18 20:34:13.445060 2017] [:error] [pid 28301] [remote 127.0.0.1:45331]     reraise(exc_type, exc_value, tb)
[Wed Oct 18 20:34:13.445065 2017] [:error] [pid 28301] [remote 127.0.0.1:45331]   File ""/opt/python/run/venv/lib/python2.7/site-packages/flask/app.py"", line 1982, in wsgi_app
[Wed Oct 18 20:34:13.445073 2017] [:error] [pid 28301] [remote 127.0.0.1:45331]     response = self.full_dispatch_request()
[Wed Oct 18 20:34:13.445079 2017] [:error] [pid 28301] [remote 127.0.0.1:45331]   File ""/opt/python/run/venv/lib/python2.7/site-packages/flask/app.py"", line 1614, in full_dispatch_request
[Wed Oct 18 20:34:13.445087 2017] [:error] [pid 28301] [remote 127.0.0.1:45331]     rv = self.handle_user_exception(e)
[Wed Oct 18 20:34:13.445092 2017] [:error] [pid 28301] [remote 127.0.0.1:45331]   File ""/opt/python/run/venv/lib/python2.7/site-packages/flask/app.py"", line 1517, in handle_user_exception
[Wed Oct 18 20:34:13.445100 2017] [:error] [pid 28301] [remote 127.0.0.1:45331]     reraise(exc_type, exc_value, tb)
[Wed Oct 18 20:34:13.445114 2017] [:error] [pid 28301] [remote 127.0.0.1:45331]   File ""/opt/python/run/venv/lib/python2.7/site-packages/flask/app.py"", line 1612, in full_dispatch_request
[Wed Oct 18 20:34:13.445123 2017] [:error] [pid 28301] [remote 127.0.0.1:45331]     rv = self.dispatch_request()
[Wed Oct 18 20:34:13.445128 2017] [:error] [pid 28301] [remote 127.0.0.1:45331]   File ""/opt/python/run/venv/lib/python2.7/site-packages/flask/app.py"", line 1598, in dispatch_request
[Wed Oct 18 20:34:13.445136 2017] [:error] [pid 28301] [remote 127.0.0.1:45331]     return self.view_functions[rule.endpoint](**req.view_args)
[Wed Oct 18 20:34:13.445141 2017] [:error] [pid 28301] [remote 127.0.0.1:45331]   File ""/opt/python/run/venv/lib/python2.7/site-packages/flask_oauthlib/provider/oauth2.py"", line 507, in decorated
[Wed Oct 18 20:34:13.445363 2017] [:error] [pid 28301] [remote 127.0.0.1:45331]     uri, http_method, body, headers, credentials
[Wed Oct 18 20:34:13.445378 2017] [:error] [pid 28301] [remote 127.0.0.1:45331]   File ""/opt/python/run/venv/lib/python2.7/site-packages/oauthlib/oauth2/rfc6749/endpoints/base.py"", line 64, in wrapper
[Wed Oct 18 20:34:13.445422 2017] [:error] [pid 28301] [remote 127.0.0.1:45331]     return f(endpoint, uri, *args, **kwargs)
[Wed Oct 18 20:34:13.445434 2017] [:error] [pid 28301] [remote 127.0.0.1:45331]   File ""/opt/python/run/venv/lib/python2.7/site-packages/oauthlib/oauth2/rfc6749/endpoints/token.py"", line 117, in create_token_response
[Wed Oct 18 20:34:13.445482 2017] [:error] [pid 28301] [remote 127.0.0.1:45331]     request, self.default_token_type)
[Wed Oct 18 20:34:13.445495 2017] [:error] [pid 28301] [remote 127.0.0.1:45331]   File ""/opt/python/run/venv/lib/python2.7/site-packages/oauthlib/oauth2/rfc6749/grant_types/openid_connect.py"", line 134, in create_token_response
[Wed Oct 18 20:34:13.445611 2017] [:error] [pid 28301] [remote 127.0.0.1:45331]     handler = self._handler_for_request(request)
[Wed Oct 18 20:34:13.445623 2017] [:error] [pid 28301] [remote 127.0.0.1:45331]   File ""/opt/python/run/venv/lib/python2.7/site-packages/oauthlib/oauth2/rfc6749/grant_types/openid_connect.py"", line 125, in _handler_for_request
[Wed Oct 18 20:34:13.446003 2017] [:error] [pid 28301] [remote 127.0.0.1:45331]     scopes = self.request_validator.get_authorization_code_scopes(client_id, code, redirect_uri, request)
[Wed Oct 18 20:34:13.446016 2017] [:error] [pid 28301] [remote 127.0.0.1:45331]   File ""/opt/python/run/venv/lib/python2.7/site-packages/oauthlib/oauth2/rfc6749/request_validator.py"", line 263, in get_authorization_code_scopes
[Wed Oct 18 20:34:13.446168 2017] [:error] [pid 28301] [remote 127.0.0.1:45331]     raise NotImplementedError('Subclasses must implement this method.')
[Wed Oct 18 20:34:13.446196 2017] [:error] [pid 28301] [remote 127.0.0.1:45331] NotImplementedError: Subclasses must implement this method.
```
This is really frustrating.  What can I do to help get this fixed?

It should be noted that I didn't even explicitly select OpenID Connect as my grant type; I just used the examples and they don't expllcitly ask for this support.",,
10,issue_comment,463,idan,oauthlib,lepture,2017-10-19 00:08:09,@duaneking Please add a test case in tests/test_oauth2.,,
11,issue_comment,463,idan,oauthlib,wiliamsouza,2017-10-19 15:15:07,@duaneking I added a method example here https://github.com/idan/oauthlib/issues/490#issuecomment-337936658,,
12,issue_comment,463,idan,oauthlib,duaneking,2017-10-19 15:30:30,"I think you misunderstand me. Or I misunderstood you.  I don't have a class implementation that needs a method, I'm just using the raw flask-oauthlib library and oauthlib and it seems to be broken, or otherwise missing that method itself.  Are you asking me to patch oathlib?",,
13,pull_request_commit,463,idan,oauthlib,skion,2017-02-21 21:34:07,Redirect errors according to response_mode.,739c67342f71c94d10b0f2af869202a9391ae3f4,
0,issue_title,459,idan,oauthlib,jdufresne,2017-02-07 02:20:59,"See http://pythonwheels.com/

Python wheels provide faster installation for pure Python packages. To upload a
wheel to PyPI use the command:

python setup.py sdist bdist_wheel upload",start issue,Add universal wheel support
1,issue_closed,459,idan,oauthlib,thedrow,2017-03-31 09:08:11,,closed issue,Add universal wheel support
2,pull_request_title,459,idan,oauthlib,jdufresne,2017-02-07 02:20:59,"See http://pythonwheels.com/

Python wheels provide faster installation for pure Python packages. To upload a
wheel to PyPI use the command:

python setup.py sdist bdist_wheel upload",06c7c58bac102838c46a5bef47e3d1758f7095c0,Add universal wheel support
3,pull_request_merged,459,idan,oauthlib,thedrow,2017-03-31 09:08:11,Add universal wheel support,70dd283be31ae02284bcf16fcd29385bbf917bee,Pull request merge from jdufresne/oauthlib:uni-wheel to idan/oauthlib:master
4,pull_request_commit,459,idan,oauthlib,jdufresne,2017-02-07 02:17:53,"Add universal wheel support

See http://pythonwheels.com/

Python wheels provide faster installation for pure Python packages. To upload a
wheel to PyPI use the command:

python setup.py sdist bdist_wheel upload",06c7c58bac102838c46a5bef47e3d1758f7095c0,
