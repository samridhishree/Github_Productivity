"rectype","issueid","project_owner","project_name","actor","time","text","action","title"
"issue_title","703","nilearn","nilearn","AlexandreAbraham","2015-07-17 13:36:04","Fix #628.

This PR modifies CSV loading for confounds.
If `np.genfromtxt` fails, we try to guess the delimiter in the file (most of the time, a comma).
","start issue","[MRG+1] Makes loading of CSV files more robust"
"issue_closed","703","nilearn","nilearn","lesteve","2015-07-21 06:30:27","","closed issue","[MRG+1] Makes loading of CSV files more robust"
"pull_request_title","703","nilearn","nilearn","AlexandreAbraham","2015-07-17 13:36:04","Fix #628.

This PR modifies CSV loading for confounds.
If `np.genfromtxt` fails, we try to guess the delimiter in the file (most of the time, a comma).
","e677bc34f339b343c11cb16bb23a76c4b33df30a","[MRG+1] Makes loading of CSV files more robust"
"pull_request_merged","703","nilearn","nilearn","lesteve","2015-07-21 06:30:27","[MRG+1] Makes loading of CSV files more robust","4a5f7c38384d53f8eef582a2d0b7087de210ff5b","Pull request merge from AlexandreAbraham/nilearn:csv_reader to nilearn/nilearn:master"
"issue_comment","703","nilearn","nilearn","landscape-bot","2015-07-18 00:03:42","[![Code Health](https://landscape.io/badge/209554/landscape.svg?style=flat)](https://landscape.io/diff/198187)
Code quality remained the same when pulling **[99393dc](https://github.com/AlexandreAbraham/nilearn/commit/99393dc51a7ea645c8bcf654d86f53137c9fad3c) on AlexandreAbraham:csv_reader** into **[1964c45](https://github.com/nilearn/nilearn/commit/1964c454c68cef07fbe8bd54f353ee52c21ab3b7) on nilearn:master**.
","",""
"issue_comment","703","nilearn","nilearn","GaelVaroquaux","2015-07-18 17:30:31","This is very cool. +1 for merge.
","",""
"issue_comment","703","nilearn","nilearn","lesteve","2015-07-21 06:30:19","Merging, as promised, thanks.
","",""
"pull_request_commit_comment","703","nilearn","nilearn","bthirion","2015-07-17 18:06:36","dosctrings please ?
","e677bc34f339b343c11cb16bb23a76c4b33df30a","(None, '', u'nilearn/_utils/numpy_conversions.py')"
"pull_request_commit_comment","703","nilearn","nilearn","lesteve","2015-07-18 18:57:25","Any reason why we don't do the usual thing with reraising the original exception, i.e. something like:

``` python
e.args += ('Could not read CSV file ""{0}""'.format(csv_path), )
raise
```
","e677bc34f339b343c11cb16bb23a76c4b33df30a","(51, '', u'nilearn/_utils/numpy_conversions.py')"
"pull_request_commit_comment","703","nilearn","nilearn","AlexandreAbraham","2015-07-19 16:20:41","The csv sniffer returns a csv.Error. I thought it would be more consistent to always return a TypeError when there is an error loading a CSV file. Otherwise doing a `try ... except` around this function could be cumbersome.
","e677bc34f339b343c11cb16bb23a76c4b33df30a","(51, '', u'nilearn/_utils/numpy_conversions.py')"
"pull_request_commit_comment","703","nilearn","nilearn","banilo","2015-07-19 21:55:37","say that each character relates to one of the possible dilimiters...other wise the ""syntax"" of the delimiter argument might remain obscure to some. Especially when wondering whether '\t' counts as one or not...
","e677bc34f339b343c11cb16bb23a76c4b33df30a","(None, '', u'nilearn/_utils/numpy_conversions.py')"
"pull_request_commit_comment","703","nilearn","nilearn","banilo","2015-07-19 21:56:48","structured exception handling?
","e677bc34f339b343c11cb16bb23a76c4b33df30a","(41, '', u'nilearn/_utils/numpy_conversions.py')"
"pull_request_commit_comment","703","nilearn","nilearn","banilo","2015-07-19 21:59:46","No way....they have a `Sniffer` class?
","e677bc34f339b343c11cb16bb23a76c4b33df30a","(48, '', u'nilearn/_utils/numpy_conversions.py')"
"pull_request_commit_comment","703","nilearn","nilearn","banilo","2015-07-19 22:01:10","You might want to add all delimiters that are in the default parameter.
","e677bc34f339b343c11cb16bb23a76c4b33df30a","(None, '', u'nilearn/tests/test_numpy_conversions.py')"
"pull_request_commit_comment","703","nilearn","nilearn","banilo","2015-07-19 22:03:00","`òs.remove()`might be more explicit and is identical to `os.unlink`
","e677bc34f339b343c11cb16bb23a76c4b33df30a","(None, '', u'nilearn/tests/test_numpy_conversions.py')"
"pull_request_commit_comment","703","nilearn","nilearn","banilo","2015-07-19 22:03:33","not ""close"", but equal!
","e677bc34f339b343c11cb16bb23a76c4b33df30a","(None, '', u'nilearn/tests/test_numpy_conversions.py')"
"pull_request_commit_comment","703","nilearn","nilearn","banilo","2015-07-19 22:04:02","free line
","e677bc34f339b343c11cb16bb23a76c4b33df30a","(None, '', u'nilearn/_utils/numpy_conversions.py')"
"pull_request_commit_comment","703","nilearn","nilearn","banilo","2015-07-19 22:04:07","free line
","e677bc34f339b343c11cb16bb23a76c4b33df30a","(None, '', u'nilearn/_utils/numpy_conversions.py')"
"pull_request_commit_comment","703","nilearn","nilearn","AlexandreAbraham","2015-07-19 22:14:12","Tried to fix it.
","e677bc34f339b343c11cb16bb23a76c4b33df30a","(None, '', u'nilearn/_utils/numpy_conversions.py')"
"pull_request_commit_comment","703","nilearn","nilearn","AlexandreAbraham","2015-07-19 22:14:21","Fixed.
","e677bc34f339b343c11cb16bb23a76c4b33df30a","(None, '', u'nilearn/_utils/numpy_conversions.py')"
"pull_request_commit_comment","703","nilearn","nilearn","AlexandreAbraham","2015-07-19 22:14:27","Fixed.
","e677bc34f339b343c11cb16bb23a76c4b33df30a","(None, '', u'nilearn/_utils/numpy_conversions.py')"
"pull_request_commit_comment","703","nilearn","nilearn","banilo","2015-07-19 22:19:46","You are fast, Sir.

2015-07-20 0:14 GMT+02:00 Alexandre Abraham notifications@github.com:

> In nilearn/_utils/numpy_conversions.py
> https://github.com/nilearn/nilearn/pull/703#discussion_r34962871:
> 
> > @@ -124,3 +126,46 @@ def as_ndarray(arr, copy=False, dtype=None, order='K'):
> >          raise ValueError(""Type not handled: %s"" % arr.**class**)
> > 
> > ```
> >  return ret
> > ```
> > 
> > +
> > +
> > +def csv_to_array(csv_path, delimiters=' \t,;', **kwargs):
> > -    """"""Read a CSV file by trying to guess its delimiter
> >   +
> > -    Parameters
> > -    ----------
> >   +
> 
> Fixed.
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/nilearn/nilearn/pull/703/files#r34962871.

## 

Viele Grüße,
Danilo
","e677bc34f339b343c11cb16bb23a76c4b33df30a","(None, '', u'nilearn/_utils/numpy_conversions.py')"
"pull_request_commit_comment","703","nilearn","nilearn","AlexandreAbraham","2015-07-19 22:33:13","I didn't get your question.
","e677bc34f339b343c11cb16bb23a76c4b33df30a","(41, '', u'nilearn/_utils/numpy_conversions.py')"
"pull_request_commit_comment","703","nilearn","nilearn","AlexandreAbraham","2015-07-19 22:33:59","The behavior is the same, no matter what the delimiter is. I don't think that it matters a lot to test several classifiers.
","e677bc34f339b343c11cb16bb23a76c4b33df30a","(None, '', u'nilearn/tests/test_numpy_conversions.py')"
"pull_request_commit_comment","703","nilearn","nilearn","AlexandreAbraham","2015-07-19 22:34:17","Not equal, but close since they're floats ;).
","e677bc34f339b343c11cb16bb23a76c4b33df30a","(None, '', u'nilearn/tests/test_numpy_conversions.py')"
"pull_request_commit_comment","703","nilearn","nilearn","AlexandreAbraham","2015-07-19 22:34:37","Fixed. Unix user reflex!
","e677bc34f339b343c11cb16bb23a76c4b33df30a","(None, '', u'nilearn/tests/test_numpy_conversions.py')"
"pull_request_commit_comment","703","nilearn","nilearn","lesteve","2015-07-20 06:56:49","BTW just curious, why delete=False and os.remove at the end ? I would have thought that the temporary file would be deleted just fine at the exit of the context generator.
","e677bc34f339b343c11cb16bb23a76c4b33df30a","(None, '', u'nilearn/tests/test_numpy_conversions.py')"
"pull_request_commit_comment","703","nilearn","nilearn","lesteve","2015-07-20 06:59:07","Ah I guess this is because you close the file in the middle of the block, fine.
","e677bc34f339b343c11cb16bb23a76c4b33df30a","(None, '', u'nilearn/tests/test_numpy_conversions.py')"
"pull_request_commit_comment","703","nilearn","nilearn","banilo","2015-07-20 07:02:46","Would it not make sense to extend the SEH frame (except, etc.) to `np.genfromtxt()`?
","e677bc34f339b343c11cb16bb23a76c4b33df30a","(41, '', u'nilearn/_utils/numpy_conversions.py')"
"pull_request_commit_comment","703","nilearn","nilearn","lesteve","2015-07-20 07:02:52","Should you really use `**kwargs` rather than `kwargs` here ?
","e677bc34f339b343c11cb16bb23a76c4b33df30a","(None, '', u'nilearn/_utils/numpy_conversions.py')"
"pull_request_commit_comment","703","nilearn","nilearn","lesteve","2015-07-20 07:09:00","OK fair enough, you kind of destroy the traceback information though.
","e677bc34f339b343c11cb16bb23a76c4b33df30a","(51, '', u'nilearn/_utils/numpy_conversions.py')"
"pull_request_commit_comment","703","nilearn","nilearn","AlexandreAbraham","2015-07-20 07:10:59","I don't think so. I've never seen genfromtxt failing: it only outputs NaNs. But I'm open to suggestions if you see an error to catch.
","e677bc34f339b343c11cb16bb23a76c4b33df30a","(41, '', u'nilearn/_utils/numpy_conversions.py')"
"pull_request_commit_comment","703","nilearn","nilearn","AlexandreAbraham","2015-07-20 07:11:23","No. I'll fix that.
","e677bc34f339b343c11cb16bb23a76c4b33df30a","(None, '', u'nilearn/_utils/numpy_conversions.py')"
"pull_request_commit_comment","703","nilearn","nilearn","banilo","2015-07-20 07:11:29","TypeError + consistency with that appears to make sense for the user. `confounds` is some type of a ""side"" argument in a function call with a different ""main"" purpose, which might make it even more important to have clear and consistent error message.
","e677bc34f339b343c11cb16bb23a76c4b33df30a","(51, '', u'nilearn/_utils/numpy_conversions.py')"
"pull_request_commit_comment","703","nilearn","nilearn","banilo","2015-07-20 07:12:14","no but yes
","e677bc34f339b343c11cb16bb23a76c4b33df30a","(None, '', u'nilearn/tests/test_numpy_conversions.py')"
"pull_request_commit_comment","703","nilearn","nilearn","AlexandreAbraham","2015-07-20 07:12:59","I know... I'm totally opened to discussion on this point : I've done what seems best to me but I can be wrong.
","e677bc34f339b343c11cb16bb23a76c4b33df30a","(51, '', u'nilearn/_utils/numpy_conversions.py')"
"pull_request_commit_comment","703","nilearn","nilearn","AlexandreAbraham","2015-07-20 07:14:10","Yes. For some reason, it doesn't work if I don't close the file, I don't know why :-/
","e677bc34f339b343c11cb16bb23a76c4b33df30a","(None, '', u'nilearn/tests/test_numpy_conversions.py')"
"pull_request_commit_comment","703","nilearn","nilearn","banilo","2015-07-20 07:14:55","csv might manage file handles somewhat differently?

2015-07-20 9:14 GMT+02:00 Alexandre Abraham notifications@github.com:

> In nilearn/tests/test_numpy_conversions.py
> https://github.com/nilearn/nilearn/pull/703#discussion_r34971820:
> 
> > @@ -230,3 +231,15 @@ def test_as_ndarray():
> >      ## Unhandled cases
> >      assert_raises(ValueError, as_ndarray, ""test string"")
> >      assert_raises(ValueError, as_ndarray, [], order=""invalid"")
> > +
> > +
> > +def test_csv_to_array():
> > -    # Create a phony CSV file
> > -    with tempfile.NamedTemporaryFile(suffix='.csv', delete=False,
> > -                                     mode='wt') as csv_file:
> > -        csv_file.write('1.,2.,3.,4.,5.\n')
> 
> Yes. For some reason, it doesn't work if I don't close the file, I don't
> know why :-/
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/nilearn/nilearn/pull/703/files#r34971820.

## 

Viele Grüße,
Danilo
","e677bc34f339b343c11cb16bb23a76c4b33df30a","(None, '', u'nilearn/tests/test_numpy_conversions.py')"
"pull_request_commit_comment","703","nilearn","nilearn","lesteve","2015-07-20 08:43:34","> Yes. For some reason, it doesn't work if I don't close the file, I don't know why :-/

Flushing the file ? csv_file.flush() seems to do it for me and you don't need the delete=False.
","e677bc34f339b343c11cb16bb23a76c4b33df30a","(None, '', u'nilearn/tests/test_numpy_conversions.py')"
"pull_request_commit_comment","703","nilearn","nilearn","AlexandreAbraham","2015-07-20 08:44:58","Cool. I tried it but for some reason it didn't work.
","e677bc34f339b343c11cb16bb23a76c4b33df30a","(None, '', u'nilearn/tests/test_numpy_conversions.py')"
"pull_request_commit_comment","703","nilearn","nilearn","lesteve","2015-07-20 08:45:13","PEP8, vertical misalignment.
","e677bc34f339b343c11cb16bb23a76c4b33df30a","(None, '', u'nilearn/tests/test_numpy_conversions.py')"
"pull_request_commit_comment","703","nilearn","nilearn","banilo","2015-07-20 14:29:01","Ok, sounds good as it is.
","e677bc34f339b343c11cb16bb23a76c4b33df30a","(41, '', u'nilearn/_utils/numpy_conversions.py')"
"pull_request_commit_comment","703","nilearn","nilearn","lesteve","2015-07-20 14:37:55","Fix this and I'll merge it.
","e677bc34f339b343c11cb16bb23a76c4b33df30a","(None, '', u'nilearn/_utils/numpy_conversions.py')"
"pull_request_commit","703","nilearn","nilearn","AlexandreAbraham","2015-07-17 13:20:17","Add generic csv reader","c3bbd6b18bf70f735661d6ae5af25b6e20106baa",""
"pull_request_commit","703","nilearn","nilearn","AlexandreAbraham","2015-07-17 13:30:16","More clever strategy to load CSV","63d3f85f7890b62bda428455176ef24062c90128",""
"pull_request_commit","703","nilearn","nilearn","AlexandreAbraham","2015-07-17 14:09:01","Fix bug","cf23ac3d533dedf8a2d4029f0b803f89a27d3ace",""
"pull_request_commit","703","nilearn","nilearn","AlexandreAbraham","2015-07-17 14:49:50","Clean env after test","814855545230e1150fa4721b1ff3bac2983775c2",""
"pull_request_commit","703","nilearn","nilearn","AlexandreAbraham","2015-07-17 23:37:10","Add doc, fix test","56c411e80bcdd3fcf496a96d21de47b9d5bd769f",""
"pull_request_commit","703","nilearn","nilearn","AlexandreAbraham","2015-07-18 00:00:33","Fix python3 compat","99393dc51a7ea645c8bcf654d86f53137c9fad3c",""
"pull_request_commit","703","nilearn","nilearn","AlexandreAbraham","2015-07-19 22:21:59","Address @banilo's comments round 1","dafa06a1b78ead1b01aeedfbcae6d163e2e466c2",""
"pull_request_commit","703","nilearn","nilearn","AlexandreAbraham","2015-07-20 08:46:28","Simplifu test code","11f16c924965f9874d498d65505cab2af01fe7ad",""
"pull_request_commit","703","nilearn","nilearn","AlexandreAbraham","2015-07-20 08:47:22","PEP8","1ed0353be50d665729d603757ff7f9fffd12d279",""
"pull_request_commit","703","nilearn","nilearn","AlexandreAbraham","2015-07-20 14:40:12","Fix docstring","e677bc34f339b343c11cb16bb23a76c4b33df30a",""
