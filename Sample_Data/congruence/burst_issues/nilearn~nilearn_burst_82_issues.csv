,rectype,issueid,project_owner,project_name,actor,time,text,action,title
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,1144,nilearn,nilearn,alexsavio,2016-06-22 10:07:50,"Hi,

This fix I think it makes sense since BaseSlices._map_show can actually return an empty list.
",start issue,displays.add_overlay: Add check if ims is empty
2,issue_closed,1144,nilearn,nilearn,GaelVaroquaux,2016-06-23 12:56:04,,closed issue,displays.add_overlay: Add check if ims is empty
3,pull_request_title,1144,nilearn,nilearn,alexsavio,2016-06-22 10:07:50,"Hi,

This fix I think it makes sense since BaseSlices._map_show can actually return an empty list.
",5d52bd4f11d54d9711caa8a1d6b768c8e3c6145a,displays.add_overlay: Add check if ims is empty
4,pull_request_merged,1144,nilearn,nilearn,GaelVaroquaux,2016-06-23 12:56:04,displays.add_overlay: Add check if ims is empty,40069cb14b43333a73137797eac895cfb054db29,Pull request merge from Neurita/nilearn:fixcutplot to nilearn/nilearn:master
5,issue_comment,1144,nilearn,nilearn,alexsavio,2016-06-22 13:34:15,"In the issue #1135 I linked a small example where this happens.
In this example the files don't have exactly the same matrix shape, I was expecting a 'shape mismatch' error, but I guess you already added the resampling for plotting.

In my use case I want to plot a subset of the cuts that I get with find_cut_slices.
The thing is that I have it solved already with this PR.

Here goes the test:

``` python
import nilearn.plotting as niplot
import nilearn.image as niimg

img    = niimg.load_img('test.nii.gz')  # shape is (79,  95, 79)
bg_img = 'single_subj_T1_brain.nii.gz'  # shape is (91, 109, 91)

cuts = niplot.find_cut_slices(img, 
                              n_cuts=20,
                              direction='z')

p = niplot.plot_stat_map(img, 
                         display_mode='z', 
                         cut_coords=cuts[-8:],)
                         bg_img=bg_img)

niplot.show()

p.close()
```
",,
6,issue_comment,1144,nilearn,nilearn,alexsavio,2016-06-22 15:51:02,"I didn't know exactly what to put there, since I still haven't gone through `_map_show`.
",,
7,issue_comment,1144,nilearn,nilearn,alexsavio,2016-06-22 15:58:29,"Not sure if this is enough. If you have patience, a few days, I can decipher _map_show and add comments and docstrings to it.
",,
8,pull_request_commit_comment,1144,nilearn,nilearn,GaelVaroquaux,2016-06-22 13:06:23,"That is actually a surprising line for me. Could you add a comment explaining when ims doesn't evaluate to true (ie it's an empty list?)
",5d52bd4f11d54d9711caa8a1d6b768c8e3c6145a,"(None, '', u'nilearn/plotting/displays.py')"
9,pull_request_commit_comment,1144,nilearn,nilearn,GaelVaroquaux,2016-06-22 15:42:32,"Looks like you forgot to end the sentence.
",5d52bd4f11d54d9711caa8a1d6b768c8e3c6145a,"(None, '', u'nilearn/plotting/tests/test_img_plotting.py')"
10,pull_request_commit_comment,1144,nilearn,nilearn,GaelVaroquaux,2016-06-22 15:50:26,"Can you also address this comment please :)

I am thinking about people looking at the code in the future.
",5d52bd4f11d54d9711caa8a1d6b768c8e3c6145a,"(None, '', u'nilearn/plotting/displays.py')"
11,pull_request_commit,1144,nilearn,nilearn,alexsavio,2016-06-22 10:03:38,displays.add_overlay:add check if ims is empty,080915a327bfd46f90cacde7ef3df3d219be696d,
12,pull_request_commit,1144,nilearn,nilearn,alexsavio,2016-06-22 15:26:24,add test for corner cut subset,29e12d5218ddf9c8dbd1050777db8325748e50eb,
13,pull_request_commit,1144,nilearn,nilearn,alexsavio,2016-06-22 15:49:30,fix docstring in test_outlier_cut_coords.,86c8f3edf5de407e9791ba764ebd330fed00303a,
14,pull_request_commit,1144,nilearn,nilearn,alexsavio,2016-06-22 15:57:00,add comment to fix,5d52bd4f11d54d9711caa8a1d6b768c8e3c6145a,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,1143,nilearn,nilearn,MartinPerez,2016-06-21 16:57:22,"As explained in #1118 all maskers had the option of passing False in the documentation for high pass and low pass, but this would create an error in signal.py under some circumstances. So updated documentation and raised a typeerror in signal.py to avoid future problems. Moreover in signal.py is clearly stated that high pass and low pass should be float or None.
",start issue,"fixed doc in all maskers, changed False possibility for None. Moreove…"
2,issue_closed,1143,nilearn,nilearn,GaelVaroquaux,2016-07-05 08:22:35,,closed issue,"fixed doc in all maskers, changed False possibility for None. Moreove…"
3,pull_request_title,1143,nilearn,nilearn,MartinPerez,2016-06-21 16:57:22,"As explained in #1118 all maskers had the option of passing False in the documentation for high pass and low pass, but this would create an error in signal.py under some circumstances. So updated documentation and raised a typeerror in signal.py to avoid future problems. Moreover in signal.py is clearly stated that high pass and low pass should be float or None.
",e8e6969f6eda3c6e5d4bb298598c93fafffc13a6,"fixed doc in all maskers, changed False possibility for None. Moreove…"
4,pull_request_merged,1143,nilearn,nilearn,GaelVaroquaux,2016-07-05 08:22:35,"fixed doc in all maskers, changed False possibility for None. Moreove…",d9ee0e84d74f372850fe7889c67826e2d97436e8,Pull request merge from MartinPerez/nilearn:doc_fix to nilearn/nilearn:master
5,issue_comment,1143,nilearn,nilearn,lesteve,2016-06-23 06:00:16,"> memory failure in one build?

Ignore this one, it is failing intermittently and unfortunately @aabadie did not find a way to make it more reliable.
",,
6,issue_comment,1143,nilearn,nilearn,MartinPerez,2016-06-21 19:20:29,"@AlexandreAbraham this is what I told you about, sorry I took some time to make the PR.
",,
7,issue_comment,1143,nilearn,nilearn,MartinPerez,2016-06-22 19:33:00,"memory failure in one build? could this be due to adding assert_raises errors with signal.clean? I dont understand why this would be the case.
",,
8,issue_comment,1143,nilearn,nilearn,MartinPerez,2016-07-01 23:01:40,"space net done. Sorry I missed it.
",,
9,issue_comment,1143,nilearn,nilearn,KamalakerDadi,2016-07-01 18:30:28,"Small remark on error message. Otherwise, LGTM.
",,
10,issue_comment,1143,nilearn,nilearn,KamalakerDadi,2016-07-01 19:55:27,"Can you also have a look at `nilearn/decoding/space_net.py` ?
",,
11,pull_request_commit_comment,1143,nilearn,nilearn,bthirion,2016-06-21 20:46:23,"Could you add a test for that ?
",e8e6969f6eda3c6e5d4bb298598c93fafffc13a6,"(None, '', u'nilearn/signal.py')"
12,pull_request_commit_comment,1143,nilearn,nilearn,lesteve,2016-06-22 08:27:34,"Best practice: always include the value provided by the user in the error message, something like:

``` py
raise TypeError(""High pass must be float or None but you provided high_pass='{0}'"".format(high_pass))
```
",e8e6969f6eda3c6e5d4bb298598c93fafffc13a6,"(None, '', u'nilearn/signal.py')"
13,pull_request_commit_comment,1143,nilearn,nilearn,KamalakerDadi,2016-07-01 18:28:08,"error message for wrong input has single quotes which I don't think it is necessary. May be we can remove single quotes ? What do you think ?

``` python
TypeError: low pass must be float or None but you provided low_pass='False'
```
",e8e6969f6eda3c6e5d4bb298598c93fafffc13a6,"(6, '', u'nilearn/signal.py')"
14,pull_request_commit_comment,1143,nilearn,nilearn,MartinPerez,2016-07-01 23:00:41,"@KamalakerDadi I just corrected the message as @lesteve suggested. Look at his outdated comment above with single quotes. I don't have a preference on this. which one is better practice? If you want I will change it again.
",e8e6969f6eda3c6e5d4bb298598c93fafffc13a6,"(6, '', u'nilearn/signal.py')"
15,pull_request_commit_comment,1143,nilearn,nilearn,KamalakerDadi,2016-07-02 09:46:01,"string is expressed in quotes actually.

We will wait for final reviews from @lesteve @AlexandreAbraham 
",e8e6969f6eda3c6e5d4bb298598c93fafffc13a6,"(6, '', u'nilearn/signal.py')"
16,pull_request_commit,1143,nilearn,nilearn,MartinPerez,2016-06-21 16:53:35,"fixed doc in all maskers, changed False possibility for None. Moreover raise an error in signal.py to make it clear that False is not an acceptable value",8e6427004c93b739e5ff38d95f5fcdb0628aa9f3,
17,pull_request_commit,1143,nilearn,nilearn,MartinPerez,2016-06-22 18:58:52,added test and corrected exception message,fdb0d4de83ff72b98493a8cef25352ec8872ec57,
18,pull_request_commit,1143,nilearn,nilearn,MartinPerez,2016-06-22 19:16:12,test fix,00443f2d7e8210349a8c5b7193d1a2dab8fe79f4,
19,pull_request_commit,1143,nilearn,nilearn,MartinPerez,2016-07-01 10:49:17,changed docs also for multipca and base,1392a2c21f3ae3d88aa0183199fd1a85e7d0db86,
20,pull_request_commit,1143,nilearn,nilearn,MartinPerez,2016-07-01 22:58:12,extra doc corrections,e8e6969f6eda3c6e5d4bb298598c93fafffc13a6,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,1141,nilearn,nilearn,sahmed95,2016-06-20 20:43:42,"Removed redundant fetcher.
",start issue,Fixes #1127. Removed haxby_simple
2,issue_closed,1141,nilearn,nilearn,GaelVaroquaux,2016-07-03 10:54:09,,closed issue,Fixes #1127. Removed haxby_simple
3,pull_request_title,1141,nilearn,nilearn,sahmed95,2016-06-20 20:43:42,"Removed redundant fetcher.
",02b8422865a7d14b11001c1b595a06f84e6badf2,Fixes #1127. Removed haxby_simple
4,issue_comment,1141,nilearn,nilearn,AlexandreAbraham,2016-06-20 20:58:50,"Thanks for the PR. 3 remarks though (with points to discuss):
- examples relying on haxby_simple must be updated
- we should probably discuss if we remove it bluntly or if we ""deprecate it"" (and make it rely on fetch_haxby)
- the test of haxby_simple is the only one to actually ""download"" a file (it is a dummy file from the repo itself) and therefor to test the full dataset fetching process. We have to replace it by another one (can be done in a separate PR).
",,
5,issue_comment,1141,nilearn,nilearn,Joaoloula,2016-07-02 10:36:22,"Actually, just substituting the function breaks most examples, seeing as the simple fetcher can be loaded with `np.loadtxt` and returns an int-coded target, which `fetch_haxby` does not. I was actually working on this as well and made another PR fixing the examples, deprecating the function and adding a new test for the dummy file: hope that's alright!
",,
6,pull_request_commit,1141,nilearn,nilearn,shd339@gmail.com,2016-06-20 20:40:04,Fixes #1127. Removed haxby_simple,70ac8b4fb40f24c98bcb3f29106bba66ed29cf10,
7,pull_request_commit,1141,nilearn,nilearn,shd339@gmail.com,2016-06-20 21:05:16,Updated examples,02b8422865a7d14b11001c1b595a06f84e6badf2,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,1140,nilearn,nilearn,GaelVaroquaux,2016-06-20 16:53:03,"We should consider using pandas in the examples to load CSV files. It might make the examples more readable and also give to the users more chances of being able to load new data (ie other than what's in the Haxby example).
",start issue,Use pandas in the examples to load CSV and txt files
2,issue_closed,1140,nilearn,nilearn,GaelVaroquaux,2017-11-17 20:59:31,,closed issue,Use pandas in the examples to load CSV and txt files
3,issue_comment,1140,nilearn,nilearn,aabadie,2016-06-21 19:44:32,"Maybe I can take this one. Any objection ?
",,
4,issue_comment,1140,nilearn,nilearn,aabadie,2016-06-21 20:30:23,"I like the idea but I'm wondering if it will really make things clearer for newcomers.

Example with the code taken from [examples/02_decoding/plot_haxby_anova_svm.py](https://github.com/nilearn/nilearn/blob/master/examples/02_decoding/plot_haxby_anova_svm.py):
- This the current version:

``` python
# Load the behavioral data
import numpy as np
y, session = np.loadtxt(haxby_dataset.session_target[0]).astype(""int"").T
conditions = np.recfromtxt(haxby_dataset.conditions_target[0])['f0']
```
- Here is the `pandas` version:

``` python
# Load the behavioral data
import pandas as pd
df = pd.read_csv(haxby_dataset.session_target[0], header=None,
                 names=['y', 'session'], delimiter=' ')
y = df.y.values
session = df.session.values
df = pd.read_csv(haxby_dataset.conditions_target[0], header=None,
                 names=['f0', 'f1'], delimiter=' ')
conditions = df.f0.values.astype('S12')
```

But maybe this is not the best example or I don't have a good usage of pandas.
",,
5,issue_comment,1140,nilearn,nilearn,AlexandreAbraham,2016-06-21 09:34:42,"+1 for adding it as a dependency otherwise it would be weird for people not to be able to run examples out of the box.
",,
6,issue_comment,1140,nilearn,nilearn,lesteve,2016-06-21 08:03:41,"> We should consider using pandas in the examples to load CSV files

Out of interest, would that be only for the examples for now, i.e. we wouldn't add it as a dependency of nilearn?
",,
7,issue_comment,1140,nilearn,nilearn,KamalakerDadi,2017-11-16 15:27:20,Thanks for pitching in. I am afraid this is weakly convinced to add pandas as a dependency. May be we wait others to pitch in to raise their opinion.,,
8,issue_comment,1140,nilearn,nilearn,emdupre,2017-11-16 15:07:44,I'm at the Montreal sprint and happy to pick this up!,,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,1152,nilearn,nilearn,AlexandreAbraham,2016-06-24 08:55:28,"Fix #1151

Problem: ATM, you need to import nilearn.plotting.cm for them to be registered. It would be nice to register them directly when nilearn is imported but that implies loading the whole plotting module, which is a but heavy.

What should we do?
",start issue,[MRG] Register colormaps in matplotlib
2,issue_closed,1152,nilearn,nilearn,AlexandreAbraham,2016-07-13 09:27:01,,closed issue,[MRG] Register colormaps in matplotlib
3,pull_request_title,1152,nilearn,nilearn,AlexandreAbraham,2016-06-24 08:55:28,"Fix #1151

Problem: ATM, you need to import nilearn.plotting.cm for them to be registered. It would be nice to register them directly when nilearn is imported but that implies loading the whole plotting module, which is a but heavy.

What should we do?
",46cb1d5b27824b122ea4eb2f5bd38219dc157f78,[MRG] Register colormaps in matplotlib
4,pull_request_merged,1152,nilearn,nilearn,AlexandreAbraham,2016-07-13 09:27:01,[MRG] Register colormaps in matplotlib,9754ee4b450ae01320b3c71335cef20ab526c099,Pull request merge from AlexandreAbraham/nilearn:preload_cmaps to nilearn/nilearn:master
5,issue_comment,1152,nilearn,nilearn,AlexandreAbraham,2016-07-05 07:28:10,"@GaelVaroquaux @aabadie @lesteve @KamalakerDadi : Here are the three options:
- we register the colormaps when importing nilearn.plotting.cm
- we register the colormaps when importing nilearn, which implies always importing the plotting module
- we register the colormaps when importing nilearn, but we change the code so that the full plotting module is not imported.

Can I have your opinion?
",,
6,issue_comment,1152,nilearn,nilearn,AlexandreAbraham,2016-07-05 07:39:19,"> That's not an option: it would make matplotlib a hard dependency. I'd rather not do that.

Not really, I can embed this in a try ... except.

> I prefer first option.

I prefer too. If users push for something else, we will still be able to change it in the future. In that case, je PR is ready, I'll just add a test.
",,
7,pull_request_commit,1152,nilearn,nilearn,AlexandreAbraham,2016-06-24 08:53:03,Register colormaps in matplotlib,571dd8b211f7c5e9b8bdd0f0208bc6b04ebe4575,
8,pull_request_commit,1152,nilearn,nilearn,AlexandreAbraham,2016-07-07 12:44:49,Add test for cmap preloading,46cb1d5b27824b122ea4eb2f5bd38219dc157f78,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,1151,nilearn,nilearn,KirstieJane,2016-06-23 18:15:38,"The colormaps that are created in [cm.py](https://github.com/KirstieJane/nilearn/blob/40069cb14b43333a73137797eac895cfb054db29/nilearn/plotting/cm.py) are really nice!

Currently, if I want to use them in one of my wrapper scripts I have the following hack:

```
from nilearn.plotting import cm

cmap = 'cold_white_hot'

if hasattr(cm, cmap):
    cmap = getatt(cm, cmap)
```

Would it be possible to have these colormaps already loaded so they're available by name without this code?
",start issue,Automatically loading colormaps when importing nilearn (or cm?)
2,issue_closed,1151,nilearn,nilearn,AlexandreAbraham,2016-07-13 09:27:01,,closed issue,Automatically loading colormaps when importing nilearn (or cm?)
3,issue_comment,1151,nilearn,nilearn,AlexandreAbraham,2016-06-24 05:58:45,"When proposing new colormaps, it is a good practice to register them in matplotlib so that it is automatically available using string identifiers.
",,
4,issue_comment,1151,nilearn,nilearn,KirstieJane,2016-06-24 08:02:55,"Thank you @AlexandreAbraham for explaining the problem more clearly! And to @GaelVaroquaux for all the support :grinning:
",,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,1137,nilearn,nilearn,GaelVaroquaux,2016-06-20 00:02:07,"Transform the decoding example into a tutorial (thank you notebook-style examples) and adapt the doc accordingly.

This is done a bit in a rush for tomorrow's class.
",start issue,DOC: rework fully decoding example
2,issue_closed,1137,nilearn,nilearn,GaelVaroquaux,2016-06-20 05:03:42,,closed issue,DOC: rework fully decoding example
3,pull_request_title,1137,nilearn,nilearn,GaelVaroquaux,2016-06-20 00:02:07,"Transform the decoding example into a tutorial (thank you notebook-style examples) and adapt the doc accordingly.

This is done a bit in a rush for tomorrow's class.
",7c18b3c0a963c6c59ac8298cba31bbb3065a3efa,DOC: rework fully decoding example
4,pull_request_merged,1137,nilearn,nilearn,GaelVaroquaux,2016-06-20 05:03:42,DOC: rework fully decoding example,89920cadb5edd873df0b735e07e2db513fb8fe64,Pull request merge from GaelVaroquaux/nilearn:better_decoding_example to nilearn/nilearn:master
5,pull_request_commit,1137,nilearn,nilearn,GaelVaroquaux,2016-06-20 00:00:38,"DOC: rework fully decoding example

Transform the decoding example into a tutorial (thank you
notebook-style examples) and adapt the doc accordingly.",7c18b3c0a963c6c59ac8298cba31bbb3065a3efa,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,1153,nilearn,nilearn,AlexandreAbraham,2016-06-24 13:12:30,"Depending on the type of connectivity matrix extracted, keeping diagonal elements can be pertinent or not. I suggest to add a parameter to be able to discard them.

One problem is that it makes the multiplication of off-diagonal elements by sqrt(2) useless so I removed it. But I don't know what is the best option here.
",start issue,[MRG] Discard diagonal in sym_to_vec and refactor scaling
2,issue_closed,1153,nilearn,nilearn,AlexandreAbraham,2016-07-19 17:52:58,,closed issue,[MRG] Discard diagonal in sym_to_vec and refactor scaling
3,pull_request_title,1153,nilearn,nilearn,AlexandreAbraham,2016-06-24 13:12:30,"Depending on the type of connectivity matrix extracted, keeping diagonal elements can be pertinent or not. I suggest to add a parameter to be able to discard them.

One problem is that it makes the multiplication of off-diagonal elements by sqrt(2) useless so I removed it. But I don't know what is the best option here.
",94e830b22c3804ee6e61c24a6da01884279402c1,[MRG] Discard diagonal in sym_to_vec and refactor scaling
4,pull_request_merged,1153,nilearn,nilearn,AlexandreAbraham,2016-07-19 17:52:58,[MRG] Discard diagonal in sym_to_vec and refactor scaling,5e2ab743bd0fd4d1dd3f85230312aaedf6fb380a,Pull request merge from AlexandreAbraham/nilearn:sym_to_vec_diagonal to nilearn/nilearn:master
5,issue_comment,1153,nilearn,nilearn,AlexandreAbraham,2016-07-07 12:24:44,"Ready for review. Appveyor crash is spurious.
",,
6,issue_comment,1153,nilearn,nilearn,AlexandreAbraham,2016-07-19 12:34:03,"> General comment: What do we expect in results scaling these diagonal or off-diagonal elements ? Can you point me any reference if you have ? Thanks.

I don't have a reference, sorry.

> Could you add in whats_new ?

Done.
",,
7,issue_comment,1153,nilearn,nilearn,AlexandreAbraham,2016-07-19 17:52:56,"Let's go then !
",,
8,issue_comment,1153,nilearn,nilearn,KamalakerDadi,2016-07-08 14:28:37,"General comment: What do we expect in results scaling these diagonal or off-diagonal elements ? Can you point me any reference if you have ? Thanks.
",,
9,issue_comment,1153,nilearn,nilearn,KamalakerDadi,2016-07-10 18:14:38,"Could you add in whats_new ?
",,
10,issue_comment,1153,nilearn,nilearn,KamalakerDadi,2016-07-19 17:44:14,"I have no further comments. LG from my side.
",,
11,pull_request_commit_comment,1153,nilearn,nilearn,bthirion,2016-06-27 21:36:07,"I proprose to remove this scaling, which is horribly counter-intuitive. 
It might be available under an 'isometric' option if there is any reason to keep it, but I don't  see any use case.
",94e830b22c3804ee6e61c24a6da01884279402c1,"(None, '', u'nilearn/connectome/connectivity_matrices.py')"
12,pull_request_commit_comment,1153,nilearn,nilearn,GaelVaroquaux,2016-06-28 09:17:07,"> > -        scaling = sqrt(2) \* np.ones(symmetric.shape[-2:])
> 
> I proprose to remove this scaling, which is horribly counter-intuitive.
> It might be available under an 'isometric' option if there is any reason to
> keep it, but I don't see any use case.

I seem to remember that it is fairly important to have the metric to
really be the Cramer-Rao metric.

That said, we could do it the other way around, and apply 1/sqrt(2) on
the diagonal, which would be probably more intuitive.
",94e830b22c3804ee6e61c24a6da01884279402c1,"(None, '', u'nilearn/connectome/connectivity_matrices.py')"
13,pull_request_commit_comment,1153,nilearn,nilearn,bthirion,2016-06-28 15:23:17,"On 28/06/2016 11:17, Gael Varoquaux wrote:

> In nilearn/connectome/connectivity_matrices.py 
> https://github.com/nilearn/nilearn/pull/1153#discussion_r68723710:
> 
> > ```
> >  """"""
> > ```
> > -    scaling = sqrt(2) \* np.ones(symmetric.shape[-2:])
> > -    np.fill_diagonal(scaling, 1.)
> > -    tril_mask = np.tril(np.ones(symmetric.shape[-2:])).astype(np.bool)
> > -    return symmetric[..., tril_mask] \* scaling[tril_mask]
> > -    if keep_diagonal:
> > -        scaling = sqrt(2) \* np.ones(symmetric.shape[-2:])
> > - scaling = sqrt(2) \* np.ones(symmetric.shape[-2:]) I proprose to 
> >   remove this scaling, which is horribly counter-intuitive. It might be 
> >   available under an 'isometric' option if there is any reason to keep 
> >   it, but I don't see any use case.
> >   I seem to remember that it is fairly important to have the metric to 
> >   really be the Cramer-Rao metric. That said, we could do it the other 
> >   way around, and apply 1/sqrt(2) on the diagonal, which would be 
> >   probably more intuitive.
> 
> —
> You are receiving this because you commented.
> Reply to this email directly, view it on GitHub 
> https://github.com/nilearn/nilearn/pull/1153/files/c79280449fff7c06e0fc5cdb645ad7f5d309ad92#r68723710, 
> or mute the thread 
> https://github.com/notifications/unsubscribe/AAOT1hZNtyTwjMeWvz1Sxo1DhMuyUE-Nks5qQOaTgaJpZM4I9wJA.
> 
> Sounds like a reasonable compromise.
",94e830b22c3804ee6e61c24a6da01884279402c1,"(None, '', u'nilearn/connectome/connectivity_matrices.py')"
14,pull_request_commit_comment,1153,nilearn,nilearn,bthirion,2016-07-07 20:32:34,"I thought we had agreed on a different behavior: when the diagonal is kept, it is scaled by 1. / sqrt(2). This might be less confusing to users.
",94e830b22c3804ee6e61c24a6da01884279402c1,"(None, '', u'nilearn/connectome/connectivity_matrices.py')"
15,pull_request_commit_comment,1153,nilearn,nilearn,KamalakerDadi,2016-07-07 20:34:32,"What is the use case of isometric here ?
",94e830b22c3804ee6e61c24a6da01884279402c1,"(None, '', u'nilearn/connectome/connectivity_matrices.py')"
16,pull_request_commit_comment,1153,nilearn,nilearn,KamalakerDadi,2016-07-07 20:35:52,"You may have to change the default.
",94e830b22c3804ee6e61c24a6da01884279402c1,"(None, '', u'nilearn/connectome/connectivity_matrices.py')"
17,pull_request_commit_comment,1153,nilearn,nilearn,AlexandreAbraham,2016-07-08 13:58:33,"Sorry, I fixed the code but not the doc.
",94e830b22c3804ee6e61c24a6da01884279402c1,"(None, '', u'nilearn/connectome/connectivity_matrices.py')"
18,pull_request_commit_comment,1153,nilearn,nilearn,AlexandreAbraham,2016-07-08 14:00:23,"I must admit that now that only diagonal elements are modified, I don't see the usage. Anybody in favor of keeping this option?
",94e830b22c3804ee6e61c24a6da01884279402c1,"(None, '', u'nilearn/connectome/connectivity_matrices.py')"
19,pull_request_commit_comment,1153,nilearn,nilearn,AlexandreAbraham,2016-07-08 14:00:29,"Thanks, changed.
",94e830b22c3804ee6e61c24a6da01884279402c1,"(None, '', u'nilearn/connectome/connectivity_matrices.py')"
20,pull_request_commit_comment,1153,nilearn,nilearn,KamalakerDadi,2016-07-10 18:14:14,"> I don't see the usage

Yes think so.
",94e830b22c3804ee6e61c24a6da01884279402c1,"(None, '', u'nilearn/connectome/connectivity_matrices.py')"
21,pull_request_commit,1153,nilearn,nilearn,AlexandreAbraham,2016-06-24 13:09:05,Add an option to discard diagonal in sym_to_vec,1ab3f479514cb22021d0a929cf7cab8ddfb897cb,
22,pull_request_commit,1153,nilearn,nilearn,AlexandreAbraham,2016-07-06 12:07:22,Fix tests,11d804168a415206013404c551af94d18b29a4d0,
23,pull_request_commit,1153,nilearn,nilearn,AlexandreAbraham,2016-07-08 14:00:37,Address comments,c1741dadb3b8cd04eeece59ac98fda89ccd0a5fd,
24,pull_request_commit,1153,nilearn,nilearn,AlexandreAbraham,2016-07-19 12:28:01,Remove isometric option,e87834c6edeca8e60ba174ce9028ff7eda3ed06a,
25,pull_request_commit,1153,nilearn,nilearn,AlexandreAbraham,2016-07-19 12:32:45,Add what's new,94e830b22c3804ee6e61c24a6da01884279402c1,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,1139,nilearn,nilearn,GaelVaroquaux,2016-06-20 14:36:29,"In the anova-SVM example on Haxby, we are using SelectKBest. However, when doing full-brain analysis, it is better to use SelectPercentile, keeping 10% of voxels (because it is independent of the resolution of the data).

I think that it would be more useful for the end user to use SelectPercentile. What do people think?
",start issue,"In the anova SVM example on Haxby, we should use SelectPercentile"
2,issue_closed,1139,nilearn,nilearn,GaelVaroquaux,2017-03-03 18:48:39,,closed issue,"In the anova SVM example on Haxby, we should use SelectPercentile"
3,issue_comment,1139,nilearn,nilearn,banilo,2016-06-20 15:15:22,"Good idea, perhaps we could even add this reflection as a comment to the
example script.

Gael Varoquaux notifications@github.com schrieb am Mo., 20. Juni 2016 um
16:36 Uhr:

> In the anova-SVM example on Haxby, we are using SelectKBest. However, when
> doing full-brain analysis, it is better to use SelectPercentile, keeping
> 10% of voxels (because it is independent of the resolution of the data).
> 
> I think that it would be more useful for the end user to use
> SelectPercentile. What do people think?
> 
> —
> You are receiving this because you are subscribed to this thread.
> Reply to this email directly, view it on GitHub
> https://github.com/nilearn/nilearn/issues/1139, or mute the thread
> https://github.com/notifications/unsubscribe/ADufRPbLSGyeHRwAVH5tAeZd8_pTkDIiks5qNqVugaJpZM4I5w05
> .
",,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,1135,nilearn,nilearn,alexsavio,2016-06-17 12:40:07,"Hi,
I am struggling a bit with an error in `nilearn.plotting.displays`.

First I use `nilearn.plotting.find_cut_slices` to find a specific number of cuts for a image in the `z` direction. Then I plot some of these cuts (because I am building a grid of plots) with `plot_stat_map`. I use a custom `bg_img` which is in the same space as the input image. The approach has been working well so far.

With the last update, I have 2 problems:
- the `bg_img` does not appear anymore (I get blobs over black) and
- in one case so far, the `data_2d_list` variable in [displays.py line 651](https://github.com/nilearn/nilearn/blob/master/nilearn/plotting/displays.py#L651) ends up full of None, so `ims` is empty.

Any insight will be appreciated. Thanks!
",start issue,cut_coords and threshold masking
2,issue_closed,1135,nilearn,nilearn,GaelVaroquaux,2016-06-23 12:56:47,,closed issue,cut_coords and threshold masking
3,issue_comment,1135,nilearn,nilearn,AlexandreAbraham,2016-06-17 12:43:26,"Hi Alex,
Do you a minimal usecase reproducing the problem by any chance?
",,
4,issue_comment,1135,nilearn,nilearn,alexsavio,2016-06-17 16:42:02,"Hi Alex,
Thanks!

I prepared a minimal case for the `data_2d_list` problem. I can't reproduce the first issue though, will keep checking.
Please check it here:
https://www.dropbox.com/sh/cf7k8v0atts2f66/AABzqmJG_haYuxfOkS5KSimIa?dl=1
",,
5,issue_comment,1135,nilearn,nilearn,alexsavio,2016-06-21 16:43:54,"Hi, 
I fixed the `bg_img` problem, I had to fix the figure size in the plot function. I am not sure yet why it was working before and it stopped working.
",,
6,issue_comment,1135,nilearn,nilearn,alexsavio,2016-06-22 10:09:12,"A fix suggestion: #1144. 
",,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,1148,nilearn,nilearn,ahoyosid,2016-06-23 13:04:06,"The aim of this PR is to add some scikit-learn backports used on  #698,  splitting in two the PR to help the reviewers. It also address the issue #1134, checking the consistency of length between X and y.

``` python
# Remove one sample from y_train
y_train = y_train[:-1]

decoder = SpaceNetClassifier(memory=""nilearn_cache"", penalty='graph-net',
                             screening_percentile=100)
decoder.fit(X_train, y_train)

y_pred = decoder.predict(X_test)
accuracy = (y_pred == y_test).mean() * 100.
print(""Graph-net classification accuracy : %g%%"" % accuracy)
```

Now it raises the error:

``` python
ValueError: Found arrays with inconsistent numbers of samples: [125 126]
```
",start issue,[MRG] Scikit-learn backports: Checking length of inputs
2,issue_closed,1148,nilearn,nilearn,AlexandreAbraham,2016-07-21 10:49:46,,closed issue,[MRG] Scikit-learn backports: Checking length of inputs
3,pull_request_title,1148,nilearn,nilearn,ahoyosid,2016-06-23 13:04:06,"The aim of this PR is to add some scikit-learn backports used on  #698,  splitting in two the PR to help the reviewers. It also address the issue #1134, checking the consistency of length between X and y.

``` python
# Remove one sample from y_train
y_train = y_train[:-1]

decoder = SpaceNetClassifier(memory=""nilearn_cache"", penalty='graph-net',
                             screening_percentile=100)
decoder.fit(X_train, y_train)

y_pred = decoder.predict(X_test)
accuracy = (y_pred == y_test).mean() * 100.
print(""Graph-net classification accuracy : %g%%"" % accuracy)
```

Now it raises the error:

``` python
ValueError: Found arrays with inconsistent numbers of samples: [125 126]
```
",6e38eda6c3ba6e600a3cd4c779f7735c70576bb5,[MRG] Scikit-learn backports: Checking length of inputs
4,pull_request_merged,1148,nilearn,nilearn,AlexandreAbraham,2016-07-21 10:49:46,[MRG] Scikit-learn backports: Checking length of inputs,c5adb6c43ec625d457617685f260bde6eb1cdb1d,Pull request merge from ahoyosid/nilearn:check_inputs to nilearn/nilearn:master
5,issue_comment,1148,nilearn,nilearn,AlexandreAbraham,2016-07-21 10:49:44,"Thanks!
",,
6,issue_comment,1148,nilearn,nilearn,KamalakerDadi,2016-07-01 10:19:02,"> can someone among you look this PR up?

Sure, this is my top priority to look into. I might take some time to comment since I am new to look how backporting works in nilearn.

You may have to change title because your PR majorly addresses scikit-learn back ports.
",,
7,issue_comment,1148,nilearn,nilearn,KamalakerDadi,2016-07-07 12:44:34,"Now that PR #1169 is merged. You can clean your PR a bit to remove dependencies related to < 0.14 (if I am not wrong).

Hopefully, this can also help us to solve coverage problem too.
",,
8,issue_comment,1148,nilearn,nilearn,KamalakerDadi,2016-07-18 08:17:21,"can you add tests to space net failure ?
",,
9,issue_comment,1148,nilearn,nilearn,KamalakerDadi,2016-07-18 20:45:07,"There are still some comments hanging. The comments which are made regarding extra spaces. Otherwise LGTM.
",,
10,issue_comment,1148,nilearn,nilearn,KamalakerDadi,2016-07-19 18:24:59,"Any reviews ? @AlexandreAbraham @lesteve @aabadie @GaelVaroquaux 
",,
11,pull_request_commit_comment,1148,nilearn,nilearn,KamalakerDadi,2016-07-12 20:32:39,"I think this extra space is not necessary
",6e38eda6c3ba6e600a3cd4c779f7735c70576bb5,"(4, '', u'nilearn/_utils/fixes/__init__.py')"
12,pull_request_commit_comment,1148,nilearn,nilearn,KamalakerDadi,2016-07-12 20:32:53,"same here
",6e38eda6c3ba6e600a3cd4c779f7735c70576bb5,"(None, '', u'nilearn/_utils/fixes/__init__.py')"
13,pull_request_commit_comment,1148,nilearn,nilearn,KamalakerDadi,2016-07-12 20:32:59,"same here
",6e38eda6c3ba6e600a3cd4c779f7735c70576bb5,"(None, '', u'nilearn/_utils/fixes/__init__.py')"
14,pull_request_commit_comment,1148,nilearn,nilearn,KamalakerDadi,2016-07-12 20:33:54,"Do you think we should first `try` higher version and then except `ImportError` lesser versions ?
",6e38eda6c3ba6e600a3cd4c779f7735c70576bb5,"(None, '', u'nilearn/_utils/fixes/__init__.py')"
15,pull_request_commit_comment,1148,nilearn,nilearn,KamalakerDadi,2016-07-12 20:35:26,"Sorry, I didnt get this. Aren't you using this file for versions lesser than 0.17 ?
",6e38eda6c3ba6e600a3cd4c779f7735c70576bb5,"(None, '', u'nilearn/_utils/fixes/scikit_learn_validation.py')"
16,pull_request_commit_comment,1148,nilearn,nilearn,KamalakerDadi,2016-07-12 20:36:32,"Can you add a small description about this file ?
",6e38eda6c3ba6e600a3cd4c779f7735c70576bb5,"(None, '', u'nilearn/_utils/fixes/scikit_learn_validation.py')"
17,pull_request_commit_comment,1148,nilearn,nilearn,KamalakerDadi,2016-07-12 20:40:20,"Do you think this can be integrated in or used from `nilearn._utils.exceptions.py` ?
",6e38eda6c3ba6e600a3cd4c779f7735c70576bb5,"(None, '', u'nilearn/_utils/fixes/scikit_learn_validation.py')"
18,pull_request_commit_comment,1148,nilearn,nilearn,KamalakerDadi,2016-07-12 20:46:05,"For lesser versions nilearn already has `check_array` imported as `atleast2d_or_csr`. Do you think it can be used here ?
",6e38eda6c3ba6e600a3cd4c779f7735c70576bb5,"(None, '', u'nilearn/_utils/fixes/scikit_learn_validation.py')"
19,pull_request_commit_comment,1148,nilearn,nilearn,KamalakerDadi,2016-07-12 21:33:09,"May be we should rename `scikit_learn_validation` to more appropriate naming depending upon usage of `check_X_y` and `check_is_fitted`. So that it can be used for other purposes wherever necessary. Any comments on this ?
",6e38eda6c3ba6e600a3cd4c779f7735c70576bb5,"(None, '', u'nilearn/_utils/fixes/__init__.py')"
20,pull_request_commit_comment,1148,nilearn,nilearn,AlexandreAbraham,2016-07-13 12:25:07,"+1
",6e38eda6c3ba6e600a3cd4c779f7735c70576bb5,"(None, '', u'nilearn/_utils/fixes/__init__.py')"
21,pull_request_commit_comment,1148,nilearn,nilearn,AlexandreAbraham,2016-07-13 12:42:51,"use prefix `sklearn`
",6e38eda6c3ba6e600a3cd4c779f7735c70576bb5,"(None, '', u'nilearn/_utils/fixes/__init__.py')"
22,pull_request_commit_comment,1148,nilearn,nilearn,AlexandreAbraham,2016-07-13 13:52:00,"This is exactly the purpose of this file: bring a feature available in sklearn 0.17 to previous versions. For me, this is self-explanatory. Maybe just say that this file is from sklearn.utils.validation.
",6e38eda6c3ba6e600a3cd4c779f7735c70576bb5,"(None, '', u'nilearn/_utils/fixes/scikit_learn_validation.py')"
23,pull_request_commit_comment,1148,nilearn,nilearn,AlexandreAbraham,2016-07-13 13:54:45,"No, this is imported from another software. Backports must be left as untouched as possible. Otherwise updating them (say with code from sklearn 0.18 for example when it will be released) can be tedious.
",6e38eda6c3ba6e600a3cd4c779f7735c70576bb5,"(None, '', u'nilearn/_utils/fixes/scikit_learn_validation.py')"
24,pull_request_commit_comment,1148,nilearn,nilearn,AlexandreAbraham,2016-07-13 14:01:46,"Good catch. Isn't it the opposite? Isn't `check_x_y` supposed to replace `check_array`?
",6e38eda6c3ba6e600a3cd4c779f7735c70576bb5,"(None, '', u'nilearn/_utils/fixes/scikit_learn_validation.py')"
25,pull_request_commit_comment,1148,nilearn,nilearn,ahoyosid,2016-07-15 22:25:15,"atleast2d_or_csr => check_array 
Basically, check_X_y combines check_array (for X and y), and checks if their lengths are consistent 
",6e38eda6c3ba6e600a3cd4c779f7735c70576bb5,"(None, '', u'nilearn/_utils/fixes/scikit_learn_validation.py')"
26,pull_request_commit_comment,1148,nilearn,nilearn,KamalakerDadi,2016-07-18 08:15:35,"Any reason why you are raising `ImportError` like you have did for others ?
",6e38eda6c3ba6e600a3cd4c779f7735c70576bb5,"(None, '', u'nilearn/_utils/fixes/__init__.py')"
27,pull_request_commit_comment,1148,nilearn,nilearn,KamalakerDadi,2016-07-18 08:51:46,"Can it be replaced by `atleast2d_or_csr` ? Is it the same or not ?
",6e38eda6c3ba6e600a3cd4c779f7735c70576bb5,"(16, '', u'nilearn/_utils/fixes/sklearn_validation.py')"
28,pull_request_commit_comment,1148,nilearn,nilearn,GaelVaroquaux,2016-07-18 08:54:18,"> > +def check_array(array, accept_sparse=None, dtype=""numeric"", order=None,
> 
> Can it be replaced by atleast2d_or_csr ? Is it the same or not ?

If the question is whether check_array is the same as atleast2d_or_csr,
the answer is no: it does additional checks and should be prefered in
general.
",6e38eda6c3ba6e600a3cd4c779f7735c70576bb5,"(16, '', u'nilearn/_utils/fixes/sklearn_validation.py')"
29,pull_request_commit_comment,1148,nilearn,nilearn,KamalakerDadi,2016-07-18 09:19:00,"Ok.
",6e38eda6c3ba6e600a3cd4c779f7735c70576bb5,"(16, '', u'nilearn/_utils/fixes/sklearn_validation.py')"
30,pull_request_commit,1148,nilearn,nilearn,ahoyosid,2016-06-23 10:15:04,adding sklearn backport,c18682733af8d9a0e266d7e11d08b61649c9b0c6,
31,pull_request_commit,1148,nilearn,nilearn,ahoyosid,2016-06-23 10:17:50,adding backports to __init__,5e4afbd3de98c26c48719f41e62d3d49ba933268,
32,pull_request_commit,1148,nilearn,nilearn,ahoyosid,2016-06-23 12:53:39,adding check_X_y,401a18cf260eaaef4e329573540b4254f46bdb50,
33,pull_request_commit,1148,nilearn,nilearn,ahoyosid,2016-07-07 22:58:34,removing some files after supporting >= 0.14,fd730e88953e8ea5e845d55fc39f4c9930143c3f,
34,pull_request_commit,1148,nilearn,nilearn,ahoyosid,2016-07-07 22:58:52,"Merge branch 'master' of github.com:nilearn/nilearn into check_inputs

Not longer supporting v0.13",b5a8c486f1f3b650b9ff109b8241390daa4e18ae,
35,pull_request_commit,1148,nilearn,nilearn,ahoyosid,2016-07-07 23:41:58,minor flake8,2b5db39c3b3c35754a923096bccdfbe8202f0438,
36,pull_request_commit,1148,nilearn,nilearn,ahoyosid,2016-07-15 22:27:56,changing the name of the validation's file,99871717fb75693da887221d9205450bafb075b2,
37,pull_request_commit,1148,nilearn,nilearn,ahoyosid,2016-07-15 23:16:10,changing name,1c622965b42e91070a3ad3a707e407e3cc8ee5a3,
38,pull_request_commit,1148,nilearn,nilearn,ahoyosid,2016-07-18 09:41:37,adding test,42e35cf22d61e404f62194d7140be4ad1d6714d2,
39,pull_request_commit,1148,nilearn,nilearn,ahoyosid,2016-07-18 12:03:40,testing check_length for regressor and classifier,f386ce0cec0a7f4f4c97a29e0490b9e527e1e93d,
40,pull_request_commit,1148,nilearn,nilearn,ahoyosid,2016-07-19 04:05:04,removing extra spaces,6e38eda6c3ba6e600a3cd4c779f7735c70576bb5,
