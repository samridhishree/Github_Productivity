"rectype","issueid","project_owner","project_name","actor","time","text","action","title"
"issue_title","1491","nilearn","nilearn","dpisner453","2017-08-17 22:09:47","Is there any reason not to remove lines 1333-1334 from nilearn/plotting/displays.py?

        if not np.allclose(adjacency_matrix, adjacency_matrix.T, rtol=1e-3):
            raise ValueError(""'adjacency_matrix' should be symmetric"")

The reason I ask is that I'm trying to use nilearn to plot my adj. matrices from dMRI-generated structural matrices which are fundamentally asymmetric (when using prob. tracking). I think nilearn's plotting would benefit greatly if it were more flexible in this regard. 

Curious to hear your thoughts on this.

derek;","start issue","Why does nilearn restrict plotting adjacency matrices to symmetric ones?"
"issue_closed","1491","nilearn","nilearn","GaelVaroquaux","2017-08-25 05:12:45","","closed issue","Why does nilearn restrict plotting adjacency matrices to symmetric ones?"
"issue_comment","1491","nilearn","nilearn","bthirion","2017-08-20 18:16:09","Thx for the suggestion. What I don't figure out atm is what should be plotted in the case of an asymmetric matrix: given that there is no dis-symmetry in the display, only the symmetric part of the matrix will be plotted anyhow ? ","",""
"issue_comment","1491","nilearn","nilearn","bthirion","2017-08-22 06:39:34","OK, I thought you were discussing about `plot_connectome` that renders edges in MNI space; in that case, there is no straightforward way to render an asymmetric matrix.
If you are referring to `nilearn.plotting.plot_matrix`, then I understand your concern, and +1 for allowing non-symmetric matrices.","",""
"issue_comment","1491","nilearn","nilearn","bthirion","2017-08-22 15:38:06","That's really nice, but my question is: when you want to plot the link between i and j, which of the following values should one use: A[i, j], A[j, i],1/2 * ( A[i, j] + A[j,i]), max(A[i,j], A[k, i]) etc. ?","",""
"issue_comment","1491","nilearn","nilearn","bthirion","2017-08-22 19:33:12","I think we should keep the display of asymmetric edges aside for the moment.

Any of the decision rules that we've discussed so far amounts to symmetrizing the graph before display:  `plot_connectome(1/2 * (A+A.T))`, or `plot_connectome(np.max(A,A.T))` etc.
In any case, it is unclear what should be displayed  when an asymmetric matrix is given to the function, hence we should probably keep the  code as is and let the user decide what he/she wants to display.
","",""
"issue_comment","1491","nilearn","nilearn","dpisner453","2017-08-24 21:56:08","That sounds very reasonable to me! I will go ahead and make a pull request for this sometime in the coming months, and perhaps then we can touch base about it again.

Cheers,
derek;","",""
"issue_comment","1491","nilearn","nilearn","GaelVaroquaux","2017-08-25 05:12:45","Is there a conventional way of plotting asymmetric graphs?

I not, I think that the function should be prototyped outside of nilearn, and submitted for inclusion only once it has empirically shown to be useful.

I think that I'll go ahead and close this issue, to avoid clogging the tracker. We can come back at it when we understand this space better.","",""
"issue_comment","1491","nilearn","nilearn","KamalakerDadi","2017-08-18 08:58:55","AFAIK there is no restriction. May be I am also wrong.

What happened when you comment out those lines or increase the tol level ?
Have you tried ?","",""
"issue_comment","1491","nilearn","nilearn","KamalakerDadi","2017-08-18 17:09:39","```plot_connectome``` is heavily used for plotting connectivity matrices in rsfMRI research. We haven't seen issues so far on this aspect.

It is more of a discussion now which should be agreed by developers whether to add a parameter to control for symmetric or asymmetric matrix.","",""
"issue_comment","1491","nilearn","nilearn","KamalakerDadi","2017-08-18 20:08:11","warning makes sense but let's see what others might think on this","",""
"issue_comment","1491","nilearn","nilearn","KamalakerDadi","2017-08-22 07:40:44","Indeed issue is abt ```plot_connectome```. I don't know why square matrix came into picture.","",""
"issue_comment","1491","nilearn","nilearn","dpisner453","2017-08-18 15:28:13","Yes, if I comment out those lines, everything works fine! Just wondering why those lines even need to be included to begin with? (I've either had to fork nilearn every time in the past or had to keep commenting them out manually upon each upgrade, so I was wondering whether that trouble may be something I could avoid in future versions if there is no strong reason to keep those lines in the public release...) 

Or maybe those lines were included by mistake? Figured it was just stringent error handling that never raised issues since most nilearn users are only dealing with symmetric matrices from rsfMRI...","",""
"issue_comment","1491","nilearn","nilearn","dpisner453","2017-08-18 17:29:07","Whether plot_connectome was designed exclusively for rsfMRI or with additional the hope of having the flexibility to deal with dMRI data down the road, it makes little sense to me to require graph symmetry as a rigid requirement either way. If the concern is that some rsfMRI matrices that are intended to be symmetric (but are mistakenly asymmetric due to user error) may 'slip under the radar' without this error handle, then in the very least I think that it should be replaced with a mere warning:

```
import warnings
if not np.allclose(adjacency_matrix, adjacency_matrix.T, rtol=1e-3):
    warnings.warn(""'adjacency_matrix' should be symmetric"")
```","",""
"issue_comment","1491","nilearn","nilearn","dpisner453","2017-08-18 21:19:35","Sounds good! :-)","",""
"issue_comment","1491","nilearn","nilearn","dpisner453","2017-08-22 04:25:19","<img width=""689"" alt=""screen shot 2017-08-21 at 11 28 53 pm"" src=""https://user-images.githubusercontent.com/16432683/29548629-f838ac68-86c7-11e7-85ff-e87f0a88e5fa.png"">
","",""
"issue_comment","1491","nilearn","nilearn","dpisner453","2017-08-22 04:26:37","...if I turn off the restriction I can produce an asymmetrical matrix. If it is on, then I cannot?","",""
"issue_comment","1491","nilearn","nilearn","dpisner453","2017-08-22 12:53:40","Ah, sorry for the confusion! yes, there is no straightforward way to render an asymmetric matrix in nilearn, but I can still do that myself with matplotlib/numpy outside of nilearn, so that adj. matrix I posted was mostly just to demonstrate that these assym matrices can and do occur and in my opinion should be unrestricted across the board. Here is an example of what I can plot with plot_connectome if this is turned off:

![structural_connectome_fig_con_sn_002](https://user-images.githubusercontent.com/16432683/29566304-ffb4db32-870e-11e7-88c4-1d54a64fea71.png)
","",""
"issue_comment","1491","nilearn","nilearn","dpisner453","2017-08-22 16:05:23","So I can better understand your question, are you asking what edges, under asymmetric conditions, should be plotted? If so, the answer is that that is an open question! Since this kind of asymmetrical graph is essentially a directed multigraph, I would say that any of those options would work. I like max(A[i,j], A[k, i]) or 1/2*(A[i, j] + A[j,i]). But for now, even a binarized edge could work such as the black edges that I've included in the plot above. Maybe eventually I could help you guys to write a function that plots two thin edges simultaneously and adjacent to one another in order to depict multigraph degree (i.e. for both A[i, j] and A[j, i])? Bottom line is that, there is still no reason that I can see to restrict this kind of plotting to uni-directional graphs...","",""
"issue_comment","1491","nilearn","nilearn","dpisner453","2017-08-23 02:39:02","Sounds good for now. But can we still keep this issue open for future discussion?","",""
