"rectype","issueid","project_owner","project_name","actor","time","text","action","title"
"issue_title","310","pycqa","astroid","ceridwen","2016-01-18 23:59:37","``` python
Traceback (most recent call last):
  File ""/usr/local/lib/python3.4/dist-packages/hypothesis/core.py"", line 662, in is_template_example
    record_repr=record_repr,
  File ""/usr/local/lib/python3.4/dist-packages/hypothesis/executors/executors.py"", line 25, in default_executor
    return function()
  File ""/usr/local/lib/python3.4/dist-packages/hypothesis/core.py"", line 376, in run
    return test(*args, **kwargs)
  File ""~/code/astroid/astroid/tests/unittest_zipper.py"", line 14, in test
    ast = astroid.parse(source_file.read())
  File ""~/code/astroid/astroid/builder.py"", line 249, in parse
    return builder.string_build(code, modname=module_name, path=path)
  File ""~/code/astroid/astroid/builder.py"", line 151, in string_build
    return self._post_build(module, 'utf-8')
  File ""~/code/astroid/astroid/builder.py"", line 157, in _post_build
    delayed_assignments(module)
  File ""~/code/astroid/astroid/builder.py"", line 212, in delayed_assignments
    for inferred in node.expr.infer():
  File ""~/code/astroid/astroid/decorators.py"", line 100, in wrapped
    res = next(generator)
  File ""~/code/astroid/astroid/interpreter/util.py"", line 55, in infer_stmts
    for inferred in stmt.infer(context=context):
  File ""~/code/astroid/astroid/context.py"", line 51, in cache_generator
    for result in generator:
  File ""~/code/astroid/astroid/decorators.py"", line 97, in wrapped
    generator = _func(node, context, **kwargs)
  File ""~/code/astroid/astroid/inference.py"", line 710, in infer_assign
    stmts = list(self.assigned_stmts(context=context))
  File ""~/code/astroid/astroid/protocols.py"", line 321, in _arguments_infer_argname
    is_metaclass = isinstance(cls, treeabc.ClassDef) and cls.type == 'metaclass'
  File ""~/code/astroid/astroid/tree/scoped_nodes.py"", line 1224, in _class_type
    if _is_metaclass(klass):
  File ""~/code/astroid/astroid/tree/scoped_nodes.py"", line 1193, in _is_metaclass
    for baseobj in base.infer():
  File ""~/code/astroid/astroid/decorators.py"", line 100, in wrapped
    res = next(generator)
  File ""~/code/astroid/astroid/decorators.py"", line 153, in raise_if_nothing_inferred
    yield next(generator)
  File ""~/code/astroid/astroid/inference.py"", line 180, in infer_attribute
    for obj in owner.igetattr(self.attrname, context):
  File ""~/code/astroid/astroid/interpreter/util.py"", line 55, in infer_stmts
    for inferred in stmt.infer(context=context):
  File ""~/code/astroid/astroid/context.py"", line 51, in cache_generator
    for result in generator:
  File ""~/code/astroid/astroid/decorators.py"", line 97, in wrapped
    generator = _func(node, context, **kwargs)
  File ""~/code/astroid/astroid/inference.py"", line 155, in infer_import_from
    module = inferenceutil.do_import_module(self, self.modname)
  File ""~/code/astroid/astroid/interpreter/util.py"", line 307, in do_import_module
    relative_only=level and level >= 1)
  File ""~/code/astroid/astroid/tree/scoped_nodes.py"", line 347, in import_module
    return MANAGER.ast_from_module_name(absmodname)
  File ""~/code/astroid/astroid/manager.py"", line 140, in ast_from_module_name
    return self.ast_from_file(filepath, modname, fallback=False)
  File ""~/code/astroid/astroid/manager.py"", line 88, in ast_from_file
    return builder.AstroidBuilder(self).file_build(filepath, modname)
  File ""~/code/astroid/astroid/builder.py"", line 145, in file_build
    return self._post_build(module, encoding)
  File ""~/code/astroid/astroid/builder.py"", line 157, in _post_build
    delayed_assignments(module)
  File ""~/code/astroid/astroid/builder.py"", line 212, in delayed_assignments
    for inferred in node.expr.infer():
  File ""~/code/astroid/astroid/decorators.py"", line 100, in wrapped
    res = next(generator)
  File ""~/code/astroid/astroid/interpreter/util.py"", line 55, in infer_stmts
    for inferred in stmt.infer(context=context):
  File ""~/code/astroid/astroid/context.py"", line 51, in cache_generator
    for result in generator:
  File ""~/code/astroid/astroid/decorators.py"", line 97, in wrapped
    generator = _func(node, context, **kwargs)
  File ""~/code/astroid/astroid/inference.py"", line 710, in infer_assign
    stmts = list(self.assigned_stmts(context=context))
  File ""~/code/astroid/astroid/decorators.py"", line 153, in raise_if_nothing_inferred
    yield next(generator)
  File ""~/code/astroid/astroid/protocols.py"", line 274, in for_assigned_stmts
    for lst in self.iter.infer(context):
  File ""~/code/astroid/astroid/context.py"", line 51, in cache_generator
    for result in generator:
  File ""~/code/astroid/astroid/decorators.py"", line 153, in raise_if_nothing_inferred
    yield next(generator)
  File ""~/code/astroid/astroid/decorators.py"", line 100, in wrapped
    res = next(generator)
  File ""~/code/astroid/astroid/inference.py"", line 111, in infer_call
    for callee in self.func.infer(context):
  File ""~/code/astroid/astroid/context.py"", line 51, in cache_generator
    for result in generator:
  File ""~/code/astroid/astroid/decorators.py"", line 100, in wrapped
    res = next(generator)
  File ""~/code/astroid/astroid/decorators.py"", line 153, in raise_if_nothing_inferred
    yield next(generator)
  File ""~/code/astroid/astroid/inference.py"", line 174, in infer_attribute
    for owner in self.expr.infer(context):
  File ""~/code/astroid/astroid/context.py"", line 51, in cache_generator
    for result in generator:
  File ""~/code/astroid/astroid/decorators.py"", line 100, in wrapped
    res = next(generator)
  File ""~/code/astroid/astroid/decorators.py"", line 153, in raise_if_nothing_inferred
    yield next(generator)
  File ""~/code/astroid/astroid/inference.py"", line 180, in infer_attribute
    for obj in owner.igetattr(self.attrname, context):
  File ""~/code/astroid/astroid/tree/scoped_nodes.py"", line 304, in igetattr
    stmts = self.getattr(name, context)
  File ""~/code/astroid/astroid/tree/scoped_nodes.py"", line 279, in getattr
    elif not ignore_locals and name in self.locals:
  File ""~/code/astroid/astroid/interpreter/lookup.py"", line 49, in locals
    return MappingProxyType(get_locals(self))
  File ""/usr/lib/python3.4/functools.py"", line 727, in wrapper
    return dispatch(args[0].__class__)(*args, **kw)
  File ""~/code/astroid/astroid/interpreter/lookup.py"", line 198, in scoped_node
    _get_locals(n, locals_)
  File ""/usr/lib/python3.4/functools.py"", line 727, in wrapper
    return dispatch(args[0].__class__)(*args, **kw)
  File ""~/code/astroid/astroid/interpreter/lookup.py"", line 305, in locals_import_from
    sort_locals(locals_[asname or name])
  File ""~/code/astroid/astroid/interpreter/lookup.py"", line 292, in sort_locals
    my_list.sort(key=lambda node: node.fromlineno)
TypeError: unorderable types: int() < NoneType()
```

This crash happened when running:

``` python
def test(name):
    with open(name, 'r') as source_file:
        ast = astroid.parse(source_file.read())
        print(repr(ast))
```

On `astroid/tests/unittest_transforms.py`.  The bug is nondeterministic so it will not always crash.
","start issue","Crash during AST construction from fromlineno being None"
"issue_closed","310","pycqa","astroid","PCManticore","2016-01-24 22:29:46","","closed issue","Crash during AST construction from fromlineno being None"
"issue_comment","310","pycqa","astroid","ceridwen","2016-01-23 23:45:10","Also occurs on unittest_builders.py and unittest_helpers.py.
","",""
"issue_comment","310","pycqa","astroid","PCManticore","2016-01-24 22:29:54","Should not reproduce anymore. 
","",""
