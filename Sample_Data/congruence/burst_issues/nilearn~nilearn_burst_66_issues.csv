,rectype,issueid,project_owner,project_name,actor,time,text,action,title
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,785,nilearn,nilearn,KamalakerDadi,2015-09-29 11:24:43,"In plot_stat_map function, ""cut_coords""
",start issue,Addressing issue to raise error message to input for proper coords
2,issue_closed,785,nilearn,nilearn,GaelVaroquaux,2015-10-07 06:21:26,,closed issue,Addressing issue to raise error message to input for proper coords
3,pull_request_title,785,nilearn,nilearn,KamalakerDadi,2015-09-29 11:24:43,"In plot_stat_map function, ""cut_coords""
",b002a9b868baf325eee1fdb5e8bd7154a3cc3194,Addressing issue to raise error message to input for proper coords
4,pull_request_merged,785,nilearn,nilearn,GaelVaroquaux,2015-10-07 06:21:26,Addressing issue to raise error message to input for proper coords,e575dfbba594f3744c9e28a891e39f569fd59be2,Pull request merge from KamalakerDadi/nilearn:fix_errormessage_cut_coords to nilearn/nilearn:master
5,issue_comment,785,nilearn,nilearn,KamalakerDadi,2015-09-29 11:29:28,"Addressing issue #784 
",,
6,issue_comment,785,nilearn,nilearn,lesteve,2015-09-29 12:12:17,"Also we need a test to check that the right exception is raised when n_cuts doesn't have the right type.
",,
7,issue_comment,785,nilearn,nilearn,GaelVaroquaux,2015-09-29 12:17:56,"> Also we need a test to check that the right exception is raised when n_cuts
> doesn't have the right type.

We don't want to check on type, right, we want to check something like:
abs(round(n_cuts) - n_cut) < .01
",,
8,issue_comment,785,nilearn,nilearn,lesteve,2015-09-29 12:57:14,"> We don't want to check on type, right, we want to check something like: abs(round(n_cuts) - n_cut) < .01

Personally I would require a strictly positive integer, as mentioned by @AlexandreAbraham somewhere above.
",,
9,issue_comment,785,nilearn,nilearn,bthirion,2015-09-30 06:19:16,"LGTM
",,
10,issue_comment,785,nilearn,nilearn,KamalakerDadi,2015-10-06 10:40:26,"ping @lesteve 
",,
11,issue_comment,785,nilearn,nilearn,KamalakerDadi,2015-10-07 06:07:37,"@lesteve thanks for the comments. Can you please have a look now ?
",,
12,issue_comment,785,nilearn,nilearn,GaelVaroquaux,2015-10-07 06:21:23,"LGTM. Merging.
",,
13,pull_request_commit_comment,785,nilearn,nilearn,banilo,2015-09-29 11:31:19,"Two things come to mind:
a) Is it intuitive to the user that you write ""0"" as float?
b) Language: probably new sentence before second If here.
",b002a9b868baf325eee1fdb5e8bd7154a3cc3194,"(None, '', u'nilearn/plotting/find_cuts.py')"
14,pull_request_commit_comment,785,nilearn,nilearn,KamalakerDadi,2015-09-29 11:37:21,">  Is it intuitive to the user that you write ""0"" as float?

Not necessarily, I will remove.
",b002a9b868baf325eee1fdb5e8bd7154a3cc3194,"(None, '', u'nilearn/plotting/find_cuts.py')"
15,pull_request_commit_comment,785,nilearn,nilearn,lesteve,2015-09-29 12:09:14,"I would check that n_cuts is an integer on top of being strictly positive.
",b002a9b868baf325eee1fdb5e8bd7154a3cc3194,"(None, '', u'nilearn/plotting/find_cuts.py')"
16,pull_request_commit_comment,785,nilearn,nilearn,lesteve,2015-09-29 12:14:36,"I think your message is relevant to cut_coords in plot_\* (e.g. plot_stat_map) but not really n_cuts in find_cut_slices ...
",b002a9b868baf325eee1fdb5e8bd7154a3cc3194,"(None, '', u'nilearn/plotting/find_cuts.py')"
17,pull_request_commit_comment,785,nilearn,nilearn,AlexandreAbraham,2015-09-29 12:18:24,"+1
",b002a9b868baf325eee1fdb5e8bd7154a3cc3194,"(None, '', u'nilearn/plotting/find_cuts.py')"
18,pull_request_commit_comment,785,nilearn,nilearn,AlexandreAbraham,2015-09-29 12:21:27,"I find your error message very verbose. I think you should go straight to the point. Something like:
""The number of cuts in direction '?' must be an integer comprised between 0 and this_shape. You provided ..."".
",b002a9b868baf325eee1fdb5e8bd7154a3cc3194,"(None, '', u'nilearn/plotting/find_cuts.py')"
19,pull_request_commit_comment,785,nilearn,nilearn,GaelVaroquaux,2015-09-29 12:27:15,"> ""The number of cuts in direction '?' must be an integer comprised
> between 0 and this_shape. You provided ..."".

+1
",b002a9b868baf325eee1fdb5e8bd7154a3cc3194,"(None, '', u'nilearn/plotting/find_cuts.py')"
20,pull_request_commit_comment,785,nilearn,nilearn,KamalakerDadi,2015-09-29 13:17:30,"I am trying to be more informative trying to get a difference between using this ""[ ]"" and without this ""[ ]"".
",b002a9b868baf325eee1fdb5e8bd7154a3cc3194,"(None, '', u'nilearn/plotting/find_cuts.py')"
21,pull_request_commit_comment,785,nilearn,nilearn,lesteve,2015-09-29 13:45:11,"As I said above, using a list makes sense for cut_coords in plot_stat_map but not really for n_cuts in find_cut_slices, so it should not be part of the error message.
",b002a9b868baf325eee1fdb5e8bd7154a3cc3194,"(None, '', u'nilearn/plotting/find_cuts.py')"
22,pull_request_commit_comment,785,nilearn,nilearn,lesteve,2015-09-30 07:52:21,"I would be in favor of requiring n_cuts to be an integer personally as mentioned before.
",b002a9b868baf325eee1fdb5e8bd7154a3cc3194,"(None, '', u'nilearn/plotting/find_cuts.py')"
23,pull_request_commit_comment,785,nilearn,nilearn,lesteve,2015-09-30 07:53:20,"Instead of

``` python

if condition:
    pass
else:
    do_something
```

do:

``` python

if not condition:
    do_something
```
",b002a9b868baf325eee1fdb5e8bd7154a3cc3194,"(None, '', u'nilearn/plotting/find_cuts.py')"
24,pull_request_commit_comment,785,nilearn,nilearn,lesteve,2015-09-30 07:54:27,"Also you don't need parentheses around the if condition, we are not writing C.

``` python
if bla and foo:
```

rather than:

``` python
if (bla and foo):
```
",b002a9b868baf325eee1fdb5e8bd7154a3cc3194,"(None, '', u'nilearn/plotting/find_cuts.py')"
25,pull_request_commit_comment,785,nilearn,nilearn,lesteve,2015-09-30 07:56:17,"I would create a separate test for this error message and use assert_raises_regex from somewhere in utils to check the content of the error message.
",b002a9b868baf325eee1fdb5e8bd7154a3cc3194,"(None, '', u'nilearn/plotting/tests/test_find_cuts.py')"
26,pull_request_commit_comment,785,nilearn,nilearn,lesteve,2015-09-30 07:59:18,"As @AlexandreAbraham suggested adding something like ""you provided n_cuts=whatever"" gives a better clue to the user as to what he did wrong.
",b002a9b868baf325eee1fdb5e8bd7154a3cc3194,"(None, '', u'nilearn/plotting/find_cuts.py')"
27,pull_request_commit_comment,785,nilearn,nilearn,lesteve,2015-09-30 08:00:01,"Also I would test a float, to make sure that we do get an exception.
",b002a9b868baf325eee1fdb5e8bd7154a3cc3194,"(None, '', u'nilearn/plotting/tests/test_find_cuts.py')"
28,pull_request_commit_comment,785,nilearn,nilearn,GaelVaroquaux,2015-09-30 08:06:30,"> I would be in favor of requiring n_cuts to be an integer personally as
> mentioned before.

No. Please don't test on types. People (beginners) don't understand what
the difference between ""0"" and ""0."" is. And they shouldn't have to
understand that to use nilearn. Test that it is very close to an integer.
",b002a9b868baf325eee1fdb5e8bd7154a3cc3194,"(None, '', u'nilearn/plotting/find_cuts.py')"
29,pull_request_commit_comment,785,nilearn,nilearn,lesteve,2015-09-30 08:26:28,"Not 100 % convinced I have to say. At the very least I would advocate strict equality checking, i.e. round(n_cuts) == n_cuts.
",b002a9b868baf325eee1fdb5e8bd7154a3cc3194,"(None, '', u'nilearn/plotting/find_cuts.py')"
30,pull_request_commit_comment,785,nilearn,nilearn,lesteve,2015-09-30 08:42:47,"Also worth noting, the current code doesn't allow n_cuts to be a float, because range needs an integer.

I guess if we expect our user to be able to use range (I hope we do), we could expect them to provide an int as n_cuts, and provide a helpful error message to guide them if they don't. 
",b002a9b868baf325eee1fdb5e8bd7154a3cc3194,"(None, '', u'nilearn/plotting/find_cuts.py')"
31,pull_request_commit_comment,785,nilearn,nilearn,KamalakerDadi,2015-09-30 08:49:04,"How about forcing to take float in case user submitted as `int(something)`? As you said there is no chance of float since range will throw back.
",b002a9b868baf325eee1fdb5e8bd7154a3cc3194,"(None, '', u'nilearn/plotting/find_cuts.py')"
32,pull_request_commit_comment,785,nilearn,nilearn,lesteve,2015-09-30 09:10:56,"> How about forcing to take float in case user submitted as int(something) ? As you said there is no chance of float since range will throw back.

Not sure what you mean exactly, sorry.

My point was that at the moment users have to provide an int as `n_cuts` because the code raises an exception for a float. That didn't seem to cause massive confusion amongst our users.
",b002a9b868baf325eee1fdb5e8bd7154a3cc3194,"(None, '', u'nilearn/plotting/find_cuts.py')"
33,pull_request_commit_comment,785,nilearn,nilearn,AlexandreAbraham,2015-09-30 09:31:56,"This is a comment more general than this PR but, in my opinion, using a versatile `cut_coords` is already misleading. I would add a `n_cuts` parameter to the plotting functions. This would solve the problem as we would be able to raise a meaningful error higher in the stack.
",b002a9b868baf325eee1fdb5e8bd7154a3cc3194,"(None, '', u'nilearn/plotting/find_cuts.py')"
34,pull_request_commit_comment,785,nilearn,nilearn,GaelVaroquaux,2015-09-30 12:02:01,"> Not 100 % convinced I have to say. At the very least I would advocate strict
> equality checking, i.e. round(n_cuts) == n_cuts.

I am worried about floating point errors. I agree that the tolerance here
should be small.
",b002a9b868baf325eee1fdb5e8bd7154a3cc3194,"(None, '', u'nilearn/plotting/find_cuts.py')"
35,pull_request_commit_comment,785,nilearn,nilearn,KamalakerDadi,2015-09-30 13:01:43,"I am a bit unclear, at the moment I have done this.

``` python
if not (isinstance(n_cuts, int) and n_cuts > 0):
        message = (""The number of cuts in the direction '%s' must be ""
                   ""an 'integer' between 0 and %d. You provided n_cuts=%s "" % (
                       direction, this_shape, n_cuts))
        raise ValueError(message)
```

Please let me know if this is not the way it should be.
",b002a9b868baf325eee1fdb5e8bd7154a3cc3194,"(None, '', u'nilearn/plotting/find_cuts.py')"
36,pull_request_commit_comment,785,nilearn,nilearn,GaelVaroquaux,2015-09-30 14:19:19,"I would do 

<pre>
    isinstance(numbers.Number) and abs(round(n_cuts) - n_cuts) < 1e-10)
</pre>
",b002a9b868baf325eee1fdb5e8bd7154a3cc3194,"(None, '', u'nilearn/plotting/find_cuts.py')"
37,pull_request_commit_comment,785,nilearn,nilearn,KamalakerDadi,2015-10-01 12:24:09,"Case1:

``` python
if isinstance(n_cuts, numbers.Number) and abs(round(n_cuts) - n_cuts) < 1e-10:
    condition
    # Comment: Condition is passing always since I am subtracting n_cuts with n_cuts
```

Narrowing down Case 1
Case2: fix_n_cut = 0

``` python
if isinstance(n_cuts, numbers.Number) and abs(round(n_cuts) - fix_n_cut) < 1e-10:
    condition
    # condition passes as expected but fails for cut_coords= -1 
```

Narrowing down Case 2
Case 3: fix_n_cut = 0 and removed `abs`

``` python
if isinstance(n_cuts, numbers.Number) and (round(n_cuts) - fix_n_cut) < 1e-10:
    condition
    # condition always passes as expected for cut_coords which are <=0 
```

@lesteve @GaelVaroquaux Can you comment on this ?
",b002a9b868baf325eee1fdb5e8bd7154a3cc3194,"(None, '', u'nilearn/plotting/find_cuts.py')"
38,pull_request_commit_comment,785,nilearn,nilearn,AlexandreAbraham,2015-10-01 12:33:29,"I think we should stop using magical values such as 1e-10 everywhere in the code. We should create a function in utils once and for all.

Removing abs is out of question: we have to be robust to the direction of the error.

Also, 1e-10 may not work for float32:

```
In [2]: np.finfo(np.float32).eps
Out[2]: 1.1920929e-07
```
",b002a9b868baf325eee1fdb5e8bd7154a3cc3194,"(None, '', u'nilearn/plotting/find_cuts.py')"
39,pull_request_commit_comment,785,nilearn,nilearn,GaelVaroquaux,2015-10-01 12:38:31,"> Also, 1e-10 may not work for float32:
> 
> In [2]: np.finfo(np.float32).eps
> Out[2]: 1.1920929e-07

OK, let's use np.finfo(np.float32).eps.
",b002a9b868baf325eee1fdb5e8bd7154a3cc3194,"(None, '', u'nilearn/plotting/find_cuts.py')"
40,pull_request_commit_comment,785,nilearn,nilearn,lesteve,2015-10-07 06:40:35,"This should  be `difference < epsilon` and not `n_cuts < epsilon`.
",b002a9b868baf325eee1fdb5e8bd7154a3cc3194,"(20, '', u'nilearn/plotting/find_cuts.py')"
41,pull_request_commit_comment,785,nilearn,nilearn,lesteve,2015-10-07 06:43:12,"You need a test with a positive number that raises an exception. That would have allowed you to catch the bug above.
",b002a9b868baf325eee1fdb5e8bd7154a3cc3194,"(18, '', u'nilearn/plotting/tests/test_find_cuts.py')"
42,pull_request_commit_comment,785,nilearn,nilearn,lesteve,2015-10-07 06:46:39,"0.999999, 9.99999 and 10.0000045 is actually not close enough to an int and will raise an exception when you fix the bug.
",b002a9b868baf325eee1fdb5e8bd7154a3cc3194,"(29, '', u'nilearn/plotting/tests/test_find_cuts.py')"
43,pull_request_commit_comment,785,nilearn,nilearn,lesteve,2015-10-07 06:47:46,"you could compare `find_cut_slices(img, direction='x', n_cuts=n_cuts)` to `find_cut_slices(img, direction='x', n_cuts=round(n_cuts))`
",b002a9b868baf325eee1fdb5e8bd7154a3cc3194,"(31, '', u'nilearn/plotting/tests/test_find_cuts.py')"
44,pull_request_commit_comment,785,nilearn,nilearn,KamalakerDadi,2015-10-07 07:00:44,"At the first step, I am not caring about floating errors. I am seeing if it is negative or 0.
",b002a9b868baf325eee1fdb5e8bd7154a3cc3194,"(20, '', u'nilearn/plotting/find_cuts.py')"
45,pull_request_commit_comment,785,nilearn,nilearn,lesteve,2015-10-07 07:53:05,"Not sure what you mean. What happened to the condition about n_cuts being close to an int ?
",b002a9b868baf325eee1fdb5e8bd7154a3cc3194,"(20, '', u'nilearn/plotting/find_cuts.py')"
46,pull_request_commit_comment,785,nilearn,nilearn,KamalakerDadi,2015-10-07 07:58:43,"If user gives `-1.000` something. I will not care about being close to an int. It is negative which is invalid and I would raise an error.
",b002a9b868baf325eee1fdb5e8bd7154a3cc3194,"(20, '', u'nilearn/plotting/find_cuts.py')"
47,pull_request_commit_comment,785,nilearn,nilearn,KamalakerDadi,2015-10-07 07:59:54,"positive number is a valid one. Why would we test on that ?
",b002a9b868baf325eee1fdb5e8bd7154a3cc3194,"(18, '', u'nilearn/plotting/tests/test_find_cuts.py')"
48,pull_request_commit_comment,785,nilearn,nilearn,lesteve,2015-10-07 08:04:03,"For example, `find_cut_slices(img, direction='x', n_cuts=1.5)` does not raise an exception at the moment. I think it should because 1.5 is not close to an int.
",b002a9b868baf325eee1fdb5e8bd7154a3cc3194,"(20, '', u'nilearn/plotting/find_cuts.py')"
49,pull_request_commit_comment,785,nilearn,nilearn,KamalakerDadi,2015-10-07 08:04:38,"I may be wrong. I have tested with positive numbers and I don't see any exception.
",b002a9b868baf325eee1fdb5e8bd7154a3cc3194,"(18, '', u'nilearn/plotting/tests/test_find_cuts.py')"
50,pull_request_commit,785,nilearn,nilearn,KamalakerDadi,2015-09-29 11:14:08,"Addressing issue to raise error message to input for proper coords
for plot_stat_map function",1a86259081aedab2726ad2476a9b7ff752a99bf3,
51,pull_request_commit,785,nilearn,nilearn,KamalakerDadi,2015-09-29 15:20:11,"Addressed comments such as error message, test, n_cuts check moved to top",ced5503312c16a6cc8336e337af8ba61fe407627,
52,pull_request_commit,785,nilearn,nilearn,KamalakerDadi,2015-10-06 08:12:20,Addressed comments related to floating error problems.,1ba29d6a9f7cb786f1b1227ed927a13964fa3142,
53,pull_request_commit,785,nilearn,nilearn,KamalakerDadi,2015-10-06 20:30:39,Addressed changes to Loic comments,b002a9b868baf325eee1fdb5e8bd7154a3cc3194,
