,rectype,issueid,project_owner,project_name,actor,time,text,action,title
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,66,nilearn,nilearn,pgervais,2013-05-30 08:09:23,"Some modifications have been made in the user guide structure. A new part has been added (now part 2), which describes in detail the usage of NiftiMasker, NiftiLabelsMasker and NiftiMapsMasker. Part of it have been moved from the former part 5.

Comments welcome.
",start issue,WIP: Masker documentation
2,issue_closed,66,nilearn,nilearn,pgervais,2013-05-31 14:37:11,,closed issue,WIP: Masker documentation
3,pull_request_title,66,nilearn,nilearn,pgervais,2013-05-30 08:09:23,"Some modifications have been made in the user guide structure. A new part has been added (now part 2), which describes in detail the usage of NiftiMasker, NiftiLabelsMasker and NiftiMapsMasker. Part of it have been moved from the former part 5.

Comments welcome.
",5cf1e556141355a0aed91d763c964f917c1c4f55,WIP: Masker documentation
4,pull_request_merged,66,nilearn,nilearn,pgervais,2013-05-31 14:37:11,WIP: Masker documentation,fed0de5fc1a276b808bdd45c9d350c44ffe858dd,Pull request merge from pgervais/nilearn:masker_doc to nilearn/nilearn:master
5,issue_comment,66,nilearn,nilearn,GaelVaroquaux,2013-05-30 09:47:19,"In 3.1, there should be a subsection about non custom things (i.e. using the NiftiMasker as a black box, giving it filenames, using the MultiNiftiMasker when you have several subjects) before custom things :)
",,
6,issue_comment,66,nilearn,nilearn,GaelVaroquaux,2013-05-31 12:44:35,"Actually, could you rather create a directory 'decoding' and put a
searchlight.py file in there. If we add more methods, having a single
file will not scale.
",,
7,issue_comment,66,nilearn,nilearn,pgervais,2013-05-30 11:13:09,"The non-custom things description is currently in part 2. I didn't repeat it. 
",,
8,issue_comment,66,nilearn,nilearn,pgervais,2013-05-31 11:56:14,"One more big incompatible change: the ""searchlight"" module was renamed to ""decoding"", which is supposed to contain in the long run every decoding algorithm implemented in nisl. This in turn may change in the future, but this is a step in the right direction.
",,
9,pull_request_commit,66,nilearn,nilearn,pgervais,2013-05-28 08:30:55,"Changed default in NiftiMasker

Changed ""standardize"" keyword argument from False to True.",67e45731cb3165fdd5925ea6733b4aceeeed8e76,
10,pull_request_commit,66,nilearn,nilearn,pgervais,2013-05-28 08:31:54,"Created ""extracting data"" section.

Moved description of NiftiMasker from section ""fMRI data manipulation""
to the new section. Adapted the text as well.",b58d8c38eede8141fc0c6af9c6ac0846db21cbc2,
11,pull_request_commit,66,nilearn,nilearn,pgervais,2013-05-28 11:27:26,Written some doc on Nifti(Maps|Labels)Masker,d0f4fb124c7c39f91e34f8048c2d29b5fa51ad75,
12,pull_request_commit,66,nilearn,nilearn,pgervais,2013-05-28 12:32:41,Fixed docstrings in resampling.py,89ba439b0a681502e27723736739dcd827277e39,
13,pull_request_commit,66,nilearn,nilearn,pgervais,2013-05-30 08:33:37,Remove spurious non-breakable spaces.,b3ed688f786a2e013536423737ce68fc1cc6d911,
14,pull_request_commit,66,nilearn,nilearn,pgervais,2013-05-30 15:15:44,"Completed list of functions in classes.rst

Also added some links, removed broken ones.",d63ba57e4ef80f3239ee70f0bc33d64fd90f1f93,
15,pull_request_commit,66,nilearn,nilearn,pgervais,2013-05-30 15:59:31,Added a lot of links in extraction_data.rst,625013507d9d4ac136e2e732198b1bf819445c70,
16,pull_request_commit,66,nilearn,nilearn,pgervais,2013-05-30 16:27:28,"Added links to examples, reformulated.",1e79e6c6ba50a719606235c41c8cfe99690a7404,
17,pull_request_commit,66,nilearn,nilearn,pgervais,2013-05-31 11:30:29,"Renamed searchlight.py to decoding.py

This is the first step toward a module dedicated to decoding algorithms.",b03d7906397f7fa833291310b01939afbe3818e0,
18,pull_request_commit,66,nilearn,nilearn,pgervais,2013-05-31 11:44:45,Added decoding module to documentation.,b960ed70dd9874e56228797c082ea5940865029f,
19,pull_request_commit,66,nilearn,nilearn,pgervais,2013-05-31 13:23:54,Corrected some Sphinx compilation errors,2178b5759298cbbb6cf25f033614d18d6ee02175,
20,pull_request_commit,66,nilearn,nilearn,pgervais,2013-05-31 13:28:48,"Created directory ""decoding""",e612f898ba730a25fb051a75f2915f5f45003bee,
21,pull_request_commit,66,nilearn,nilearn,pgervais,2013-05-31 13:35:05,Moved searchlight tests in decoding/tests,7e0090cee0b8a2a8fd4b7b1d5f1c64d20f770a3a,
22,pull_request_commit,66,nilearn,nilearn,pgervais,2013-05-31 13:42:48,Added a comment in plot_simulated_data.py,3905dfb0386b9c5a6a68942aa46e9025150ec26c,
23,pull_request_commit,66,nilearn,nilearn,pgervais,2013-05-31 14:02:47,"Fixed examples

Some examples were broken after changing the default value for ""standardize""
in NiftiMasker class.",5cf1e556141355a0aed91d763c964f917c1c4f55,
24,pull_request_commit_comment,66,nilearn,nilearn,AlexandreAbraham,2013-05-31 13:47:26,"This breaks the examples who use mean_epi as background.
",67e45731cb3165fdd5925ea6733b4aceeeed8e76,"(5, 109, u'nisl/io/nifti_masker.py')"
25,pull_request_commit_comment,66,nilearn,nilearn,pgervais,2013-05-31 13:53:51,"Fixing it...
",67e45731cb3165fdd5925ea6733b4aceeeed8e76,"(5, 109, u'nisl/io/nifti_masker.py')"
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,64,nilearn,nilearn,fabianp,2013-05-29 08:24:14,"3822.42 seconds in my machine. Mostly because of Searchlight.

In any case this makes it really painful to build the doc and to the user it looks as if the example was broken (there is no output whatsoever for one hour).

This is blocking to have the nightly documentation builds.
",start issue,plot_simulated_data.py takes one hour to finish
2,issue_closed,64,nilearn,nilearn,AlexandreAbraham,2013-05-30 22:44:03,,closed issue,plot_simulated_data.py takes one hour to finish
3,issue_comment,64,nilearn,nilearn,GaelVaroquaux,2013-05-29 08:26:53,"> 3822.42 seconds in my machine. Mostly because of Searchlight.
> 
> In any case this makes it really painful to build the doc and to the user it
> looks as if the example was broken (there is no output whatsoever for one
> hour).

OK, the fact that there is no output needs to be changed.

That said, we need real examples on nisl, not only toys. This means that
we will have to cope with long-running doc builds (and yes searchlight is
slow and useless).
",,
4,issue_comment,64,nilearn,nilearn,GaelVaroquaux,2013-05-29 08:40:19,"> Normally, the progression is shown like that:
> Job #1, processed 190/1435 voxels(13.24%, 76 seconds remaining)
> 
> So there must be another problem...

It could be that the output is captured by the gen_rst.py. There is a
'Tee' object that is supposed to sort this out, but... Need investigation
",,
5,issue_comment,64,nilearn,nilearn,GaelVaroquaux,2013-05-29 12:44:05,"> Estimated computation time on my machine is ~50 000 seconds.

Are you sure that you are talking about the plot_simulated_data example?
",,
6,issue_comment,64,nilearn,nilearn,GaelVaroquaux,2013-05-29 12:51:13,"> ```
> Are you sure that you are talking about the plot_simulated_data example?
> ```
> 
> No, I thought that we were talking about plot_haxby_searchlight...

So the take home message is that if you put an SVC in a regression pb, it
is very slow, and the same for an SVR in a classification pb. I believe
that it is because of the low explained variance, that makes the
optimization pb hard (probably because of the large number of support
vectors).
",,
7,issue_comment,64,nilearn,nilearn,GaelVaroquaux,2013-05-31 08:15:54,"> THANKS!! works much better now, it went down to 159s which is really
> reasonable.

Well, thanks for pointing it out. It was useful.

> I promise to have the buildbot working soon.

Great!

G
",,
8,issue_comment,64,nilearn,nilearn,pgervais,2013-05-29 09:26:05,"I'm in the process of changing the Searchlight class API (see PR #65). I'll have a look on this problem at the same time. 
",,
9,issue_comment,64,nilearn,nilearn,pgervais,2013-05-29 09:39:43,"The reason why there's no output in the console, is because verbose=1 should be passed to Searchlight, which is not the case in plot_simulated_data.py.
",,
10,issue_comment,64,nilearn,nilearn,pgervais,2013-05-29 09:43:20,"On my machine, with one core only, the searchlight part takes 475s. 
",,
11,issue_comment,64,nilearn,nilearn,pgervais,2013-05-29 12:22:23,"After some discussion with Gael, adding `estimator=svm.SVR(kernel=""linear"")` to the SearchLight initialization parameters partly solves the problem (this was a bug). The computation time is reduced, and the result is way better.
",,
12,issue_comment,64,nilearn,nilearn,pgervais,2013-05-29 12:49:05,"The bug is only in plot_simulated_data.py, not plot_haxby_searchlight.py, because one is a regression, and the other a classification task.
",,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,65,nilearn,nilearn,pgervais,2013-05-29 09:14:23,"The Searchlight class API has been changed to be consistent with the rest of the API. More precisely, it now takes niimgs as input instead of numpy.ndarray. 

This change allowed to ensure that the `radius` parameter is in millimeter, not in voxel size, **and** that non-isotropic voxels are correctly handled.

This should close issue #53.
",start issue,Searchlight API change
2,issue_closed,65,nilearn,nilearn,pgervais,2013-05-31 10:46:50,,closed issue,Searchlight API change
3,pull_request_title,65,nilearn,nilearn,pgervais,2013-05-29 09:14:23,"The Searchlight class API has been changed to be consistent with the rest of the API. More precisely, it now takes niimgs as input instead of numpy.ndarray. 

This change allowed to ensure that the `radius` parameter is in millimeter, not in voxel size, **and** that non-isotropic voxels are correctly handled.

This should close issue #53.
",3239a51276ded8f0eb6d0ae36d5e82f71b81150c,Searchlight API change
4,pull_request_merged,65,nilearn,nilearn,pgervais,2013-05-31 10:46:50,Searchlight API change,9aaace39c6236a2429e103cdbea8ac7054a9cd60,Pull request merge from pgervais/nilearn:searchlight_api to nilearn/nilearn:master
5,issue_comment,65,nilearn,nilearn,pgervais,2013-05-29 16:19:00,"I fixed what I consider as a bug in 0fecd4b. I removed two lines whose usefulness is doubtful to me (to say the least) (lines 145-146). If someone has an idea, I'd appreciate it. Removing them removed artifacts that occured in plot_simulated_data.py. 

After fixing plot_simulated_data.py, the result of searchlight seems to be reasonable. It is not just noise as before.
Good to merge for me.
",,
6,issue_comment,65,nilearn,nilearn,pgervais,2013-05-31 10:47:27,"I rebased the branch on master for merging.
",,
7,pull_request_commit_comment,65,nilearn,nilearn,agramfort,2013-05-29 12:35:32,"measures
",3239a51276ded8f0eb6d0ae36d5e82f71b81150c,"(None, '', u'plot_haxby_searchlight.py')"
8,pull_request_commit,65,nilearn,nilearn,pgervais,2013-05-29 08:39:54,"The Searchlight class now takes niimg as input

This modification was performed for correct handling of non-isotropic images,
and for consistency with the rest of the API.",ba93f0b8f1e17955a5990246b53577479ad88165,
9,pull_request_commit,65,nilearn,nilearn,pgervais,2013-05-29 09:09:30,"Tidied up plot_haxby_searchlight.py

Adapted nisl/tests/test_searchlight.py to the new searchlight API.",a779bcd92e4978429799b3cacde20f5781e1ad3d,
10,pull_request_commit,65,nilearn,nilearn,pgervais,2013-05-29 15:51:32,"Fixed plot_simulated_data.py

Fixed what appeared to be a bug in searchlight (removed two lines
with unknown significance).",7397c1061918638dde9b4dd407850014aec8718d,
11,pull_request_commit,65,nilearn,nilearn,pgervais,2013-05-29 16:09:06,"Fixed docstrings, code clean up.",5e387d474398fa67535db9e40993f9a37766b575,
12,pull_request_commit,65,nilearn,nilearn,pgervais,2013-05-30 07:51:34,"Used _apply_mask_fmri() in searchlight

The _apply_mask_fmri() function was used instead of an ad-hoc solution,
to avoid code duplication.",3239a51276ded8f0eb6d0ae36d5e82f71b81150c,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,63,nilearn,nilearn,pgervais,2013-05-28 14:45:44,"Nothing fancy in this PR, this is mainly an announcement.

The keyword parameter ""confounds"" in clean can now take lists instead of just file names and numpy arrays. This simplifies the cases where some confounds are provided with the images, and some are computed (as with high_variance_confounds).

Example usage in plot_adhd_covariance.py. 
",start issue,Simplified confounds loading
2,issue_closed,63,nilearn,nilearn,AlexandreAbraham,2013-05-29 16:39:58,,closed issue,Simplified confounds loading
3,pull_request_title,63,nilearn,nilearn,pgervais,2013-05-28 14:45:44,"Nothing fancy in this PR, this is mainly an announcement.

The keyword parameter ""confounds"" in clean can now take lists instead of just file names and numpy arrays. This simplifies the cases where some confounds are provided with the images, and some are computed (as with high_variance_confounds).

Example usage in plot_adhd_covariance.py. 
",d9a21f6fd74462d4993bd86dd0df6d8cce796542,Simplified confounds loading
4,pull_request_merged,63,nilearn,nilearn,AlexandreAbraham,2013-05-29 16:39:58,Simplified confounds loading,c59ea80b0b800ba7e830a36663045666f65059b5,Pull request merge from pgervais/nilearn:file_handling_clean to nilearn/nilearn:master
5,pull_request_commit,63,nilearn,nilearn,pgervais,2013-05-27 12:41:16,"TST: confounds given as filename for signal.clean()

Added a fake confound file: test_files/spm_confounds.txt, and an
associated test.",cc2b1685220d72a99fde5ac33d0640aa757fbde5,
6,pull_request_commit,63,nilearn,nilearn,pgervais,2013-05-28 13:28:16,"confounds can be passed as a list to clean()

The ""confounds"" keyword argument in signal.clean() can now be a list of
arrays / filenames. Proper handling of 1D arrays has be added (it wasn't
working)",d9a21f6fd74462d4993bd86dd0df6d8cce796542,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,52,nilearn,nilearn,fabianp,2013-05-09 10:29:23,"Make automated builds of the doc and push it to webpage
",start issue,Buildbot for documentation
2,issue_closed,52,nilearn,nilearn,pgervais,2013-05-31 14:41:41,,closed issue,Buildbot for documentation
3,issue_comment,52,nilearn,nilearn,pgervais,2013-05-31 14:41:39,"Buildbot operating since yesterday, closing.
",,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,62,nilearn,nilearn,pgervais,2013-05-27 09:29:01,"The memory usage of resample_img() has been reduced, by removing usage of the infamous numpy.concatenate function. The resulting function is also very slightly faster (5%). 

The overall function structure hase been clarified. Some tests for error handling in resample_img() have been added as well.
",start issue,Optimization of resample_img()
2,issue_closed,62,nilearn,nilearn,pgervais,2013-05-28 13:39:52,,closed issue,Optimization of resample_img()
3,pull_request_title,62,nilearn,nilearn,pgervais,2013-05-27 09:29:01,"The memory usage of resample_img() has been reduced, by removing usage of the infamous numpy.concatenate function. The resulting function is also very slightly faster (5%). 

The overall function structure hase been clarified. Some tests for error handling in resample_img() have been added as well.
",597894a02778c154fb31153666ac0a5db6b64826,Optimization of resample_img()
4,pull_request_merged,62,nilearn,nilearn,pgervais,2013-05-28 13:39:52,Optimization of resample_img(),3ae698d3a3c997d7a716990474d963c7ae6a09f5,Pull request merge from pgervais/nilearn:resampling_opt to nilearn/nilearn:master
5,issue_comment,62,nilearn,nilearn,pgervais,2013-05-27 12:25:30,"The last commit fixed all issues raised. I didn't add the ""copy"" argument to check_niimg() though, because it would have led to an unused copy in most cases. In fact, the keyword has only an effect for no-op cases. When a resampling has to be performed for real, a copy in always made (this is by design and cannot be changed).

Code coverage is now 100% for nisl.resampling.
",,
6,pull_request_commit_comment,62,nilearn,nilearn,GaelVaroquaux,2013-05-27 10:32:33,"This is not garantied to induce a copy:

<pre>
In [11]: a = np.zeros((10, 10, 10))

In [12]: af = np.identity(4)

In [13]: niimg = nibabel.Nifti1Image(a, af)

In [16]: data = niimg.get_data()

In [17]: data2 = niimg.get_data()

In [18]: np.may_share_memory(data, data2)
Out[18]: True
</pre>


Of course, if the input niimg was a file name this copy is irrelevant. This is why I think that it is of high priority to add a ""copy"" keyword argument to check_niimg.
",597894a02778c154fb31153666ac0a5db6b64826,"(None, '', u'nisl/resampling.py')"
7,pull_request_commit_comment,62,nilearn,nilearn,GaelVaroquaux,2013-05-27 10:35:19,"Very cool!
",597894a02778c154fb31153666ac0a5db6b64826,"(None, '', u'nisl/resampling.py')"
8,pull_request_commit_comment,62,nilearn,nilearn,pgervais,2013-05-27 11:00:39,"True. I already did this mistake before. I'll add the ""copy"" keyword argument asap.
",597894a02778c154fb31153666ac0a5db6b64826,"(None, '', u'nisl/resampling.py')"
9,pull_request_commit_comment,62,nilearn,nilearn,AlexandreAbraham,2013-05-27 11:09:18,"Indeed ! I did not knew this one.
",597894a02778c154fb31153666ac0a5db6b64826,"(None, '', u'nisl/resampling.py')"
10,pull_request_commit_comment,62,nilearn,nilearn,pgervais,2013-05-27 11:31:07,"I didn't either a few hours ago :-)
",597894a02778c154fb31153666ac0a5db6b64826,"(None, '', u'nisl/resampling.py')"
11,pull_request_commit,62,nilearn,nilearn,pgervais,2013-05-23 11:10:55,Small fix in resampling test.,5674a7099e8c46c849b934e851536065ce5ba59b,
12,pull_request_commit,62,nilearn,nilearn,pgervais,2013-05-24 11:43:09,"Cleanup in resample_img.

Added tests, reorganized code in resample_img.",718df52c79e93904db3ac6e326512d1a5c6942d3,
13,pull_request_commit,62,nilearn,nilearn,pgervais,2013-05-27 09:18:43,"Optimized memory usage for resample_img()

The original resample_img used np.concatenate, which caused the memory usage
to double shortly before leaving the function. This is not the case anymore.

The execution time is slightly shorter (of the order of 5%).

Added an ""order"" keyword to resample_img.",b0394007e741b6a1adbc4cc2665ee86a342afda6,
14,pull_request_commit,62,nilearn,nilearn,pgervais,2013-05-27 12:21:17,"""copy"" kwarg in resample_img works in all cases

In some no-op cases, the ""copy"" keyword did nothing.
Added some tests cases. 100% test coverage for nisl.resampling.",597894a02778c154fb31153666ac0a5db6b64826,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,59,nilearn,nilearn,pgervais,2013-05-22 08:42:50,"Resampling has been integrated into NiftiMapsMasker, and an example demonstrating this new feature has been added (plot_msdl_covariance_advanced.py). 

Before integrating resampling into NiftiLabelsMasker, I'd like to get some feedback on the API.
",start issue,Regions resampling
2,issue_closed,59,nilearn,nilearn,pgervais,2013-05-27 15:55:05,,closed issue,Regions resampling
3,pull_request_title,59,nilearn,nilearn,pgervais,2013-05-22 08:42:50,"Resampling has been integrated into NiftiMapsMasker, and an example demonstrating this new feature has been added (plot_msdl_covariance_advanced.py). 

Before integrating resampling into NiftiLabelsMasker, I'd like to get some feedback on the API.
",1b2d20e79576efec7de15ad61031643cfbe5da60,Regions resampling
4,pull_request_merged,59,nilearn,nilearn,pgervais,2013-05-27 15:55:05,Regions resampling,711389359157ca84a88c5c38c353fc4ff6303474,Pull request merge from pgervais/nilearn:regions_resampling to nilearn/nilearn:master
5,issue_comment,59,nilearn,nilearn,GaelVaroquaux,2013-05-22 09:47:43,"Done with my review! :)
",,
6,issue_comment,59,nilearn,nilearn,GaelVaroquaux,2013-05-22 11:40:38,"> What do you think? Is this feature useful?

The question is: how does resampling_target affect the output of
inverse_transform?
",,
7,issue_comment,59,nilearn,nilearn,GaelVaroquaux,2013-05-22 11:44:30,"> For the moment, inverse_transform returns an image with the shape/affine given
> by resampling_target.

That's what I thought. In this case, we need the option to have 'image'
as resampling_target, I believe.
",,
8,issue_comment,59,nilearn,nilearn,pgervais,2013-05-22 11:39:12,"I'd like to have your opinion on the resampling API. Currently, the resampling target could be only the maps or the mask, but not in any case the images themselves. In other words there is no way to resample both the maps and the mask to the shape of the images. While technically feasible, this would probably cause confusion in the API. Example of use case of resampling_target=""images"":

```
masker = NiftiMapsMasker(maps_img, mask_img=mask_img, resampling_target=""images"")
masker.fit(images)  # requires images just for shape and affine. Resample maps and mask here.
signals = masker.transform(images)
```

or 

```
masker = NiftiMapsMasker(maps_img, mask_img=mask_img, resampling_target=images)  # pass images here.
masker.fit()  # Resample maps and mask
signals = masker.transform(images)
```

What do you think? Is this feature useful?
",,
9,issue_comment,59,nilearn,nilearn,pgervais,2013-05-22 11:41:25,"For the moment, inverse_transform returns an image with the shape/affine given by resampling_target.
",,
10,issue_comment,59,nilearn,nilearn,pgervais,2013-05-22 11:50:57,"Then, which API is the best?
",,
11,issue_comment,59,nilearn,nilearn,pgervais,2013-05-23 08:22:14,"I added resampling to NiftiLabelsMasker, mostly the same way I did for NiftiMapsMasker.

Since giving fmri images as the resampling target seems to need some more discussion (it's useful, but choosing a proper behaviour may take a while), I let it aside.

From my point of view, this PR is good to merge.
",,
12,issue_comment,59,nilearn,nilearn,pgervais,2013-05-23 16:25:22,"Some more changes.

The img_to_signals_*() functions now always output as many signals as regions. Having a array size known in advance will make downstream code simpler to write.

I added some debugging messages to both Nifti(Maps|Labels)Masker object, putting at least something behind the ""verbose"" option. I created a mixin just for this, comments welcome, as usual. 

I still didn't change the default for resampling_target, because I still think that setting ""labels"" or ""maps"" as a default will be harmful in most cases, because the voxel number in labels or maps images may be much higher than in images (in fMRI at least), and it will fill the memory very quickly. Imho, the safest choice would be to use fMRI images as target, but this option is still not implemented.
",,
13,issue_comment,59,nilearn,nilearn,pgervais,2013-05-27 09:37:11,"Rebased the branch on master for the sake of having a linear history.
",,
14,pull_request_commit_comment,59,nilearn,nilearn,GaelVaroquaux,2013-05-22 09:27:47,"I had left 'smooth' on purpose here, because I felt that in the context of ""apply_mask"", or a Masker object, ""fwhm"" had no meaning. Maybe we could have ""smoothing_fwhm"", but I think that I prefer ""smooth"".
",1b2d20e79576efec7de15ad61031643cfbe5da60,"(None, '', u'nisl/io/base_masker.py')"
15,pull_request_commit_comment,59,nilearn,nilearn,GaelVaroquaux,2013-05-22 09:28:19,"I hadn't realized, but the docstring should specify that it is a FWHM.
",1b2d20e79576efec7de15ad61031643cfbe5da60,"(None, '', u'nisl/io/nifti_masker.py')"
16,pull_request_commit_comment,59,nilearn,nilearn,GaelVaroquaux,2013-05-22 09:32:40,"We need a more explicit name. Maybe ""resampling_target"".
",1b2d20e79576efec7de15ad61031643cfbe5da60,"(None, '', u'nisl/io/nifti_region.py')"
17,pull_request_commit_comment,59,nilearn,nilearn,pgervais,2013-05-22 09:37:19,"For me, ""smooth"" hints at a boolean flag. I definitely prefer smoothing_fwhm, even if it's longer. 
",1b2d20e79576efec7de15ad61031643cfbe5da60,"(None, '', u'nisl/io/base_masker.py')"
18,pull_request_commit_comment,59,nilearn,nilearn,GaelVaroquaux,2013-05-22 09:37:52,"I wonder if it is worth define 3 different variables (affine1, affine2, and affine3), if we set them all equal. I am just trying to make the test shorter and thus more readable.
",1b2d20e79576efec7de15ad61031643cfbe5da60,"(None, '', u'nisl/io/tests/test_nifti_region.py')"
19,pull_request_commit_comment,59,nilearn,nilearn,pgervais,2013-05-22 09:38:46,"A more correct version can be found in NiftiMapsMasker docstring. I'll fix this one.
",1b2d20e79576efec7de15ad61031643cfbe5da60,"(None, '', u'nisl/io/nifti_masker.py')"
20,pull_request_commit_comment,59,nilearn,nilearn,pgervais,2013-05-22 09:40:09,"I considered for a moment ""target_img"", because it was consistent with target_shape and target_affine. resampling_target sounds good to me.
",1b2d20e79576efec7de15ad61031643cfbe5da60,"(None, '', u'nisl/io/nifti_region.py')"
21,pull_request_commit_comment,59,nilearn,nilearn,GaelVaroquaux,2013-05-22 09:40:50,"fwhm_sigma is somewhat a misnomer as it is a sigma (as in the formula of the Gaussian), not an FWHM. This is why I had left the original name.
",1b2d20e79576efec7de15ad61031643cfbe5da60,"(None, '', u'nisl/masking.py')"
22,pull_request_commit_comment,59,nilearn,nilearn,pgervais,2013-05-22 09:41:11,"I'll clean this, it was initially a copy-paste of test_nifti_maps_masker().
",1b2d20e79576efec7de15ad61031643cfbe5da60,"(None, '', u'nisl/io/tests/test_nifti_region.py')"
23,pull_request_commit_comment,59,nilearn,nilearn,GaelVaroquaux,2013-05-22 09:42:29,"> For me, ""smooth"" hints at a boolean flag. I definitely prefer smoothing_fwhm,
> even if it's longer.

That's fine with me.
",1b2d20e79576efec7de15ad61031643cfbe5da60,"(None, '', u'nisl/io/base_masker.py')"
24,pull_request_commit_comment,59,nilearn,nilearn,pgervais,2013-05-22 09:43:34,"You're right. I'll rename this into ""sigma"".
",1b2d20e79576efec7de15ad61031643cfbe5da60,"(None, '', u'nisl/masking.py')"
25,pull_request_commit_comment,59,nilearn,nilearn,GaelVaroquaux,2013-05-22 09:44:03,"We should always use 'nisl_cache' across the examples, to have only one cache directory.

Also, all our caching procedures should be able to take a string. This way we don't have to explain to the user where to import the Memory object, and what it is.
",1b2d20e79576efec7de15ad61031643cfbe5da60,"(None, '', u'plot_msdl_covariance_advanced.py')"
26,pull_request_commit_comment,59,nilearn,nilearn,GaelVaroquaux,2013-05-22 09:45:04,"OK, I see where mem is needed... I guess we need an explanation for the user who does not know joblib.
",1b2d20e79576efec7de15ad61031643cfbe5da60,"(None, '', u'plot_msdl_covariance_advanced.py')"
27,pull_request_commit_comment,59,nilearn,nilearn,pgervais,2013-05-22 09:45:48,"Usage of Memory is temporary in this case: not a single example makes use of joblib right now. This wil be removed before merging.
",1b2d20e79576efec7de15ad61031643cfbe5da60,"(None, '', u'plot_msdl_covariance_advanced.py')"
28,pull_request_commit_comment,59,nilearn,nilearn,GaelVaroquaux,2013-05-22 09:46:06,"I would say: just do the simple version. It will make it easier to understand for the user.
",1b2d20e79576efec7de15ad61031643cfbe5da60,"(None, '', u'plot_msdl_covariance_advanced.py')"
29,pull_request_commit_comment,59,nilearn,nilearn,GaelVaroquaux,2013-05-22 09:46:51,"Hum, actually, compcorr should be in the ADHD sets of confounds, I believe, so you don't need this.
",1b2d20e79576efec7de15ad61031643cfbe5da60,"(None, '', u'plot_msdl_covariance_advanced.py')"
30,pull_request_commit_comment,59,nilearn,nilearn,pgervais,2013-05-22 11:17:02,"This is temporary, again. The goal was to compare both results. 

However, we need a way to show new users how to use the ""low-level"" API. What we did previously with plot_regions_covariance.py was to add another script, containing the ""advanced"" version. In the long run this is not a good idea, since it will basically mean duplicating every example file. 

So the question is: where do we put ""advanced"" examples?
",1b2d20e79576efec7de15ad61031643cfbe5da60,"(None, '', u'plot_msdl_covariance_advanced.py')"
31,pull_request_commit_comment,59,nilearn,nilearn,GaelVaroquaux,2013-05-22 11:19:50,"We'll do different advanced examples that do not reproduce exactly the
same thing. The idea being that we need less advanced examples, because
they are for advanced users ( :$). Also, the advanced API is there to do
things that are not possible with the simple API, as it is more flexible.
We'll have to look for such usecases.
",1b2d20e79576efec7de15ad61031643cfbe5da60,"(None, '', u'plot_msdl_covariance_advanced.py')"
32,pull_request_commit_comment,59,nilearn,nilearn,pgervais,2013-05-22 14:42:19,"To be precise, high_variance_confounds() is applied in this example to the whole image, including the space around the brain, which is probably not the case for the compcorr provided with the adhd dataset.

I removed the call to high_variance_confounds() from **plot_region_covariance.py**. I tested that the result is almost unchanged. However, if I do the same in **plot_msdl_covariance_advanced.py**, the graph lasso does not converge, even if the result is really close to what it was before. We're not using the same regions (MSDL / Harvard-Oxford.)
",1b2d20e79576efec7de15ad61031643cfbe5da60,"(None, '', u'plot_msdl_covariance_advanced.py')"
33,pull_request_commit_comment,59,nilearn,nilearn,pgervais,2013-05-22 14:44:25,"Then I can as well drop this example completely, because it's very similar to plot_region_covariance.py. The main differences are: different regions (maps instead of labels), and resampling.
",1b2d20e79576efec7de15ad61031643cfbe5da60,"(None, '', u'plot_msdl_covariance_advanced.py')"
34,pull_request_commit_comment,59,nilearn,nilearn,pgervais,2013-05-22 14:47:26,"I should do the other way: keep plot_msdl_covariance.py and drop plot_regions_covariance.py, because the MSDL atlas can be downloaded from the internet, whereas Harvard-Oxford's needs a separate FSL installation.
",1b2d20e79576efec7de15ad61031643cfbe5da60,"(None, '', u'plot_msdl_covariance_advanced.py')"
35,pull_request_commit_comment,59,nilearn,nilearn,GaelVaroquaux,2013-05-22 15:46:07,"> I should do the other way: keep plot_msdl_covariance.py and drop
> plot_regions_covariance.py, because the MSDL atlas can be downloaded from the
> internet, whereas Harvard-Oxford's needs a separate FSL installation.

I agree.
",1b2d20e79576efec7de15ad61031643cfbe5da60,"(None, '', u'plot_msdl_covariance_advanced.py')"
36,pull_request_commit,59,nilearn,nilearn,pgervais,2013-05-21 16:45:46,"Added resampling to NiftiMapsMasker

Resampling is performed on maps or mask and images, depending on the ""target""
parameter, which gives the image whose shape/affine is the reference. Two
targets have been implemented so far: ""maps"" and ""mask"".

Tests have been written, they only check for correct shape/affine, not for
the content.",530e3ca9148a36982c110007c081a571eff660e1,
37,pull_request_commit,59,nilearn,nilearn,pgervais,2013-05-22 07:31:02,"Renamed ""smooth"" parameters to ""fwhm""

Everywhere ""smooth"" was used as a parameter, is was renamed in ""fwhm"", to
be consistent with image.smooth().",dbd02da78779a3c2966cae0b274bac01daa5790b,
38,pull_request_commit,59,nilearn,nilearn,pgervais,2013-05-22 08:36:14,"Add an example using MSDL atlas

plot_msdl_covariance_advanced.py demonstrates usage of an atlas without
the same shape/affine as the data. Two different methods are implemented
(with/without NiftiMapsMasker).",7585a4822855825391b247d1bc9106f1c2f04514,
39,pull_request_commit,59,nilearn,nilearn,pgervais,2013-05-22 11:29:04,"""smooth"" renamed in ""smoothing_fwhm""

The ""smooth"" parameter has been renamed in ""smoothing_fwhm"" for clarity.
The original name has been kept in _smooth_array() and image.smooth().

Some minor fixes have been performed as well.",013e96566dd4cf2fce4c40d010a5eff76395959b,
40,pull_request_commit,59,nilearn,nilearn,pgervais,2013-05-22 11:50:06,"Renamed ""target"" into ""resampling_target""",78c48ae3b9055002930e021328e069dc5cf7570a,
41,pull_request_commit,59,nilearn,nilearn,pgervais,2013-05-22 15:04:23,Simplified examples.,81b0de298504db68483e626b6c4fb548dfb8dc29,
42,pull_request_commit,59,nilearn,nilearn,pgervais,2013-05-22 16:13:25,"Added resampling to NiftiLabelsMasker

resampling_target parameter has been added to NiftiLabelsMasker. Only one
target has been implemented: labels, because resampling labels is considered
dangerous right now.

Corrected a bug in NiftiMapsMasker: the interpolation method used for ""maps""
and ""mask"" targets were swapped.",dc30d1f385bb6fc231880605e7b35afd56d64c6d,
43,pull_request_commit,59,nilearn,nilearn,pgervais,2013-05-23 08:17:54,"Renamed example, remove duplicate.",2e0d0b08021b871710fa372aa6724cc66ddc0769,
44,pull_request_commit,59,nilearn,nilearn,pgervais,2013-05-23 15:07:57,"Changed output of region signal extracting functions

img_to_signals_labels() and img_to_signals_maps() now always return a
number of signals equal to the number of regions passed as parameter. In
the previous state, only regions not fully outside the mask were
considered, the number of output signals thus could vary. This is not
the case anymore.

Tests have been adapted.",921e25e46e323c89b17dfe62ad3b1b5b2f38ed51,
45,pull_request_commit,59,nilearn,nilearn,pgervais,2013-05-23 16:01:43,"Added user messages to Nifti*Masker

Renamed plot_msdl_covariance.py co plot_adhd_covariance.py.",b0821f1a92aeef39f35120509e52d651498523fb,
46,pull_request_commit,59,nilearn,nilearn,pgervais,2013-05-23 16:16:49,Documentation fixes,e774f1fe277e4849837987af02048c1bac31fa9c,
47,pull_request_commit,59,nilearn,nilearn,pgervais,2013-05-24 09:01:58,Changed default value for resampling_target,1b2d20e79576efec7de15ad61031643cfbe5da60,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,53,nilearn,nilearn,mekman,2013-05-09 13:35:23,"Just to confirm, do I read the code correctly, that the radius parameter is based on _voxel_ and not on _mm_, as it is based on the mask_indices and `sklearn.neighbors.NearestNeighbors`? In that case I don't understand why the the radius parameter is expected to be float?

https://github.com/nisl/tutorial/blob/master/nisl/searchlight.py#L183

I would like to file a PR to clarify the docstring, but first wanted to check with you guys.
",start issue,clarification radius of SearchLight in mm or voxel?
2,issue_closed,53,nilearn,nilearn,pgervais,2013-05-31 10:48:01,,closed issue,clarification radius of SearchLight in mm or voxel?
3,issue_comment,53,nilearn,nilearn,mekman,2013-06-05 15:13:06,"looks good. Thanks!
",,
4,issue_comment,53,nilearn,nilearn,GaelVaroquaux,2013-05-16 15:13:32,">   • Another one would be to pass mask and process_mask as niimg.
> 
> I think the second solution is a better one, because the transformer is very
> specific to fMRI, and as such, should process fMRI images, not arrays.

Agreed!
",,
5,issue_comment,53,nilearn,nilearn,pgervais,2013-05-16 14:58:08,"I had a look at the source code. Taking into account the aspect ratio is technically not difficult. 
However, we need to have access to pixel sizes inside `SearchLight.fit()`, which is not the case right now. The fix will thus include an API change.

Two possibilities:
- The simplest way is to add an ""affine"" parameter to `SearchLight.__init__()`, and keep `mask` and `process_mask` as numpy.ndarray
- Another one would be to pass `mask` and `process_mask` as niimg.

I think the second solution is a better one, because the transformer is very specific to fMRI, and as such, should process fMRI images, not arrays.

@GaelVaroquaux, if you have some time, can you give your opinion?
",,
6,issue_comment,53,nilearn,nilearn,pgervais,2013-05-29 09:17:04,"@mekman: if you're still interested in searchlight, the issue you raised should be fixed by the aforementioned PR #65. Any comment is appreciated. 

I also updated the plot_haxby_searchlight.py example, so that you can figure out quickly what the changes were.
",,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,61,nilearn,nilearn,bthirion,2013-05-26 21:03:56,"Attempt to solve issue #60. 

Made the test_canica test more robust by replication of ICA with different random seeds and selection of the seemingly best decomposition. 
Then decreased the test image size for the sake of computation time.

Note that the example may still fail, though with lower probability. I'm not satisfied by this fix, but it's the best one I've been able to run with some success.

Actually, this issue is excellent to understand why ICA sucks.
",start issue,MRG: fixing the failing canica test 
2,issue_closed,61,nilearn,nilearn,pgervais,2013-05-27 09:31:28,,closed issue,MRG: fixing the failing canica test 
3,pull_request_title,61,nilearn,nilearn,bthirion,2013-05-26 21:03:56,"Attempt to solve issue #60. 

Made the test_canica test more robust by replication of ICA with different random seeds and selection of the seemingly best decomposition. 
Then decreased the test image size for the sake of computation time.

Note that the example may still fail, though with lower probability. I'm not satisfied by this fix, but it's the best one I've been able to run with some success.

Actually, this issue is excellent to understand why ICA sucks.
",0b7d6a41af0aa5fdeebe0c01ddd2e4427e61dc2d,MRG: fixing the failing canica test 
4,issue_comment,61,nilearn,nilearn,GaelVaroquaux,2013-05-26 21:18:42,"This is great. Merging!
",,
5,issue_comment,61,nilearn,nilearn,pgervais,2013-05-27 09:31:49,"Closing the pull request, since merging hasn't been done with the github interface.
",,
6,pull_request_commit,61,nilearn,nilearn,bthirion,2013-05-26 20:48:30,"Made the test_canica test more robust by repetation. Decreased the image size for the sake of computation time. Note that the example may still fail, though with lower likelihood.",0b7d6a41af0aa5fdeebe0c01ddd2e4427e61dc2d,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,67,nilearn,nilearn,GaelVaroquaux,2013-05-31 14:44:20,"And backport that to scikit-learn.
",start issue,Add running time in minutes in addition to seconds in gen_rst.py
2,issue_closed,67,nilearn,nilearn,AlexandreAbraham,2013-11-05 13:37:33,,closed issue,Add running time in minutes in addition to seconds in gen_rst.py
3,issue_comment,67,nilearn,nilearn,GaelVaroquaux,2013-10-11 12:12:05,"@jaquesgrobler, do you think that you could take care of that? It goes along with syncing gen_rst.py across projects.
",,
4,issue_comment,67,nilearn,nilearn,GaelVaroquaux,2013-10-14 07:49:44,"> I actually didn't see that this was a nilearn issue haha. So i did the patch
> for sklearn..
> It's over here - shall we review it there, then when/if it's merge I apply the
> reviewed patch here?

Yes, this sounds right.

G
",,
5,issue_comment,67,nilearn,nilearn,GaelVaroquaux,2013-10-14 15:39:17,"> Can close this fellow now :+1:

Indeed. Thanks!
",,
6,issue_comment,67,nilearn,nilearn,jaquesgrobler,2013-10-14 06:56:59,"I actually didn't see that this was a nilearn issue haha. So i did the patch for sklearn..
It's over here - shall we review it there, then when/if it's merge I apply the reviewed patch here?

PR on sklearn over [here](https://github.com/scikit-learn/scikit-learn/pull/2515)
",,
7,issue_comment,67,nilearn,nilearn,jaquesgrobler,2013-10-14 15:38:16,"Can close this fellow now :+1: 
",,
