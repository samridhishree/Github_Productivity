,rectype,issueid,project_owner,project_name,actor,time,text,action,title
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,240,nilearn,nilearn,GaelVaroquaux,2014-09-15 12:54:58,"This is a pending branch that fixes a lot of things but hasn't been merged.

@AlexandreAbraham and @lesteve : do you think that you have time to have a look and see what needs to be merged.
",start issue,Better pca
2,issue_closed,240,nilearn,nilearn,lesteve,2014-10-02 12:11:27,,closed issue,Better pca
3,pull_request_title,240,nilearn,nilearn,GaelVaroquaux,2014-09-15 12:54:58,"This is a pending branch that fixes a lot of things but hasn't been merged.

@AlexandreAbraham and @lesteve : do you think that you have time to have a look and see what needs to be merged.
",2220ef1d50464e9f144af8c37b65695819f4ba47,Better pca
4,issue_comment,240,nilearn,nilearn,AlexandreAbraham,2014-09-15 13:02:50,"LGTM. If you merge it, ping me so I fix the little bug I've spotted. Or I can make a PR on your branch but that would be a waste of time I think.
",,
5,issue_comment,240,nilearn,nilearn,lesteve,2014-09-15 13:53:52,"It seems like the the tests are broken because confounds is None by default in MultiPCA.fit so you have problem where you try to iterate in https://github.com/GaelVaroquaux/nilearn/blob/better_pca/nilearn/decomposition/multi_pca.py#L276.

That was already noted in
https://github.com/GaelVaroquaux/nilearn/commit/8448c7a3e3851395d91eff10c493c1a36d581119

I guess you could do something like:

``` python
if confounds is None:
    confounds = [None] * len(niimgs)
```

The merge conflict is very easy to resolve, in case that's what you were asking for.

For completeness, here is the traceback of one of the failing tests:

```
~/code/nilearn $ nosetests nilearn/decomposition/tests/test_canica.py --ipdb
nilearn.decomposition.tests.test_canica.test_canica_square_img ... /home/lesteve/code/nilearn/nilearn/input_data/multi_nifti_masker.py:194: UserWarning: [MultiNiftiMasker.fit] Generation of a mask has been requested (niimgs != None) while a mask has been provided at masker creation. Given mask will be used.
  ' will be used.' % self.__class__.__name__)

- TRACEBACK --------------------------------------------------------------------
Traceback (most recent call last):
  File ""/home/lesteve/anaconda/lib/python2.7/unittest/case.py"", line 329, in run
    testMethod()
  File ""/home/lesteve/anaconda/lib/python2.7/site-packages/nose/case.py"", line 197, in runTest
    self.test(*self.arg)
  File ""/home/lesteve/code/nilearn/nilearn/decomposition/tests/test_canica.py"", line 49, in test_canica_square_img
    canica.fit(data)
  File ""/home/lesteve/code/nilearn/nilearn/decomposition/canica.py"", line 147, in fit
    MultiPCA.fit(self, niimgs, y=y, confounds=confounds)
  File ""/home/lesteve/code/nilearn/nilearn/decomposition/multi_pca.py"", line 276, in fit
    for niimg, confound in zip(niimgs, confounds))
TypeError: zip argument #2 must support iteration
--------------------------------------------------------------------------------
> /home/lesteve/code/nilearn/nilearn/decomposition/multi_pca.py(276)fit()
    275             )
--> 276             for niimg, confound in zip(niimgs, confounds))
    277         subject_pcas, subject_svd_vals = zip(*subject_pcas)

ipdb> l
    271                 memory=self.memory,
    272                 ref_memory_level=self.memory_level,
    273                 confounds=confounds,
    274                 verbose=self.verbose
    275             )
--> 276             for niimg, confound in zip(niimgs, confounds))
    277         subject_pcas, subject_svd_vals = zip(*subject_pcas)
    278 
    279         if len(niimgs) > 1:
    280             if not self.do_cca:
    281                 for subject_pca, subject_svd_val in \

ipdb> confounds
ipdb> q
```
",,
6,issue_comment,240,nilearn,nilearn,AlexandreAbraham,2014-09-16 13:19:14,"As you said, I already raised this problem. But I think that we should not make this PR wait any longer.

@GaelVaroquaux, can you rebase your PR and/or fix the little problem we raised? If you have no time, just do the minimum and I will fix the rest. Apart from that problem, I tested your code and for me everything is fine.

I can also make you a PR or cherrypick the commits. But I'd like to avoid that because it would take more time.
",,
7,issue_comment,240,nilearn,nilearn,lesteve,2014-10-02 12:11:27,"This has been moved to #251.
",,
8,pull_request_commit,240,nilearn,nilearn,GaelVaroquaux,2014-05-16 14:32:48,WIP,fe9133e946a6118178e5b781dffc7c269b66b9b6,
9,pull_request_commit,240,nilearn,nilearn,GaelVaroquaux,2014-05-16 15:05:53,ENH: use also NiftiMasker,e92818f2ac2438e35436694ec094d586f9fa192e,
10,pull_request_commit,240,nilearn,nilearn,GaelVaroquaux,2014-05-19 12:55:44,Minor improvements to MultiPCA,bca724dbf69d18820696b2120530196c70952284,
11,pull_request_commit,240,nilearn,nilearn,GaelVaroquaux,2014-05-21 09:07:12,Make confounds work with MultiPCA,8448c7a3e3851395d91eff10c493c1a36d581119,
12,pull_request_commit,240,nilearn,nilearn,GaelVaroquaux,2014-05-21 09:08:46,Merge branch 'better_pca' of github.com:GaelVaroquaux/nilearn into better_pca,2220ef1d50464e9f144af8c37b65695819f4ba47,
13,pull_request_commit_comment,240,nilearn,nilearn,AlexandreAbraham,2014-05-29 17:56:04,"Isn't that going to fail if confounds is None? Because I have no good solution for this problem, I sometimes instantiate a list of None values.
",8448c7a3e3851395d91eff10c493c1a36d581119,"(5, 276, u'nilearn/decomposition/multi_pca.py')"
14,pull_request_commit_comment,240,nilearn,nilearn,GaelVaroquaux,2014-05-29 18:01:15,"> Isn't that going to fail if confounds is None?

Good point. It was a quick hack while I was working on a problem.

> Because I have no good solution for this problem, I sometimes
> instantiate a list of None values.

Sounds like a good solution. We need to work on this during the sprint.
",8448c7a3e3851395d91eff10c493c1a36d581119,"(5, 276, u'nilearn/decomposition/multi_pca.py')"
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,246,nilearn,nilearn,banilo,2014-09-26 17:39:27,"It would be great to have an analog to fslswapdim from FSL in NILEARN that can

a) swaps images according to x, y, z axes

b) inverts these axes also

cf. https://rcbi.rochester.edu/kjlee/BOLD%20fMRI%20Analysis/Documents/Conversion%20of%20DICOM%20to%20NII%20to%20use%20with%20FSL%20analyses.pdf

This can be helpful in many ways in everyday neuroimaging practice. For example, if you need
to extract seed regions (for whatever the neuroimaging analysis) but you only have a topographical template in one hemisphere, then you might want to swap that one into the other hemisphere. The same approach can also help to homogenize (seed) structures across hemispheres.
",start issue,Add basic image manipulation feature according to fslswapdim
2,issue_closed,246,nilearn,nilearn,lesteve,2014-10-08 06:47:21,,closed issue,Add basic image manipulation feature according to fslswapdim
3,issue_comment,246,nilearn,nilearn,lesteve,2014-10-01 07:46:18,"Probably not the best placed to answer this one, but it seems like nilearn/image/image.py is as good as any.
",,
4,issue_comment,246,nilearn,nilearn,banilo,2014-09-29 19:32:12,"I will try to come up with a small suggestion for this :)

2014-09-29 21:30 GMT+02:00 Alexandre Abraham notifications@github.com:

> Any feedback on this one? From a technical POV, this is very easy to code
> as it boils down to play with the affine matrix. We just to determine if we
> really want this in nilearn or not.
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/nilearn/nilearn/issues/246#issuecomment-57215139.

## 

Viele Grüße,
Danilo
",,
5,issue_comment,246,nilearn,nilearn,banilo,2014-09-30 09:53:44,"How about adding it to nilearn.image? Alternatively, nilearn._utils.image? What do you suggest?
",,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,247,nilearn,nilearn,dohmatob,2014-09-27 08:18:25,,start issue,"Fix plotting: making get_slicer more robust (for example understand 'Zy' as 'yz'), etc."
2,issue_closed,247,nilearn,nilearn,lesteve,2014-09-28 17:15:57,,closed issue,"Fix plotting: making get_slicer more robust (for example understand 'Zy' as 'yz'), etc."
3,pull_request_title,247,nilearn,nilearn,dohmatob,2014-09-27 08:18:25,,961aa30c203b8f34722c46ae0307361ae7dd2e3e,"Fix plotting: making get_slicer more robust (for example understand 'Zy' as 'yz'), etc."
4,issue_comment,247,nilearn,nilearn,lesteve,2014-09-27 08:34:55,"FWIW, the error message is not that bad. In particular it does list all the possible slicer names, see [here](https://github.com/nilearn/nilearn/blob/master/nilearn/plotting/slicers.py#L837)
",,
5,pull_request_commit,247,nilearn,nilearn,AlexandreAbraham,2014-07-03 13:06:22,Handle GLOBAL_NILEARN_DATA environment variable,eee3178b3683bb251a239b7ba94c41b0cf7fac51,
6,pull_request_commit,247,nilearn,nilearn,AlexandreAbraham,2014-07-21 11:48:21,Better error handling,510f2eace27955afe67700bac9e5bed91df3c06d,
7,pull_request_commit,247,nilearn,nilearn,AlexandreAbraham,2014-07-21 11:51:19,Add doc for GLOBAL_NILEARN_DATA in documentation pages.,c14a8a849a45534e0f76d35d78447693c904fffc,
8,pull_request_commit,247,nilearn,nilearn,AlexandreAbraham,2014-07-21 11:59:42,GLOBAL_NILEARN_DATA -> NILEARN_SHARED,adb569d63fd64f742321399506c50ed0b7f56d1b,
9,pull_request_commit,247,nilearn,nilearn,AlexandreAbraham,2014-07-21 12:07:51,Fix documentation,8f4ba34776d0a384ee4ac7158155f3be75b900e2,
10,pull_request_commit,247,nilearn,nilearn,GaelVaroquaux,2014-09-11 11:39:32,BUG: avoid a pb with nanmax in certain numpy versions,e8bab9f123955999809a9a1f62077af935cc67a7,
11,pull_request_commit,247,nilearn,nilearn,GaelVaroquaux,2014-09-11 11:40:15,ENH: better handling mmap_mode='r',87c26c55ed23f7e1e764d266c888f5f33ec4f4c3,
12,pull_request_commit,247,nilearn,nilearn,AlexandreAbraham,2014-09-14 14:41:46,Address comments,b32956b6f140dc73f87b916ff2411ef3f778888d,
13,pull_request_commit,247,nilearn,nilearn,dohmatob,2014-09-17 07:52:49,Merge branch 'master' of github.com:dohmatob/nilearn,fd2d78b1db2da00c77c5a0ac5a2d1a51b25f207a,
14,pull_request_commit,247,nilearn,nilearn,dohmatob,2014-09-22 11:43:52,Merge branch 'master' of github.com:nilearn/nilearn,010a5d15d23ede1be02f691c7bc84d6e9bd9af05,
15,pull_request_commit,247,nilearn,nilearn,dohmatob,2014-09-26 04:43:00,Merge branch 'master' of github.com:nilearn/nilearn,3951078346f5b6dc33481772805a733de982392a,
16,pull_request_commit,247,nilearn,nilearn,dohmatob,2014-09-26 04:43:20,Merge branch 'master' of github.com:dohmatob/nilearn,b8c6ae34831f97211062e56b12678e3b7121a49b,
17,pull_request_commit,247,nilearn,nilearn,dohmatob,2014-09-27 06:17:25,ENH: making get_slicers more robust,961aa30c203b8f34722c46ae0307361ae7dd2e3e,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,244,nilearn,nilearn,lesteve,2014-09-24 11:23:05,"Copied and pasted from different emails with minor tweaks.
# The problem

People often complain about nilearn data storage policy: by default datasets are stored in a ""nilearn_data"" folder created in the current directory. People are sometimes puzzled by the fact that, when they change directory, some examples download an already-downloaded dataset.
# Caveats
1. The number one problem is of disk space running out. In the home, it can have horrible consequences, because it tends to freeze many things. For example you may have a quota on your home folder that is easily overwhelmed by the size, roughly 5-10 GB, of the datasets.
2. Warnings, configuration options, ... are mostly useless, because the non-advanced users don't read/use them
# Proposed solution
- Use $HOME/nilearn_data by default
- In all the data downloaders:
  - capture the I/O errors that pop up when writing a file and that
      the disk is full
  - erase a bit of that half-written file (or all of it) to avoid
      leaving the disk full
  - raise an error clearly identifying the problem (disk full or
      quota blown) and suggesting solutions (the NILEARN_DATA
      variable + talk to your sysadmin).
",start issue,Change default dataset download directory 
2,issue_closed,244,nilearn,nilearn,lesteve,2014-11-12 17:37:38,,closed issue,Change default dataset download directory 
3,issue_comment,244,nilearn,nilearn,lesteve,2014-11-12 10:35:29,"The error message part of this has been tackled in #262.
",,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,248,nilearn,nilearn,banilo,2014-10-01 10:58:38,"Implements #246
",start issue,[WIP] New feature: python-version of fslswapdim
2,issue_closed,248,nilearn,nilearn,GaelVaroquaux,2014-10-06 15:34:30,,closed issue,[WIP] New feature: python-version of fslswapdim
3,pull_request_title,248,nilearn,nilearn,banilo,2014-10-01 10:58:38,"Implements #246
",cb61ae67a6951bfdf7c230daba1a30bc85930b58,[WIP] New feature: python-version of fslswapdim
4,pull_request_merged,248,nilearn,nilearn,GaelVaroquaux,2014-10-06 15:34:30,[WIP] New feature: python-version of fslswapdim,8dd127493a3b85e577d99ac43c4e3bc726f9d6fa,Pull request merge from banilo/nilearn:addswap to nilearn/nilearn:master
5,issue_comment,248,nilearn,nilearn,banilo,2014-10-06 14:37:54,"""fslswapdim in.nii -x y z out.nii"" doesn't change the affine!

2014-10-06 16:36 GMT+02:00 Gael Varoquaux notifications@github.com:

> > Also, if the axis are not ordered properly, ie the affine looks like
> 
> Yes, we need to use reorder_img.
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/nilearn/nilearn/pull/248#issuecomment-58026004.

## 

Viele Grüße,
Danilo
",,
6,issue_comment,248,nilearn,nilearn,banilo,2014-10-06 15:22:06,"How about now?
",,
7,pull_request_commit_comment,248,nilearn,nilearn,GaelVaroquaux,2014-10-01 11:41:44,"Could you please call the input argument 'niimg'.
",cb61ae67a6951bfdf7c230daba1a30bc85930b58,"(None, '', u'nilearn/image/image.py')"
8,pull_request_commit_comment,248,nilearn,nilearn,GaelVaroquaux,2014-10-01 11:42:47,"Let's not define our software by what other softwares do. I would here mention that it swaps the hemispheres.
",cb61ae67a6951bfdf7c230daba1a30bc85930b58,"(None, '', u'nilearn/image/image.py')"
9,pull_request_commit_comment,248,nilearn,nilearn,GaelVaroquaux,2014-10-01 11:43:35,"I think that these remarks should be made in the 'Notes' section of the docstring. The guideline is to keep the initial description very short.
",cb61ae67a6951bfdf7c230daba1a30bc85930b58,"(None, '', u'nilearn/image/image.py')"
10,pull_request_commit_comment,248,nilearn,nilearn,GaelVaroquaux,2014-10-01 11:45:16,"Any time that I see such warnings in the doc, I have the feeling that we are misdesigning something. Maybe we should use the nilearn.image.reorder_img to relax a bit the assumptions.
",cb61ae67a6951bfdf7c230daba1a30bc85930b58,"(None, '', u'nilearn/image/image.py')"
11,pull_request_commit_comment,248,nilearn,nilearn,GaelVaroquaux,2014-10-01 11:46:07,"Here you should use utils.check_niimg. That way you would also accept strings as input (and the docstring should be updated to reflect that).
",cb61ae67a6951bfdf7c230daba1a30bc85930b58,"(None, '', u'nilearn/image/image.py')"
12,pull_request_commit_comment,248,nilearn,nilearn,GaelVaroquaux,2014-10-01 11:47:11,"In variable names, we tend to use underscores between words. This would be 'out_nii'. I would prefer 'out_img', as we have the convention that everything that is a niimg should be named with a trailing '_img'.
",cb61ae67a6951bfdf7c230daba1a30bc85930b58,"(None, '', u'nilearn/image/image.py')"
13,pull_request_commit_comment,248,nilearn,nilearn,dengemann,2014-10-01 16:53:54,"@banilo you have too many dashes here ;-) remove one.
",cb61ae67a6951bfdf7c230daba1a30bc85930b58,"(None, '', u'nilearn/image/image.py')"
14,pull_request_commit_comment,248,nilearn,nilearn,dengemann,2014-10-01 16:53:59,"and here.
",cb61ae67a6951bfdf7c230daba1a30bc85930b58,"(None, '', u'nilearn/image/image.py')"
15,pull_request_commit_comment,248,nilearn,nilearn,GaelVaroquaux,2014-10-06 13:48:14,"PEP8 requires 2 empty lines between first-level functions.
",cb61ae67a6951bfdf7c230daba1a30bc85930b58,"(None, '', u'nilearn/image/image.py')"
16,pull_request_commit_comment,248,nilearn,nilearn,lesteve,2014-10-06 14:16:51,"You don't need the backslash at the end of the line
",cb61ae67a6951bfdf7c230daba1a30bc85930b58,"(None, '', u'nilearn/image/tests/test_image.py')"
17,pull_request_commit_comment,248,nilearn,nilearn,lesteve,2014-10-06 14:17:36,"Same comment about the terminal backslash as above
",cb61ae67a6951bfdf7c230daba1a30bc85930b58,"(None, '', u'nilearn/image/tests/test_image.py')"
18,pull_request_commit_comment,248,nilearn,nilearn,AlexandreAbraham,2014-10-06 14:33:03,"You are testing check_niimg here, not your function.
",cb61ae67a6951bfdf7c230daba1a30bc85930b58,"(None, '', u'nilearn/image/tests/test_image.py')"
19,pull_request_commit,248,nilearn,nilearn,banilo,2014-10-01 09:52:42,addswap,71671901f760382c36e6de153eb480bc2782888a,
20,pull_request_commit,248,nilearn,nilearn,banilo,2014-10-02 08:06:04,addswap,80cb0cb82ed0902d3821f9cf1c768b8aed3a76a5,
21,pull_request_commit,248,nilearn,nilearn,banilo,2014-10-02 08:13:21,addswap,2267b2c069ece2ff56c603a83991ade51ad1de83,
22,pull_request_commit,248,nilearn,nilearn,banilo,2014-10-06 14:27:02,addswap,6193daecd6410fe95b6425864dd3295a50a3aca7,
23,pull_request_commit,248,nilearn,nilearn,banilo,2014-10-06 15:20:34,addswap,a5bd3578cc830785fc9c307eab25539d0b3a75a2,
24,pull_request_commit,248,nilearn,nilearn,banilo,2014-10-06 15:29:35,Minor change in Doc,cb61ae67a6951bfdf7c230daba1a30bc85930b58,
25,pull_request_commit_comment,248,nilearn,nilearn,GaelVaroquaux,2014-10-06 15:25:22,"I think that I would formulate this as 'swaping', rather than shifting.
",6193daecd6410fe95b6425864dd3295a50a3aca7,"(4, 259, u'doc/building_blocks/manipulating_mr_images.rst')"
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,249,nilearn,nilearn,lesteve,2014-10-01 13:41:51,"Reason: consistency. All the other test folders are called tests with a 's' at the end.
",start issue,Rename plotting/test to plotting/tests (with a 's' at the end)
2,issue_closed,249,nilearn,nilearn,GaelVaroquaux,2014-10-01 13:54:38,,closed issue,Rename plotting/test to plotting/tests (with a 's' at the end)
3,pull_request_title,249,nilearn,nilearn,lesteve,2014-10-01 13:41:51,"Reason: consistency. All the other test folders are called tests with a 's' at the end.
",856bfadfc71ded0cda52ec9a6d410296c74ab58d,Rename plotting/test to plotting/tests (with a 's' at the end)
4,pull_request_merged,249,nilearn,nilearn,GaelVaroquaux,2014-10-01 13:54:38,Rename plotting/test to plotting/tests (with a 's' at the end),8abe50cdd40b7949b3de30420fe920d64ba25d7a,Pull request merge from lesteve/nilearn:test-folder-naming-inconsistency to nilearn/nilearn:master
5,pull_request_commit,249,nilearn,nilearn,lesteve,2014-10-01 13:35:09,MAINT: rename plotting/test to plotting/tests (with a 's' at the end) for consistency reasons,856bfadfc71ded0cda52ec9a6d410296c74ab58d,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,241,nilearn,nilearn,lesteve,2014-09-15 15:12:08,"Fixes #233.
",start issue,Use simple smoothing in find_cut_slices rather than a gaussian filter
2,issue_closed,241,nilearn,nilearn,lesteve,2014-10-01 12:14:51,,closed issue,Use simple smoothing in find_cut_slices rather than a gaussian filter
3,pull_request_title,241,nilearn,nilearn,lesteve,2014-09-15 15:12:08,"Fixes #233.
",2c2335e113af4d5fdf194f388edeaf67e9d8557f,Use simple smoothing in find_cut_slices rather than a gaussian filter
4,pull_request_merged,241,nilearn,nilearn,lesteve,2014-10-01 12:14:51,Use simple smoothing in find_cut_slices rather than a gaussian filter,99b0a53b6de5a4facaca24142820c509cea5d493,Pull request merge from lesteve/nilearn:simple-smoothing-in-find-cuts to nilearn/nilearn:master
5,issue_comment,241,nilearn,nilearn,GaelVaroquaux,2014-09-16 09:19:14,"You are lacking a test. No code goes in nilearn without tests. You could for instance test that an image full of ones stays full of ones. That will fail, because the normalization isn't right. So maybe we need a keyword argument 'preserve_scale', True by default, that will make sure that np.ones stays np.ones (aside from the sides).
",,
6,issue_comment,241,nilearn,nilearn,lesteve,2014-09-30 06:56:12,"@GaelVaroquaux any objections to merging this?
",,
7,issue_comment,241,nilearn,nilearn,lesteve,2014-09-30 09:03:58,"Sure, no real hurry.
",,
8,issue_comment,241,nilearn,nilearn,lesteve,2014-10-01 09:38:54,"Yep I think I answered all your comments.
",,
9,issue_comment,241,nilearn,nilearn,lesteve,2014-10-01 10:48:26,"Good catch, I have added it now.
",,
10,issue_comment,241,nilearn,nilearn,lesteve,2014-10-01 12:00:54,"For completeness a quick and dirty comparison of the performance gain:

``` python
import nibabel as nib
from nilearn.image import image
from nilearn import datasets

localizer = datasets.fetch_localizer_contrasts([""left vs right button press""],
                                               n_subjects=4,
                                               get_anats=True)

img = nib.load(localizer.cmaps[3])
print 'shape: ', img.get_data().shape

for fwhm in [3, 6, 9, 12, 'fast']:
    print 'fwhm: ', fwhm
    %timeit image._smooth_array(img.get_data(), img.get_affine(), fwhm=fwhm, copy=True)
```

and the result on my computer:

```
shape:  (53, 63, 46)
fwhm:  3
100 loops, best of 3: 5.59 ms per loop
fwhm:  6
100 loops, best of 3: 6.32 ms per loop
fwhm:  9
100 loops, best of 3: 7.92 ms per loop
fwhm:  12
100 loops, best of 3: 9.51 ms per loop
fwhm: fast
100 loops, best of 3: 2.78 ms per loop
```
",,
11,pull_request_commit_comment,241,nilearn,nilearn,lesteve,2014-09-15 15:12:57,"Just wondering, is this comment about discrete values still relevant?
",2c2335e113af4d5fdf194f388edeaf67e9d8557f,"(None, '', u'nilearn/plotting/find_cuts.py')"
12,pull_request_commit_comment,241,nilearn,nilearn,lesteve,2014-09-15 15:16:00,"Open to better wording for the function name and the doc below.
",2c2335e113af4d5fdf194f388edeaf67e9d8557f,"(None, '', u'nilearn/plotting/find_cuts.py')"
13,pull_request_commit_comment,241,nilearn,nilearn,GaelVaroquaux,2014-09-16 09:12:35,"For the function name: fast_smooth_img, and the function should be in nilearn.image.image, next to 'smooth_img'.
",2c2335e113af4d5fdf194f388edeaf67e9d8557f,"(None, '', u'nilearn/plotting/find_cuts.py')"
14,pull_request_commit_comment,241,nilearn,nilearn,GaelVaroquaux,2014-09-16 09:13:11,"You probably want to say that it is less computationally expensive than smooth_img, which uses scipy.ndimage.gaussian_filter
",2c2335e113af4d5fdf194f388edeaf67e9d8557f,"(None, '', u'nilearn/plotting/find_cuts.py')"
15,pull_request_commit_comment,241,nilearn,nilearn,GaelVaroquaux,2014-09-16 09:15:03,"To be PEP8 you need two empty lines between function definitions.
",2c2335e113af4d5fdf194f388edeaf67e9d8557f,"(None, '', u'nilearn/plotting/find_cuts.py')"
16,pull_request_commit_comment,241,nilearn,nilearn,GaelVaroquaux,2014-09-16 09:15:40,"I indeed think that the comment on discrete values is not relevant.
",2c2335e113af4d5fdf194f388edeaf67e9d8557f,"(None, '', u'nilearn/plotting/find_cuts.py')"
17,pull_request_commit_comment,241,nilearn,nilearn,lesteve,2014-09-16 09:44:01,"By the way it looks like the smoothing is done only when the dtype is a signed integer. Is that on purpose?
",2c2335e113af4d5fdf194f388edeaf67e9d8557f,"(None, '', u'nilearn/plotting/find_cuts.py')"
18,pull_request_commit_comment,241,nilearn,nilearn,GaelVaroquaux,2014-09-16 10:32:22,"No. It's wrong
",2c2335e113af4d5fdf194f388edeaf67e9d8557f,"(None, '', u'nilearn/plotting/find_cuts.py')"
19,pull_request_commit_comment,241,nilearn,nilearn,bthirion,2014-09-25 06:31:46,"In the documentation, say explicitly what smoothing is performed: it is only spatial smoothing, the filter is [.2 1 .2] in each direction.
Bzw, using [.2 .6 .2] might preserve the value on constant images ?
",2c2335e113af4d5fdf194f388edeaf67e9d8557f,"(None, '', u'nilearn/plotting/find_cuts.py')"
20,pull_request_commit_comment,241,nilearn,nilearn,lesteve,2014-09-26 13:49:51,"I added some documentation for the smoothing, let me know whether the wording can be improved.
",2c2335e113af4d5fdf194f388edeaf67e9d8557f,"(None, '', u'nilearn/plotting/find_cuts.py')"
21,pull_request_commit_comment,241,nilearn,nilearn,bthirion,2014-09-26 13:51:45,"Shouldn't this be usable on 4D arrays ? if no, this should be clear in the function name.
",2c2335e113af4d5fdf194f388edeaf67e9d8557f,"(None, '', u'nilearn/image/image.py')"
22,pull_request_commit_comment,241,nilearn,nilearn,lesteve,2014-09-26 14:07:38,"As long as you want to only smooth the 3 first dimensions it should work on a ndarray. I'll tweak the doc to make it similar to _smooth_array.
",2c2335e113af4d5fdf194f388edeaf67e9d8557f,"(None, '', u'nilearn/image/image.py')"
23,pull_request_commit_comment,241,nilearn,nilearn,bthirion,2014-09-26 14:09:41,"OK, this is what I meant.
",2c2335e113af4d5fdf194f388edeaf67e9d8557f,"(None, '', u'nilearn/image/image.py')"
24,pull_request_commit_comment,241,nilearn,nilearn,GaelVaroquaux,2014-09-26 14:38:53,"> As long as you want to only smooth the 3 first dimensions it should work on a
> ndarray. I'll tweak the doc to make it similar to _smooth_array.

We had discussed integrating this into _smooth_array, with a special
argument 'fast' to the kernel size. This would factor code out.
",2c2335e113af4d5fdf194f388edeaf67e9d8557f,"(None, '', u'nilearn/image/image.py')"
25,pull_request_commit_comment,241,nilearn,nilearn,bthirion,2014-09-26 14:45:25,"[.2, 1, .2]
",2c2335e113af4d5fdf194f388edeaf67e9d8557f,"(None, '', u'nilearn/image/image.py')"
26,pull_request_commit_comment,241,nilearn,nilearn,lesteve,2014-09-26 15:57:58,"I spotted this one while tweaking the doc and fixed [it](https://github.com/lesteve/nilearn/commit/33d4615a5f9d0a318fe04c6d61baa8af8773422c)
",2c2335e113af4d5fdf194f388edeaf67e9d8557f,"(None, '', u'nilearn/image/image.py')"
27,pull_request_commit_comment,241,nilearn,nilearn,lesteve,2014-09-26 16:05:29,"For completeness, this is what I have done, I think.

Also about the naming of the functions, I am fine adding 3d explicitely to `_smooth_array` or `_fast_smoth_array` if you think it is better. Maybe something like `_smooth_array_three_first_dims`? Better suggestions welcome! 

In this case should the 'public' function smooth_img be renamed too?
",2c2335e113af4d5fdf194f388edeaf67e9d8557f,"(None, '', u'nilearn/image/image.py')"
28,pull_request_commit_comment,241,nilearn,nilearn,bthirion,2014-09-27 15:50:51,"On 26/09/2014 18:05, Loïc Estève wrote:

> In nilearn/image/image.py:
> 
> > @@ -82,6 +82,50 @@ def high_variance_confounds(niimgs, n_confounds=5, percentile=2.,
> >                                             detrend=detrend)
> > 
> > +def _fast_smooth_array(arr):
> > -    """"""Simple smoothing which is less computationally expensive than
> > -    applying a gaussian filter.
> >   +
> > -    The filter is [.2, 1, 2] in each direction with a normalisation to
> > -    preserve the scale.
> >   +
> > -    Parameters
> > -    ----------
> > -    arr: 3D ndarray
> >   +
> 
> For completeness, this is what I have done, I think.
> 
> Also about the naming of the functions, I am fine adding 3d 
> explicitely to |_smooth_array| or |_fast_smoth_array| if you think it 
> is better. Maybe something like |_smooth_array_three_first_dims|? 
> Better suggestions welcome!
> 
> In this case should the 'public' function smooth_img be renamed too?
> 
> —
> Reply to this email directly or view it on GitHub 
> https://github.com/nilearn/nilearn/pull/241/files#r18097493.
> 
> The docstrings have to indicate that this acts on the first three axes 
> of the image (which is a basic convention in many NiLearn functions), 
> and does not act along potential additional axes. This means that I'm 
> fine with the current state of the code. I don't think that renaming is 
> necessary.
",2c2335e113af4d5fdf194f388edeaf67e9d8557f,"(None, '', u'nilearn/image/image.py')"
29,pull_request_commit_comment,241,nilearn,nilearn,GaelVaroquaux,2014-09-30 13:37:25,"It would be more efficient (and less readable :) ) if you did something like

<pre>
smoothed_arr =  arr / (scale * neighbor_weight)
smoothed_arr += arr[1:]
...
smoothed_arr *= neighbor_weight
</pre>


Indeed, as each '+=' line, you are doing a costly multiplication.
",2c2335e113af4d5fdf194f388edeaf67e9d8557f,"(None, '', u'nilearn/image/image.py')"
30,pull_request_commit_comment,241,nilearn,nilearn,GaelVaroquaux,2014-09-30 14:09:38,"We have a policy against testing with previously computed values when they are not obviously correct. I would:

Test that the center of the array is one (to check the scaling)

Test on an array that only has one non zero that the support is correct.
",2c2335e113af4d5fdf194f388edeaf67e9d8557f,"(None, '', u'nilearn/image/tests/test_image.py')"
31,pull_request_commit_comment,241,nilearn,nilearn,GaelVaroquaux,2014-09-30 14:26:00,"I think that here I would use directly _fast_smooth_array, that operates on arrays. That was you don't need to construct a temporary NiftiImage for no good reason.
",2c2335e113af4d5fdf194f388edeaf67e9d8557f,"(None, '', u'nilearn/plotting/find_cuts.py')"
32,pull_request_commit_comment,241,nilearn,nilearn,lesteve,2014-09-30 14:41:37,"But then don't you need to test all the edge cases (pun not intended), i.e. depending on how many neighbors the 1 has (in the second test)?

What if I made the 'expected' array a bit less magical, for example by defining 

``` python
value_with_3_neighbors = (1 + 3 * neighbor_weight) / (1 + nb_neighbors * neighbor_weight)
```

and replacing 0.72727273 by value_with_3_neighbors. I would do something similar with the value for 4, 5 and 6 neighbors.
",2c2335e113af4d5fdf194f388edeaf67e9d8557f,"(None, '', u'nilearn/image/tests/test_image.py')"
33,pull_request_commit_comment,241,nilearn,nilearn,GaelVaroquaux,2014-09-30 14:47:29,"> What if I made the 'expected' array a bit less magical, for example by defining
> 
> value_with_3_neighbors = (1 + 3 \* neighbor_weight) / (1 + nb_neighbors \* neighbor_weight)
> 
> and replacing 0.72727273 by value_with_3_neighbors. I would do something
> similar with the value for 4, 5 and 6 neighbors.

Than I would be happy :).

The problem with precomputed values is that when things break a few years
down the line, it's harder to diagnose the break down, because you don't
know how the reference has been generated.
",2c2335e113af4d5fdf194f388edeaf67e9d8557f,"(None, '', u'nilearn/image/tests/test_image.py')"
34,pull_request_commit_comment,241,nilearn,nilearn,lesteve,2014-10-01 07:14:18,"I assumed the leading underscore in the function more or less implied that it wasn't supposed to be used across modules. Also, smooth_img always removes non-finite values (via _smooth_array).

Maybe if we really don't want to create a temporary NiftiImage we can use _smooth_array with fwhm='fast'?
",2c2335e113af4d5fdf194f388edeaf67e9d8557f,"(None, '', u'nilearn/plotting/find_cuts.py')"
35,pull_request_commit_comment,241,nilearn,nilearn,lesteve,2014-10-01 07:22:43,"BTW, would it make sense to add the neighbor weight as a parameter and possibly make it default to 0.2?
",2c2335e113af4d5fdf194f388edeaf67e9d8557f,"(4, '', u'nilearn/image/image.py')"
36,pull_request_commit_comment,241,nilearn,nilearn,GaelVaroquaux,2014-10-01 07:34:31,"> I assumed the leading underscore in the function more or less implied that it
> wasn't supposed to be used across modules.

No, it only implies that end-users shouldn't be using it.

> Also, smooth_img always removes non-finite values (via _smooth_array).

Hum, that's a good point. Maybe we want to be using _smooth_array than.

> Maybe if we really don't want to create a temporary NiftiImage we can use
> _smooth_array with fwhm='fast'?

Agreed.
",2c2335e113af4d5fdf194f388edeaf67e9d8557f,"(None, '', u'nilearn/plotting/find_cuts.py')"
37,pull_request_commit_comment,241,nilearn,nilearn,GaelVaroquaux,2014-10-01 07:35:06,"> BTW, would it make sense to add the neighbor weight as a parameter and
> possibly make it default to 0.2?

I think that it's a case of YAGNI. If we feel the need for it at some
point, we'll add it later.
",2c2335e113af4d5fdf194f388edeaf67e9d8557f,"(4, '', u'nilearn/image/image.py')"
38,pull_request_commit,241,nilearn,nilearn,lesteve,2014-09-15 12:52:39,Add simple smoothing and use it in find_cut_slices rather than a gaussian filter,01d943a50fd13f53cd003b9488c530dc34e16409,
39,pull_request_commit,241,nilearn,nilearn,lesteve,2014-09-16 07:23:01,Fix typo,9df1a3b04452e7fc45d6d46c4c626cc52fab8a74,
40,pull_request_commit,241,nilearn,nilearn,lesteve,2014-09-26 13:14:12,"Add fast smoothing when fwhm='fast' in image.smooth_img

* Fast smoothing has been moved from plotting.find_cuts to image.image
* Test have been added for fast smoothing
* Fix buglet where data was only smoothed in find_cuts for integer arrays",e64e5f0ff1279d7a27cf62967188fe657ea3594f,
41,pull_request_commit,241,nilearn,nilearn,lesteve,2014-09-26 13:48:05,Tweak documentation and rename data -> arr for consistency,a27ac991f4c086f4233ca470d65d8a00f5a10bdd,
42,pull_request_commit,241,nilearn,nilearn,lesteve,2014-09-26 14:19:15,DOC: make _fast_smooth_array documentation more consistent with _smooth_array,33d4615a5f9d0a318fe04c6d61baa8af8773422c,
43,pull_request_commit,241,nilearn,nilearn,lesteve,2014-10-01 07:54:43,Reduce the number of multiplications in _fast_smooth_array,f2e9b3f969b0cf6bcd3b39a4a41a816c11ca11e2,
44,pull_request_commit,241,nilearn,nilearn,lesteve,2014-10-01 09:22:25,Make provenance of the expected result a tad less magical,cdb637fddd4d7e88c9c2fd8cc2db2d3151adb8ae,
45,pull_request_commit,241,nilearn,nilearn,lesteve,2014-10-01 09:30:21,Use _smooth_array rather than smooth_img to avoid creating a temporary Nifti1Image,415e74869335f19eb996c3697c6bf7b7c9fd05e2,
46,pull_request_commit,241,nilearn,nilearn,lesteve,2014-10-01 10:47:29,Add documentation for fwhm='fast' case in smooth_img,faf450bb3e33bec8cde1a7cdfec5f96396b92934,
47,pull_request_commit,241,nilearn,nilearn,lesteve,2014-10-01 11:01:46,DOC: add all possible arguments for fwhm and some rephrasing + minor tweak,2c2335e113af4d5fdf194f388edeaf67e9d8557f,
48,pull_request_commit_comment,241,nilearn,nilearn,GaelVaroquaux,2014-10-01 10:50:14,"In the type description, it should say: 'scalar, numpy.ndarray or ""fast""'.
",faf450bb3e33bec8cde1a7cdfec5f96396b92934,"(None, None, None)"
49,pull_request_commit_comment,241,nilearn,nilearn,bthirion,2014-10-01 10:50:22,"followed by a normalization to preserve the (local) average value.
",faf450bb3e33bec8cde1a7cdfec5f96396b92934,"(6, 225, u'nilearn/image/image.py')"
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,243,nilearn,nilearn,lesteve,2014-09-23 13:34:32,"In one of my old branch, I bumped into a bug that was actually fixed in master [here](https://github.com/nilearn/nilearn/commit/3781b2beea3b031aa5fd16704c20de49887483cc).

On my way of fixing it again, I added a test to `check_niimg` and tweaked an error message. I thought I would do a pull request to justify wasting my time.
",start issue,Add test for check_niimg with ensure_3d=True and a non 3d image as argument
2,issue_closed,243,nilearn,nilearn,lesteve,2014-09-25 07:29:34,,closed issue,Add test for check_niimg with ensure_3d=True and a non 3d image as argument
3,pull_request_title,243,nilearn,nilearn,lesteve,2014-09-23 13:34:32,"In one of my old branch, I bumped into a bug that was actually fixed in master [here](https://github.com/nilearn/nilearn/commit/3781b2beea3b031aa5fd16704c20de49887483cc).

On my way of fixing it again, I added a test to `check_niimg` and tweaked an error message. I thought I would do a pull request to justify wasting my time.
",a9eb20e886beeb58bab4b2c586e4a7de0e240c07,Add test for check_niimg with ensure_3d=True and a non 3d image as argument
4,pull_request_merged,243,nilearn,nilearn,lesteve,2014-09-25 07:29:34,Add test for check_niimg with ensure_3d=True and a non 3d image as argument,98e4f55fc52e7ba0e6395aab62d1a4a837ba7419,Pull request merge from lesteve/nilearn:add-test-for-check-niimg-with-non-3d-image to nilearn/nilearn:master
5,pull_request_commit_comment,243,nilearn,nilearn,lesteve,2014-09-23 13:37:10,"Just wondering whether this test was supposed to use `data_img` rather than `data` and be pretty much identical to the test I just added. Here `data` is a numpy array, and you get an error like ""a 3D image is expected but an iterable was given"", which is good enough to make the test pass. 
",a9eb20e886beeb58bab4b2c586e4a7de0e240c07,"(11, '', u'nilearn/tests/test_niimg_conversions.py')"
6,pull_request_commit_comment,243,nilearn,nilearn,bthirion,2014-09-25 06:25:04,"I'm fine with both tests.
",a9eb20e886beeb58bab4b2c586e4a7de0e240c07,"(11, '', u'nilearn/tests/test_niimg_conversions.py')"
7,pull_request_commit,243,nilearn,nilearn,lesteve,2014-09-23 11:49:36,"Add test for check_niimg with ensure_3d=True and non-3d image as argument

Fix missing space and typo in error message",36c4cf3c1ae4cceef1f2630e87a9b7c6ecbf513b,
8,pull_request_commit,243,nilearn,nilearn,lesteve,2014-09-23 11:56:14,PEP8 tweak while I was touching the file,abf8ce177e6b11166cd5889cf88adf3338fb22bb,
9,pull_request_commit,243,nilearn,nilearn,lesteve,2014-09-23 13:45:32,Add missing space,a9eb20e886beeb58bab4b2c586e4a7de0e240c07,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,233,nilearn,nilearn,GaelVaroquaux,2014-09-10 09:36:16,"No use detecting peaks on high-frequency noise.

We should use a cheap smoothing function, not ndimage.gaussian_filter, which is too expensive, but something like:

<pre>
        X_smooth = X.copy()
        X_smooth[:-1] += .2 * X[1:]
        X_smooth[1:]  += .2 * X[:-1]
        X_smooth[:, :-1] += .2 * X[:, 1:]
        X_smooth[:, 1:]  += .2 * X[:, :-1]
        X_smooth[:, :, :-1] += .2 * X[:, :, 1:]
        X_smooth[:, :, 1:]  += .2 * X[:, :, :-1]
</pre>
",start issue,Should smooth slightly the maps in the find_cuts.py code
2,issue_closed,233,nilearn,nilearn,lesteve,2014-10-01 12:14:51,,closed issue,Should smooth slightly the maps in the find_cuts.py code
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,251,nilearn,nilearn,lesteve,2014-10-02 12:10:30,"Getting #240 going again. I did:

```
git checkout -b GaelVaroquaux-better_pca master
git pull https://github.com/GaelVaroquaux/nilearn.git better_pca
```

Then I fixed the merge conflicts, fixed the confounds=None default argument in MultiPCA.fit + a typo in the session_pca call.
",start issue,Better pca (bis)
2,issue_closed,251,nilearn,nilearn,GaelVaroquaux,2014-10-09 08:43:44,,closed issue,Better pca (bis)
3,pull_request_title,251,nilearn,nilearn,lesteve,2014-10-02 12:10:30,"Getting #240 going again. I did:

```
git checkout -b GaelVaroquaux-better_pca master
git pull https://github.com/GaelVaroquaux/nilearn.git better_pca
```

Then I fixed the merge conflicts, fixed the confounds=None default argument in MultiPCA.fit + a typo in the session_pca call.
",53b8c1eb99be9855f96c8fe954169fedd2f16ca0,Better pca (bis)
4,pull_request_merged,251,nilearn,nilearn,GaelVaroquaux,2014-10-09 08:43:44,Better pca (bis),a17c9dbd58a4cb8fdb3a38890878e6d368fd665b,Pull request merge from lesteve/nilearn:GaelVaroquaux-better_pca to nilearn/nilearn:master
5,pull_request_commit,251,nilearn,nilearn,GaelVaroquaux,2014-05-16 14:32:48,WIP,fe9133e946a6118178e5b781dffc7c269b66b9b6,
6,pull_request_commit,251,nilearn,nilearn,GaelVaroquaux,2014-05-16 15:05:53,ENH: use also NiftiMasker,e92818f2ac2438e35436694ec094d586f9fa192e,
7,pull_request_commit,251,nilearn,nilearn,GaelVaroquaux,2014-05-19 12:55:44,Minor improvements to MultiPCA,bca724dbf69d18820696b2120530196c70952284,
8,pull_request_commit,251,nilearn,nilearn,GaelVaroquaux,2014-05-21 09:07:12,Make confounds work with MultiPCA,8448c7a3e3851395d91eff10c493c1a36d581119,
9,pull_request_commit,251,nilearn,nilearn,GaelVaroquaux,2014-05-21 09:08:46,Merge branch 'better_pca' of github.com:GaelVaroquaux/nilearn into better_pca,2220ef1d50464e9f144af8c37b65695819f4ba47,
10,pull_request_commit,251,nilearn,nilearn,lesteve,2014-10-02 11:13:44,Pull GaelVaroquaux/better_pca into master and fix merge conflicts,0b69f539b86e7e98de18be3e95991e5b4a1e5f49,
11,pull_request_commit,251,nilearn,nilearn,lesteve,2014-10-02 11:57:46,"Fix default 'confounds' argument in MultiPCA.fit. Also fix typo in
the session_pca call.",da7cf1a4ec9e50524714fcb38dad84cfca7a86a1,
12,pull_request_commit,251,nilearn,nilearn,lesteve,2014-10-06 12:29:46,Added smoke test for MultiPCA.fit with a 'confounds' argument,53b8c1eb99be9855f96c8fe954169fedd2f16ca0,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,245,nilearn,nilearn,lesteve,2014-09-26 09:57:48,"This pull request is WIP for now and was only opened to get some feedback, both visualisation-wise and code-wise.

Here is how it looks like atm:
![glass_brain](https://cloud.githubusercontent.com/assets/1680079/4442285/9d705a8c-47dd-11e4-9732-31fc07802367.png)

The code to generate the plots is [there](https://github.com/lesteve/nilearn/blob/glass-brain/nilearn/plotting/glass_brain_scripts/plot_glass_brain.py).
",start issue,[MRG] Glass brain visualisation
2,issue_closed,245,nilearn,nilearn,lesteve,2014-12-04 15:21:44,,closed issue,[MRG] Glass brain visualisation
3,pull_request_title,245,nilearn,nilearn,lesteve,2014-09-26 09:57:48,"This pull request is WIP for now and was only opened to get some feedback, both visualisation-wise and code-wise.

Here is how it looks like atm:
![glass_brain](https://cloud.githubusercontent.com/assets/1680079/4442285/9d705a8c-47dd-11e4-9732-31fc07802367.png)

The code to generate the plots is [there](https://github.com/lesteve/nilearn/blob/glass-brain/nilearn/plotting/glass_brain_scripts/plot_glass_brain.py).
",88f70361a337a72718e3697a83d3a614ef7876be,[MRG] Glass brain visualisation
4,pull_request_merged,245,nilearn,nilearn,lesteve,2014-12-04 15:21:44,[MRG] Glass brain visualisation,9c6fab537cdebd818f0c1f6b559ba2b162520723,Pull request merge from lesteve/nilearn:glass-brain to nilearn/nilearn:master
5,issue_comment,245,nilearn,nilearn,agramfort,2014-09-26 11:05:14,"indeed ! really nice !
",,
6,issue_comment,245,nilearn,nilearn,GaelVaroquaux,2014-10-13 14:06:19,"Is this PR still a WIP, or should it be changed to MRG? In other terms, what is there to be done remaining?

What's the test coverage? Are the plots pretty? Have the docs been updated?
",,
7,issue_comment,245,nilearn,nilearn,lesteve,2014-10-13 14:30:49,"I just added tests and a fix for the buglet involving the colorbar plotting I mentioned above.

I think what remains to be done is:
- [x] add plot_glass_brain to the documentation 
- [x] import plot_glass_brain it in `nilearn/plotting/__init__.py`
- [x] add some example plots in plot_demo_plotting.py

The test coverage for nilearn.plotting.glass_brain is 96% according to nosetests.

IMHO, I reckon the plots are reasonably pretty (they haven't changed from the pictures posted above), maybe the last minor thing would be to decide if we want to set a default alpha for the brain schematics. To be honest, I am wondering whether it isn't best to tackle any further aesthetic enhancements involving tweaking the svg in a new PR.
",,
8,issue_comment,245,nilearn,nilearn,GaelVaroquaux,2014-10-13 14:34:31,"> The test coverage for nilearn.plotting.glass_brain is 96% according to
> nosetests.

That's good enough!

> IMHO, I reckon the plots are reasonably pretty (they haven't changed from the
> pictures posted above),

I am worried that the default setting look pretty bad. Could you replace
the colormap by an alpha one, to see how things look like. We would need
things to be good by default, and right now it is not the case. My
suggestion would be to use a transparent colorbar starting fully
transparant at the threshold, and becoming fully non transparent at the
max value.

> I am wondering whether it isn't best to tackle any further aesthetic
> enhancements involving tweaking the svg in a new PR.

Agreed!
",,
9,issue_comment,245,nilearn,nilearn,lesteve,2014-10-14 06:38:53,"> My suggestion would be to use a transparent colorbar starting fully transparant at the threshold, and becoming fully non transparent at the max value.

I'll take a look at that

Also a tiny detail I forgot about is the 
- [x] choice of the default threshold for plot_glass_brain

For now it is set to the same value as for plot_stat_map, namely 1e-6. Does that sound reasonable?
",,
10,issue_comment,245,nilearn,nilearn,lesteve,2014-10-14 14:38:46,"Here is an example with transparent colormap, i.e. `cmap=nilearn.plotting.cm.red_transparent`:
![glass_brain_transparent_cmap](https://cloud.githubusercontent.com/assets/1680079/4630508/d4a9c4c6-53ad-11e4-842d-949a739e1013.png)

And to compare it with, an example using a non-transparent, i.e. `cmap=plt.cm.Reds`:
![glass_brain_red_cmap](https://cloud.githubusercontent.com/assets/1680079/4630545/2df07764-53ae-11e4-94f0-199933a814f0.png)

By the way I reckon the colorbar range setting is wrong in the projection case, probably because it is set using the 3d data, rather than the projected data.
",,
11,issue_comment,245,nilearn,nilearn,GaelVaroquaux,2014-10-14 14:46:18,"> By the way I reckon the colorbar range setting is wrong in the
> projection case, probably because it is set using the 3d data, rather
> than the projected data.

Yes, and that's quite clearly a problem. I am afraid that the colormap
setting might also be wrong, which would explain the saturation effect
that I have the impression that I am seeing in the figures above.
",,
12,issue_comment,245,nilearn,nilearn,lesteve,2014-10-14 17:14:46,"> I am afraid that the colormap setting might also be wrong

From a quick look at the [code](https://github.com/nilearn/nilearn/blob/master/nilearn/plotting/cm.py#L94), the alpha goes from 0.5 to 1. They may be a reason for that though.
",,
13,issue_comment,245,nilearn,nilearn,GaelVaroquaux,2014-10-15 05:07:37,"> From a quick look at the code, the alpha goes from 0.5 to 1. They may be a
> reason for that though.

It doesn't suit our purposes. You should probably add an extra argument
to the colormap-generating function to control the lower value for alpha,
and set it to 0 in the case of the glass-brain.
",,
14,issue_comment,245,nilearn,nilearn,banilo,2014-10-29 15:34:43,"Just as a general note/idea, we have already discussed with Loïc: it would be nice if the glass brain plot supports plotting simple label atlases (in line with existing NiftiLabelsMasker-like API) and that the plots are compatible with corresponding discrete colormaps. Though, I have no good ideas how the potential perspective issues (overlaps between different of homotop regions) might be handled elegantly.
",,
15,issue_comment,245,nilearn,nilearn,bthirion,2014-10-30 22:01:10,"Note that glass brain is often used for Maximum Intensity projection (at least in the SPM interface), which of course does not work well in case of label images. Actually it works reasonably well if you have a single-label image, but the visualization becomes cluttered very quickly with multiple labels. My opinion is thus:
- Not in this PR
- Could you come with an example ?
",,
16,issue_comment,245,nilearn,nilearn,banilo,2014-10-30 22:53:40,"Some loose thoughts would be:
- parcellation results are turning into a generally accepted neuroimaging modality; e.g., the NeuroVault paper claims explicit support for these
- parcellation is often performed by clustering, which is a type of learning from data, which would relate it to Nilearn
- explicit example here (sorry for the self-reference):

![image](https://cloud.githubusercontent.com/assets/3907396/4853592/77c275c8-6087-11e4-80f7-55656c6c4615.png)
",,
17,issue_comment,245,nilearn,nilearn,GaelVaroquaux,2014-11-05 10:04:48,"I agree with @banilo that we should open the door to supporting visualization of labels. I am not sure how to do it. Maybe by introducing a new projection strategy that takes the value last non-zero coefficient along the projection axis.
",,
18,issue_comment,245,nilearn,nilearn,GaelVaroquaux,2014-11-05 10:05:16,"@lesteve : could you paste here the current view of the generate plot, as I see that a lot has changed recently.
",,
19,issue_comment,245,nilearn,nilearn,lesteve,2014-11-05 10:31:35,"I have some wip stuff in my local branch atm. Let me tidy that up before posting an updated picture.
",,
20,issue_comment,245,nilearn,nilearn,GaelVaroquaux,2014-11-05 10:32:10,"> I have some wip stuff in my local branch atm. Let me tidy that up before
> posting an updated picture.

Sure. Thanks!
",,
21,issue_comment,245,nilearn,nilearn,lesteve,2014-11-13 10:51:53,"Updated plots with red transparent color maps using the full alpha range:

![glass_brain](https://cloud.githubusercontent.com/assets/1680079/5027080/6156a38c-6b2b-11e4-9a34-4d4f4f265d71.png)
",,
22,issue_comment,245,nilearn,nilearn,GaelVaroquaux,2014-11-13 11:59:51,"Looks good! We are making progress.

The black images look really nice. I'd say that they are almost there. On the white background images, the colormap is fading to a grayish color. I think that it would be much better if it could fade to white. I suspect that the issue is somewhat subtle, maybe related to the way the colormap traverses the space of colors.
",,
23,issue_comment,245,nilearn,nilearn,lesteve,2014-11-13 12:12:52,"I agree on the aesthetic judgement but I am not too sure about the technical problem yet ...
",,
24,issue_comment,245,nilearn,nilearn,banilo,2014-11-13 12:28:34,"Looks great! Yet,

a) there seems to be activation outside of the broad on the 2 lower panels.

b) I already mentioned this, but it would be nice to include the main neuroanatomical realities into the template: especially the
- Gyrus temporalis superior et inferior
- perhas make the Sulcus centralis bold because it separates Lobus frontalis from Lobus parietalis, and is therefore an actually important  landmark, rather than the lines that are currently in bold
  Other than this, it looks greaty from a neuroanatomical standpoint in my humble opinion
",,
25,issue_comment,245,nilearn,nilearn,lesteve,2014-11-13 12:40:15,"> a) there seems to be activation outside of the broad on the 2 lower panels.

There is already a discussion about this one above.

> b) I already mentioned this, but it would be nice to include the main neuroanatomical realities into the template:

It is definitely in the back of my mind. My take on it is to defer this kind of enhancements to further PRs.
",,
26,issue_comment,245,nilearn,nilearn,lesteve,2014-11-18 08:47:56,"I looked at the grayness issue a bit more and I can reproduce it with a simple snippet. Not an alpha colormap expert but this does look a bit strange to me...

``` python
import numpy as np

import matplotlib.pyplot as plt
from matplotlib.colors import LinearSegmentedColormap

import matplotlib

matplotlib.rcParams['figure.facecolor'] = 'white'


cm_dict = {'red':  ((0.0, 1.0, 1.0),
                    (1.0, 1.0, 1.0)),
           'green': ((0.0, 0.0, 0.0),
                     (1.0, 0.0, 0.0)),
           'blue':  ((0.0, 0.0, 0.0),
                     (1.0, 0.0, 0.0)),
           'alpha': ((0.0, 0.0, 0.0),
                     (1.0, 1.0, 1.0))
          }

my_cm = LinearSegmentedColormap('my_cm', cm_dict)

vals = np.tile(np.linspace(-1, 1, 30), (20, 1))

fig = plt.figure()
ax = plt.imshow(vals, cmap=my_cm)
plt.colorbar()
plt.show()
```

![alpha_gradient](https://cloud.githubusercontent.com/assets/1680079/5085765/5a1520b0-6f15-11e4-9f87-bd6306368ec2.png)
",,
27,issue_comment,245,nilearn,nilearn,GaelVaroquaux,2014-11-18 09:27:27,"I am confused. I can reproduce the pb. I suggest that you ask on the
matplotlib mailing list.
",,
28,issue_comment,245,nilearn,nilearn,lesteve,2014-11-18 09:43:25,"> I suggest that you ask on the matplotlib mailing list.

Yep I'll do that. FWIW I also noticed that this matplotlib 1.2.1 seems exempt from this issue:

![alpha_gradient_1 2](https://cloud.githubusercontent.com/assets/1680079/5085781/7f1b5a3c-6f15-11e4-9db8-7c1afde0da4d.png)
",,
29,issue_comment,245,nilearn,nilearn,GaelVaroquaux,2014-11-18 09:45:42,"> Yep I'll do that. FWIW I also noticed that this matplotlib 1.2.1 seems exempt
> from this issue:

Shit, we'll probably get this answer.
",,
30,issue_comment,245,nilearn,nilearn,lesteve,2014-11-18 09:50:17,"> FWIW I also noticed that this matplotlib 1.2.1 seems exempt from this issue:

TBH maybe it's just that I have been staring at this way too long and that I am now unable to reliably distinguish gray from transparent red any more...
",,
31,issue_comment,245,nilearn,nilearn,GaelVaroquaux,2014-11-18 10:08:45,"> TBH maybe it's just that I have been staring at this way too long and that I am now unable to reliably distinguish gray from transparent red any more...

No, no, I confirm.
",,
32,issue_comment,245,nilearn,nilearn,lesteve,2014-11-24 08:46:08,"OK an attempt to use a non transparent colormap (plt.cm.Reds, better suggestion welcome). Default threshold is still 1e-6 (same as plot_stat_map):

![glass_brain_plt_reds](https://cloud.githubusercontent.com/assets/1680079/5162329/4fc4a1be-73be-11e4-96a5-4395a33e63f1.png)
",,
33,issue_comment,245,nilearn,nilearn,GaelVaroquaux,2014-11-24 10:10:05,"This looks better, but it's still not there.

The first thing that worries me is that the colormap doesn't seem to go all the way to white. Do you understand why?

The second thing is that on the black bg, we should probably have a colormap going to black (which tells us that the argument that we take should maybe be a color, not a colormap, and we would generate the corresponding colormap.

The last thing is that the threshold is wrong. But maybe we should not try to guess a threshold, and let the user specify one, or give us thresholded maps. By the way, are you applying the threshold on the projected maps? I think that we should apply it on the raw maps, and then project, as this is what a user would want to do when visualizing a statistical map: do not display any voxel that has too small a statistic.
",,
34,issue_comment,245,nilearn,nilearn,lesteve,2014-11-24 10:45:06,"> The first thing that worries me is that the colormap doesn't seem to go all the way to white. Do you understand why?

I think it does, there are a few very negative values in the eyes that survive the max along an axis.

> The second thing is that on the black bg, we should probably have a colormap going to black (which tells us that the argument that we take should maybe be a color, not a colormap, and we would generate the corresponding colormap.

We could have the cmap default to None and then do the logic in plot_glass_brain to switch between the white and black background. The white background would have a colormap going from white to red and the black one a colormap going from black to red.

> I think that we should apply it on the raw maps, and then project, as this is what a user would want to do when visualizing a statistical map: do not display any voxel that has too small a statistic.

I believe that's what we are doing at the moment. That would explain why you see some white pixels (e.g. top left or bottom left) with the threshold=10 which are not here with the default threshold. The threshold removes small positive values and you are left with the more extreme negative ones. 

One last comment, the data is actually contrast data, I am wondering whether it would be worth calculating p-values like this [example](http://nilearn.github.io/auto_examples/plot_localizer_simple_analysis.html#example-plot-localizer-simple-analysis-py) to have a more realistic use case.
",,
35,issue_comment,245,nilearn,nilearn,GaelVaroquaux,2014-11-24 10:57:37,"> I think it does, there are a few very negative values in the eyes that survive
> the max along an axis.

Ah, OK. Shouldn't we be taking the absolutely value before summing?

> We could have the cmap default to None and then do the logic in
> plot_glass_brain to switch between the white and black background. The white
> background would have a colormap going from white to red and the black one a
> colormap going from black to red.

That's an option. It's simple and would do the trick. Let's go for this.

> One last comment, the data is actually contrast data, I am wondering
> whether it would be worth calculating p-values like this example to
> have a more realistic use case.

These are T maps? If they are T maps, that's a pretty good example of
standard usecase.
",,
36,issue_comment,245,nilearn,nilearn,lesteve,2014-11-24 13:49:36,"> Ah, OK. Shouldn't we be taking the absolutely value before summing?

I went back on forth on this one, that's what I did naively at first but I got convinced by @bthirion to only take the max (something related to the fact that you can easily transformation t-tests into F-test and that the latter only has only positive values). Also as a side comment, note we are not summing but taking the max along an axis.

> These are T maps? If they are T maps, that's a pretty good example of standard usecase.

I think we are using the contrasts via `datasets.get_localizer_contrasts`. I hadn't seen until now that you could get t_maps by setting `get_tmaps=True` in this function. I'll try that.
",,
37,issue_comment,245,nilearn,nilearn,lesteve,2014-11-27 14:33:21,"OK now with localizer t-maps and a cmap that changes depending on the background. My choices of cmap were mostly dictated by finding matplotlib built-in ones which is black for low values. Better suggestions of colorbar more than welcome!

![glass_brain_t_maps](https://cloud.githubusercontent.com/assets/1680079/5218204/4d677a98-764a-11e4-85a0-cfb6ec9bb296.png)
",,
38,issue_comment,245,nilearn,nilearn,lesteve,2014-11-27 14:45:40,"Oops, I unintentionally added the colormap for the last plots I posted. Now fixed:
![glass_brain_t_maps](https://cloud.githubusercontent.com/assets/1680079/5218374/5cb76c22-764c-11e4-99c0-73cbf9c293fb.png)
",,
39,issue_comment,245,nilearn,nilearn,GaelVaroquaux,2014-11-27 14:59:00,"That last things looks really good. I think that the lines should all be
a little bit thinner (like .66 times their current value), but aside from
that, I think that this is a final good iteration on the visual aspects.

I still need to review the code...
",,
40,issue_comment,245,nilearn,nilearn,lesteve,2014-11-28 09:58:41,"Now with thinner lines:

![glass_brain_t_maps_thinner_lines](https://cloud.githubusercontent.com/assets/1680079/5226205/753d1724-76ec-11e4-8ccc-bda9b9a26692.png)
",,
41,issue_comment,245,nilearn,nilearn,GaelVaroquaux,2014-11-28 10:36:04,"I think that this looks awesome! Absolutely awesome. I'll review the code on Tuesday (deadline Monday night). In the mean time, maybe someone like @AlexandreAbraham or @eickenberg can have a look at the code.
",,
42,issue_comment,245,nilearn,nilearn,lesteve,2014-12-02 08:45:25,"Added inferior temporal sulcus to make @banilo happy:
![glass_brain_inferior_temporal_sulcus](https://cloud.githubusercontent.com/assets/1680079/5259883/d098ade0-7a07-11e4-8e22-b40b5859af8d.png)
",,
43,issue_comment,245,nilearn,nilearn,banilo,2014-12-02 08:48:40,":+1:  Perfect, good job!
",,
44,issue_comment,245,nilearn,nilearn,GaelVaroquaux,2014-12-02 21:43:29,"OK, I have finished my review. Only very minor, cosmetic comments. This is almost merged. Hurray!
",,
45,issue_comment,245,nilearn,nilearn,AlexandreAbraham,2014-12-03 16:15:24,"A small visual effect is bugging me. If you look at the last figure posted by @lesteve, on the left column (black background) you can see in the first subplot (the yellow one) that they gray ""internal"" lines are very contrasted while the white ""external"" lines are not visible. On the contrary, when the plot is mainly red (just below) the white lines are visible but not the gray ones. I think that the problem here is that the color of the lines should not depend on the background color, but on the context of the line.

I don't think that matplotlib allows complex overlays of images. And it is technically doable but it would require some dirty code. But it may be good enough for the users to allow a custom value for these colors.
",,
46,issue_comment,245,nilearn,nilearn,GaelVaroquaux,2014-12-03 16:25:42,"> I don't think that matplotlib allows complex overlays of images. And it is
> technically doable but it would require some dirty code. But it may be good
> enough for the users to allow a custom value for these colors.

Let's move on. We have spent enough time on that. We need nilearn to be
moving on as a bigger picture (and niconnect as a result).
",,
47,issue_comment,245,nilearn,nilearn,lesteve,2014-12-04 12:45:31,"I realised one of the main remaining sticking point was in a folded [comment](https://github.com/nilearn/nilearn/pull/245#discussion-diff-21186596), so I am duplicating it here for more visibility. tl; dr. I am going to leave kwargs undocumented and will leave visual improvements for further PRs.

> Please document what the kwargs are (what they are passed for, and where to find what values they can take).

This is a kludge that is only used to be able to get the alpha to percolate from img_plotting.plot_glass_brain to brain_glass.plot_brain_schematics. Eventually they get passed to the matplotlib patches of the brain schematics.

To be honest I am not sure we need alpha. The plots do look better with alpha=0.7 (which has been used for the most recent snapshots) but maybe we can achieve a similar effect by just tweaking the color of the lines in the svg.

**alpha=0.7**
![glass_brain_alpha_07](https://cloud.githubusercontent.com/assets/1680079/5279213/770ce332-7ae2-11e4-9b85-d9c94fb7d80d.png)

**alpha=1**
![glass_brain_alpha_1](https://cloud.githubusercontent.com/assets/1680079/5279241/d802030c-7ae2-11e4-8b05-da056d89f428.png)
",,
48,issue_comment,245,nilearn,nilearn,GaelVaroquaux,2014-12-04 13:40:45,"I saw that, but I prefer it with the alpha. 
",,
49,issue_comment,245,nilearn,nilearn,lesteve,2014-12-04 15:21:38,"OK merging this long standing one ! 
",,
50,issue_comment,245,nilearn,nilearn,GaelVaroquaux,2014-12-04 16:37:45,"Fucking Ay!

Can you rebuild the online docs, please;
",,
51,issue_comment,245,nilearn,nilearn,lesteve,2014-09-27 06:48:09,"The outline comes from an SVG with a little bit of work to extract the coordinates of the nodes from the SVG and draw the Bézier curves in matplotlib.

The SVG was created by Gaël by vectorising and simplifying a bitmap picture.
",,
52,issue_comment,245,nilearn,nilearn,lesteve,2014-09-29 20:52:46,"I was wondering about where these data points outside the brain were coming from and I was told it may well be the eyes. Those regions can be seen in the [plotting examples](https://nilearn.github.io/auto_examples/plot_demo_plotting.html) too for example this one:
![picture](https://nilearn.github.io/_images/plot_demo_plotting_7.png).

If there is a way to remove these regions automatically, it's probably worth doing. Something interesting to note, is that the values are pretty high (in this case very negative) and setting a high threshold won't make them go away.

Definitely a good idea to get some feedback from neuroscientists at one point in the future.
",,
53,issue_comment,245,nilearn,nilearn,lesteve,2014-09-29 20:59:33,"That's a valid point indeed but then maybe it's still worth removing these regions in an ad-hoc way in our examples.
",,
54,issue_comment,245,nilearn,nilearn,lesteve,2014-10-07 13:36:07,"Same plots with an alpha of 0.7:
![glass_brain](https://cloud.githubusercontent.com/assets/1680079/4542937/d018707e-4e26-11e4-955e-b8486952ee95.png)
",,
55,issue_comment,245,nilearn,nilearn,lesteve,2014-10-10 08:10:52,"@GaelVaroquaux I think I tackled the comments you had the other day
",,
56,issue_comment,245,nilearn,nilearn,lesteve,2014-10-10 08:34:40,"> We should rename 'slicers.py'. But we need a better name. Any suggestions?

I was thinking about displays.py
",,
57,issue_comment,245,nilearn,nilearn,lesteve,2014-10-10 09:05:40,"> What's your feeling on the code? I personnaly like a lot what I am seeing. I have the impression that this is a good design for what we need.

I would agree using only functions glass_brain.py is simpler. Having the glass brain plotting as part of the Axes makes sense but you need to jump through a few more levels (the `**kwargs` I added to a few methods [recently](https://github.com/lesteve/nilearn/commit/9909e211752197a844a18dd26043eb6792b8a5e0)). Other than that, there are still coord (axes level) and cut_coords (display level) in a few places in slicers.py which is a bit awkward given that it doesn't really apply to the glass brain use case.

> Next step is to add smoke tests, so that the test coverage is as high as possible (we aim for 90% or more).

Yep I started doing that but I bumped into errors I don't really understand yet.
",,
58,pull_request_commit_comment,245,nilearn,nilearn,bthirion,2014-09-29 21:19:38,"What do these values come from ? It's a bit disturbing for users who don't understand them.
",88f70361a337a72718e3697a83d3a614ef7876be,"(None, '', u'nilearn/plotting/glass_brain_scripts/plot_glass_brain.py')"
59,pull_request_commit_comment,245,nilearn,nilearn,bthirion,2014-09-29 21:24:01,"This seems of a much wider interest than glass brain plotting. This should go to some utils subdir, and possibly to another library in the future.
",88f70361a337a72718e3697a83d3a614ef7876be,"(None, '', u'nilearn/plotting/glass_brain_scripts/svg_to_json_converter.py')"
60,pull_request_commit_comment,245,nilearn,nilearn,GaelVaroquaux,2014-09-29 21:28:07,"> This seems of a much wider interest than glass brain plotting. This should go
> to some utils subdir, and possibly to another library in the future.

Agreed for the utils, but I don't want to invest time in something like a
library that is of no use to us. People are welcome to take the code and
make it a library.
",88f70361a337a72718e3697a83d3a614ef7876be,"(None, '', u'nilearn/plotting/glass_brain_scripts/svg_to_json_converter.py')"
61,pull_request_commit_comment,245,nilearn,nilearn,lesteve,2014-09-30 06:48:31,"I tweaked these values by hand to have a nicer color range. To be honest, the only use of this plot is to align the brain schematics with the anatomy and eventually hand-tweak the SVG to make them fit a bit better. I don't think it will stay as an example plot.
",88f70361a337a72718e3697a83d3a614ef7876be,"(None, '', u'nilearn/plotting/glass_brain_scripts/plot_glass_brain.py')"
62,pull_request_commit_comment,245,nilearn,nilearn,bthirion,2014-09-30 16:43:09,"Sorry, I don't understand the status of this in the codebase. Is it supposed to be removed ?
",88f70361a337a72718e3697a83d3a614ef7876be,"(None, '', u'nilearn/plotting/glass_brain_scripts/plot_align_svg.py')"
63,pull_request_commit_comment,245,nilearn,nilearn,GaelVaroquaux,2014-09-30 16:44:34,"> Sorry, I don't understand the status of this in the codebase. Is it
> supposed to be removed ?

Probably moved into a 'utils' directory (not a module: this would not be
code that we would deploy on the user's computer).
",88f70361a337a72718e3697a83d3a614ef7876be,"(None, '', u'nilearn/plotting/glass_brain_scripts/plot_align_svg.py')"
64,pull_request_commit_comment,245,nilearn,nilearn,bthirion,2014-09-30 16:54:37,"pending TODO
",88f70361a337a72718e3697a83d3a614ef7876be,"(None, '', u'nilearn/plotting/img_plotting.py')"
65,pull_request_commit_comment,245,nilearn,nilearn,lesteve,2014-09-30 16:56:35,"Yeah, this script main purpose is to check the good alignment of the anat and the svg. It could be useful to keep it in case we need to tweak the svg further at one point in the future. It does makes sense to move it out of the way.
",88f70361a337a72718e3697a83d3a614ef7876be,"(None, '', u'nilearn/plotting/glass_brain_scripts/plot_align_svg.py')"
66,pull_request_commit_comment,245,nilearn,nilearn,lesteve,2014-09-30 17:04:45,"There are definitely a few of those TODOs sprinkled in the code. I'll add a note to myself to make sure I tackled all of them before merging.
",88f70361a337a72718e3697a83d3a614ef7876be,"(None, '', u'nilearn/plotting/img_plotting.py')"
67,pull_request_commit_comment,245,nilearn,nilearn,lesteve,2014-10-07 09:10:20,"I am still inheriting from the cut-based slicer and disabling a few methods which is rather hacky. There must be a better way to structure this code, suggestions welcome!
",88f70361a337a72718e3697a83d3a614ef7876be,"(580, '', u'nilearn/plotting/slicers.py')"
68,pull_request_commit_comment,245,nilearn,nilearn,GaelVaroquaux,2014-10-07 09:20:39,"> I am still inheriting from the cut-based slicer and disabling a few methods
> which is rather hacky. There must be a better way to structure this code,
> suggestions welcome!

I would say: add a base class, and inherit from it in the OrthoSlicer,
where you add methods, and in your own projector, where you add different
methods.
",88f70361a337a72718e3697a83d3a614ef7876be,"(580, '', u'nilearn/plotting/slicers.py')"
69,pull_request_commit_comment,245,nilearn,nilearn,GaelVaroquaux,2014-10-07 12:16:23,"Is there a reason to have a staticmethod, rather than a function, here? (ie something not linked to the class).
",88f70361a337a72718e3697a83d3a614ef7876be,"(None, '', u'nilearn/plotting/glass_brain/brain_schematics.py')"
70,pull_request_commit_comment,245,nilearn,nilearn,GaelVaroquaux,2014-10-07 12:18:50,"Same remark: why a staticmethod?
",88f70361a337a72718e3697a83d3a614ef7876be,"(None, '', u'nilearn/plotting/glass_brain/brain_schematics.py')"
71,pull_request_commit_comment,245,nilearn,nilearn,lesteve,2014-10-07 13:31:53,"The main reason is that this is a helper function which is only used within the class. I could change it to a module-level function but you would then lose the hint.
",88f70361a337a72718e3697a83d3a614ef7876be,"(None, '', u'nilearn/plotting/glass_brain/brain_schematics.py')"
72,pull_request_commit_comment,245,nilearn,nilearn,lesteve,2014-10-07 13:32:41,"Mostly the same reason as above
",88f70361a337a72718e3697a83d3a614ef7876be,"(None, '', u'nilearn/plotting/glass_brain/brain_schematics.py')"
73,pull_request_commit_comment,245,nilearn,nilearn,GaelVaroquaux,2014-10-07 13:50:23,"> The main reason is that this is a helper function which is only used
> within the class. I could change it to a module-level function but you
> would then lose the hint.

But it's not a method. An object is more than a namespace of methods. It
has an internal state and methods act on its internal state. That's why
reading code that is object-oriented is harder to read: you never know
what has changed and what has not.

Thus, I would really push for using functions rather than staticmethods.
",88f70361a337a72718e3697a83d3a614ef7876be,"(None, '', u'nilearn/plotting/glass_brain/brain_schematics.py')"
74,pull_request_commit_comment,245,nilearn,nilearn,lesteve,2014-10-07 14:18:46,"Yeah I think we quickly chatted about that already before. I just see this low-level helper functions as not important enough to warrant polluting the module namespace. During a first read of the code, I feel it is easier to ignore these unnecessary details if they are nested within the class they are related to.
",88f70361a337a72718e3697a83d3a614ef7876be,"(None, '', u'nilearn/plotting/glass_brain/brain_schematics.py')"
75,pull_request_commit_comment,245,nilearn,nilearn,GaelVaroquaux,2014-10-10 08:29:14,"Unused import

You should use pyflakes in your editor, it is great to detect these things. See http://scipy-lectures.github.io/advanced/debugging/index.html#a-type-as-go-spell-checker-like-integration
",88f70361a337a72718e3697a83d3a614ef7876be,"(None, '', u'nilearn/plotting/slicers.py')"
76,pull_request_commit_comment,245,nilearn,nilearn,GaelVaroquaux,2014-10-10 08:31:26,"Good idea to rename the method!

I think that I would prefer it to be named something like 'draw_volume'. Also, we should probably make it private: it's for the internals of the object, not for end-users to call.
",88f70361a337a72718e3697a83d3a614ef7876be,"(None, '', u'nilearn/plotting/slicers.py')"
77,pull_request_commit_comment,245,nilearn,nilearn,GaelVaroquaux,2014-10-10 08:32:40,"Please disregard the comment on making it private: I hadn't seen that it was in our Axes object. End users are not meant to use this object anyhow, so let's not bother.
",88f70361a337a72718e3697a83d3a614ef7876be,"(None, '', u'nilearn/plotting/slicers.py')"
78,pull_request_commit_comment,245,nilearn,nilearn,lesteve,2014-10-10 08:33:49,"Actually something like this configured already. I just didn't spot this one.
",88f70361a337a72718e3697a83d3a614ef7876be,"(None, '', u'nilearn/plotting/slicers.py')"
79,pull_request_commit_comment,245,nilearn,nilearn,lesteve,2014-10-10 08:37:30,"The thing is that `draw` actually draws some 2d data. I could rename it `draw_2d` to make it more explicit.

As a side comment I also plan to go over the file and remove the `cut*` occurrences where easily doable.
",88f70361a337a72718e3697a83d3a614ef7876be,"(None, '', u'nilearn/plotting/slicers.py')"
80,pull_request_commit_comment,245,nilearn,nilearn,GaelVaroquaux,2014-10-10 08:41:58,"> The thing is that draw actually draws some 2d data. I could rename it draw_2d
> to make it more explicit.

Yes, that's a good suggestion.

> As a side comment I also plan to go over the file and remove the cut*
> occurrences where easily doable.

Good idea. Thanks!
",88f70361a337a72718e3697a83d3a614ef7876be,"(None, '', u'nilearn/plotting/slicers.py')"
81,pull_request_commit_comment,245,nilearn,nilearn,GaelVaroquaux,2014-12-02 19:52:06,"Thanks for renaming slicer to display in the docs!
",88f70361a337a72718e3697a83d3a614ef7876be,"(119, '', u'doc/building_blocks/plotting.rst')"
82,pull_request_commit_comment,245,nilearn,nilearn,GaelVaroquaux,2014-12-02 20:00:20,"Please document what the kwargs are (what they are passed for, and where to find what values they can take).
",88f70361a337a72718e3697a83d3a614ef7876be,"(None, '', u'nilearn/plotting/displays.py')"
83,pull_request_commit_comment,245,nilearn,nilearn,GaelVaroquaux,2014-12-02 20:48:43,"I think that I'd prefer a name like: transform_to_2d, or project_to_2d?
",88f70361a337a72718e3697a83d3a614ef7876be,"(None, '', u'nilearn/plotting/displays.py')"
84,pull_request_commit_comment,245,nilearn,nilearn,GaelVaroquaux,2014-12-02 20:52:48,"When can d be None? What warrants that not all ds are None?
",88f70361a337a72718e3697a83d3a614ef7876be,"(None, '', u'nilearn/plotting/displays.py')"
85,pull_request_commit_comment,245,nilearn,nilearn,GaelVaroquaux,2014-12-02 20:55:21,"Is there really a reason to use an izip instead of a zip? It seems to me that the list will always be small, so expanding it isn't a problem.

In addition, I believe that in Python3, itervalues is deprecated, and you should use 'values', that returns some clever view that is not an expanded list.
",88f70361a337a72718e3697a83d3a614ef7876be,"(None, '', u'nilearn/plotting/displays.py')"
86,pull_request_commit_comment,245,nilearn,nilearn,GaelVaroquaux,2014-12-02 21:09:58,"I think that I would prefer this attribute to be named '_axes_class' (ie to be private).
",88f70361a337a72718e3697a83d3a614ef7876be,"(None, '', u'nilearn/plotting/displays.py')"
87,pull_request_commit_comment,245,nilearn,nilearn,GaelVaroquaux,2014-12-02 21:10:53,"A small module-level docstring would be great here.
",88f70361a337a72718e3697a83d3a614ef7876be,"(5, '', u'nilearn/plotting/glass_brain.py')"
88,pull_request_commit_comment,245,nilearn,nilearn,GaelVaroquaux,2014-12-02 21:14:08,"A comment in this file saying what it does would be a good thing.
",88f70361a337a72718e3697a83d3a614ef7876be,"(1, '', u'nilearn/plotting/glass_brain_files/generate_json.sh')"
89,pull_request_commit_comment,245,nilearn,nilearn,GaelVaroquaux,2014-12-02 21:15:52,"I'd like a module-level docstring here too :). I am trying to make it as easy as possible for someone to follow up on this work.
",88f70361a337a72718e3697a83d3a614ef7876be,"(6, '', u'nilearn/plotting/glass_brain_files/plot_align_svg.py')"
90,pull_request_commit_comment,245,nilearn,nilearn,GaelVaroquaux,2014-12-02 21:23:06,"https://twitter.com/GaelVaroquaux/status/539892002092228608 :)
",88f70361a337a72718e3697a83d3a614ef7876be,"(6, '', u'nilearn/plotting/glass_brain_files/plot_align_svg.py')"
91,pull_request_commit_comment,245,nilearn,nilearn,GaelVaroquaux,2014-12-02 21:27:25,"What's the point of the partial? I don't think that you are using other values elsewhere for these arguments. Maybe you should just define the function as:

def add_brain_schematic(display, options=dict(alpha=.5, ...)):
",88f70361a337a72718e3697a83d3a614ef7876be,"(None, '', u'nilearn/plotting/glass_brain_files/plot_align_svg.py')"
92,pull_request_commit_comment,245,nilearn,nilearn,GaelVaroquaux,2014-12-02 21:31:37,"Module-level docstring :)  (remember, the serial killer)
",88f70361a337a72718e3697a83d3a614ef7876be,"(None, '', u'nilearn/plotting/glass_brain_files/plot_glass_brain.py')"
93,pull_request_commit_comment,245,nilearn,nilearn,GaelVaroquaux,2014-12-02 21:32:17,"Actually, is there a specific reason that this file is here, and not as an example. It would do a great example, IMHO.
",88f70361a337a72718e3697a83d3a614ef7876be,"(None, '', u'nilearn/plotting/glass_brain_files/plot_glass_brain.py')"
94,pull_request_commit_comment,245,nilearn,nilearn,GaelVaroquaux,2014-12-02 21:34:05,"Ouch, code smell: we should be able to deal with nans in the data (because, as you are witnessing, it is often the case in neuroimaging)

I'd be very happy if we could write this example without using nibabel, as an exercise to check that our API is good.
",88f70361a337a72718e3697a83d3a614ef7876be,"(None, '', u'nilearn/plotting/glass_brain_files/plot_glass_brain.py')"
95,pull_request_commit_comment,245,nilearn,nilearn,GaelVaroquaux,2014-12-02 21:34:58,"Module level docstring
- why the uft-8? I prefer files not to have utf-8 (because it can be hard to type and hard to read).
",88f70361a337a72718e3697a83d3a614ef7876be,"(None, '', u'nilearn/plotting/glass_brain_files/svg_to_json_converter.py')"
96,pull_request_commit_comment,245,nilearn,nilearn,GaelVaroquaux,2014-12-02 21:36:02,"It doesn't really make much sens to plot an anat in a glass brain. I think that you should remove the few lines above.
",88f70361a337a72718e3697a83d3a614ef7876be,"(None, '', u'nilearn/plotting/glass_brain_files/plot_glass_brain.py')"
97,pull_request_commit_comment,245,nilearn,nilearn,GaelVaroquaux,2014-12-02 21:38:39,"You should probably document that new argument.
",88f70361a337a72718e3697a83d3a614ef7876be,"(None, '', u'nilearn/plotting/img_plotting.py')"
98,pull_request_commit_comment,245,nilearn,nilearn,GaelVaroquaux,2014-12-02 21:40:02,"Why the future tense? ""are added"", I would say.
",88f70361a337a72718e3697a83d3a614ef7876be,"(None, '', u'nilearn/plotting/img_plotting.py')"
99,pull_request_commit_comment,245,nilearn,nilearn,GaelVaroquaux,2014-12-02 21:41:25,"Nice design: this function is very tight.
",88f70361a337a72718e3697a83d3a614ef7876be,"(None, '', u'nilearn/plotting/img_plotting.py')"
100,pull_request_commit_comment,245,nilearn,nilearn,lesteve,2014-12-03 08:00:46,"Nice one, I knew it with the ""and knew where you live"" addition but maybe that didn't fit in 140 characters :smile:
",88f70361a337a72718e3697a83d3a614ef7876be,"(6, '', u'nilearn/plotting/glass_brain_files/plot_align_svg.py')"
101,pull_request_commit_comment,245,nilearn,nilearn,GaelVaroquaux,2014-12-03 08:05:19,"Indeed. It's hard to do philosophy with 140 chars. 
",88f70361a337a72718e3697a83d3a614ef7876be,"(6, '', u'nilearn/plotting/glass_brain_files/plot_align_svg.py')"
102,pull_request_commit_comment,245,nilearn,nilearn,lesteve,2014-12-03 08:08:55,"plot_glass_brain.py was mostly used to produce the plots I was showing in this PR. I think it can go. There is an example of glass brain in plot_demo_plotting.py already.
",88f70361a337a72718e3697a83d3a614ef7876be,"(None, '', u'nilearn/plotting/glass_brain_files/plot_glass_brain.py')"
103,pull_request_commit_comment,245,nilearn,nilearn,lesteve,2014-12-03 08:10:19,"Agreed, the anat was only plotted for alignment purposes. This can probably go to plot_svg_align.py.
",88f70361a337a72718e3697a83d3a614ef7876be,"(None, '', u'nilearn/plotting/glass_brain_files/plot_glass_brain.py')"
104,pull_request_commit_comment,245,nilearn,nilearn,GaelVaroquaux,2014-12-03 08:10:19,"Ok
",88f70361a337a72718e3697a83d3a614ef7876be,"(None, '', u'nilearn/plotting/glass_brain_files/plot_glass_brain.py')"
105,pull_request_commit_comment,245,nilearn,nilearn,lesteve,2014-12-03 08:45:30,"This is an internal function without detailed documentation for other arguments. It says refer to the docstring of plot_img but that doesn't apply to quite a few arguments like bg_vmin, bg_vmax, interpolation, ...

For completeness create_display_fun is the function that takes a display_mode argument and return a display class. Suggestions for better naming welcome!
",88f70361a337a72718e3697a83d3a614ef7876be,"(None, '', u'nilearn/plotting/img_plotting.py')"
106,pull_request_commit_comment,245,nilearn,nilearn,GaelVaroquaux,2014-12-03 08:47:47,"I think that mayber we should document only the parameters not explained
in plot_img.

> For completeness create_display_fun is the function that takes a display_mode
> argument and return a display class. Suggestions for better naming welcome!

This is usually called a 'factory'. At least in C++/java world :). So I
would call it 'display_factory'.
",88f70361a337a72718e3697a83d3a614ef7876be,"(None, '', u'nilearn/plotting/img_plotting.py')"
107,pull_request_commit_comment,245,nilearn,nilearn,lesteve,2014-12-03 09:55:46,"There is a README.md in the glass_brain_files folder but maybe that's not good enough
",88f70361a337a72718e3697a83d3a614ef7876be,"(1, '', u'nilearn/plotting/glass_brain_files/generate_json.sh')"
108,pull_request_commit_comment,245,nilearn,nilearn,lesteve,2014-12-03 10:02:18," The logic was there before me: an IndexError is caught and ignored when plotting slices. In this case data_2d will be None.

This is slicer-specific so this can probably be improved.
",88f70361a337a72718e3697a83d3a614ef7876be,"(None, '', u'nilearn/plotting/displays.py')"
109,pull_request_commit_comment,245,nilearn,nilearn,lesteve,2014-12-03 10:52:53,"This is a kludge that is only used to be able to get the alpha to percolate from img_plotting.plot_glass_brain to brain_glass.plot_brain_schematics. Eventually they get passed to the matplotlib patches of the brain schematics.

To be honest I am not sure we need alpha. The plots do look better with alpha=0.7 (which has been used for the most recent snapshots) but maybe we can achieve a similar effect by just tweaking the color of the lines in the svg.

**alpha=0.7**
![glass_brain_alpha_07](https://cloud.githubusercontent.com/assets/1680079/5279213/770ce332-7ae2-11e4-9b85-d9c94fb7d80d.png)

**alpha=1**
![glass_brain_alpha_1](https://cloud.githubusercontent.com/assets/1680079/5279241/d802030c-7ae2-11e4-8b05-da056d89f428.png)
",88f70361a337a72718e3697a83d3a614ef7876be,"(None, '', u'nilearn/plotting/displays.py')"
110,pull_request_commit_comment,245,nilearn,nilearn,lesteve,2014-12-03 13:52:24,"Done.
",88f70361a337a72718e3697a83d3a614ef7876be,"(5, '', u'nilearn/plotting/glass_brain.py')"
111,pull_request_commit_comment,245,nilearn,nilearn,lesteve,2014-12-03 13:52:34,"> A comment in this file saying what it does would be a good thing.

Done
",88f70361a337a72718e3697a83d3a614ef7876be,"(1, '', u'nilearn/plotting/glass_brain_files/generate_json.sh')"
112,pull_request_commit_comment,245,nilearn,nilearn,lesteve,2014-12-03 13:53:24,"> I'd like a module-level docstring here too :)

Done
",88f70361a337a72718e3697a83d3a614ef7876be,"(6, '', u'nilearn/plotting/glass_brain_files/plot_align_svg.py')"
113,pull_request_commit_comment,245,nilearn,nilearn,GaelVaroquaux,2014-12-03 13:54:33,"Merge when you feel ready!
",88f70361a337a72718e3697a83d3a614ef7876be,"(6, '', u'nilearn/plotting/glass_brain_files/plot_align_svg.py')"
114,pull_request_commit_comment,245,nilearn,nilearn,AlexandreAbraham,2014-12-03 15:38:34,"Not Python 3.
",88f70361a337a72718e3697a83d3a614ef7876be,"(443, '', u'nilearn/plotting/displays.py')"
115,pull_request_commit_comment,245,nilearn,nilearn,AlexandreAbraham,2014-12-03 15:40:10,"Deprecated.
",88f70361a337a72718e3697a83d3a614ef7876be,"(502, '', u'nilearn/plotting/displays.py')"
116,pull_request_commit_comment,245,nilearn,nilearn,AlexandreAbraham,2014-12-03 15:40:20,"Deprecated too.
",88f70361a337a72718e3697a83d3a614ef7876be,"(503, '', u'nilearn/plotting/displays.py')"
117,pull_request_commit_comment,245,nilearn,nilearn,AlexandreAbraham,2014-12-03 15:41:50,"Not Python 3
",88f70361a337a72718e3697a83d3a614ef7876be,"(542, '', u'nilearn/plotting/displays.py')"
118,pull_request_commit_comment,245,nilearn,nilearn,AlexandreAbraham,2014-12-03 16:17:53,"Why do you do that?
",88f70361a337a72718e3697a83d3a614ef7876be,"(13, '', u'nilearn/plotting/glass_brain_files/plot_align_svg.py')"
119,pull_request_commit_comment,245,nilearn,nilearn,lesteve,2014-12-03 17:29:26,"Probably the remains of using %run inside ipython to run the script repeatedly between incremental tweakings of the SVG alignment parameters. I can remove it. 
",88f70361a337a72718e3697a83d3a614ef7876be,"(13, '', u'nilearn/plotting/glass_brain_files/plot_align_svg.py')"
120,pull_request_commit_comment,245,nilearn,nilearn,lesteve,2014-12-03 17:37:56,"@eickenberg  ahah I didn't remember at all since that happened ages ago in this branch but I actually fixed the whish -> wish ...
",88f70361a337a72718e3697a83d3a614ef7876be,"(245, '', u'nilearn/plotting/displays.py')"
121,pull_request_commit,245,nilearn,nilearn,lesteve,2014-09-08 14:12:54,"First commit of glass brain related scripts

* svg_to_json_converter.py: exporter which leverages off https://github.com/cjlano/svg and exports the points of the paths in the svg to json
* brain_plotter.py: read from the exported json and plots on a matplotlib axes
* align_svg.py: script with by-hand alignment of the svg on top of the anatomy image",5856e7ca5078a0803024a0c3d11a57077758d3bb,
122,pull_request_commit,245,nilearn,nilearn,lesteve,2014-09-08 15:33:20,Added a README.md + simple bash script to generate the json files,e17cf3698afbc27590fe3fd135322eb0f02a9a48,
123,pull_request_commit,245,nilearn,nilearn,lesteve,2014-09-08 15:41:02,Removed svg folder,15c72369f14d3f9d1ffe297176e34ecc46a6ec6c,
124,pull_request_commit,245,nilearn,nilearn,lesteve,2014-09-09 15:27:59,Tiny markdown improvement,6c66244863327a4c50aff182025b4735bf822255,
125,pull_request_commit,245,nilearn,nilearn,lesteve,2014-09-26 07:41:24,First stab at implementing high-level function in img_plotting for glass brain visualisation,ef0687cd0391afc50405144313826273f0267057,
126,pull_request_commit,245,nilearn,nilearn,lesteve,2014-09-26 07:55:06,Remove stale comment,2fbcdfe9cee33bcd179bd080a40f74fe5aaf1d80,
127,pull_request_commit,245,nilearn,nilearn,lesteve,2014-09-26 09:57:14,Add demo for glass brain visualisation,724a4c45ebcbd9ba08cb107b4479f3b723251aa0,
128,pull_request_commit,245,nilearn,nilearn,lesteve,2014-09-26 11:34:15,"Rename align_svg.py to get the Travis tests to run

nose is trying to import align_svg.py which is trying to do plots and fail with an error like ""Failure: TclError (no display name and no $DISPLAY environment variable)""",16d0f8010a493a1e56bfca78991e889080582860,
129,pull_request_commit,245,nilearn,nilearn,lesteve,2014-09-26 12:07:11,Additional hack to get the Travis tests to run,90b73222f93740fcea14e489121fc20f5bf1e194,
130,pull_request_commit,245,nilearn,nilearn,lesteve,2014-09-26 12:26:06,"Move glass_brain_scripts inside plotting

Hoping that the backend magic in plotting/__init__.py will help for the Travis tests",e578705a787bac8ee2f69a2a0fca14d244a7e1b5,
131,pull_request_commit,245,nilearn,nilearn,lesteve,2014-09-26 12:27:46,glass_brain_scripts has been moved inside plotting. Also use generic location for json rather than the one on my machine,185404bd8512b32040419e3f9f14a7b0217bfece,
132,pull_request_commit,245,nilearn,nilearn,lesteve,2014-09-26 12:34:59,MAINT: remove unneeded svg_bak folder,f493f2702b9ddd4b5abe4b6699425c50e3a69932,
133,pull_request_commit,245,nilearn,nilearn,lesteve,2014-09-29 13:35:12,Brain schematics inverts its colors with a black background,e5df5b6255873d5414b0fff337738a2a18126633,
134,pull_request_commit,245,nilearn,nilearn,lesteve,2014-09-29 14:30:17,"Add svg bounds into the json document and update brain_plotter accordingly.

Regenerated the json documents.",0dbdfc8e8a9966290069af1a23c91dce3ed9a604,
135,pull_request_commit,245,nilearn,nilearn,lesteve,2014-09-29 14:36:08,Revert addition of object bounds margin and only use it when plotting brain schematics,8b8b22d8c927998ab6c6ce69f15cfb3c1a3e580c,
136,pull_request_commit,245,nilearn,nilearn,lesteve,2014-10-07 07:33:15,"Rename glass_brain_scripts to glass_brain and brain_plotter to brain_schematics.

Also tidied up brain_schematics a little bit",ffaa6609e1d0ea774b35888acfd4f0537ff2befa,
137,pull_request_commit,245,nilearn,nilearn,lesteve,2014-10-07 07:53:50,Move a few files to nilearn/plotting/glass_brain/scripts,29af2c3b49b61b289bbe5fa71acd0fed25ba7d2e,
138,pull_request_commit,245,nilearn,nilearn,lesteve,2014-10-07 08:57:43,"First stab at tidying up slicers.py and img_plotting.py

* Add BaseAxes as a common class to cut-based and projection-based Axes.
* Rename do_cut -> transform_2d and draw_cut -> draw
* Add OrthoProjector to display projections of 3D data. Add derived classes
to chose which directions to display.",b69ef471820f356e7d8579f899c196145c421bc1,
139,pull_request_commit,245,nilearn,nilearn,lesteve,2014-10-07 11:50:02,Add optional alpha argument to plot_glass_brain.,24a5838870940227bf7abb9704857b5467b88515,
140,pull_request_commit,245,nilearn,nilearn,lesteve,2014-10-08 07:16:55,"Reuse _plot_img_with_bg in plot_glass_brain

Also:
* tidied up plot_glass_brain parameters and documentation
* fix whish -> wish typo",1c25b857a3dce40df9a6bff48ca7a5d66dfec171,
141,pull_request_commit,245,nilearn,nilearn,lesteve,2014-10-08 07:35:45,Fix wrong class variable name,2d579577fe09b503097d0d85170d583695758d66,
142,pull_request_commit,245,nilearn,nilearn,lesteve,2014-10-08 08:49:44,"Move slice finding code to BaseStackedSlicer.find_cut_coords

cut_coords has been changed from 12 to 7 to mirror what the code was doing in img_plotting",d4098099ad13e5ac53db6e280041c66a783e748b,
143,pull_request_commit,245,nilearn,nilearn,lesteve,2014-10-08 14:06:10,"Flatten the glass brain related folders

* plotting.glass_brain.brain_schematics moved to plotting.glass_brain
* plotting/glass_brain/scripts/* moved to plotting/glass_brain_files",24e7bea54ab5a9b56f644c4578b228a14e8b5290,
144,pull_request_commit,245,nilearn,nilearn,lesteve,2014-10-09 13:09:01,Refactor nilearn.plotting.glass_brain to use functions,4b4c4c766cba58fba47db019070cca07e7591c79,
145,pull_request_commit,245,nilearn,nilearn,lesteve,2014-10-10 08:08:21,"Move the brain schematic plotting to the Axes rather than the display

A few methods needed **kwargs, so that additional arguments find their way
from img_plotting.plot_glass_brain to glass_brain.plot_brain_schematics in GlassBrainAxes.__init__",00cd6ad663a6f119134bbcbebc04726ffcb2e7e2,
146,pull_request_commit,245,nilearn,nilearn,lesteve,2014-10-10 08:25:43,"Update plot_align_svg.py now that add_brain_schematics has been removed from displays

Tweak it to use additional arguments to ease alignment + remove commented code",ad2dc036111193f373db88dacda35ed27adcc456,
147,pull_request_commit,245,nilearn,nilearn,lesteve,2014-10-10 09:47:55,Fix bug for display_mode != 'ortho',f5ec85bc64b3155bc07c47e1a8e9a13ce197373e,
148,pull_request_commit,245,nilearn,nilearn,lesteve,2014-10-10 11:52:41,"Minor renaming/tidy-up
* BaseAxes.draw -> BaseAxes.draw_2d
* cut_ax -> display_ax
* other minor changes",aca9483b329467da3039d5c44824d245810cae1e,
149,pull_request_commit,245,nilearn,nilearn,lesteve,2014-10-10 12:00:41,"Rename slicers.py -> displays.py
* Update doc to use display rather than slicer
* Update slicers imports",4ed433fad1b967fe120581de1c1646de9f0a0ca9,
150,pull_request_commit,245,nilearn,nilearn,lesteve,2014-10-10 13:16:03,PEP8 fix since since I touched this line,610ef8ac497c6742aee32b3deb9ad80d22d1f86d,
151,pull_request_commit,245,nilearn,nilearn,lesteve,2014-10-13 14:18:03,"Add tests for plot_glass_brain.
Also fix edge case bug when plotting the colorbar and the data has a single value",4a90f4632edab1fa93ee373af84502895a4aea1c,
152,pull_request_commit,245,nilearn,nilearn,lesteve,2014-10-16 15:48:43,"Remove colorbar from plot_glass_brain

Because we are summing along one axis the value does not mean much for example when you are summing z-values.
Also remove TODO comment",583784ddfdc206d2c501e2f266bd6449c5dd4b7e,
153,pull_request_commit,245,nilearn,nilearn,lesteve,2014-10-17 09:24:26,Add plot_glass_brain to nilearn.plotting,1720900108dc9634470477e558387c59b5c7e8a8,
154,pull_request_commit,245,nilearn,nilearn,lesteve,2014-10-17 09:31:33,"Add glass brain plot to plot_demo_plotting.py

Automatically generated figure names needed renaming since the glass
brain plot was inserted in the middle of plot_demo_plotting.py",a355f5a20b13399d3311f04125982a2c34047969,
155,pull_request_commit,245,nilearn,nilearn,lesteve,2014-10-17 11:04:56,"Add plot_glass_brain to documentation.

Needed to reformat the rst table in order to fit plot_glass_brain in the
first column",5ad6ff4fb8463a3b5f34a50bf3ef96aac5f25312,
156,pull_request_commit,245,nilearn,nilearn,lesteve,2014-10-20 13:23:07,Fix typo tran*s*form_2d,a5f4fb572f7dd23808630ee4a09aca2a4ac9af1e,
157,pull_request_commit,245,nilearn,nilearn,lesteve,2014-11-05 10:50:51,"Use max rather than sum along an axis

Analog to SPM maximum intensity projection",92c5f8ca6c53ad0883d8c566bfa4a3ce8e8348a3,
158,pull_request_commit,245,nilearn,nilearn,lesteve,2014-11-13 10:26:20,"vmin and vmax are determined by the 2d data min and max

rather than doing the min and max of the 3D volume",5e3cd5a9f1dfc0e320d3ff5a384505bf06904365,
159,pull_request_commit,245,nilearn,nilearn,lesteve,2014-11-13 10:48:16,"Add transparent color maps using the full alpha range

* Use it in the glass brain plot by default
* Minort tweaks in plot_glass_brain.py to use the default color map",5aa0a6a1fab6354a121e589009ca6f91250f9c63,
160,pull_request_commit,245,nilearn,nilearn,lesteve,2014-11-18 09:38:11,Removal of redundant if statement,31ce2c96d39eec8f539f7e400c43c9079f912933,
161,pull_request_commit,245,nilearn,nilearn,lesteve,2014-11-20 15:05:42,"The color should stay constant for transparent colormap

Otherwise the colormap goes gray towards the low alpha values",6cada3a43c7935be1b842e1f7854564d1f5a181d,
162,pull_request_commit,245,nilearn,nilearn,lesteve,2014-11-25 09:58:22,Use t-maps rather than contrasts in plot_glass_brain.py,7d17f985def68822fe0ac8b72a2d6b47bdc71d90,
163,pull_request_commit,245,nilearn,nilearn,lesteve,2014-11-27 14:12:38,Use max(abs(data)) for 2d projection rather than max(data),d4d51e4298a702057d48b5486eafe99161d13612,
164,pull_request_commit,245,nilearn,nilearn,lesteve,2014-11-27 14:42:27,"Change default plot_glass_brain colormap

depending on black_bg. Also black_bg default to False because 'auto' makes sense only
when plotting an anat. Updated plot_glass_brain.py accordingly.",f5ef98cc9bf6a2c49c3a6c539d83ab613243950b,
165,pull_request_commit,245,nilearn,nilearn,lesteve,2014-11-28 09:34:37,"Simplified glass brain SVGs

- Only three kind of stroke-widths: 1.2, 2.5, 3
- Did some ungrouping in brain_schematics_top.svg
- Regenerated JSONs",66dfaa4e1ad4977ded3492e19d500a9d0f178a82,
166,pull_request_commit,245,nilearn,nilearn,lesteve,2014-11-28 09:41:24,"Remove invisible path

in brain_schematics_top.svg. Regenerated JSON",9f011d7996d4c3c46020febbcfc4726ac2fb36fb,
167,pull_request_commit,245,nilearn,nilearn,lesteve,2014-11-28 09:52:04,"Thiner lines in the glass brain SVGs

and regenerated JSONs",4e1a37bf37ef0c5933d634d8423ea324beaf8177,
168,pull_request_commit,245,nilearn,nilearn,lesteve,2014-11-28 12:03:50,Use auto threshold for glass brain,927fa06de0a561b4561d1056d76bd6e4ad183779,
169,pull_request_commit,245,nilearn,nilearn,lesteve,2014-11-28 12:26:55,Tweak glass brain example in plot_demo_plotting.py,c2a6bf9f01436500053be7db857db6c1d4ded6b4,
170,pull_request_commit,245,nilearn,nilearn,lesteve,2014-12-02 08:41:42,Add inferior temporal sulcus,7bcf1a2e04b41e7f9b9b54e32799e4521cb2dae9,
171,pull_request_commit,245,nilearn,nilearn,lesteve,2014-12-03 08:58:11,Rename some lingering slicer to display,8a42985efed7eb736cabf03307ac298ef7a81521,
172,pull_request_commit,245,nilearn,nilearn,lesteve,2014-12-03 09:11:56,Fix max instead of min typo in auto vmin logic,9c8f0b6539f9d855319912c6450fefb01ef94ad3,
173,pull_request_commit,245,nilearn,nilearn,lesteve,2014-12-03 09:50:50,"Cosmits

* transform_2d -> transform_to_2d
* axes_class -> _axes_class
* other minor stuff",f37072bba78c1dc71b40df5bca3a149d92fa32ee,
174,pull_request_commit,245,nilearn,nilearn,lesteve,2014-12-03 10:14:15,Add module docstrings,3e25fe601c65acc83cf526194f93570560697ce9,
175,pull_request_commit,245,nilearn,nilearn,lesteve,2014-12-03 10:21:34,"Document more parameters in _plot_img_with_bg

Also:
* create_display_fun renamed to display_factory
* removed unused import
* PEP8 fix",d97191733c787f7f41dad97536f80f51209a7466,
176,pull_request_commit,245,nilearn,nilearn,lesteve,2014-12-03 12:37:30,Added OrthoProjector smoke test,71c81114f16817bc6717038bd5aaba38461ff740,
177,pull_request_commit,245,nilearn,nilearn,lesteve,2014-12-03 12:59:11,"Add anatomy in plot_align_svg.py

Also other minor tweaks",4db09951b571a122f86cfc6b68282a3d9337bcd8,
178,pull_request_commit,245,nilearn,nilearn,lesteve,2014-12-04 12:50:48,"Explicitly say that input data needs to be in MNI space

in plot_glass_brain in order to be aligned with brain schematics",bc75c30fdd9f2d6de383c4cdad64a545a91709e8,
179,pull_request_commit,245,nilearn,nilearn,lesteve,2014-12-04 12:51:54,"Use alpha=0.7 by default for the brain schematics

This is the value that was used in all the latest screen snapshots from the PR",a58cc1507492ee687b8862a7b7251b0e10d0ad94,
180,pull_request_commit,245,nilearn,nilearn,lesteve,2014-12-04 12:59:24,"Remove plot_glass_brain.py

This script was mostly useful to produce the snapshots in the PR",88f70361a337a72718e3697a83d3a614ef7876be,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,250,nilearn,nilearn,lesteve,2014-10-01 14:08:43,"This was causing 

``` python
from nilearn.image import *
```

 to fail with:
`AttributeError: 'module' object has no attribute 'reorder_img'`
",start issue,Add missing reorder_img import
2,issue_closed,250,nilearn,nilearn,GaelVaroquaux,2014-10-01 14:54:13,,closed issue,Add missing reorder_img import
3,pull_request_title,250,nilearn,nilearn,lesteve,2014-10-01 14:08:43,"This was causing 

``` python
from nilearn.image import *
```

 to fail with:
`AttributeError: 'module' object has no attribute 'reorder_img'`
",6c064f67e9d064ee4f73016a5884de3beebf0af6,Add missing reorder_img import
4,pull_request_merged,250,nilearn,nilearn,GaelVaroquaux,2014-10-01 14:54:13,Add missing reorder_img import,9c2ed2c7788def1911e27c635142bc930ade7958,Pull request merge from lesteve/nilearn:missing-reorder-img-import to nilearn/nilearn:master
5,pull_request_commit,250,nilearn,nilearn,lesteve,2014-10-01 14:38:05,"Add missing reorder_img import

This was causing 'from nilearn.image import *' to fail with
AttributeError: 'module' object has no attribute 'reorder_img'",6c064f67e9d064ee4f73016a5884de3beebf0af6,
