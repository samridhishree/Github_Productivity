"rectype","issueid","project_owner","project_name","actor","time","text","action","title"
"issue_title","262","idan","oauthlib","ryanhiebert","2014-09-04 04:08:47","In certain cases a provider may wish to verify the signature of an
oauth request without doing anything more with it. Learning Tools
Interoperability (LTI), for example, uses ""0-legged OAuth"" for it's
signature verification process.

http://www.imsglobal.org/lti/
http://andyfmiller.com/2013/02/10/does-lti-use-oauth/

This adds a new `GenericEndpoint` that implements only the client
validation and signature verification, and leaves off the other
parts that would need to be validated.
","start issue","Create Generic OAuth1 Endpoint"
"issue_closed","262","idan","oauthlib","ib-lundgren","2014-09-12 12:40:08","","closed issue","Create Generic OAuth1 Endpoint"
"pull_request_title","262","idan","oauthlib","ryanhiebert","2014-09-04 04:08:47","In certain cases a provider may wish to verify the signature of an
oauth request without doing anything more with it. Learning Tools
Interoperability (LTI), for example, uses ""0-legged OAuth"" for it's
signature verification process.

http://www.imsglobal.org/lti/
http://andyfmiller.com/2013/02/10/does-lti-use-oauth/

This adds a new `GenericEndpoint` that implements only the client
validation and signature verification, and leaves off the other
parts that would need to be validated.
","988d08284989226577d30ae07550278dbf50d751","Create Generic OAuth1 Endpoint"
"pull_request_merged","262","idan","oauthlib","ib-lundgren","2014-09-12 12:40:08","Create Generic OAuth1 Endpoint","4179e4a6716b6411cdc82e02e8bac799e8467323","Pull request merge from ryanhiebert/oauthlib:oauth1-generic to idan/oauthlib:master"
"issue_comment","262","idan","oauthlib","ib-lundgren","2014-09-11 13:03:33","Sounds reasonable :) 

I think ""GenericEndpoint"" is a bit too vague, maybe call it ""SignatureOnlyEndpoint"" or something similar?
","",""
"issue_comment","262","idan","oauthlib","ryanhiebert","2014-09-11 15:25:26","Sounds good. I'll push a new commit shortly.
","",""
"pull_request_commit_comment","262","idan","oauthlib","ib-lundgren","2014-09-12 10:12:01","This is meant to check whether the client is registered and valid. While not a bad idea for this type of endpoint it is slightly more than just checking the signature. Was this what you intended? If so I'm happy to merge.
","988d08284989226577d30ae07550278dbf50d751","(54, '', u'oauthlib/oauth1/rfc5849/endpoints/signature_only.py')"
"pull_request_commit_comment","262","idan","oauthlib","ryanhiebert","2014-09-12 12:32:03","It is what I intended. For LTI, which is driving this endpoint, it would (almost) always to make sense to check the client key. Obviously, we can't have a secret without a key, so the key needs to be registered.

The operations seems common enough, even for a 0-legged case, that I think that it would be strange if it were not checked the same way as for the other endpoints that use the client key.
","988d08284989226577d30ae07550278dbf50d751","(54, '', u'oauthlib/oauth1/rfc5849/endpoints/signature_only.py')"
"pull_request_commit","262","idan","oauthlib","ryanhiebert","2014-09-04 03:57:14","Create Signature Only OAuth1 Endpoint

In certain cases a provider may wish to verify the signature of an
oauth request without doing anything more with it. Learning Tools
Interoperability (LTI), for example, uses ""0-legged OAuth"" for it's
signature verification process.

http://www.imsglobal.org/lti/
http://andyfmiller.com/2013/02/10/does-lti-use-oauth/

This adds a new ``SignatureOnlyEndpoint`` that implements only the
client validation and signature verification, and leaves off the other
parts that would need to be validated.","988d08284989226577d30ae07550278dbf50d751",""
