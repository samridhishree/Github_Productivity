"rectype","issueid","project_owner","project_name","actor","time","text","action","title"
"issue_title","309","pycqa","astroid","ceridwen","2016-01-16 05:04:38","The basic idea is to recursively test that two ASTs are the same by checking that, all the way down to the leaves, that their components are equal.  The implementation would probably look something like:

``` python
def __eq__(self, other):
  if type(self) is type(other):
    return all(getattr(self, f) == getattr(self, other) for f in self._astroid_fields) and all(getattr(self, f) == getattr(self, other) for f in self._other_fields)
  else:
    return False
```

The main reason I want this is for testing.  For instance, I'd like to verify that after a specified set of zipper method calls, the AST I end up with is still the same as the AST I started with.
","start issue","Add structural equality methods to AST nodes for testing"
"issue_closed","309","pycqa","astroid","ceridwen","2016-01-25 00:07:15","","closed issue","Add structural equality methods to AST nodes for testing"
"issue_comment","309","pycqa","astroid","ceridwen","2016-01-25 00:07:15","Added in 468b9d03 in the zipper branch.
","",""
