"rectype","issueid","project_owner","project_name","actor","time","text","action","title"
"issue_title","866","nilearn","nilearn","GaelVaroquaux","2015-12-02 10:31:22","We should add globbing to nilearn._utils.niimg_conversions._iter_check_niimg

We should also add a specific error message to this function when the list is empty raising a valueerror saying explicitly that an empty list was given.
","start issue","Add globbing to nilearn._utils.niimg_conversions._iter_check_niimg"
"issue_closed","866","nilearn","nilearn","AlexandreAbraham","2015-12-10 13:24:46","","closed issue","Add globbing to nilearn._utils.niimg_conversions._iter_check_niimg"
"issue_comment","866","nilearn","nilearn","aabadie","2015-12-03 08:42:50","> Thinking about it, what is wrong with nilearn._utils.check_niimg('~/*.nii', return_iterator=True) or its check_niimg_4d equivalent?

`_iter_check_niimg` also do some resampling if needed.
","",""
"issue_comment","866","nilearn","nilearn","GaelVaroquaux","2015-12-03 08:45:18","> Thinking about it, what is wrong with nilearn._utils.check_niimg('~/*.nii',
> return_iterator=True) or its check_niimg_4d equivalent?

You are however right that we need to add seealsos in the docstring of
these guys. Seealsos are useful for developers, not only for users, as I
had not in mind the equivalence between these guys.
","",""
"issue_comment","866","nilearn","nilearn","aabadie","2015-12-03 08:46:37","> You are however right that we need to add seealsos in the docstring of these guys. Seealsos are useful for developers, not only for users, as I had not in mind the equivalence between these guys.

Should this be added to the corresponding PR? 
","",""
"issue_comment","866","nilearn","nilearn","GaelVaroquaux","2015-12-03 08:47:29","> Should this be added to the corresponding PR?

I think that it would be great. I would certainly make the codebase
better.
","",""
"issue_comment","866","nilearn","nilearn","lesteve","2015-12-03 10:34:44","Can we try to have the discussion only in only one place about `_iter_check_niimg` vs `check_niimg(..., return_iterator=True)`, i.e. the associated PR.
","",""
"issue_comment","866","nilearn","nilearn","aabadie","2015-12-03 10:35:30","> Can we try to have the discussion only in only one place

+1
","",""
"issue_comment","866","nilearn","nilearn","GaelVaroquaux","2015-12-03 10:36:31","I'd rather simply not have this discussion now, and focus on releasing the
0.2.
","",""
"issue_comment","866","nilearn","nilearn","lesteve","2015-12-03 10:41:53","> I'd rather simply not have this discussion now, and focus on releasing the 0.2.

Same thing.
","",""
"issue_comment","866","nilearn","nilearn","lesteve","2015-12-02 18:27:05","Thinking about it, what is wrong with `nilearn._utils.check_niimg('~/*.nii', return_iterator=True)` or its check_niimg_4d equivalent?
","",""
