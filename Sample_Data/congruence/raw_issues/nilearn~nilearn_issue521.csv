"rectype","issueid","project_owner","project_name","actor","time","text","action","title"
"issue_title","521","nilearn","nilearn","AlexandreAbraham","2015-03-24 08:33:32","This PR fixes some bugs in the dataset downloader:
- resuming in general (broken since python3 PR)
- resuming broken for some servers (those who don't comply with standard HTTP error)
- downloading of files with no name (they are named after a md5 hash of the URL)
","start issue","Url opener"
"issue_closed","521","nilearn","nilearn","AlexandreAbraham","2015-03-25 14:54:04","","closed issue","Url opener"
"pull_request_title","521","nilearn","nilearn","AlexandreAbraham","2015-03-24 08:33:32","This PR fixes some bugs in the dataset downloader:
- resuming in general (broken since python3 PR)
- resuming broken for some servers (those who don't comply with standard HTTP error)
- downloading of files with no name (they are named after a md5 hash of the URL)
","24862fdaf7c69a653593880caba676bda00b79a4","Url opener"
"pull_request_merged","521","nilearn","nilearn","AlexandreAbraham","2015-03-25 14:54:04","Url opener","6b8aadf905cfead557a0b7b63f627371725121f9","Pull request merge from AlexandreAbraham/nilearn:url_opener to nilearn/nilearn:master"
"issue_comment","521","nilearn","nilearn","AlexandreAbraham","2015-03-25 14:54:12","Merging because this is kind of urgent if people are using it. Please open issues for additional comments (if needed).
","",""
"pull_request_commit_comment","521","nilearn","nilearn","banilo","2015-03-24 11:55:28","Is there no way to combine the two md5_hash() functions with an option for UNICODE or not?
","24862fdaf7c69a653593880caba676bda00b79a4","(25, '', u'nilearn/_utils/compat.py')"
"pull_request_commit_comment","521","nilearn","nilearn","banilo","2015-03-24 11:57:54","""for special behaviors."" might be obscure to some users
","24862fdaf7c69a653593880caba676bda00b79a4","(None, '', u'nilearn/datasets.py')"
"pull_request_commit_comment","521","nilearn","nilearn","banilo","2015-03-24 12:00:19","I am perhaps wrong on this one, but I thought that checking whether a string is empty is most elegantly done by `not` operator.
","24862fdaf7c69a653593880caba676bda00b79a4","(61, '', u'nilearn/datasets.py')"
"pull_request_commit_comment","521","nilearn","nilearn","banilo","2015-03-24 12:01:47","grammar
","24862fdaf7c69a653593880caba676bda00b79a4","(None, '', u'nilearn/datasets.py')"
"pull_request_commit_comment","521","nilearn","nilearn","GaelVaroquaux","2015-03-24 12:02:01","> I am perhaps wrong on this one, but I thought that checking whether a
> string is empty is most elegantly done by not operator.

But if the users passed something that is not a string, it will blow in a
strange way.
","24862fdaf7c69a653593880caba676bda00b79a4","(61, '', u'nilearn/datasets.py')"
"pull_request_commit_comment","521","nilearn","nilearn","AlexandreAbraham","2015-03-24 12:03:53","This is doable although I find more clear to have a separation between python2 and python3 code.
","24862fdaf7c69a653593880caba676bda00b79a4","(25, '', u'nilearn/_utils/compat.py')"
"pull_request_commit_comment","521","nilearn","nilearn","banilo","2015-03-24 12:04:44","Could this 2/3-python-distinction be done inside a single function?
","24862fdaf7c69a653593880caba676bda00b79a4","(25, '', u'nilearn/_utils/compat.py')"
"pull_request_commit_comment","521","nilearn","nilearn","AlexandreAbraham","2015-03-24 12:07:53","Oh, you noticed that I don't want people to look into that? :P.
Fixed.
","24862fdaf7c69a653593880caba676bda00b79a4","(None, '', u'nilearn/datasets.py')"
"pull_request_commit_comment","521","nilearn","nilearn","AlexandreAbraham","2015-03-24 12:09:28","Actually we already know that the variable is a string (see call to `basename` above). But I must admit that I don't like to write `if file_name:`. Reminds me of C code.
","24862fdaf7c69a653593880caba676bda00b79a4","(61, '', u'nilearn/datasets.py')"
"pull_request_commit_comment","521","nilearn","nilearn","AlexandreAbraham","2015-03-24 12:10:56","Fixed.
","24862fdaf7c69a653593880caba676bda00b79a4","(None, '', u'nilearn/datasets.py')"
"pull_request_commit_comment","521","nilearn","nilearn","GaelVaroquaux","2015-03-24 12:11:02","> But I must admit that I don't like to write if file_name:. Reminds me
> of C code.

I agree. I find that what you wrote is more readable.
","24862fdaf7c69a653593880caba676bda00b79a4","(61, '', u'nilearn/datasets.py')"
"pull_request_commit_comment","521","nilearn","nilearn","AlexandreAbraham","2015-03-24 12:17:30","Yes, this is doable although I find more clear to have a separation between python2 and python3 code.
","24862fdaf7c69a653593880caba676bda00b79a4","(25, '', u'nilearn/_utils/compat.py')"
"pull_request_commit","521","nilearn","nilearn","AlexandreAbraham","2015-03-23 13:36:53","Fix resuming problem. Increase robustness.","c90df18f08e5559c60ceac3366b8b13443a54e60",""
"pull_request_commit","521","nilearn","nilearn","AlexandreAbraham","2015-03-24 08:26:44","Handle download of files with no name.","57626d39809519f5150c9ab4f4a8638de1e2d2b3",""
"pull_request_commit","521","nilearn","nilearn","AlexandreAbraham","2015-03-24 08:34:11","Remove unnecessary change","dc220f491a34ecc2c72702402b5ffc75da6f9113",""
"pull_request_commit","521","nilearn","nilearn","AlexandreAbraham","2015-03-24 12:11:01","Fix danilo's comments","a943a7e41457327e3fa4f2e56adfdea96a893d1a",""
"pull_request_commit","521","nilearn","nilearn","AlexandreAbraham","2015-03-24 13:36:39","Fix tests","24862fdaf7c69a653593880caba676bda00b79a4",""
