"rectype","issueid","project_owner","project_name","actor","time","text","action","title"
"issue_title","458","idan","oauthlib","hoylen","2017-01-20 06:03:34","Updated documentation so it is clear that PyJWT (and not any jwt library) is needed. Corrected ""pip install"" command to install ""pyjwt"" instead of ""jwt"".

Added more information to the `NotImplemented` exception messages. Instead of saying ""Subclasses must implement this function"", it is now more useful because it says ""Missing function implementation in className: nameOfMissingFunction"".

Extra logging has been added to help in debugging. During development, the _signature base string_ signed by the client may be different from the one independently calculated by the server: logging these string helps debug such problems.

In _oauthlib/oauth1/rfc5849/endpoints/signature_only.py_ exceptions are caught and then False is simply returned. The details in those exceptions are useful for debugging what went wrong. Their values are now logged, rather than simply discarded.","start issue","Documented PyJWT dependency and improved logging and exception messages"
"issue_closed","458","idan","oauthlib","thedrow","2017-08-02 09:03:18","","closed issue","Documented PyJWT dependency and improved logging and exception messages"
"pull_request_title","458","idan","oauthlib","hoylen","2017-01-20 06:03:34","Updated documentation so it is clear that PyJWT (and not any jwt library) is needed. Corrected ""pip install"" command to install ""pyjwt"" instead of ""jwt"".

Added more information to the `NotImplemented` exception messages. Instead of saying ""Subclasses must implement this function"", it is now more useful because it says ""Missing function implementation in className: nameOfMissingFunction"".

Extra logging has been added to help in debugging. During development, the _signature base string_ signed by the client may be different from the one independently calculated by the server: logging these string helps debug such problems.

In _oauthlib/oauth1/rfc5849/endpoints/signature_only.py_ exceptions are caught and then False is simply returned. The details in those exceptions are useful for debugging what went wrong. Their values are now logged, rather than simply discarded.","46230575731178b69956debfd40371d26bbd3bf3","Documented PyJWT dependency and improved logging and exception messages"
"pull_request_merged","458","idan","oauthlib","thedrow","2017-08-02 09:03:18","Documented PyJWT dependency and improved logging and exception messages","612ac5b0f606e689b86d6918884391cb8e07c060","Pull request merge from hoylen/oauthlib:doc-edits to idan/oauthlib:master"
"issue_comment","458","idan","oauthlib","thedrow","2017-07-31 10:25:47","Can you please rebase this branch?","",""
"issue_comment","458","idan","oauthlib","thedrow","2017-08-01 08:12:49","Looks like the rebase went really wrong here. Can you try again?","",""
"issue_comment","458","idan","oauthlib","hoylen","2017-08-01 08:27:47","Are you referring to the red cross next to 13387a4? There was a bug in my code, so it was failing the automatic checks. That was then fixed in b3f4cb9.","",""
"issue_comment","458","idan","oauthlib","thedrow","2017-08-01 10:13:31","I'm referring to the entire code history in this PR that isn't related. See https://github.com/idan/oauthlib/pull/458#commits-pushed-bf2f9db","",""
"issue_comment","458","idan","oauthlib","hoylen","2017-08-01 12:38:12","Done. This should be better.","",""
"issue_comment","458","idan","oauthlib","thedrow","2017-08-02 09:03:23","Thanks!","",""
"pull_request_commit_comment","458","idan","oauthlib","thedrow","2017-07-30 06:56:22","Why did you change this?","46230575731178b69956debfd40371d26bbd3bf3","(5, '', u'docs/oauth1/server.rst')"
"pull_request_commit_comment","458","idan","oauthlib","hoylen","2017-07-30 08:22:08","Because OAuthLib has dependencies, so it is not ""dependency free"". The description of ""dependency free"" would mean it does not need any other package to run. OAuthLib (as indicated in the _requirements.txt_ file) needs PyJWT, blinker and cryptography packages to function.

I'm trying to guess what the original author really meant, and assume they meant to say it can be used with any framework (e.g. doesn't have to be Django) rather than ""dependency free"" (which it is clearly not, since it has dependencies).","46230575731178b69956debfd40371d26bbd3bf3","(5, '', u'docs/oauth1/server.rst')"
"pull_request_commit","458","idan","oauthlib","hoylen","2017-01-16 00:01:32","Documented PyJWT dependency for RSA-SHA1 signatures.","9628f3d24a2e9777bccf24115b123eea3e9eb74c",""
"pull_request_commit","458","idan","oauthlib","hoylen","2017-01-16 04:48:00","Extra logging for verification failures.","3865fa8ec208fb927615530854348d414a3cc1a4",""
"pull_request_commit","458","idan","oauthlib","hoylen","2017-01-18 04:06:28","Include function names for NotImplementedError exceptions.","5c05aa0fe0d9277acf557eb243c8164c8695a391",""
"pull_request_commit","458","idan","oauthlib","hoylen","2017-01-20 05:47:56","Extra logging for verifying signatures.","f30123a4705730e686bc9ae9284f3cb22d63ff84",""
"pull_request_commit","458","idan","oauthlib","hoylen","2017-01-26 00:55:42","Only log signature base string when verification fails.","0c7c8fb2e0e331d7e1460f2c6476a425abf395eb",""
"pull_request_commit","458","idan","oauthlib","hoylen","2017-08-01 01:45:36","Extra logging if verification fails because of timestamp/nonce.","8f6f6c3fcd734119caba4539da70a9ba798f3cf7",""
"pull_request_commit","458","idan","oauthlib","hoylen","2017-08-01 05:26:04","Fixed default get_default_realms to raise NotImplementedError.","46230575731178b69956debfd40371d26bbd3bf3",""
