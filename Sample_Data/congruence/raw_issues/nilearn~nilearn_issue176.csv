"rectype","issueid","project_owner","project_name","actor","time","text","action","title"
"issue_title","176","nilearn","nilearn","VirgileFritsch","2014-03-26 09:59:08","The API of mass univariate models should make it possible to specify contrasts to be tested. The actual code can be hacked (modification of the input design) to obtain the same results but this is not convenient/efficient.
However, including a contrast in the current code would result at least in `n_perm` supplementary calls to the `np.dot` function, which is actually the bottleneck of the code. I am afraid this would considerably slow the code down. Regarding that the main use-case remains fitting and testing several tested variates independently, I wonder if allowing the user to provide contrasts is a good idea after all.

Contrasts testing would also require to put back the F-test (while the t-test should remain available since it can perform one-sided tests). This would increase the code size and make it more difficult to maintain.

I think this is a tricky contribution that needs to be discussed carefully before any implementation attempt.
","start issue","[ENH] Contrasts testing"
"issue_comment","176","nilearn","nilearn","GaelVaroquaux","2014-04-09 08:12:18","@VirgileFritsch (and all others): could you label such an issue as enhancement (doing it for you) and in general make sure to put appropriate labels, so that we don't drown in issues.
","",""
"issue_comment","176","nilearn","nilearn","AlexandreAbraham","2015-04-17 07:45:09","What do we do about this one?
","",""
"issue_comment","176","nilearn","nilearn","bthirion","2015-04-17 09:56:47","My understanding is that this part of the codebase is a bit peripheral.  With the forthcoming development of a (say) nistats package, we probably want to avoid developing the contrasts algebra within nilearn. I would thus close it.
","",""
