,rectype,issueid,project_owner,project_name,actor,time,text,action,title
0,issue_title,353,idan,oauthlib,myyang,2015-07-01 15:27:52,"- Fix and remove missing attribute: _client in prepare_refresh_token_request()
- Add testcase for prepare_refresh_token_request()
",start issue,Fix and remove missing attribute: _client
1,issue_closed,353,idan,oauthlib,myyang,2015-07-01 15:28:58,,closed issue,Fix and remove missing attribute: _client
2,pull_request_title,353,idan,oauthlib,myyang,2015-07-01 15:27:52,"- Fix and remove missing attribute: _client in prepare_refresh_token_request()
- Add testcase for prepare_refresh_token_request()
",8b10c3375669ceae3dc26f23faf024542e2bcbae,Fix and remove missing attribute: _client
3,issue_comment,353,idan,oauthlib,thedrow,2015-07-01 15:32:53,"Why did you close the PR?
",,
4,issue_comment,353,idan,oauthlib,myyang,2015-07-01 15:37:11,"I deleted another testcase occasionally, so I close PR and try to fix it.
",,
5,pull_request_commit,353,idan,oauthlib,myyang,2015-07-01 15:11:41,"Fix and remove missing attribute: _client

* Fix and remove missing attribute: _client in prepare_refresh_token_request()
* Add testcase for prepare_refresh_token_request()",8b10c3375669ceae3dc26f23faf024542e2bcbae,
0,issue_title,351,idan,oauthlib,myyang,2015-06-29 15:20:11,"- Fix redirect_url typo in prepare_authorization_request()
- Exception testing in test_base.py
- Functionality testing in test_web_application.py
",start issue,Fix redirect_url typo and add test cases for function.
1,issue_closed,351,idan,oauthlib,thedrow,2015-07-01 09:42:36,,closed issue,Fix redirect_url typo and add test cases for function.
2,pull_request_title,351,idan,oauthlib,myyang,2015-06-29 15:20:11,"- Fix redirect_url typo in prepare_authorization_request()
- Exception testing in test_base.py
- Functionality testing in test_web_application.py
",d13ec31886b35dfec28231da05e1d8b545dc26a2,Fix redirect_url typo and add test cases for function.
3,pull_request_merged,351,idan,oauthlib,thedrow,2015-07-01 09:42:36,Fix redirect_url typo and add test cases for function.,04a25a3cb01578ab8305ad486d57bc60cfd318be,Pull request merge from Unknown:fix_typo to idan/oauthlib:master
4,issue_comment,351,idan,oauthlib,thedrow,2015-07-01 09:42:43,"Thanks!
",,
5,pull_request_commit,351,idan,oauthlib,myyang,2015-06-29 15:00:55,"Fix redirect_url typo and add test cases for function.

* Fix redirect_url typo in prepare_authorization_request()
* Exception testing in test_base.py
* Functionality testing in test_web_application.py",d13ec31886b35dfec28231da05e1d8b545dc26a2,
0,issue_title,350,idan,oauthlib,cheif,2015-06-26 13:51:59,"We've had a issue where a trailing & on the query string 500:s the server. This PR returns a 400 instead on un-parseable query strings.
",start issue,Handle empty/non-parsable query strings
1,issue_closed,350,idan,oauthlib,thedrow,2015-07-01 11:27:56,,closed issue,Handle empty/non-parsable query strings
2,pull_request_title,350,idan,oauthlib,cheif,2015-06-26 13:51:59,"We've had a issue where a trailing & on the query string 500:s the server. This PR returns a 400 instead on un-parseable query strings.
",6a4351461304508203ca9eb522cfa055e8831020,Handle empty/non-parsable query strings
3,pull_request_merged,350,idan,oauthlib,thedrow,2015-07-01 11:27:56,Handle empty/non-parsable query strings,e5631a9befd5baa42acf830dfc8de59133403edf,Pull request merge from cheif/oauthlib:master to idan/oauthlib:master
4,issue_comment,350,idan,oauthlib,thedrow,2015-07-01 11:28:01,"Thanks!
",,
5,pull_request_commit,350,idan,oauthlib,cheif,2015-06-26 13:48:33,Handle empty/non-parsable query strings,6a4351461304508203ca9eb522cfa055e8831020,
0,issue_title,336,idan,oauthlib,josephtate,2015-04-13 16:22:13,"This is a really simple change to allow scopes to be specified as a tuple of strings instead of just lists and sets. Test included.
",start issue,Allow tuples for list_to_scope as well as sets and lists
1,issue_closed,336,idan,oauthlib,thedrow,2015-07-01 09:47:07,,closed issue,Allow tuples for list_to_scope as well as sets and lists
2,pull_request_title,336,idan,oauthlib,josephtate,2015-04-13 16:22:13,"This is a really simple change to allow scopes to be specified as a tuple of strings instead of just lists and sets. Test included.
",a41f4fb4d26995bcadfc26540ad84a84b0e10e0d,Allow tuples for list_to_scope as well as sets and lists
3,pull_request_merged,336,idan,oauthlib,thedrow,2015-07-01 09:47:07,Allow tuples for list_to_scope as well as sets and lists,73978a373d5d2e6e90b1c93f078c9bf872eae472,Pull request merge from josephtate/oauthlib:betterscopesupport to idan/oauthlib:master
4,issue_comment,336,idan,oauthlib,josephtate,2015-04-14 17:21:28,"Note, this change is covered with unit tests.
",,
5,issue_comment,336,idan,oauthlib,tilgovi,2015-04-19 19:18:54,"Closed by #322?
",,
6,issue_comment,336,idan,oauthlib,josephtate,2015-04-20 02:41:22,"Not quite. There is a bit more here. This patch is authoritative.
On Apr 19, 2015 3:18 PM, ""Randall Leeds"" notifications@github.com wrote:

> Closed by #322 https://github.com/idan/oauthlib/pull/322?
> 
> â€”
> Reply to this email directly or view it on GitHub
> https://github.com/idan/oauthlib/pull/336#issuecomment-94306678.
",,
7,issue_comment,336,idan,oauthlib,josephtate,2015-04-20 07:37:29,"Remerged after conflicts when #323 landed.
",,
8,issue_comment,336,idan,oauthlib,josephtate,2015-05-06 21:28:23,"@tilgovi, or anyone, can I get a LGTM?
",,
9,issue_comment,336,idan,oauthlib,tilgovi,2015-05-06 21:42:58,"Yes. Looks straightforward.
",,
10,issue_comment,336,idan,oauthlib,thedrow,2015-07-01 09:47:12,"Thanks!
",,
11,pull_request_commit,336,idan,oauthlib,josephtate,2015-04-13 16:20:27,"Allow tuples for list_to_scope and scope_to_list in addition to sets and lists.  Treat sets the same as lists/tuples instead of recursing, add tests for sets.",1be2f1cde1ee003d33f5445bb60642801ff7102b,
12,pull_request_commit,336,idan,oauthlib,josephtate,2015-04-16 14:25:22,"Add the broken scope to the ValueError exception for easier debugging, add test for failure case.",a41f4fb4d26995bcadfc26540ad84a84b0e10e0d,
0,issue_title,343,idan,oauthlib,thegeorgeous,2015-05-19 12:30:57,"Fixed indentation for Request Validator example
",start issue,Fixed indentation
1,issue_closed,343,idan,oauthlib,thedrow,2015-07-01 09:41:14,,closed issue,Fixed indentation
2,pull_request_title,343,idan,oauthlib,thegeorgeous,2015-05-19 12:30:57,"Fixed indentation for Request Validator example
",5df345756917d970275e2b211065e35ad309c280,Fixed indentation
3,issue_comment,343,idan,oauthlib,jcbohin,2015-06-23 07:41:34,"dup with #349
",,
4,issue_comment,343,idan,oauthlib,foxx,2015-06-23 09:14:19,"@idan Could you possibly spend a few minutes going over some of these more smaller issues? The issue backlog is almost 50 strong at the moment, with some having no contributor response for over a month :/
",,
5,issue_comment,343,idan,oauthlib,thedrow,2015-07-01 09:41:14,"Closing this for #349 since it contains more indentation fixes.
",,
6,pull_request_commit,343,idan,oauthlib,incredibleguy88@gmail.com,2015-05-19 12:29:59,"Fixed indentation

Fixed indentation for Request Validator example",5df345756917d970275e2b211065e35ad309c280,
0,issue_title,352,idan,oauthlib,ib-lundgren,2015-07-01 10:42:27,"Per http://docs.travis-ci.com/user/deployment/pypi/ using travis setup pypi.

The indentation got clobbered by the travis tool. I don't have strong feelings either way.
",start issue,"Travis deploy to PyPI on github tag. #333, #346."
1,issue_closed,352,idan,oauthlib,thedrow,2015-07-01 11:29:21,,closed issue,"Travis deploy to PyPI on github tag. #333, #346."
2,pull_request_title,352,idan,oauthlib,ib-lundgren,2015-07-01 10:42:27,"Per http://docs.travis-ci.com/user/deployment/pypi/ using travis setup pypi.

The indentation got clobbered by the travis tool. I don't have strong feelings either way.
",4149010e856fcd03ae7833d66953c130898122cc,"Travis deploy to PyPI on github tag. #333, #346."
3,pull_request_merged,352,idan,oauthlib,thedrow,2015-07-01 11:29:21,"Travis deploy to PyPI on github tag. #333, #346.",2e21c454621d773b92552304a83fe040e9a93c4d,Pull request merge from idan/oauthlib:travis_deploy to idan/oauthlib:master
4,issue_comment,352,idan,oauthlib,thedrow,2015-07-01 11:29:29,"Wonderful. Thank you.
",,
5,pull_request_commit,352,idan,oauthlib,ib-lundgren,2015-07-01 10:36:51,"Travis deploy to PyPI on github tag. #333, #346.",4149010e856fcd03ae7833d66953c130898122cc,
0,issue_title,354,idan,oauthlib,myyang,2015-07-01 16:01:52,"- Fix and remove missing attribute: _client in prepare_refresh_token_request()
- Add testcase for prepare_refresh_token_request()
",start issue,Fix and remove missing attribute: _client
1,issue_closed,354,idan,oauthlib,lepture,2015-07-02 05:51:18,,closed issue,Fix and remove missing attribute: _client
2,pull_request_title,354,idan,oauthlib,myyang,2015-07-01 16:01:52,"- Fix and remove missing attribute: _client in prepare_refresh_token_request()
- Add testcase for prepare_refresh_token_request()
",9940cd2a1403341e97bda42a88ae2c0213027c4f,Fix and remove missing attribute: _client
3,pull_request_merged,354,idan,oauthlib,lepture,2015-07-02 05:51:18,Fix and remove missing attribute: _client,8b993274324ffe6472f4ee5e43fb7ae2a4ee86d3,Pull request merge from Unknown:fix_missing_attribute to idan/oauthlib:master
4,issue_comment,354,idan,oauthlib,lepture,2015-07-02 01:40:51,"@myyang tests failed.
",,
5,issue_comment,354,idan,oauthlib,myyang,2015-07-02 03:20:23,"Hi, I fixed it. Please examine and merge, thanks!
",,
6,pull_request_commit,354,idan,oauthlib,myyang,2015-07-01 15:11:41,"Fix and remove missing attribute: _client

* Fix and remove missing attribute: _client in prepare_refresh_token_request()
* Add testcase for prepare_refresh_token_request()",de586cd17cce1363ee611fea30a47aee908f861b,
7,pull_request_commit,354,idan,oauthlib,myyang,2015-07-02 02:50:00,Fix string format compatibility,f2402efa2a29631a3f67df9157fdf9d746861406,
8,pull_request_commit,354,idan,oauthlib,myyang,2015-07-02 03:13:28,Use assertFormBodyEqual instead,9940cd2a1403341e97bda42a88ae2c0213027c4f,
0,issue_title,356,idan,oauthlib,lepture,2015-07-02 07:15:53,"These are some performance improvement I found when I was doing https://github.com/idan/oauthlib/pull/355
",start issue,A little performance improvement
1,issue_closed,356,idan,oauthlib,thedrow,2015-07-03 09:00:52,,closed issue,A little performance improvement
2,pull_request_title,356,idan,oauthlib,lepture,2015-07-02 07:15:53,"These are some performance improvement I found when I was doing https://github.com/idan/oauthlib/pull/355
",42d973d7854a694dea290251e21025b0b90440f4,A little performance improvement
3,pull_request_merged,356,idan,oauthlib,thedrow,2015-07-03 09:00:52,A little performance improvement,8d33f34911481ffc46eddd35aeab02ce517f39a9,Pull request merge from lepture/oauthlib:performance-improve to idan/oauthlib:master
4,issue_comment,356,idan,oauthlib,thedrow,2015-07-03 09:00:49,"LGTM.
",,
5,pull_request_commit,356,idan,oauthlib,lepture,2015-07-02 07:10:26,Don't encode body twice,d8d7de6ac0d8f6988f876229d773a4a3042f988e,
6,pull_request_commit,356,idan,oauthlib,lepture,2015-07-02 07:14:07,Improve regex performance for invalid_hex,42d973d7854a694dea290251e21025b0b90440f4,
0,issue_title,349,idan,oauthlib,foxx,2015-06-19 15:09:08,,start issue,more code indent issues
1,issue_closed,349,idan,oauthlib,thedrow,2015-07-01 09:41:24,,closed issue,more code indent issues
2,pull_request_title,349,idan,oauthlib,foxx,2015-06-19 15:09:08,,226e783e20b09f0e9314d4ad2b9a36410e3be529,more code indent issues
3,pull_request_merged,349,idan,oauthlib,thedrow,2015-07-01 09:41:24,more code indent issues,0bfee634d0fc8cec4518ade68a7ed1cfa81b4ae1,Pull request merge from Unknown:patch-2 to idan/oauthlib:master
4,issue_comment,349,idan,oauthlib,jcbohin,2015-06-23 07:42:06,"dup with #343 (but more indents fixed in #349 )
",,
5,pull_request_commit,349,idan,oauthlib,foxx,2015-06-19 15:09:03,more code indent issues,226e783e20b09f0e9314d4ad2b9a36410e3be529,
0,issue_title,314,idan,oauthlib,singingwolfboy,2015-02-10 23:54:14,"We might want to instantiate a RSA OAuth1 client, but not load the RSA key until later. We should move the check from where the client is initialized, to where the RSA key is actually used.
",start issue,Check for rsa_key when it's actually needed
1,issue_closed,314,idan,oauthlib,thedrow,2015-07-01 11:26:50,,closed issue,Check for rsa_key when it's actually needed
2,pull_request_title,314,idan,oauthlib,singingwolfboy,2015-02-10 23:54:14,"We might want to instantiate a RSA OAuth1 client, but not load the RSA key until later. We should move the check from where the client is initialized, to where the RSA key is actually used.
",96caa4991fed3ff376ee15214607d05385ff9d7d,Check for rsa_key when it's actually needed
3,pull_request_merged,314,idan,oauthlib,thedrow,2015-07-01 11:26:50,Check for rsa_key when it's actually needed,e01e0e86140da05fa5dc199f282e1f7dd311a5f6,Pull request merge from singingwolfboy/oauthlib:require-rsa-key-when-being-used to idan/oauthlib:master
4,issue_comment,314,idan,oauthlib,josephtate,2015-05-06 21:30:11,"Can you freshen this? And maybe provide a unit test?
",,
5,issue_comment,314,idan,oauthlib,singingwolfboy,2015-05-07 03:11:31,"@josephtate fixed!
",,
6,issue_comment,314,idan,oauthlib,josephtate,2015-05-07 03:13:43,"LGTM pending travis run.
",,
7,issue_comment,314,idan,oauthlib,singingwolfboy,2015-05-09 13:58:46,"@josephtate ping
",,
8,issue_comment,314,idan,oauthlib,josephtate,2015-05-11 19:22:46,"@singingwolfboy I'm not able to merge pull requests, just pitching in to review. :( @ib-lundgren this LGTM.
",,
9,pull_request_commit,314,idan,oauthlib,singingwolfboy,2015-02-10 22:57:06,Check for rsa_key when it's actually needed,96caa4991fed3ff376ee15214607d05385ff9d7d,
0,issue_title,226,idan,oauthlib,TkTech,2013-12-09 20:10:01,"About two years ago it appears pycrypto was swapped out for python-rsa. Then at some point about a year ago pycrypto was re-introduced (this time as a soft dependency).

My questions:
- Why was this decision made?
- If python-rsa was no longer viable, why not the alternatives like tlslite?
- Why is there no easy extension mechanism for swapping out implementations?

I ask because [jira-python](http://jira-python.readthedocs.org/en/latest/) already includes [tlslite](https://pypi.python.org/pypi/tlslite) which is perfectly capable of doing the signing, but is pure-python and can optionally use pycrypto for acceleration. Howerver, there is no easy (or maybe there is but undocumented?) way of swapping it out without forking the code. I had to resort to monkey patching to do so:

``` python
def _pure_python_rsa_sha1(base_string, rsa_private_key):
    """"""
    An alternative, pure-python RSA-SHA1 signing method, using
    the tlslite library.
    """"""
    import base64
    from tlslite.utils import keyfactory

    private_key = keyfactory.parsePrivateKey(rsa_private_key)
    signature = private_key.hashAndSign(base_string.encode('ascii'))

    # This *must* be unicode, since oauthlib refuses to work with
    # anything else.
    return unicode(base64.b64encode(signature))

# Monkey patch the built-in RSA-SHA1 signing method, since the
# package offers no proper extension mechanism.
from oauthlib.oauth1.rfc5849 import signature
signature.sign_rsa_sha1 = _pure_python_rsa_sha1
```
",start issue,Why PyCrypto for RSA?
1,issue_closed,226,idan,oauthlib,thedrow,2015-07-01 11:31:23,,closed issue,Why PyCrypto for RSA?
2,issue_comment,226,idan,oauthlib,ib-lundgren,2013-12-09 22:28:49,"If I recall correctly we quickly swapped to python-rsa to ease installation of oauthlib. However, since pycrypto was (at the time at least) considered more proven in the field we preferred pycrypto. Instead of relying on an arguably less trusted library we decided that it is better to let only the ones who really need to use OAuth1 with RSA go through the installation process, hence the optional dependency and swap back again.

I remember searching for alternatives at the time but did not stumble upon tlslite, since then there has been no search or suggestion to use alternatives which is why there is no easy way to swap which library is used. It would be a very neat feature to have and I'd love a PR :)

I've not really thought about how to best implement this but maybe trying to either do library detection through imports or asking the user to explicitly specify would be viable options.
",,
3,issue_comment,226,idan,oauthlib,TkTech,2013-12-10 00:17:31,"Because the signing methods are so simple, I was thinking of:
- making the `Client()`'s `signature_method` kwarg accept a method instead of a string.
- `oauthlib.oauth1.SIGNATURE_RSA` then just becomes an alias for the default implementation.
- `SIGNATURE_RSA` uses tlslite by default, which is widely portable with 9 years of development and can use M2Crypto, pycrypto, or GMPY if they are installed for speed.
- Add tlslite to `setup.py` as it's a light dependency (simplifying installation of oauthlib with all features out of the box).

I think this would be more future-friendly and lower maintenance than library probing (although they aren't incompatible).

I'll go ahead and make these changes in a PR if you are okay with them.
",,
4,issue_comment,226,idan,oauthlib,ib-lundgren,2013-12-10 11:30:02,"Sounds good. I'd say make signature_method be either a string or a method and use error catching to decide, something along the lines of 

```
try:
    signature_method(...)
except TypeError:
    proceed as before...
```

and keep tlslite optional. The number of people using OAuth 1 is decreasing since most providers are moving away from it and the subset using the RSA signing method has always been a very small minority (AFAIK).

Looking forward to the PR :)
",,
5,issue_comment,226,idan,oauthlib,thedrow,2014-08-24 14:08:57,"I suggest using [cryptography](https://cryptography.io/en/latest/). It supports RSA and Python 3/PyPy which makes it by far superior in comparision to PyCrypto.
",,
6,issue_comment,226,idan,oauthlib,ib-lundgren,2014-09-01 13:43:19,"Looks very promising indeed.

On Sun, Aug 24, 2014 at 3:08 PM, Omer Katz notifications@github.com wrote:

> I suggest using cryptography https://cryptography.io/en/latest/. It
> supports RSA and Python 3/PyPy which makes it by far superior in
> comparision to PyCrypto.
> 
> â€”
> Reply to this email directly or view it on GitHub
> https://github.com/idan/oauthlib/issues/226#issuecomment-53194390.
",,
7,issue_comment,226,idan,oauthlib,ib-lundgren,2014-09-24 16:28:30,"Sketched out a way to support both PyCrypto and Cryptography but the latter is not quite ready for prime time yet. Most notably it lacks support for loading public keys but it is coming (https://github.com/pyca/cryptography/pull/1331) and when it hits PyPI ill re-test and merge.
",,
8,issue_comment,226,idan,oauthlib,Zopieux,2015-01-08 14:53:19,"@ib-lundgren Just so you know, [pyca/cryptography#1331](https://github.com/pyca/cryptography/pull/1331) has been merged.
",,
9,issue_comment,226,idan,oauthlib,thedrow,2015-01-08 16:02:06,"Woot!
",,
10,issue_comment,226,idan,oauthlib,tilgovi,2015-04-19 19:18:38,"Can be closed now that #322 merged.
",,
11,issue_comment,226,idan,oauthlib,thedrow,2015-06-15 12:55:08,"@ib-lundgren ping. You can close this issue now.
",,
0,issue_title,341,idan,oauthlib,kdazzle,2015-05-09 19:22:18,"https://github.com/idan/oauthlib/issues/340

Raise an `AttributeError` from `common.Request.__getattr__` so that `getattr` can be used like normal on a request. This commit breaks a lot of existing tests, which I'll fix in another commit.

This might break backwards compatibility if people are relying on `getattr(Request)` automatically returning `None`. 
",start issue,#340 - calling getattr on Request should raise an AttributeError if that attribute doesn't exist
1,issue_closed,341,idan,oauthlib,thedrow,2015-07-02 08:46:10,,closed issue,#340 - calling getattr on Request should raise an AttributeError if that attribute doesn't exist
2,pull_request_title,341,idan,oauthlib,kdazzle,2015-05-09 19:22:18,"https://github.com/idan/oauthlib/issues/340

Raise an `AttributeError` from `common.Request.__getattr__` so that `getattr` can be used like normal on a request. This commit breaks a lot of existing tests, which I'll fix in another commit.

This might break backwards compatibility if people are relying on `getattr(Request)` automatically returning `None`. 
",fb8dcb41adef9617d11550102d9872e055a3ce8d,#340 - calling getattr on Request should raise an AttributeError if that attribute doesn't exist
3,pull_request_merged,341,idan,oauthlib,thedrow,2015-07-02 08:46:10,#340 - calling getattr on Request should raise an AttributeError if that attribute doesn't exist,624cb9bc4f9ae93e17fae9b9d37db3fcd936a653,Pull request merge from kdazzle/oauthlib:request-getattr to idan/oauthlib:master
4,issue_comment,341,idan,oauthlib,kdazzle,2015-05-09 19:45:17,"Hmm, well a _lot_ of tests fail for a lot of different places around the code. One solution would be to replace all of the assumptions that a request attribute will be either something or `None`, or another would be to provide default values in `Request._params` in the constructor. Or a mix, of course. Something like the following commit.
",,
5,issue_comment,341,idan,oauthlib,thedrow,2015-07-01 11:37:25,"I'm really not sure about this one.
Will this change break backwards compatibility?
",,
6,issue_comment,341,idan,oauthlib,foxx,2015-07-01 20:12:31,"It's certainly the correct way of doing things, and the test appear to pass fine, although there is a chance this might be breaking something which isn't well tested, as well as other people relying on this implementation approach. I'm +1 on this, but will need to be highlighted in the change log.
",,
7,issue_comment,341,idan,oauthlib,kdazzle,2015-07-02 19:23:37,"Thanks for taking a look at this and for merging it in!
Yeah, as @foxx said, it could break peoples' code if they are relying on that implementation, but I think this change is worth it.
",,
8,pull_request_commit,341,idan,oauthlib,kdazzle,2015-05-09 19:18:12,#340 - raise AttributeError from common.Request.__getattr__+ add tests,539558a02edbadb8d6ef690fb0beb2510a5eeb17,
9,pull_request_commit,341,idan,oauthlib,kdazzle,2015-05-09 19:46:51,#340 - provide default values for some params in common.Request,e1af87fd6f520576f3547ce69224779a40ebd85a,
10,pull_request_commit,341,idan,oauthlib,kdazzle,2015-05-24 23:29:23,Merge remote-tracking branch 'upstream/master' into request-getattr,7168c03ce6307f21e632dfbbfc62e1a89e6282a3,
11,pull_request_commit,341,idan,oauthlib,kdazzle,2015-05-24 23:42:20,#340 - add default param values to common.Request,fb8dcb41adef9617d11550102d9872e055a3ce8d,
0,issue_title,345,idan,oauthlib,H0neyBadger,2015-06-01 12:12:01,"Hello,
Some password are revealed through the request body in debug logs.
Could you please take a look to this issue?

In the module oauthlib.oauth2.rfc6749.grant_types.resource_owner_password_credentials **request** objects are dumped into the debug log.
example lines 98, 99

``` python
            log.debug('Validating access token request, %r.', request)
                self.validate_token_request(request)
```

As a consequence the file contains the entire request (including the body of the request)

```
[DEBUG] oauthlib.oauth2.rfc6749.grant_types.resource_owner_password_credentials: Validating access token request
...
body=""username=foo&password=bar&grant_type=password&client_id=test""
```

This issue potentially affects all OAuth2 flows (not only the password flow)

You can test this issue with the following curl request 

``` bash
curl -v -X POST -d ""grant_type=password&client_id=test&username=foo&password=bar"" ""http://localhost:8000/o/token/""
```

Oauth2 modules : 
- Django 1.8 
- django-oauth-toolkit
",start issue,Passwords disclosure in debug logs
1,issue_closed,345,idan,oauthlib,lepture,2015-07-02 07:16:44,,closed issue,Passwords disclosure in debug logs
2,issue_comment,345,idan,oauthlib,H0neyBadger,2015-06-01 12:32:06,"Maybe the best way to fix this issue is to edit requestâ€™s representation function :
https://github.com/idan/oauthlib/blob/master/oauthlib/common.py
line 392 

``` python
    def __repr__(self):
        return '<oauthlib.Request url=""%s"", http_method=""%s"", headers=""%s"", body=""%s"">' % (
            self.uri, self.http_method, self.headers, self.body)
```
",,
3,issue_comment,345,idan,oauthlib,foxx,2015-07-01 20:05:13,"I'm not sure if censoring the debug logs is the correct approach. In any sane deployment, you would only ever enable debug mode whilst debugging, rather than in production. Enabling such a feature by default would likely cause annoyance for little benefit. As such, I'd be -1 on this, lets see if the other maintainers chime in though.
",,
4,issue_comment,345,idan,oauthlib,H0neyBadger,2015-07-02 06:38:58,"Censoring! I call that ""respect the privacy of others""
In many cases the debug logs are enabled on prod and pre-prod. 
Even worse, in many cases logs are sent directly to a SIEM through syslogd and readable by a group of people.
Now imagine if the windows or unix pam write a log with your password.
Only poorly implemented products needs to debug the password.
Anyway, this must be documented!
",,
5,issue_comment,345,idan,oauthlib,masci,2015-07-02 07:08:23,"I'm +1 on hiding sensitive data
",,
6,issue_comment,345,idan,oauthlib,lepture,2015-07-02 07:16:40,"I agree with @H0neyBadger . I've submitted a PR in #355 
",,
7,issue_comment,345,idan,oauthlib,foxx,2015-07-02 16:19:32,"Actually, after giving this some further thought, there could be situations where users are using real password with their debug runtimes. If they blindly paste these into pastebin or Github, it could cause for some embarrassment.

After looking at how other projects do this, most will either hide sensitive log information by default (e.g. Apache2), or will remove known sensitive strings such as passwords (e.g. Dovecot).

Left feedback on PR, thanks for reporting this @H0neyBadger!
",,
0,issue_title,355,idan,oauthlib,lepture,2015-07-02 07:08:01,"Reported by @H0neyBadger https://github.com/idan/oauthlib/issues/345

It is definitely a security bug. We shouldn't track user password in any
situation.
",start issue,Hide password in logs
1,issue_closed,355,idan,oauthlib,lepture,2015-07-03 06:54:22,,closed issue,Hide password in logs
2,pull_request_title,355,idan,oauthlib,lepture,2015-07-02 07:08:01,"Reported by @H0neyBadger https://github.com/idan/oauthlib/issues/345

It is definitely a security bug. We shouldn't track user password in any
situation.
",f88408da8b4d222195caca46d10264d90a2bd167,Hide password in logs
3,pull_request_merged,355,idan,oauthlib,lepture,2015-07-03 06:54:22,Hide password in logs,b8e1fb91c6298143587a18a18a00282a1273e258,Pull request merge from lepture/oauthlib:hide-password to idan/oauthlib:master
4,issue_comment,355,idan,oauthlib,foxx,2015-07-02 16:19:07,"LGTM.

``` py
>>> import re
>>> a = ""username=abc&password=123&hello=world""
>>> PASSWORD_PATTERN = re.compile(r'password=[^&]+')
>>> print(PASSWORD_PATTERN.sub('password=***', a))
username=abc&password=***&hello=world
```
",,
5,issue_comment,355,idan,oauthlib,lepture,2015-07-02 17:17:58,"There are situations that the user's password is `***`. But will we take the output of `username=abc&password=***&hello=world` as  a password exposure?
",,
6,issue_comment,355,idan,oauthlib,foxx,2015-07-02 17:20:11,"If someone's password is ***, they deserved to get pwnt, just my two cents.

On Thursday, July 2, 2015, Hsiaoming Yang notifications@github.com wrote:

> There are situations that the user's password is **_. But will we take
> the output of username=abc&password=**_&hello=world as a password
> exposure?
> 
> â€”
> Reply to this email directly or view it on GitHub
> https://github.com/idan/oauthlib/pull/355#issuecomment-118097658.
",,
7,issue_comment,355,idan,oauthlib,lepture,2015-07-02 17:24:49,"Anyone against the patch? Anyone would +1 on it?
",,
8,issue_comment,355,idan,oauthlib,foxx,2015-07-02 17:26:36,"Lgtm, +1

On Thursday, July 2, 2015, Hsiaoming Yang notifications@github.com wrote:

> Anyone against the patch? Anyone would +1 on it?
> 
> â€”
> Reply to this email directly or view it on GitHub
> https://github.com/idan/oauthlib/pull/355#issuecomment-118099041.
",,
9,issue_comment,355,idan,oauthlib,masci,2015-07-02 17:57:17,":+1: 
",,
10,pull_request_commit,355,idan,oauthlib,lepture,2015-07-02 07:04:37,Add tests when Request body has password,db602c837436790cf4a98744fa66f4dd20de7f79,
11,pull_request_commit,355,idan,oauthlib,lepture,2015-07-02 07:05:05,Hide user password in repr of Request,7996067921ddd5eb3ff889270a5b02ce14997b10,
12,pull_request_commit,355,idan,oauthlib,lepture,2015-07-02 07:29:08,Fix when body is None,f88408da8b4d222195caca46d10264d90a2bd167,
0,issue_title,337,idan,oauthlib,lribinik,2015-04-20 12:46:14,"fixing self.redirect_uri to self.redirect_url since self.redirect_uri doesn't exist
",start issue,fix typo in base.py:prepare_authorization_request
1,issue_closed,337,idan,oauthlib,thedrow,2015-07-01 11:33:29,,closed issue,fix typo in base.py:prepare_authorization_request
2,pull_request_title,337,idan,oauthlib,lribinik,2015-04-20 12:46:14,"fixing self.redirect_uri to self.redirect_url since self.redirect_uri doesn't exist
",95f012023a0a6919eeac31903992d8b9df087484,fix typo in base.py:prepare_authorization_request
3,issue_comment,337,idan,oauthlib,josephtate,2015-05-06 21:14:13,"Seems like we're missing test coverage for this. Any chance you can add one?
",,
4,issue_comment,337,idan,oauthlib,lribinik,2015-05-13 09:59:02,"Will work on adding a test.
",,
5,issue_comment,337,idan,oauthlib,thedrow,2015-07-01 11:33:29,"Already merged with a test in #351. Thanks.
",,
6,issue_comment,337,idan,oauthlib,lribinik,2015-07-01 14:17:14,"Thanks! (Unfortunately wasn't able to get to it)
",,
7,pull_request_commit,337,idan,oauthlib,leon.ribinik@convertro.com,2015-04-20 12:41:17,fixing self.redirect_ui to self.redirect_url since self.redirect_uri doesn't exist,95f012023a0a6919eeac31903992d8b9df087484,
