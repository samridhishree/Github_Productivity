"rectype","issueid","project_owner","project_name","actor","time","text","action","title"
"issue_title","222","nilearn","nilearn","dohmatob","2014-07-01 14:09:25","Reproduce on numpy 1.7.1 with the following line:

$ nosetests nilearn/plotting/test/test_edge_detect.py

```
nose.plugins.cover: ERROR: Coverage not available: unable to import coverage module
nilearn.plotting.test.test_edge_detect.test_edge_detect ... ERROR

======================================================================
ERROR: nilearn.plotting.test.test_edge_detect.test_edge_detect
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""/usr/lib/python2.7/dist-packages/nose/case.py"", line 197, in runTest
    self.test(*self.arg)
  File ""/home/parietal/dohmatob/CODE/FORKED/nilearn/nilearn/plotting/test/test_edge_detect.py"", line 13, in test_edge_detect
    _, edge_mask = _edge_detect(img)
  File ""/home/parietal/dohmatob/CODE/FORKED/nilearn/nilearn/plotting/edge_detect.py"", line 94, in _edge_detect
    high = thinned_grad > fast_abs_percentile(grad_values, 100*high_threshold)
  File ""/home/parietal/dohmatob/CODE/FORKED/nilearn/nilearn/_utils/fast_maths.py"", line 28, in fast_abs_percentile
    return map.sort()[index]
TypeError: 'NoneType' object has no attribute '__getitem__'

----------------------------------------------------------------------
Ran 1 test in 0.006s

FAILED (errors=1)
```
","start issue","(fast_abs_percentile backport fails): TypeError (indexing) in _utils.fast_math.py"
"issue_closed","222","nilearn","nilearn","dohmatob","2014-07-01 16:02:37","","closed issue","(fast_abs_percentile backport fails): TypeError (indexing) in _utils.fast_math.py"
"issue_comment","222","nilearn","nilearn","dohmatob","2014-07-01 14:10:23","Fix would be something like:

```
return sorted(map)[index]
```
","",""
"issue_comment","222","nilearn","nilearn","GaelVaroquaux","2014-07-01 14:10:31","Good catch. I'll fix that ASAP
","",""
"issue_comment","222","nilearn","nilearn","GaelVaroquaux","2014-07-01 14:11:03","> return sorted(map)[index]

Actually:

<pre>
map.sort()
return map[index]
</pre>
","",""
"issue_comment","222","nilearn","nilearn","dohmatob","2014-07-01 14:12:38","Yes, indeed since you want an numpy.array...
","",""
"issue_comment","222","nilearn","nilearn","dohmatob","2014-07-01 16:02:37","+1. Closing.
","",""
