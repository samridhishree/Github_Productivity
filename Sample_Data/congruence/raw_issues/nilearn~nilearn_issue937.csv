"rectype","issueid","project_owner","project_name","actor","time","text","action","title"
"issue_title","937","nilearn","nilearn","banilo","2016-01-10 12:31:04","tries to fix #922
","start issue","[0.2.2 milestone] find_coords: allow 4D input"
"issue_closed","937","nilearn","nilearn","lesteve","2016-01-13 12:33:32","","closed issue","[0.2.2 milestone] find_coords: allow 4D input"
"pull_request_title","937","nilearn","nilearn","banilo","2016-01-10 12:31:04","tries to fix #922
","63e16a933bcfc7576a4085750d10438f90d14819","[0.2.2 milestone] find_coords: allow 4D input"
"pull_request_merged","937","nilearn","nilearn","lesteve","2016-01-13 12:33:32","[0.2.2 milestone] find_coords: allow 4D input","72d3b430ac47abe35f8ec9ec2d38294dc695a951","Pull request merge from banilo/nilearn:fixfindcoord to nilearn/nilearn:master"
"issue_comment","937","nilearn","nilearn","banilo","2016-01-12 06:23:27","All comments addressed.
","",""
"pull_request_commit_comment","937","nilearn","nilearn","bthirion","2016-01-12 07:47:15","You don't test the output ?
x, y, z is supposed to be what ? To me the result is empty for activation_threshold=1.1
","63e16a933bcfc7576a4085750d10438f90d14819","(None, '', u'nilearn/plotting/tests/test_find_cuts.py')"
"pull_request_commit_comment","937","nilearn","nilearn","AlexandreAbraham","2016-01-12 10:23:45","This checks if no exception is raised.
","63e16a933bcfc7576a4085750d10438f90d14819","(None, '', u'nilearn/plotting/tests/test_find_cuts.py')"
"pull_request_commit_comment","937","nilearn","nilearn","lesteve","2016-01-12 10:26:11","For a slightly better test, You could do something like this:

``` python
rng = np.random.RandomState(0)
data_3d = rng.randn(10, 10, 10)
data_4d = data_3d[..., np.newaxis]
affine = np.eye(4)
img_3d = nibabel.Nifti1Image(data_3d, affine)
img_4d = nibabel.Nifti1Image(data_4d, affine)
assert_equal(find_xyz_cut_coords(img_3d), find_xyz_cut_coords(img_4d))
```
","63e16a933bcfc7576a4085750d10438f90d14819","(None, '', u'nilearn/plotting/tests/test_find_cuts.py')"
"pull_request_commit_comment","937","nilearn","nilearn","banilo","2016-01-12 10:26:49","Ok, thanks good idea!

2016-01-12 11:26 GMT+01:00 Loïc Estève notifications@github.com:

> In nilearn/plotting/tests/test_find_cuts.py
> https://github.com/nilearn/nilearn/pull/937#discussion_r49436370:
> 
> > @@ -42,6 +42,14 @@ def test_find_cut_coords():
> >          np.array([x, y, z]),
> >          0.5 \* np.array(data.shape).astype(np.float))
> > -    # regression test (cf. #922)
> > -    # pseudo-4D images as input (i.e., X, Y, Z, 1)
> > -    # previously raised ""ValueError: too many values to unpack""
> > -    data = np.ones((36, 43, 36))[..., np.newaxis]
> > -    affine = np.eye(4)
> > -    img = nibabel.Nifti1Image(data, affine)
> > -    x, y, z = find_xyz_cut_coords(img, activation_threshold=1.1)
> >   +
> 
> For a slightly better test, You could do something like this:
> 
> rng = np.random.RandomState(0)
> data_3d = rng.randn((10, 10, 10))
> data_4d = data_3d[..., np.newaxis]
> affine = np.eye(4)
> img_3d = nibabel.Nifti1Image(data_3d, affine)
> img_4d = nibabel.Nifti1Image(data_4d, affine)
> assert_equal(find_xyz_cut_coords(img_3d), find_xyz_cut_coords(img_4d))
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/nilearn/nilearn/pull/937/files#r49436370.
","63e16a933bcfc7576a4085750d10438f90d14819","(None, '', u'nilearn/plotting/tests/test_find_cuts.py')"
"pull_request_commit","937","nilearn","nilearn","banilo","2016-01-10 12:28:58","find_coords: allow 4D input","54f042223002796b343e727928f00ed554918b07",""
"pull_request_commit","937","nilearn","nilearn","banilo","2016-01-11 23:10:48","realize feedback","e76dfbe2b35b8c952d9932dac8c292c6112b080d",""
"pull_request_commit","937","nilearn","nilearn","banilo","2016-01-12 21:36:49","added Loic's comment","63e16a933bcfc7576a4085750d10438f90d14819",""
