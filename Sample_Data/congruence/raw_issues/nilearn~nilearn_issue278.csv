"rectype","issueid","project_owner","project_name","actor","time","text","action","title"
"issue_title","278","nilearn","nilearn","banilo","2014-11-11 16:48:06","in response to #203

@AlexandreAbraham: Does this make any sense and is it approximately what you guys had in mind?
","start issue","[ENH] Shelving option for NiftiMasker"
"issue_closed","278","nilearn","nilearn","lesteve","2014-11-19 08:08:52","","closed issue","[ENH] Shelving option for NiftiMasker"
"pull_request_title","278","nilearn","nilearn","banilo","2014-11-11 16:48:06","in response to #203

@AlexandreAbraham: Does this make any sense and is it approximately what you guys had in mind?
","31969337e86e3d6dff5568d08c2911096bf0333c","[ENH] Shelving option for NiftiMasker"
"issue_comment","278","nilearn","nilearn","banilo","2014-11-11 16:58:49","Units tests fail for CanICA although I didn't change anything there??

# 

## FAIL: nilearn.decomposition.tests.test_canica.test_canica_square_img

Traceback (most recent call last):
  File ""/Users/admin/anaconda/lib/python2.7/site-packages/nose/case.py"", line 197, in runTest
    self.test(*self.arg)
  File ""/git/nilearn/nilearn/decomposition/tests/test_canica.py"", line 60, in test_canica_square_img
    assert_true(np.sum(K_abs > .9) == 4)
AssertionError: False is not true
    'False is not true' = self._formatMessage('False is not true', ""%s is not true"" % safe_repr(False))

> >  raise self.failureException('False is not true')
","",""
"issue_comment","278","nilearn","nilearn","AlexandreAbraham","2014-11-11 22:00:47","The CanICA test can fail randomly, don't worry about that.
","",""
"issue_comment","278","nilearn","nilearn","AlexandreAbraham","2014-11-11 22:07:30","I already have code to add this feature so you don't need to do it yourself. BTW, you should not use MemorizedFunc directly, nor use a temporary directory (shelving has no sense if the results is lost after reboot).

This issue has not been resolved yet because the problem is not in adding shelving support in MultiNiftiMasker. This is the easy part. The question is: how do we handle shelved data in the rest of the library? What if a user wants to use a scikit-learn algorithm on shelved data? We have no answer for these questions. I think this should be discussed with the whole nilearn team.
","",""
"pull_request_commit","278","nilearn","nilearn","banilo","2014-11-11 16:45:41","experimenting naively with Shelving","31969337e86e3d6dff5568d08c2911096bf0333c",""
