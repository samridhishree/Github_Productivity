"rectype","issueid","project_owner","project_name","actor","time","text","action","title"
"issue_title","479","nilearn","nilearn","amadeuskanaan","2015-03-03 14:32:38","returns ''ValueError: 'adjacency_matrix' should be symmetric''
","start issue","connectome_plotter fails with nan's in adjacency matrix "
"issue_closed","479","nilearn","nilearn","AlexandreAbraham","2015-03-17 10:26:47","","closed issue","connectome_plotter fails with nan's in adjacency matrix "
"issue_comment","479","nilearn","nilearn","lesteve","2015-03-03 14:54:13","Off the top of my head, the symmetricity check is just checking (adjacency_matrix == adjacency_matrix.T).all().

I guess we need it a bit more clever than that.
","",""
"issue_comment","479","nilearn","nilearn","eickenberg","2015-03-03 15:28:26","Make the comparison with `nan_to_num`? E.g.
`tmp=np.nan_to_num(adjacency_matrix)`
 and `all_close(tmp, tmp.T)` (I don't think there is a function
`nan_equals`)? Or is this too ugly?

On Tue, Mar 3, 2015 at 3:54 PM, Loïc Estève notifications@github.com
wrote:

> Off the top of my head, the symmetricity check is just checking
> (adjacency_matrix == adjacency_matrix.T).all().
> 
> I guess we need it a bit more clever than that.
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/nilearn/nilearn/issues/479#issuecomment-76959697.
","",""
"issue_comment","479","nilearn","nilearn","lesteve","2015-03-03 15:35:10","I thought of that, but there is the edge case of having a NaN in the element (i, j) and a zero in the (j, i) element. The nan_to_num solution won't catch that. In any case it should be fairly simple to fix.
","",""
"issue_comment","479","nilearn","nilearn","GaelVaroquaux","2015-03-04 06:57:39","> I thought of that, but there is the edge case of having a NaN in the
> element (i, j) and a zero in the (j, i) element. The nan_to_num
> solution won't catch that. In any case it should be fairly simple to
> fix.

I think that casting nans to zero is a safe bet.
","",""
"issue_comment","479","nilearn","nilearn","AlexandreAbraham","2015-03-04 13:15:32","> I think that casting nans to zero is a safe bet.

:+1:
","",""
