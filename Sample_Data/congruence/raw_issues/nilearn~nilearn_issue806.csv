"rectype","issueid","project_owner","project_name","actor","time","text","action","title"
"issue_title","806","nilearn","nilearn","KamalakerDadi","2015-10-28 08:59:23","Fixes #717 

Added:
- Fetcher
- Example
- Doc
- Tests
","start issue","[MRG] New fetcher for Megatrawls Netmats"
"issue_closed","806","nilearn","nilearn","AlexandreAbraham","2016-01-12 09:54:45","","closed issue","[MRG] New fetcher for Megatrawls Netmats"
"pull_request_title","806","nilearn","nilearn","KamalakerDadi","2015-10-28 08:59:23","Fixes #717 

Added:
- Fetcher
- Example
- Doc
- Tests
","cb9d60c7fa9269c17910b18bf95e5a23aa41a8d2","[MRG] New fetcher for Megatrawls Netmats"
"pull_request_merged","806","nilearn","nilearn","AlexandreAbraham","2016-01-12 09:54:45","[MRG] New fetcher for Megatrawls Netmats","9c0b43d43e8449fbce789b7a41d73411b6d0de94","Pull request merge from KamalakerDadi/nilearn:fetch_megatrawls_netmats to nilearn/nilearn:master"
"issue_comment","806","nilearn","nilearn","KamalakerDadi","2015-11-10 12:43:46","I have addressed your comments @bthirion @AlexandreAbraham 
","",""
"issue_comment","806","nilearn","nilearn","lesteve","2015-11-12 07:54:12","This needs a rebase.
","",""
"issue_comment","806","nilearn","nilearn","KamalakerDadi","2015-11-27 08:49:53","@lesteve I have addressed your comments.
","",""
"issue_comment","806","nilearn","nilearn","KamalakerDadi","2015-12-17 13:46:43","@lesteve @AlexandreAbraham Any more reviews on this ?
","",""
"issue_comment","806","nilearn","nilearn","AlexandreAbraham","2015-12-18 10:18:00","Apart from my comment about output, I'm +1.
","",""
"issue_comment","806","nilearn","nilearn","KamalakerDadi","2015-12-22 07:40:03","@AlexandreAbraham Just to inform you that I addressed your comments. It would be nice to have a look whenever you have time. Thanks.
","",""
"pull_request_commit_comment","806","nilearn","nilearn","AlexandreAbraham","2015-10-28 10:28:36","Should we really handle lists of options or should we let the user do the loop on its own if he wants them all? @GaelVaroquaux @lesteve 
","cb9d60c7fa9269c17910b18bf95e5a23aa41a8d2","(None, '', u'nilearn/datasets/func.py')"
"pull_request_commit_comment","806","nilearn","nilearn","AlexandreAbraham","2015-10-28 10:29:17","`n_networks` or `n_components` would be better.
","cb9d60c7fa9269c17910b18bf95e5a23aa41a8d2","(None, '', u'nilearn/datasets/func.py')"
"pull_request_commit_comment","806","nilearn","nilearn","AlexandreAbraham","2015-10-28 10:29:48","Here too we should find another wording.
","cb9d60c7fa9269c17910b18bf95e5a23aa41a8d2","(None, '', u'nilearn/datasets/func.py')"
"pull_request_commit_comment","806","nilearn","nilearn","KamalakerDadi","2015-10-28 10:30:06","I am with giving options to choose.
","cb9d60c7fa9269c17910b18bf95e5a23aa41a8d2","(None, '', u'nilearn/datasets/func.py')"
"pull_request_commit_comment","806","nilearn","nilearn","AlexandreAbraham","2015-10-28 10:30:10","You do not return a Bunch here.
","cb9d60c7fa9269c17910b18bf95e5a23aa41a8d2","(None, '', u'nilearn/datasets/func.py')"
"pull_request_commit_comment","806","nilearn","nilearn","AlexandreAbraham","2015-10-28 10:31:33","Or maybe we could just always return them all.
","cb9d60c7fa9269c17910b18bf95e5a23aa41a8d2","(None, '', u'nilearn/datasets/func.py')"
"pull_request_commit_comment","806","nilearn","nilearn","AlexandreAbraham","2015-10-28 10:31:51","Please load the files before returning them to the user.
","cb9d60c7fa9269c17910b18bf95e5a23aa41a8d2","(None, '', u'nilearn/datasets/func.py')"
"pull_request_commit_comment","806","nilearn","nilearn","KamalakerDadi","2015-10-28 10:37:56","By default, it will return all.But, I thought it would be nice to have options to choose.
","cb9d60c7fa9269c17910b18bf95e5a23aa41a8d2","(None, '', u'nilearn/datasets/func.py')"
"pull_request_commit_comment","806","nilearn","nilearn","KamalakerDadi","2015-10-28 12:33:39","Can we stick to `n_dimensionalities` ? since all the strings are named as 'd'. There would be 
confusion to users.
","cb9d60c7fa9269c17910b18bf95e5a23aa41a8d2","(None, '', u'nilearn/datasets/func.py')"
"pull_request_commit_comment","806","nilearn","nilearn","KamalakerDadi","2015-10-28 12:36:19","May be this `timeseries`. To be consistent with the names 'ts'.
","cb9d60c7fa9269c17910b18bf95e5a23aa41a8d2","(None, '', u'nilearn/datasets/func.py')"
"pull_request_commit_comment","806","nilearn","nilearn","KamalakerDadi","2015-10-28 12:41:49","Can we not stick to returning path of the text files? I see confounds in some fetchers are returned the same.
","cb9d60c7fa9269c17910b18bf95e5a23aa41a8d2","(None, '', u'nilearn/datasets/func.py')"
"pull_request_commit_comment","806","nilearn","nilearn","lesteve","2015-10-28 13:58:07","is -> has been or just remove this comment. I don't think it adds a lot of value.
","cb9d60c7fa9269c17910b18bf95e5a23aa41a8d2","(None, '', u'nilearn/datasets/func.py')"
"pull_request_commit_comment","806","nilearn","nilearn","lesteve","2015-10-28 14:00:01","Can you add a rst for the description in nilearn/datasets/description and a test that the description is correctly loaded?
","cb9d60c7fa9269c17910b18bf95e5a23aa41a8d2","(None, '', u'nilearn/datasets/tests/test_func.py')"
"pull_request_commit_comment","806","nilearn","nilearn","AlexandreAbraham","2015-10-28 14:09:13","Well, I was thinking of removing the 'd' and make it an integer.
","cb9d60c7fa9269c17910b18bf95e5a23aa41a8d2","(None, '', u'nilearn/datasets/func.py')"
"pull_request_commit_comment","806","nilearn","nilearn","AlexandreAbraham","2015-10-28 14:10:23","Yes but we should not let the user choose between ""ts2"" or ""ts3"". We should find better wordings.
","cb9d60c7fa9269c17910b18bf95e5a23aa41a8d2","(None, '', u'nilearn/datasets/func.py')"
"pull_request_commit_comment","806","nilearn","nilearn","AlexandreAbraham","2015-10-28 14:12:48","Confounds are not loaded because the masker do it automagically. It is very likely for matrices to be fed to sklearn estimators that won't load them. But we should wait for @lesteve and @GaelVaroquaux to give their mind.
","cb9d60c7fa9269c17910b18bf95e5a23aa41a8d2","(None, '', u'nilearn/datasets/func.py')"
"pull_request_commit_comment","806","nilearn","nilearn","KamalakerDadi","2015-10-28 14:21:49","I feel returning the paths can have an option to user to look if he fetched the right files. If we returned values if user does some mistake in giving input then it would be hard to identify.
","cb9d60c7fa9269c17910b18bf95e5a23aa41a8d2","(None, '', u'nilearn/datasets/func.py')"
"pull_request_commit_comment","806","nilearn","nilearn","KamalakerDadi","2015-10-28 14:27:57","Fixed
","cb9d60c7fa9269c17910b18bf95e5a23aa41a8d2","(None, '', u'nilearn/datasets/tests/test_func.py')"
"pull_request_commit_comment","806","nilearn","nilearn","bthirion","2015-10-30 21:42:42","I'd rather put ""The network matrices are estimated from functional connectivity datasets of 461 subjects. ""
","cb9d60c7fa9269c17910b18bf95e5a23aa41a8d2","(None, '', u'nilearn/datasets/func.py')"
"pull_request_commit_comment","806","nilearn","nilearn","bthirion","2015-10-30 21:45:44","Sorry, but it is not crystal-clear to me what ""eigen regression"" refers to. Could you possibly give a reference here ?
","cb9d60c7fa9269c17910b18bf95e5a23aa41a8d2","(None, '', u'nilearn/datasets/func.py')"
"pull_request_commit_comment","806","nilearn","nilearn","lesteve","2015-11-02 08:48:13","Shorten the two sentences:

```
See :func:`nilearn.datasets.fetch_megatrawls_netmats` documentation for more details.
```
","cb9d60c7fa9269c17910b18bf95e5a23aa41a8d2","(None, '', u'examples/manipulating_visualizing/plot_visualize_megatrawls_netmats.py')"
"pull_request_commit_comment","806","nilearn","nilearn","lesteve","2015-11-02 08:49:44","You probably want to use a red/blue colormap like in other examples when we plot connectivity matrices.
","cb9d60c7fa9269c17910b18bf95e5a23aa41a8d2","(None, '', u'examples/manipulating_visualizing/plot_visualize_megatrawls_netmats.py')"
"pull_request_commit_comment","806","nilearn","nilearn","lesteve","2015-11-02 08:49:46","This is not a list ...
","cb9d60c7fa9269c17910b18bf95e5a23aa41a8d2","(None, '', u'examples/manipulating_visualizing/plot_visualize_megatrawls_netmats.py')"
"pull_request_commit_comment","806","nilearn","nilearn","lesteve","2015-11-02 08:50:51","Maybe ""Plotting correlation matrices"" instead?
","cb9d60c7fa9269c17910b18bf95e5a23aa41a8d2","(None, '', u'examples/manipulating_visualizing/plot_visualize_megatrawls_netmats.py')"
"pull_request_commit_comment","806","nilearn","nilearn","lesteve","2015-11-02 08:53:21","Typo: Possible
","cb9d60c7fa9269c17910b18bf95e5a23aa41a8d2","(None, '', u'nilearn/datasets/func.py')"
"pull_request_commit_comment","806","nilearn","nilearn","lesteve","2015-11-02 08:54:07","Just use ""by default"" rather than ""if chosen to be default"". This is valid for a few other places as well.
","cb9d60c7fa9269c17910b18bf95e5a23aa41a8d2","(None, '', u'nilearn/datasets/func.py')"
"pull_request_commit_comment","806","nilearn","nilearn","lesteve","2015-11-02 08:55:12","no capital after a comma. You have done that in multiple places.
","cb9d60c7fa9269c17910b18bf95e5a23aa41a8d2","(None, '', u'nilearn/datasets/func.py')"
"pull_request_commit_comment","806","nilearn","nilearn","lesteve","2015-11-02 08:57:06","you don't need parentheses
","cb9d60c7fa9269c17910b18bf95e5a23aa41a8d2","(None, '', u'nilearn/datasets/tests/test_func.py')"
"pull_request_commit_comment","806","nilearn","nilearn","lesteve","2015-11-02 08:57:32","don't need the outer parentheses
","cb9d60c7fa9269c17910b18bf95e5a23aa41a8d2","(None, '', u'nilearn/datasets/tests/test_func.py')"
"pull_request_commit_comment","806","nilearn","nilearn","lesteve","2015-11-02 08:58:17","Just curious, do the `_` at the end of the variable names carry a special meaning?
","cb9d60c7fa9269c17910b18bf95e5a23aa41a8d2","(None, '', u'nilearn/datasets/func.py')"
"pull_request_commit_comment","806","nilearn","nilearn","KamalakerDadi","2015-11-02 10:10:25","Thanks I will change.
","cb9d60c7fa9269c17910b18bf95e5a23aa41a8d2","(None, '', u'examples/manipulating_visualizing/plot_visualize_megatrawls_netmats.py')"
"pull_request_commit_comment","806","nilearn","nilearn","KamalakerDadi","2015-11-02 10:10:39","I will change to `dict_`
","cb9d60c7fa9269c17910b18bf95e5a23aa41a8d2","(None, '', u'examples/manipulating_visualizing/plot_visualize_megatrawls_netmats.py')"
"pull_request_commit_comment","806","nilearn","nilearn","KamalakerDadi","2015-11-02 10:14:10","Nothing special. I will change it.
","cb9d60c7fa9269c17910b18bf95e5a23aa41a8d2","(None, '', u'nilearn/datasets/func.py')"
"pull_request_commit_comment","806","nilearn","nilearn","lesteve","2015-11-02 10:19:21","As a comment, two reasons I know of for using final underscores:
- avoid shadowing a builtin like list
- scikit-learn convention for attributes that depends on data

IMHO final underscores are not that great for readability, especially when you have `some_variable` and `some_variable_` in the same function.
","cb9d60c7fa9269c17910b18bf95e5a23aa41a8d2","(None, '', u'nilearn/datasets/func.py')"
"pull_request_commit_comment","806","nilearn","nilearn","AlexandreAbraham","2015-11-02 10:21:18","It is better to have a meaningful name for viariables. `correlation_matrices` is probably better in this case.
","cb9d60c7fa9269c17910b18bf95e5a23aa41a8d2","(None, '', u'examples/manipulating_visualizing/plot_visualize_megatrawls_netmats.py')"
"pull_request_commit_comment","806","nilearn","nilearn","KamalakerDadi","2015-11-02 10:24:01","Noted
","cb9d60c7fa9269c17910b18bf95e5a23aa41a8d2","(None, '', u'examples/manipulating_visualizing/plot_visualize_megatrawls_netmats.py')"
"pull_request_commit_comment","806","nilearn","nilearn","lesteve","2015-11-02 12:23:38","> It is better to have a meaningful name for viariables

+100
","cb9d60c7fa9269c17910b18bf95e5a23aa41a8d2","(None, '', u'examples/manipulating_visualizing/plot_visualize_megatrawls_netmats.py')"
"pull_request_commit_comment","806","nilearn","nilearn","lesteve","2015-11-02 12:28:27","Why the capital C in Correlation?
","cb9d60c7fa9269c17910b18bf95e5a23aa41a8d2","(None, '', u'examples/manipulating_visualizing/plot_visualize_megatrawls_netmats.py')"
"pull_request_commit_comment","806","nilearn","nilearn","KamalakerDadi","2015-11-03 16:28:08","ping @AlexandreAbraham @lesteve @GaelVaroquaux @bthirion 
Any suggestions for a better naming to `choice_dimensionality` and `choice_timeseries` ?
","cb9d60c7fa9269c17910b18bf95e5a23aa41a8d2","(None, '', u'nilearn/datasets/func.py')"
"pull_request_commit_comment","806","nilearn","nilearn","AlexandreAbraham","2015-11-03 16:51:11","`choice_dimensionality` -> `n_components` with value in [25, 50, 100, 200, 300] with default ?
`choice_timeseries` -> `timeseries_regression` with value in ['multiple-spatial-regression', 'eigenregression'] with default 'eigenregression'.
","cb9d60c7fa9269c17910b18bf95e5a23aa41a8d2","(None, '', u'nilearn/datasets/func.py')"
"pull_request_commit_comment","806","nilearn","nilearn","KamalakerDadi","2015-11-03 17:01:25","Ok sounds good. Then, most of the lines need to be replaced. Present code well adapted to string. I will wait for others for a final decision.
","cb9d60c7fa9269c17910b18bf95e5a23aa41a8d2","(None, '', u'nilearn/datasets/func.py')"
"pull_request_commit_comment","806","nilearn","nilearn","bthirion","2015-11-03 21:21:37","`choice_dimensionality` -> why not `dimensionality` or even `dimension` ?
`choice_timeseries` -> `regression_mode`
I would also replace 'eigenregression' with 'eigen_regression' and 'multiple-spatial-regression' with 'multiple_spatial_regression'
","cb9d60c7fa9269c17910b18bf95e5a23aa41a8d2","(None, '', u'nilearn/datasets/func.py')"
"pull_request_commit_comment","806","nilearn","nilearn","AlexandreAbraham","2015-11-10 13:31:32","We use ""Correlation"" rather than ""Full correlation"".
","cb9d60c7fa9269c17910b18bf95e5a23aa41a8d2","(None, '', u'examples/manipulating_visualizing/plot_visualize_megatrawls_netmats.py')"
"pull_request_commit_comment","806","nilearn","nilearn","AlexandreAbraham","2015-11-10 13:37:01","None is actually not permitted according to the docs.
","cb9d60c7fa9269c17910b18bf95e5a23aa41a8d2","(None, '', u'nilearn/datasets/func.py')"
"pull_request_commit_comment","806","nilearn","nilearn","AlexandreAbraham","2015-11-10 13:40:24","Why don't you give the user the choice between `correlation` and `partial_correlation`?
","cb9d60c7fa9269c17910b18bf95e5a23aa41a8d2","(None, '', u'nilearn/datasets/func.py')"
"pull_request_commit_comment","806","nilearn","nilearn","AlexandreAbraham","2015-11-10 13:41:35","Could you load the matrices and not return filepaths?
","cb9d60c7fa9269c17910b18bf95e5a23aa41a8d2","(None, '', u'nilearn/datasets/func.py')"
"pull_request_commit_comment","806","nilearn","nilearn","AlexandreAbraham","2015-11-10 13:42:05","How is the user supposed to know which file corresponds to the timeseries / dimensionality he asked for?
","cb9d60c7fa9269c17910b18bf95e5a23aa41a8d2","(None, '', u'nilearn/datasets/func.py')"
"pull_request_commit_comment","806","nilearn","nilearn","KamalakerDadi","2015-11-10 15:35:16","For dimensionality = 25 and timeseries='eigen_regression' for example:
Output filename: 3T_Q1-Q6related468_MSMsulc_d25_ts3 where `d25` and `ts3` is what you have asked for ?

I have mentioned in the Returns doc saying that ts3 is eigen_regression and ts2 is multiple_spatial_regression. To keep it with Megatrawls naming.

And also worth to mention that we  uploaded in NITRC with these file naming. 
","cb9d60c7fa9269c17910b18bf95e5a23aa41a8d2","(None, '', u'nilearn/datasets/func.py')"
"pull_request_commit_comment","806","nilearn","nilearn","AlexandreAbraham","2015-11-10 22:23:33","You know how the filename is formatted but the user does not. Plus, you have to load the matrices before returning them so the user won't know what is the original filename.
","cb9d60c7fa9269c17910b18bf95e5a23aa41a8d2","(None, '', u'nilearn/datasets/func.py')"
"pull_request_commit_comment","806","nilearn","nilearn","bthirion","2015-11-11 22:18:27","If possible, a better reference would be welcome. I believe that this what @alexsavio pointed to in #841.
","cb9d60c7fa9269c17910b18bf95e5a23aa41a8d2","(None, '', u'nilearn/datasets/func.py')"
"pull_request_commit_comment","806","nilearn","nilearn","AlexandreAbraham","2015-11-16 09:03:31","Detail: if you start a new line, you can fit this the `for` loop on 2 lines.
","cb9d60c7fa9269c17910b18bf95e5a23aa41a8d2","(None, '', u'nilearn/datasets/func.py')"
"pull_request_commit_comment","806","nilearn","nilearn","AlexandreAbraham","2015-11-16 09:05:48","You don't need this.
","cb9d60c7fa9269c17910b18bf95e5a23aa41a8d2","(None, '', u'nilearn/datasets/func.py')"
"pull_request_commit_comment","806","nilearn","nilearn","AlexandreAbraham","2015-11-16 09:06:06","`for file_netmat in files_netmats:`
","cb9d60c7fa9269c17910b18bf95e5a23aa41a8d2","(None, '', u'nilearn/datasets/func.py')"
"pull_request_commit_comment","806","nilearn","nilearn","AlexandreAbraham","2015-11-16 09:06:25","`data_dir, file_netmats, resume=resume, verbose=verbose)`
","cb9d60c7fa9269c17910b18bf95e5a23aa41a8d2","(None, '', u'nilearn/datasets/func.py')"
"pull_request_commit_comment","806","nilearn","nilearn","AlexandreAbraham","2015-11-16 09:08:30","There is nothing to join here.
","cb9d60c7fa9269c17910b18bf95e5a23aa41a8d2","(None, '', u'nilearn/datasets/func.py')"
"pull_request_commit_comment","806","nilearn","nilearn","AlexandreAbraham","2015-11-16 09:38:36","Several problems in your function:
- you have 2 `for` loops: one to fetch the files, one to load them. They can be merged.
- you have 3 for loops intricated for the 3 parameters. You can factorize that using itertools
- you generate a string for each item of the dataset. That mean that, if I want to have the matrices of dimensionality 20, I'll have to parse your string, which is inconvenient, you can use 3 lists instead.
- there is no reason to call `_fetch_files` several times since you only download one file

So I would write:

``` python
    dataset_name = 'Megatrawls'
    data_dir = _get_dataset_dir(dataset_name, data_dir=data_dir, verbose=verbose)
    description = _get_dataset_descr(dataset_name)

    # Generate all combinations
    dims, tseries, mats = list(zip(*list(itertools.product(dimensionalities, timeseries, matrices))))
    files = []
    ts_map = dict(multiple_spatial_regression='ts2', eigen_regression='ts3')
    mat_map = dict(correlation='Znet1.txt', partial_correlation='Znet2.txt')
    for dim, tserie, mat in zip(dims, tseries, mats):
        filepath = os.path.join('3T_Q1-Q6related468_MSMsulc_d%d_%s' % (dim, ts_map[tserie]), mat_map[mat])
        files.append((filepath, url, opts))

    # Fetch all files
    files = _fetch_files(data_dir, files, resume=resume, verbose=verbose)

    # Load them
    files = [csv_to_array(f) for f in files]

    # Build the output bunch
    return Bunch(
        description=description,
        dimensionality=dims,
        timeseries=tseries,
        matrices=mats,
        data=files)
```

A good thing can also be to replace the `data` element by `correlation` and `partial_correlation` or both when pertinent.
","cb9d60c7fa9269c17910b18bf95e5a23aa41a8d2","(None, '', u'nilearn/datasets/func.py')"
"pull_request_commit_comment","806","nilearn","nilearn","AlexandreAbraham","2015-11-20 11:54:12","You can take a look at the test for Harvard Oxford fetching in test_atlas.py. Before fetching, we create a dummy XML file otherwise the function crash:

``` python
    dummy = open(os.path.join(ho_dir, 'HarvardOxford-Cortical.xml'), 'w')
    dummy.write(""<?xml version='1.0' encoding='us-ascii'?> ""
                ""<metadata>""
                ""</metadata>"")
    dummy.close()

    ho = atlas.fetch_atlas_harvard_oxford(target_atlas,
                                          data_dir=tst.tmpdir)
```

The problem is that your dummy file must be loadable by `csv_to_array` and empty files are not. You can, for exemple, replace the call of `csv_to_array` by `np.gen_from_txt` directly. You can also determine the filepaths that will be loaded by the function and make them non empty:

``` python
    for dim in [25, 100, 200, 300]:
        dummy = open(
            os.path.join(tst.tmp_dir,
                         'Megatrawls',
                         '3T_Q1-Q6related468_MSMsulc_d%d_ts3' % dim , 'Znet2.txt'), 'w')
        dummy.write(""1"")
        dummy.close()
```
","cb9d60c7fa9269c17910b18bf95e5a23aa41a8d2","(None, '', u'nilearn/datasets/tests/test_func.py')"
"pull_request_commit_comment","806","nilearn","nilearn","AlexandreAbraham","2015-11-20 12:01:49","Overriding the local version of `csv_to_array` should work too:

``` python

def do_nothing(*args, **kwargs):
    return np.zeros((0,))

func.csv_to_array = do_nothing
```
","cb9d60c7fa9269c17910b18bf95e5a23aa41a8d2","(None, '', u'nilearn/datasets/tests/test_func.py')"
"pull_request_commit_comment","806","nilearn","nilearn","lesteve","2015-11-26 08:23:43","You can use with `open(...) as` to simplify slightly the code (you don't need the .close line)
","cb9d60c7fa9269c17910b18bf95e5a23aa41a8d2","(None, '', u'nilearn/datasets/tests/test_func.py')"
"pull_request_commit_comment","806","nilearn","nilearn","lesteve","2015-11-26 08:24:14","Can you add a comment explaining why you need to create these mock files?
","cb9d60c7fa9269c17910b18bf95e5a23aa41a8d2","(None, '', u'nilearn/datasets/tests/test_func.py')"
"pull_request_commit_comment","806","nilearn","nilearn","lesteve","2015-11-26 08:26:07",":confused: what are you trying to test here? assert_true takes two arguments:

```
Signature: assert_true(expr, msg=None)
```
","cb9d60c7fa9269c17910b18bf95e5a23aa41a8d2","(None, '', u'nilearn/datasets/tests/test_func.py')"
"pull_request_commit_comment","806","nilearn","nilearn","lesteve","2015-11-26 08:27:40","It would be great to test that the invalid value is part of the error message. Also I would really make it obvious which one it is for people not familiar with this fetcher, i.e. call it 'invalid_input' rather than 'a10', 'multiple_sptial_regression', etc ...
","cb9d60c7fa9269c17910b18bf95e5a23aa41a8d2","(None, '', u'nilearn/datasets/tests/test_func.py')"
"pull_request_commit_comment","806","nilearn","nilearn","lesteve","2015-11-26 08:30:05","Use assert_raises_regex with an error message just for explicitness
","cb9d60c7fa9269c17910b18bf95e5a23aa41a8d2","(None, '', u'nilearn/datasets/tests/test_func.py')"
"pull_request_commit_comment","806","nilearn","nilearn","KamalakerDadi","2015-11-27 08:51:52","Well, here I know we could test more than this. Any suggestions would be welcome.
","cb9d60c7fa9269c17910b18bf95e5a23aa41a8d2","(None, '', u'nilearn/datasets/tests/test_func.py')"
"pull_request_commit_comment","806","nilearn","nilearn","lesteve","2015-11-27 16:45:14","you didn't use the name of the key here, I guess `description: ...`
","cb9d60c7fa9269c17910b18bf95e5a23aa41a8d2","(None, '', u'nilearn/datasets/func.py')"
"pull_request_commit_comment","806","nilearn","nilearn","lesteve","2015-11-30 08:04:02","This comment hasn't been tackled yet.
","cb9d60c7fa9269c17910b18bf95e5a23aa41a8d2","(None, '', u'nilearn/datasets/func.py')"
"pull_request_commit_comment","806","nilearn","nilearn","lesteve","2015-11-30 08:24:35","That's plotting only one matrix, right? If yes, just a naming suggestion: `plot_matrix(matrix, title)`
","cb9d60c7fa9269c17910b18bf95e5a23aa41a8d2","(None, '', u'examples/manipulating_visualizing/plot_visualize_megatrawls_netmats.py')"
"pull_request_commit_comment","806","nilearn","nilearn","lesteve","2015-11-30 08:27:02","matrices is a plural, use `matrix` instead
","cb9d60c7fa9269c17910b18bf95e5a23aa41a8d2","(None, '', u'examples/manipulating_visualizing/plot_visualize_megatrawls_netmats.py')"
"pull_request_commit_comment","806","nilearn","nilearn","lesteve","2015-11-30 08:27:11","Idem
","cb9d60c7fa9269c17910b18bf95e5a23aa41a8d2","(None, '', u'examples/manipulating_visualizing/plot_visualize_megatrawls_netmats.py')"
"pull_request_commit_comment","806","nilearn","nilearn","lesteve","2015-11-30 08:27:26","You don't need parentheses here
","cb9d60c7fa9269c17910b18bf95e5a23aa41a8d2","(None, '', u'examples/manipulating_visualizing/plot_visualize_megatrawls_netmats.py')"
"pull_request_commit_comment","806","nilearn","nilearn","lesteve","2015-11-30 09:07:01","You should probably use tuples for default arguments. Using mutable arguments as defaults is one of the Python gotchas. See http://docs.python-guide.org/en/latest/writing/gotchas/#mutable-default-arguments for example.
","cb9d60c7fa9269c17910b18bf95e5a23aa41a8d2","(None, '', u'nilearn/datasets/func.py')"
"pull_request_commit_comment","806","nilearn","nilearn","lesteve","2015-11-30 09:08:45","""Valid inputs"" seem slightly better.
","cb9d60c7fa9269c17910b18bf95e5a23aa41a8d2","(None, '', u'nilearn/datasets/func.py')"
"pull_request_commit_comment","806","nilearn","nilearn","lesteve","2015-11-30 09:10:30","This should be a comma: ""For full technical details about each method, refer to [3] [4] [5].""
","cb9d60c7fa9269c17910b18bf95e5a23aa41a8d2","(None, '', u'nilearn/datasets/func.py')"
"pull_request_commit_comment","806","nilearn","nilearn","lesteve","2015-11-30 09:11:23","I tend to use the python types, here, i.e. bool rather than boolean, str rather than string. In this case I would say:

str or list of str, optional
","cb9d60c7fa9269c17910b18bf95e5a23aa41a8d2","(None, '', u'nilearn/datasets/func.py')"
"pull_request_commit_comment","806","nilearn","nilearn","lesteve","2015-11-30 09:12:05","Maybe valid ""inputs"" are: ...
","cb9d60c7fa9269c17910b18bf95e5a23aa41a8d2","(None, '', u'nilearn/datasets/func.py')"
"pull_request_commit_comment","806","nilearn","nilearn","lesteve","2015-11-30 09:13:27","""partially downloaded"" seems to win the google contest against ""partly downloaded""
","cb9d60c7fa9269c17910b18bf95e5a23aa41a8d2","(None, '', u'nilearn/datasets/func.py')"
"pull_request_commit_comment","806","nilearn","nilearn","lesteve","2015-11-30 09:13:53","Data -> data
","cb9d60c7fa9269c17910b18bf95e5a23aa41a8d2","(None, '', u'nilearn/datasets/func.py')"
"pull_request_commit_comment","806","nilearn","nilearn","lesteve","2015-11-30 09:15:48","You can use else here. In other words there is no point using elif if your elif condition is the negation of your if condition.
","cb9d60c7fa9269c17910b18bf95e5a23aa41a8d2","(None, '', u'nilearn/datasets/func.py')"
"pull_request_commit_comment","806","nilearn","nilearn","lesteve","2015-11-30 09:16:59","should be **a** list, maybe you can use `collections.Sequence` rather than list, i.e. you could argue tuple could work.
","cb9d60c7fa9269c17910b18bf95e5a23aa41a8d2","(None, '', u'nilearn/datasets/func.py')"
"pull_request_commit_comment","806","nilearn","nilearn","lesteve","2015-11-30 09:28:54","Check each key content, e.g.:

``` python
assert_equal(correlations.dimensions_partial, [25, 100, 200, 300])
assert_equal(correlations.timeseries_partial=['eigen_regression'] * 4
# etc...
```

Side-comment: correlations is not a great name, maybe just megatrawl_dataset or something similar.
","cb9d60c7fa9269c17910b18bf95e5a23aa41a8d2","(None, '', u'nilearn/datasets/tests/test_func.py')"
"pull_request_commit_comment","806","nilearn","nilearn","lesteve","2015-12-17 14:24:15",":confused: why don't you say `isinstance(inputs, collection.SequenceType)` or something like that if you want your inputs to be a list.

Also amend the error message to say ""sequence"" and show the type of the inputs.
","cb9d60c7fa9269c17910b18bf95e5a23aa41a8d2","(None, '', u'nilearn/_utils/param_validation.py')"
"pull_request_commit_comment","806","nilearn","nilearn","lesteve","2015-12-17 14:26:18","This doesn't seem like this is general enough to be in _utils.param_validation. Why not put it next to your fetch_megatrawls function?
","cb9d60c7fa9269c17910b18bf95e5a23aa41a8d2","(None, '', u'nilearn/_utils/param_validation.py')"
"pull_request_commit_comment","806","nilearn","nilearn","lesteve","2015-12-17 14:27:33","You should really really really configure your editor to run pyflake8. This would have shown you that izip is unused.
","cb9d60c7fa9269c17910b18bf95e5a23aa41a8d2","(None, '', u'nilearn/_utils/param_validation.py')"
"pull_request_commit_comment","806","nilearn","nilearn","KamalakerDadi","2015-12-17 14:31:30","You mean port this function directly into func.py or code ?

Why is it not do you think ?
","cb9d60c7fa9269c17910b18bf95e5a23aa41a8d2","(None, '', u'nilearn/_utils/param_validation.py')"
"pull_request_commit_comment","806","nilearn","nilearn","lesteve","2015-12-17 14:57:05","Answered that IRL.
","cb9d60c7fa9269c17910b18bf95e5a23aa41a8d2","(None, '', u'nilearn/_utils/param_validation.py')"
"pull_request_commit_comment","806","nilearn","nilearn","lesteve","2015-12-17 15:04:33","This import doesn't seem to be used.
","cb9d60c7fa9269c17910b18bf95e5a23aa41a8d2","(4, '', u'nilearn/datasets/tests/test_func.py')"
"pull_request_commit_comment","806","nilearn","nilearn","AlexandreAbraham","2015-12-18 10:16:37","I find the output overly complicated. Why splitting everything between `correlation` and `partial_correlation` and not having three lists in the bunch: `dimensionality`, `timeseries` and `matrices`? I am still convinced that allowing only one value per parameter would be much simpler: this is what we already do for most of the fetchers (for harvard oxford, only one type of atlas is allowed, for aal, it's the same, only one version at a time).
","cb9d60c7fa9269c17910b18bf95e5a23aa41a8d2","(None, '', u'nilearn/datasets/func.py')"
"pull_request_commit_comment","806","nilearn","nilearn","banilo","2015-12-19 22:46:20","`plt` might not be defined upon function call
","cb9d60c7fa9269c17910b18bf95e5a23aa41a8d2","(None, '', u'examples/manipulating_visualizing/plot_visualize_megatrawls_netmats.py')"
"pull_request_commit_comment","806","nilearn","nilearn","banilo","2015-12-19 22:49:20","is it possible to make this comment more informative?
","cb9d60c7fa9269c17910b18bf95e5a23aa41a8d2","(None, '', u'examples/manipulating_visualizing/plot_visualize_megatrawls_netmats.py')"
"pull_request_commit_comment","806","nilearn","nilearn","banilo","2015-12-19 22:51:30","minor comment, but `tseries` might be more natural
","cb9d60c7fa9269c17910b18bf95e5a23aa41a8d2","(None, '', u'examples/manipulating_visualizing/plot_visualize_megatrawls_netmats.py')"
"pull_request_commit_comment","806","nilearn","nilearn","banilo","2015-12-19 22:53:54","grammar
","cb9d60c7fa9269c17910b18bf95e5a23aa41a8d2","(None, '', u'nilearn/datasets/description/Megatrawls.rst')"
"pull_request_commit_comment","806","nilearn","nilearn","banilo","2015-12-19 22:57:06","We might want to move this section to the corresponding *.rst file
","cb9d60c7fa9269c17910b18bf95e5a23aa41a8d2","(None, '', u'nilearn/datasets/func.py')"
"pull_request_commit_comment","806","nilearn","nilearn","banilo","2015-12-19 22:58:21","Aren't you missing some cases here. Dimensinoalities appear to be `[25, 50, 100, 200, 300]`
","cb9d60c7fa9269c17910b18bf95e5a23aa41a8d2","(None, '', u'nilearn/datasets/tests/test_func.py')"
"pull_request_commit_comment","806","nilearn","nilearn","bthirion","2015-12-20 09:42:14","`time_series` would actually be much better
","cb9d60c7fa9269c17910b18bf95e5a23aa41a8d2","(None, '', u'examples/manipulating_visualizing/plot_visualize_megatrawls_netmats.py')"
"pull_request_commit","806","nilearn","nilearn","KamalakerDadi","2015-10-28 08:38:38","New fetcher for Megatrawls Netmats, Tests, Example, Doc","22cfc9e5c485c749a4e3eafd2380a65a683434aa",""
"pull_request_commit","806","nilearn","nilearn","KamalakerDadi","2015-10-28 14:20:59","Addressed comments as description, test for description, Bunch return","9e4206f0800017959ae3acf8351e46c48536e264",""
"pull_request_commit","806","nilearn","nilearn","KamalakerDadi","2015-11-03 16:13:07","Addressed comments: references, _ removed, better names, etc","cdc48dd0fa3bfc90fbf5d88b13d76ecc5a72565d",""
"pull_request_commit","806","nilearn","nilearn","KamalakerDadi","2015-11-10 12:01:01","Addressed comments related to namings of parameters","d0c52ec02064363ca71a67883d77e07552c382cc",""
"pull_request_commit","806","nilearn","nilearn","KamalakerDadi","2015-11-13 13:57:25","Addressed comments and rebase","67a8198bb0432d6146116066b33fdab6df276977",""
"pull_request_commit","806","nilearn","nilearn","KamalakerDadi","2015-11-13 15:02:11","Minor changes","c123caefdb1f4f9dbdd82ebe3d4abb3e097a953f",""
"pull_request_commit","806","nilearn","nilearn","KamalakerDadi","2015-11-22 20:44:09","Addressed comments made by Alex","9b8e57e26e0255f255d290ca948a9fa3f6e0319c",""
"pull_request_commit","806","nilearn","nilearn","KamalakerDadi","2015-11-24 10:31:30","corrected doubling the url","f0ffd60e5624805a2b55549bb8d2906f746255a3",""
"pull_request_commit","806","nilearn","nilearn","KamalakerDadi","2015-11-26 21:39:45","Addressed Loic comments, nitpicks in documentation, tests","e5a9a96d652091252ac17ecd15688a1dd22768c7",""
"pull_request_commit","806","nilearn","nilearn","KamalakerDadi","2015-11-29 10:10:18","Fixed description","00a5016613fc762d7201785b52abc3876834e9fb",""
"pull_request_commit","806","nilearn","nilearn","KamalakerDadi","2015-12-14 19:57:28","Changed example layout, Loic's comments, changed function layout to param_validation","bff1ad7a70a1115ac360c294f00762cff3b7ecb0",""
"pull_request_commit","806","nilearn","nilearn","KamalakerDadi","2015-12-15 15:18:39","Rebase","085ad3cccac29d303c1de6cd004d3963cd2e9e31",""
"pull_request_commit","806","nilearn","nilearn","KamalakerDadi","2015-12-16 12:04:59","For good rendering of attributes","b63b9577ca1333269e2950ef6b4ef148314977ee",""
"pull_request_commit","806","nilearn","nilearn","KamalakerDadi","2015-12-21 16:31:02","Changed design layout. Now accepts only one input parameter.","cb9d60c7fa9269c17910b18bf95e5a23aa41a8d2",""
