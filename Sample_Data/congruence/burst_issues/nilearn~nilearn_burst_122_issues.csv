,rectype,issueid,project_owner,project_name,actor,time,text,action,title
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,1548,nilearn,nilearn,vukovicnikola,2017-11-11 11:36:57,"I am fitting a SpaceNet Classifier, passing in a white matter mask (voxels of interest = 1), attached: [mni_152_wm_mask.nii.zip](https://github.com/nilearn/nilearn/files/1463701/mni_152_wm_mask.nii.zip)
```
mnimask = './mni152_template/mni_152_wm_mask.nii'
decoder = SpaceNetClassifier(cv=cv, memory=""nilearn_cache"", penalty='tv-l1', memory_level=2, n_jobs=1, mask=mnimask)
```

Interestingly, when I later plot the coefficients against said mask, it seems like they lie precisely outside the mask (i.e. ""0"" voxels). 
![wm](https://user-images.githubusercontent.com/6719774/32688991-6cab26ea-c6db-11e7-8f83-ebb8988343a2.jpg)

Is this normal behaviour? Does nilearn use some non-standard masking convention? Unfortunately, I couldn't find information about this in the User Manual.",start issue,Unexpected mask behaviour
2,issue_closed,1548,nilearn,nilearn,vukovicnikola,2017-11-20 16:21:40,,closed issue,Unexpected mask behaviour
3,issue_comment,1548,nilearn,nilearn,bthirion,2017-11-12 19:59:48,"Nilearn actually considers the non-zero values as the ROI. So the behavior that you report is very surprising.  Is the masked sampled at the same resolution as the data that you are testing ?  I would suspect some issue occurring due to data resampling.
Note also that by default,  only 20% of the brain volume are considered by the spacenet estimator.
 ",,
4,issue_comment,1548,nilearn,nilearn,bthirion,2017-11-12 22:03:52,"Of course, the vooxels should be chosen within the ROI.
You might want to set the screening_percentile to 100 to double check 
the behavior without the screening step.

Also, have you tried with a simpler (non-sparse) classifier, e.g. SVM ? 
If there is an issue in mask definition/corespondence, you should see it.

HTH

On 12/11/2017 22:56, Nikola Vukovic wrote:
>
> Thanks for your reply @bthirion <https://github.com/bthirion>! The 
> data has been normalised to MNI space, and the mask is also MNI152. 
> Though, the resolution is less in data (79 x 95 x 79 voxels, 2 mm 
> isotropic) than in MNI template (193 x 229 x 193, 1mm isotropic) from 
> which masks are created. Would this be a problem?
> As for the screening_percentile parameter, would it still not choose 
> 20% of voxels -within- the ROI, not outside? Any suggestions for 
> troubleshooting this are welcome. Thank you!
>
> —
> You are receiving this because you were mentioned.
> Reply to this email directly, view it on GitHub 
> <https://github.com/nilearn/nilearn/issues/1548#issuecomment-343771351>, 
> or mute the thread 
> <https://github.com/notifications/unsubscribe-auth/AAOT1mu-twbMaM0AdiTs6SrqzMqzD27Tks5s12megaJpZM4Qadjv>.
>

",,
5,issue_comment,1548,nilearn,nilearn,bthirion,2017-11-12 22:17:11,"Normally, mask resampling is done whenever necessary by the estimator (the data are resampled at mask resolution). For debugging, pre-resampling the mask to the data resolution might help, but it not a pre-requisite for normal use of the methods. ",,
6,issue_comment,1548,nilearn,nilearn,KamalakerDadi,2017-11-11 13:17:11,"If I understood your analysis properly, what you need to give is a gray matter mask.

If user has given a mask then it implies that analysis is done according to the provided mask. Please refer to this manual which describes about masking and related. http://nilearn.github.io/manipulating_images/masker_objects.html",,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,1547,nilearn,nilearn,KamalakerDadi,2017-11-10 15:19:53,"Attempts to fix the issues with matplotlib 2.1.0 by removing temporary work-around with CIs.
We are trying this way with this small patch because to release soon for teaching.

",start issue,Add a patch to fix issues with matplotlib 2.1.0
2,issue_closed,1547,nilearn,nilearn,GaelVaroquaux,2017-11-14 12:07:19,,closed issue,Add a patch to fix issues with matplotlib 2.1.0
3,pull_request_title,1547,nilearn,nilearn,KamalakerDadi,2017-11-10 15:19:53,"Attempts to fix the issues with matplotlib 2.1.0 by removing temporary work-around with CIs.
We are trying this way with this small patch because to release soon for teaching.

",01aab0f420dfb9ec2dab24a2124fdd57a2d0ead6,Add a patch to fix issues with matplotlib 2.1.0
4,pull_request_merged,1547,nilearn,nilearn,GaelVaroquaux,2017-11-14 12:07:19,Add a patch to fix issues with matplotlib 2.1.0,2520333761ddee468cfb948d5ad12525d9d186c3,Pull request merge from KamalakerDadi/nilearn:matplotlib to nilearn/nilearn:master
5,issue_comment,1547,nilearn,nilearn,bthirion,2017-11-12 21:10:54,"The patch looks good to me, but there is a Travais failure.",,
6,issue_comment,1547,nilearn,nilearn,KamalakerDadi,2017-11-12 21:17:15,">but there is a Travais failure.

I will fix it. Travis failure is because one of the function is fully masked test and returns empty list in the effect of this patch. I will test that function only if matplotlib is not recent.",,
7,issue_comment,1547,nilearn,nilearn,KamalakerDadi,2017-11-12 21:17:57,Remaining all failures should hopefully be fixed with this PR #1545 ,,
8,issue_comment,1547,nilearn,nilearn,KamalakerDadi,2017-11-14 10:31:34,If you are fine with this PR #1545 . I will rebase to check again everything is smooth.,,
9,issue_comment,1547,nilearn,nilearn,codecov[bot],2017-11-13 09:31:54,"# [Codecov](https://codecov.io/gh/nilearn/nilearn/pull/1547?src=pr&el=h1) Report
> Merging [#1547](https://codecov.io/gh/nilearn/nilearn/pull/1547?src=pr&el=desc) into [master](https://codecov.io/gh/nilearn/nilearn/commit/726129022f41cb2fe981999cbef5732b495c0eaf?src=pr&el=desc) will **decrease** coverage by `<.01%`.
> The diff coverage is `100%`.

[![Impacted file tree graph](https://codecov.io/gh/nilearn/nilearn/pull/1547/graphs/tree.svg?width=650&height=150&src=pr&token=KpYArSdyXv)](https://codecov.io/gh/nilearn/nilearn/pull/1547?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##           master    #1547      +/-   ##
==========================================
- Coverage   94.46%   94.45%   -0.01%     
==========================================
  Files         122      122              
  Lines       14928    14939      +11     
==========================================
+ Hits        14101    14110       +9     
- Misses        827      829       +2
```


| [Impacted Files](https://codecov.io/gh/nilearn/nilearn/pull/1547?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [nilearn/plotting/tests/test\_displays.py](https://codecov.io/gh/nilearn/nilearn/pull/1547?src=pr&el=tree#diff-bmlsZWFybi9wbG90dGluZy90ZXN0cy90ZXN0X2Rpc3BsYXlzLnB5) | `100% <100%> (ø)` | :arrow_up: |
| [nilearn/plotting/tests/test\_img\_plotting.py](https://codecov.io/gh/nilearn/nilearn/pull/1547?src=pr&el=tree#diff-bmlsZWFybi9wbG90dGluZy90ZXN0cy90ZXN0X2ltZ19wbG90dGluZy5weQ==) | `100% <100%> (ø)` | :arrow_up: |
| [nilearn/plotting/displays.py](https://codecov.io/gh/nilearn/nilearn/pull/1547?src=pr&el=tree#diff-bmlsZWFybi9wbG90dGluZy9kaXNwbGF5cy5weQ==) | `94.04% <100%> (-0.29%)` | :arrow_down: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/nilearn/nilearn/pull/1547?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/nilearn/nilearn/pull/1547?src=pr&el=footer). Last update [7261290...01aab0f](https://codecov.io/gh/nilearn/nilearn/pull/1547?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",,
10,pull_request_commit_comment,1547,nilearn,nilearn,GaelVaroquaux,2017-11-13 16:22:14,"I wonder whether this is not a strategy that we could use always (ie for all matplotlib version). If the data is fully masked, there is no point trying to plot anything.

Also, could you add a comment that explains what the if does? It's not obvious to people, I guess.",01aab0f420dfb9ec2dab24a2124fdd57a2d0ead6,"(None, '', u'nilearn/plotting/displays.py')"
11,pull_request_commit_comment,1547,nilearn,nilearn,GaelVaroquaux,2017-11-13 16:22:58,"I think that we should test always, independent of the matplotlib version: the code below should always work.",01aab0f420dfb9ec2dab24a2124fdd57a2d0ead6,"(None, '', u'nilearn/plotting/tests/test_displays.py')"
12,pull_request_commit_comment,1547,nilearn,nilearn,GaelVaroquaux,2017-11-13 16:24:33,We should also close the plot at the end of the function to save memory (for instance by calling oslicer.close()),01aab0f420dfb9ec2dab24a2124fdd57a2d0ead6,"(None, '', u'nilearn/plotting/tests/test_displays.py')"
13,pull_request_commit_comment,1547,nilearn,nilearn,GaelVaroquaux,2017-11-13 16:25:22,"It would be good if the code below ran whatever the matplotlib version is. In other words, it would be good if we didn't skip this test for 2.1.0",01aab0f420dfb9ec2dab24a2124fdd57a2d0ead6,"(None, '', u'nilearn/plotting/tests/test_img_plotting.py')"
14,pull_request_commit_comment,1547,nilearn,nilearn,KamalakerDadi,2017-11-14 08:47:50,"For other versions (!=2.1.0), code returns display object which is not empty. Now, since we ```continue``` code returns empty display object. That's why I kept only to recent matplotlib.",01aab0f420dfb9ec2dab24a2124fdd57a2d0ead6,"(None, '', u'nilearn/plotting/tests/test_img_plotting.py')"
15,pull_request_commit,1547,nilearn,nilearn,KamalakerDadi,2017-11-10 15:12:33,Add a patch to fix issues with matplotlib 2.1.0,bbe019e5d67102a6871b58fc61428ca69f6428ea,
16,pull_request_commit,1547,nilearn,nilearn,KamalakerDadi,2017-11-13 09:31:20,FIX: test failure. AVoid testing this function when matplotlib is 2.1.0,b8a2ce989528397e9d720c86d17f95f5a9fa886f,
17,pull_request_commit,1547,nilearn,nilearn,KamalakerDadi,2017-11-14 10:02:27,Addressed comments: removed dependent matplotlib version check,01aab0f420dfb9ec2dab24a2124fdd57a2d0ead6,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,1565,nilearn,nilearn,jeromedockes,2017-11-19 20:25:24,scipy minimal version just got bumped to 0.14 but it is still 0.9 in README.rst,start issue,update required scipy version in README.rst
2,issue_closed,1565,nilearn,nilearn,GaelVaroquaux,2017-11-19 20:44:15,,closed issue,update required scipy version in README.rst
3,pull_request_title,1565,nilearn,nilearn,jeromedockes,2017-11-19 20:25:24,scipy minimal version just got bumped to 0.14 but it is still 0.9 in README.rst,a4442ff203beda5d9da6674f74217560a535bfa7,update required scipy version in README.rst
4,pull_request_merged,1565,nilearn,nilearn,GaelVaroquaux,2017-11-19 20:44:15,update required scipy version in README.rst,627be2dc74c793b4d489ba62931288d8b71ef401,Pull request merge from jeromedockes/nilearn:scipy_version_in_readme to nilearn/nilearn:master
5,issue_comment,1565,nilearn,nilearn,codecov[bot],2017-11-19 21:51:35,"# [Codecov](https://codecov.io/gh/nilearn/nilearn/pull/1565?src=pr&el=h1) Report
> Merging [#1565](https://codecov.io/gh/nilearn/nilearn/pull/1565?src=pr&el=desc) into [master](https://codecov.io/gh/nilearn/nilearn/commit/adafe620f49d1781d55a7b83c660d9aaa6d8ec31?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/nilearn/nilearn/pull/1565/graphs/tree.svg?width=650&token=KpYArSdyXv&height=150&src=pr)](https://codecov.io/gh/nilearn/nilearn/pull/1565?src=pr&el=tree)

```diff
@@           Coverage Diff           @@
##           master    #1565   +/-   ##
=======================================
  Coverage   94.45%   94.45%           
=======================================
  Files         125      125           
  Lines       15347    15347           
=======================================
  Hits        14496    14496           
  Misses        851      851
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/nilearn/nilearn/pull/1565?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/nilearn/nilearn/pull/1565?src=pr&el=footer). Last update [adafe62...a4442ff](https://codecov.io/gh/nilearn/nilearn/pull/1565?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",,
6,pull_request_commit,1565,nilearn,nilearn,jeromedockes,2017-11-19 20:23:35,update required scipy version in README.rst,a4442ff203beda5d9da6674f74217560a535bfa7,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,1574,nilearn,nilearn,TheChymera,2017-11-23 17:53:32,"I am trying to plot a few voxels in a NIfTI with white on top of a template, I am calling `nilearn.plotting.plot_roi()` in the following fashion:

```
from nilearn.plotting import plot_roi
import matplotlib

skullcolor = matplotlib.colors.ListedColormap(['#FFFFFF','#FFFFFF'], name='skullcolor')
plot_roi(img,
        bg_img='/home/chymera/ni_data/templates/DSURQEc_40micron_average.nii',
        display_mode='yx',
        draw_cross=False,
        cmap=skullcolor,
        )
```

The result looks like this:

![figure_1](https://user-images.githubusercontent.com/950524/33184849-2ab92874-d07f-11e7-9fed-0dfee57439b6.png)

The voxels intended to be white are gray. This can't be prevented by adding more white entries to the listedcolormap or by tweaking the `dim` parameter (indeed, this seems to just affect the background image). The value of the voxels in `img` is 1.

Any idea how I can get nilearn to display the colormap colors correctly?
",start issue,plotting.plot_roi does not display colors correctly
2,issue_closed,1574,nilearn,nilearn,TheChymera,2017-11-27 07:22:51,,closed issue,plotting.plot_roi does not display colors correctly
3,issue_comment,1574,nilearn,nilearn,KamalakerDadi,2017-11-23 21:24:33,"Can you provide images ?
",,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,1568,nilearn,nilearn,emdupre,2017-11-20 21:48:35,Graphs in the [plot_multi_subject_connectome example](http://nilearn.github.io/auto_examples/03_connectivity/plot_multi_subject_connectome.html#displaying-results) do not show the atlas labels. These should be added for interpretation.,start issue,Missing labels on plot_multi_subject_connectome graphs
2,issue_closed,1568,nilearn,nilearn,GaelVaroquaux,2017-11-22 14:26:48,,closed issue,Missing labels on plot_multi_subject_connectome graphs
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,1540,nilearn,nilearn,KamalakerDadi,2017-11-06 19:48:49,"PRs #1525 & #1535 which are now merged in master have temporary work around to FIX failures with recent matplotlib 2.1.0. 
Those changes should be reverted to normal after new version in matplotlib is released.

On top of that, one of the environment in AppVeyor Python 3.4.3 has conflict issues with new matplotlib. We should think of moving to Python 3.5.x
For instance, see failure in https://ci.appveyor.com/project/nilearn-ci/nilearn/build/1.0.2109/job/a4pfv1rqeish94x6",start issue,Revert changes in all CIs after matplotlib 2.1.1 is released
2,issue_closed,1540,nilearn,nilearn,KamalakerDadi,2017-11-14 21:33:00,,closed issue,Revert changes in all CIs after matplotlib 2.1.1 is released
3,issue_comment,1540,nilearn,nilearn,KamalakerDadi,2017-11-14 21:33:00,Closing with PR #1547 ,,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,1564,nilearn,nilearn,GaelVaroquaux,2017-11-18 20:01:12,,start issue,Bump scipy minimal version to 0.14
2,issue_closed,1564,nilearn,nilearn,GaelVaroquaux,2017-11-19 15:23:47,,closed issue,Bump scipy minimal version to 0.14
3,pull_request_title,1564,nilearn,nilearn,GaelVaroquaux,2017-11-18 20:01:12,,289771d7389cd56c2f91ebfb152e013eb42a6cd3,Bump scipy minimal version to 0.14
4,pull_request_merged,1564,nilearn,nilearn,GaelVaroquaux,2017-11-19 15:23:47,Bump scipy minimal version to 0.14,dc6b15ea17c39327549233ba6e54fc684b041729,Pull request merge from GaelVaroquaux/nilearn:bump_scipy_version to nilearn/nilearn:master
5,issue_comment,1564,nilearn,nilearn,KamalakerDadi,2017-11-18 22:24:48," >Does this needs to be added above sudo: required ?
 https://docs.travis-ci.com/user/reference/trusty/
>I think that actually xenial is not supported on travis :(

Is it good to move to xenial ?",,
6,issue_comment,1564,nilearn,nilearn,KamalakerDadi,2017-11-18 22:27:33,">Wow, I uncovered few bugs by changing the versions on the CI.

Was it with resample or fast_svd ?",,
7,issue_comment,1564,nilearn,nilearn,codecov[bot],2017-11-18 20:11:12,"# [Codecov](https://codecov.io/gh/nilearn/nilearn/pull/1564?src=pr&el=h1) Report
> Merging [#1564](https://codecov.io/gh/nilearn/nilearn/pull/1564?src=pr&el=desc) into [master](https://codecov.io/gh/nilearn/nilearn/commit/d14a60d5fe4d09c8b10a44effe534b482d6f6db2?src=pr&el=desc) will **decrease** coverage by `0.34%`.
> The diff coverage is `100%`.

[![Impacted file tree graph](https://codecov.io/gh/nilearn/nilearn/pull/1564/graphs/tree.svg?height=150&width=650&src=pr&token=KpYArSdyXv)](https://codecov.io/gh/nilearn/nilearn/pull/1564?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##           master    #1564      +/-   ##
==========================================
- Coverage   94.22%   93.87%   -0.35%     
==========================================
  Files         122      122              
  Lines       15011    14995      -16     
==========================================
- Hits        14144    14077      -67     
- Misses        867      918      +51
```


| [Impacted Files](https://codecov.io/gh/nilearn/nilearn/pull/1564?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [nilearn/version.py](https://codecov.io/gh/nilearn/nilearn/pull/1564?src=pr&el=tree#diff-bmlsZWFybi92ZXJzaW9uLnB5) | `73.91% <ø> (ø)` | :arrow_up: |
| [nilearn/image/resampling.py](https://codecov.io/gh/nilearn/nilearn/pull/1564?src=pr&el=tree#diff-bmlsZWFybi9pbWFnZS9yZXNhbXBsaW5nLnB5) | `98.12% <ø> (-0.95%)` | :arrow_down: |
| [nilearn/signal.py](https://codecov.io/gh/nilearn/nilearn/pull/1564?src=pr&el=tree#diff-bmlsZWFybi9zaWduYWwucHk=) | `91.07% <100%> (+5.9%)` | :arrow_up: |
| [nilearn/\_utils/compat.py](https://codecov.io/gh/nilearn/nilearn/pull/1564?src=pr&el=tree#diff-bmlsZWFybi9fdXRpbHMvY29tcGF0LnB5) | `38.29% <0%> (-59.58%)` | :arrow_down: |
| [nilearn/\_utils/fixes/matplotlib\_backports.py](https://codecov.io/gh/nilearn/nilearn/pull/1564?src=pr&el=tree#diff-bmlsZWFybi9fdXRpbHMvZml4ZXMvbWF0cGxvdGxpYl9iYWNrcG9ydHMucHk=) | `66.66% <0%> (-33.34%)` | :arrow_down: |
| [nilearn/\_utils/fixes/\_\_init\_\_.py](https://codecov.io/gh/nilearn/nilearn/pull/1564?src=pr&el=tree#diff-bmlsZWFybi9fdXRpbHMvZml4ZXMvX19pbml0X18ucHk=) | `75% <0%> (-15%)` | :arrow_down: |
| [nilearn/\_\_init\_\_.py](https://codecov.io/gh/nilearn/nilearn/pull/1564?src=pr&el=tree#diff-bmlsZWFybi9fX2luaXRfXy5weQ==) | `87.5% <0%> (-12.5%)` | :arrow_down: |
| [nilearn/decoding/tests/test\_searchlight.py](https://codecov.io/gh/nilearn/nilearn/pull/1564?src=pr&el=tree#diff-bmlsZWFybi9kZWNvZGluZy90ZXN0cy90ZXN0X3NlYXJjaGxpZ2h0LnB5) | `93.33% <0%> (-6.67%)` | :arrow_down: |
| [nilearn/plotting/tests/test\_surf\_plotting.py](https://codecov.io/gh/nilearn/nilearn/pull/1564?src=pr&el=tree#diff-bmlsZWFybi9wbG90dGluZy90ZXN0cy90ZXN0X3N1cmZfcGxvdHRpbmcucHk=) | `95.58% <0%> (-3.44%)` | :arrow_down: |
| [nilearn/plotting/glass\_brain.py](https://codecov.io/gh/nilearn/nilearn/pull/1564?src=pr&el=tree#diff-bmlsZWFybi9wbG90dGluZy9nbGFzc19icmFpbi5weQ==) | `86.25% <0%> (-1.25%)` | :arrow_down: |
| ... and [8 more](https://codecov.io/gh/nilearn/nilearn/pull/1564?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/nilearn/nilearn/pull/1564?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/nilearn/nilearn/pull/1564?src=pr&el=footer). Last update [d14a60d...21652c1](https://codecov.io/gh/nilearn/nilearn/pull/1564?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",,
8,issue_comment,1564,nilearn,nilearn,codecov[bot],2017-11-18 20:11:12,"# [Codecov](https://codecov.io/gh/nilearn/nilearn/pull/1564?src=pr&el=h1) Report
> Merging [#1564](https://codecov.io/gh/nilearn/nilearn/pull/1564?src=pr&el=desc) into [master](https://codecov.io/gh/nilearn/nilearn/commit/d14a60d5fe4d09c8b10a44effe534b482d6f6db2?src=pr&el=desc) will **increase** coverage by `0.07%`.
> The diff coverage is `100%`.

[![Impacted file tree graph](https://codecov.io/gh/nilearn/nilearn/pull/1564/graphs/tree.svg?width=650&height=150&src=pr&token=KpYArSdyXv)](https://codecov.io/gh/nilearn/nilearn/pull/1564?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##           master    #1564      +/-   ##
==========================================
+ Coverage   94.22%   94.29%   +0.07%     
==========================================
  Files         122      122              
  Lines       15011    14997      -14     
==========================================
- Hits        14144    14142       -2     
+ Misses        867      855      -12
```


| [Impacted Files](https://codecov.io/gh/nilearn/nilearn/pull/1564?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [nilearn/version.py](https://codecov.io/gh/nilearn/nilearn/pull/1564?src=pr&el=tree#diff-bmlsZWFybi92ZXJzaW9uLnB5) | `73.91% <ø> (ø)` | :arrow_up: |
| [nilearn/signal.py](https://codecov.io/gh/nilearn/nilearn/pull/1564?src=pr&el=tree#diff-bmlsZWFybi9zaWduYWwucHk=) | `91.07% <100%> (+5.9%)` | :arrow_up: |
| [nilearn/decomposition/base.py](https://codecov.io/gh/nilearn/nilearn/pull/1564?src=pr&el=tree#diff-bmlsZWFybi9kZWNvbXBvc2l0aW9uL2Jhc2UucHk=) | `95.48% <100%> (ø)` | :arrow_up: |
| [nilearn/image/resampling.py](https://codecov.io/gh/nilearn/nilearn/pull/1564?src=pr&el=tree#diff-bmlsZWFybi9pbWFnZS9yZXNhbXBsaW5nLnB5) | `99.06% <100%> (ø)` | :arrow_up: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/nilearn/nilearn/pull/1564?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/nilearn/nilearn/pull/1564?src=pr&el=footer). Last update [d14a60d...289771d](https://codecov.io/gh/nilearn/nilearn/pull/1564?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",,
9,pull_request_commit_comment,1564,nilearn,nilearn,KamalakerDadi,2017-11-18 20:14:20,I don't think there is 0.14.2 ?,289771d7389cd56c2f91ebfb152e013eb42a6cd3,"(None, '', u'.travis.yml')"
10,pull_request_commit_comment,1564,nilearn,nilearn,KamalakerDadi,2017-11-18 21:42:24,"Does this needs to be added above sudo: required ?
https://docs.travis-ci.com/user/reference/trusty/

I had a similar problem while bumping scikit-learn to 0.15. That's why added dist: trusty",289771d7389cd56c2f91ebfb152e013eb42a6cd3,"(3, '', u'.travis.yml')"
11,pull_request_commit_comment,1564,nilearn,nilearn,KamalakerDadi,2017-11-18 22:29:42,Probably this should be 0.14 now.,289771d7389cd56c2f91ebfb152e013eb42a6cd3,"(None, '', u'doc/whats_new.rst')"
12,pull_request_commit,1564,nilearn,nilearn,GaelVaroquaux,2017-11-18 20:00:29,Bump scipy minimal version to 0.14,359f4fe9a548130f7f5e693e788e96b809f55be8,
13,pull_request_commit,1564,nilearn,nilearn,GaelVaroquaux,2017-11-18 20:10:50,Acomodate conda with package versions,21652c16cfb22b66d81f93bf2a97bdafbabe97f9,
14,pull_request_commit,1564,nilearn,nilearn,GaelVaroquaux,2017-11-18 20:15:50,MAINT: strive to find a 0.14 scipy on conda,aa94981287274255940bab5419766e48abf2ac0c,
15,pull_request_commit,1564,nilearn,nilearn,GaelVaroquaux,2017-11-18 20:40:00,Fiddle with the scipy version,5dc03d06510ccc8c36a1bb01d675d314d6d76e24,
16,pull_request_commit,1564,nilearn,nilearn,GaelVaroquaux,2017-11-18 21:10:32,scipy 0.14.0 has the bug,57b7a64aaf4b477233bcb9bd4902e2b600599fee,
17,pull_request_commit,1564,nilearn,nilearn,GaelVaroquaux,2017-11-18 21:22:47,Try to bump the travis distribution version,a16a59d8698b934ff0c576afb6ab065a2ea0414a,
18,pull_request_commit,1564,nilearn,nilearn,GaelVaroquaux,2017-11-18 21:33:44,More recent ubuntu on travis,7cd637448d7858da6bcecbad96eb5cbdc449d0d5,
19,pull_request_commit,1564,nilearn,nilearn,GaelVaroquaux,2017-11-18 21:46:29,Fake xenial on travis,ad4d6a7b604815613ad8314a968d393091dae27d,
20,pull_request_commit,1564,nilearn,nilearn,GaelVaroquaux,2017-11-18 22:00:43,Fix bug on scikit-learn 0.17,2e8a20611333885ea0735b5ce156e8771465c1a4,
21,pull_request_commit,1564,nilearn,nilearn,GaelVaroquaux,2017-11-18 22:05:59,Try to fix resampling bug,cc995f7a2322391e80b0855babddb24b3d14a298,
22,pull_request_commit,1564,nilearn,nilearn,GaelVaroquaux,2017-11-18 22:17:45,Bug in non-native endianness resampling,006f1f71091f65f0d9382cc3e0f988a3dadc634c,
23,pull_request_commit,1564,nilearn,nilearn,GaelVaroquaux,2017-11-19 14:20:06,The minimum scipy version is 0.14 not 0.14.1,289771d7389cd56c2f91ebfb152e013eb42a6cd3,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,1552,nilearn,nilearn,cbedetti,2017-11-16 17:17:35,"Change `anat_img` argument to `bg_img` in plot_prob_atlas and add a DeprecationWarning.
See issue #965 ",start issue,Harmonize anat_img to bg_img
2,issue_closed,1552,nilearn,nilearn,GaelVaroquaux,2017-11-17 05:18:28,,closed issue,Harmonize anat_img to bg_img
3,pull_request_title,1552,nilearn,nilearn,cbedetti,2017-11-16 17:17:35,"Change `anat_img` argument to `bg_img` in plot_prob_atlas and add a DeprecationWarning.
See issue #965 ",4965cab03154b9bed30d65120714cf725066da7b,Harmonize anat_img to bg_img
4,pull_request_merged,1552,nilearn,nilearn,GaelVaroquaux,2017-11-17 05:18:28,Harmonize anat_img to bg_img,eafd950a64474649af821b32187d6ff79f07a7e1,Pull request merge from cbedetti/nilearn:issue_965 to nilearn/nilearn:master
5,issue_comment,1552,nilearn,nilearn,KamalakerDadi,2017-11-16 17:49:48,I guess plot_anat is missed. To be changed also for consistency.,,
6,issue_comment,1552,nilearn,nilearn,KamalakerDadi,2017-11-16 21:00:31,"Still plot_anat needs to be changed. Accordingly, in plot_anat tests.",,
7,issue_comment,1552,nilearn,nilearn,codecov[bot],2017-11-16 23:00:34,"# [Codecov](https://codecov.io/gh/nilearn/nilearn/pull/1552?src=pr&el=h1) Report
> Merging [#1552](https://codecov.io/gh/nilearn/nilearn/pull/1552?src=pr&el=desc) into [master](https://codecov.io/gh/nilearn/nilearn/commit/ca6cf18c007dc96aa9ccc7799162d035bab2fc37?src=pr&el=desc) will **decrease** coverage by `0.01%`.
> The diff coverage is `50%`.

[![Impacted file tree graph](https://codecov.io/gh/nilearn/nilearn/pull/1552/graphs/tree.svg?width=650&height=150&src=pr&token=KpYArSdyXv)](https://codecov.io/gh/nilearn/nilearn/pull/1552?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##           master    #1552      +/-   ##
==========================================
- Coverage   94.28%   94.26%   -0.02%     
==========================================
  Files         122      122              
  Lines       14980    14984       +4     
==========================================
+ Hits        14124    14125       +1     
- Misses        856      859       +3
```


| [Impacted Files](https://codecov.io/gh/nilearn/nilearn/pull/1552?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [nilearn/plotting/img\_plotting.py](https://codecov.io/gh/nilearn/nilearn/pull/1552?src=pr&el=tree#diff-bmlsZWFybi9wbG90dGluZy9pbWdfcGxvdHRpbmcucHk=) | `93.35% <50%> (-0.97%)` | :arrow_down: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/nilearn/nilearn/pull/1552?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/nilearn/nilearn/pull/1552?src=pr&el=footer). Last update [ca6cf18...4965cab](https://codecov.io/gh/nilearn/nilearn/pull/1552?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",,
8,pull_request_commit_comment,1552,nilearn,nilearn,GaelVaroquaux,2017-11-16 17:33:41,"We should use here:

warnings.warn(warn_str, DeprecationWarning, stacklevel=2)

See https://docs.python.org/2/library/warnings.html#warnings.warn",4965cab03154b9bed30d65120714cf725066da7b,"(None, '', u'nilearn/plotting/img_plotting.py')"
9,pull_request_commit_comment,1552,nilearn,nilearn,GaelVaroquaux,2017-11-16 17:34:47,We should say when it's going to be removed. How about in 0.5? That's in 2 releases.,4965cab03154b9bed30d65120714cf725066da7b,"(None, '', u'nilearn/plotting/img_plotting.py')"
10,pull_request_commit_comment,1552,nilearn,nilearn,KamalakerDadi,2017-11-16 17:45:20,0.5 release sounds good.,4965cab03154b9bed30d65120714cf725066da7b,"(None, '', u'nilearn/plotting/img_plotting.py')"
11,pull_request_commit_comment,1552,nilearn,nilearn,KamalakerDadi,2017-11-16 17:48:23,"Since it is not completely removed. You may need to keep the documentation of this parameter ```anat_img``` and add a NOTE: saying what you have said in warning message ?

If it sounds good. You can find reference point in fetch_haxby in nilearn/datasets/func.py",4965cab03154b9bed30d65120714cf725066da7b,"(22, '', u'nilearn/plotting/img_plotting.py')"
12,pull_request_commit_comment,1552,nilearn,nilearn,cbedetti,2017-11-16 20:39:04,I added it just after `bg_img`,4965cab03154b9bed30d65120714cf725066da7b,"(22, '', u'nilearn/plotting/img_plotting.py')"
13,pull_request_commit_comment,1552,nilearn,nilearn,KamalakerDadi,2017-11-16 20:55:43,Small comment: anat_img is deprecated and will be removed in 0.5,4965cab03154b9bed30d65120714cf725066da7b,"(None, '', u'nilearn/plotting/img_plotting.py')"
14,pull_request_commit,1552,nilearn,nilearn,cbedetti,2017-11-16 17:15:03,Harmonize anat_img to bg_img,4965cab03154b9bed30d65120714cf725066da7b,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,1532,nilearn,nilearn,salma1601,2017-10-24 20:37:44,try fix #1446,start issue,[MRG+1] Region volume
2,issue_closed,1532,nilearn,nilearn,GaelVaroquaux,2017-11-16 19:30:27,,closed issue,[MRG+1] Region volume
3,pull_request_title,1532,nilearn,nilearn,salma1601,2017-10-24 20:37:44,try fix #1446,09bb54b40afbd679dfd908f01314f8b381b6c92f,[MRG+1] Region volume
4,pull_request_merged,1532,nilearn,nilearn,GaelVaroquaux,2017-11-16 19:30:26,[MRG+1] Region volume,00a2ffc25c8752327af72ecb3276380ce8f39204,Pull request merge from salma1601/nilearn:region_volume to nilearn/nilearn:master
5,issue_comment,1532,nilearn,nilearn,bthirion,2017-10-29 21:07:37,Thx for the correction. I have 2 comments.,,
6,issue_comment,1532,nilearn,nilearn,salma1601,2017-10-30 22:17:07,I have test failures that seem unrelated to my changes,,
7,issue_comment,1532,nilearn,nilearn,salma1601,2017-11-08 15:34:27,"I rebased. But there is still one travis failiure with python 3.5 for `test_canica.test_canica_square_img`
`test_dict_learning.test_dict_learning` but none of the functions used in there rely on region extraction AFAIK so I don't understand
",,
8,issue_comment,1532,nilearn,nilearn,KamalakerDadi,2017-11-08 08:52:48,"I see examples are good as before with this patch. +1 merge.
Can you please rebase ?",,
9,issue_comment,1532,nilearn,nilearn,KamalakerDadi,2017-11-08 16:17:30,">But there is still one travis failiure with python 3.5 for test_canica.test_canica_square_img
test_dict_learning.test_dict_learning but none of the functions used in there rely on region extraction AFAIK so I don't understand

I am not totally correct. But, I think that there might be issues related to recent scipy. I will have a look.",,
10,issue_comment,1532,nilearn,nilearn,KamalakerDadi,2017-11-14 13:50:12,">    But there is still one travis failiure with python 3.5 for test_canica.test_canica_square_img
 >   test_dict_learning.test_dict_learning but none of the functions used in there rely on region extraction >AFAIK so I don't understand

>I am not totally correct. But, I think that there might be issues related to recent scipy. I will have a look.

The failures are related to SciPy and they are fixed now. Could please rebase again ?
If everything goes green. +1 for merge",,
11,issue_comment,1532,nilearn,nilearn,codecov[bot],2017-10-30 11:34:40,"# [Codecov](https://codecov.io/gh/nilearn/nilearn/pull/1532?src=pr&el=h1) Report
> Merging [#1532](https://codecov.io/gh/nilearn/nilearn/pull/1532?src=pr&el=desc) into [master](https://codecov.io/gh/nilearn/nilearn/commit/e442a34a9eda52b2c2697c5b176ec3d95a99e8d3?src=pr&el=desc) will **increase** coverage by `<.01%`.
> The diff coverage is `100%`.

[![Impacted file tree graph](https://codecov.io/gh/nilearn/nilearn/pull/1532/graphs/tree.svg?src=pr&width=650&token=KpYArSdyXv&height=150)](https://codecov.io/gh/nilearn/nilearn/pull/1532?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##           master    #1532      +/-   ##
==========================================
+ Coverage   94.45%   94.45%   +<.01%     
==========================================
  Files         122      122              
  Lines       14939    14946       +7     
==========================================
+ Hits        14110    14117       +7     
  Misses        829      829
```


| [Impacted Files](https://codecov.io/gh/nilearn/nilearn/pull/1532?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [nilearn/regions/tests/test\_region\_extractor.py](https://codecov.io/gh/nilearn/nilearn/pull/1532?src=pr&el=tree#diff-bmlsZWFybi9yZWdpb25zL3Rlc3RzL3Rlc3RfcmVnaW9uX2V4dHJhY3Rvci5weQ==) | `100% <100%> (ø)` | :arrow_up: |
| [nilearn/regions/region\_extractor.py](https://codecov.io/gh/nilearn/nilearn/pull/1532?src=pr&el=tree#diff-bmlsZWFybi9yZWdpb25zL3JlZ2lvbl9leHRyYWN0b3IucHk=) | `100% <100%> (ø)` | :arrow_up: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/nilearn/nilearn/pull/1532?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/nilearn/nilearn/pull/1532?src=pr&el=footer). Last update [e442a34...09bb54b](https://codecov.io/gh/nilearn/nilearn/pull/1532?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",,
12,pull_request_commit_comment,1532,nilearn,nilearn,bthirion,2017-10-29 21:05:45,I don't understand; this line does not do anything.,09bb54b40afbd679dfd908f01314f8b381b6c92f,"(None, '', u'nilearn/regions/tests/test_region_extractor.py')"
13,pull_request_commit_comment,1532,nilearn,nilearn,bthirion,2017-10-29 21:06:59,It is unclear to me why this new test enforces the changes that you added. Can you explain a bit more in a comment ?,09bb54b40afbd679dfd908f01314f8b381b6c92f,"(14, '', u'nilearn/regions/tests/test_region_extractor.py')"
14,pull_request_commit_comment,1532,nilearn,nilearn,salma1601,2017-10-30 11:27:03,"it permutes the first and second lines
```Python
In [22]: a = np.eye(4)

In [23]: a[[0, 1]] = a[[1, 0]]

In [24]: a
Out[24]: 
array([[ 0.,  1.,  0.,  0.],
       [ 1.,  0.,  0.,  0.],
       [ 0.,  0.,  1.,  0.],
       [ 0.,  0.,  0.,  1.]])
```",09bb54b40afbd679dfd908f01314f8b381b6c92f,"(14, '', u'nilearn/regions/tests/test_region_extractor.py')"
15,pull_request_commit_comment,1532,nilearn,nilearn,bthirion,2017-10-30 22:15:19,"Sorry for misunderstanding.
LGTM then",09bb54b40afbd679dfd908f01314f8b381b6c92f,"(14, '', u'nilearn/regions/tests/test_region_extractor.py')"
16,pull_request_commit,1532,nilearn,nilearn,salma1601,2017-10-30 11:34:15,add comment on the test,09bb54b40afbd679dfd908f01314f8b381b6c92f,
17,pull_request_commit,1532,nilearn,nilearn,salma1601,2017-11-08 09:27:17,rebasing,eeb912a257ca64478c049a5d54407353cd7bbd9e,
18,pull_request_commit,1532,nilearn,nilearn,salma1601,2017-11-08 09:28:24,rebasing,d7f1b447bf6c63ab76254c91a7fb37a4ba8d593e,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,1569,nilearn,nilearn,emdupre,2017-11-21 17:23:49,"In response to #1568, adds atlas labels to generated matrices in `plot_multi_subject_connectome`
example for ease of interpretability.",start issue,Add matrix labels for plot_multisubj example
2,issue_closed,1569,nilearn,nilearn,GaelVaroquaux,2017-11-22 08:23:32,,closed issue,Add matrix labels for plot_multisubj example
3,pull_request_title,1569,nilearn,nilearn,emdupre,2017-11-21 17:23:49,"In response to #1568, adds atlas labels to generated matrices in `plot_multi_subject_connectome`
example for ease of interpretability.",3664f7ee8d10698f8da00bd735b080497bc8ec72,Add matrix labels for plot_multisubj example
4,pull_request_merged,1569,nilearn,nilearn,GaelVaroquaux,2017-11-22 08:23:32,Add matrix labels for plot_multisubj example,1d90db33cbb864b2413647ea771edc25245c8ff7,Pull request merge from emdupre/nilearn:plot_multisubj_labels to nilearn/nilearn:master
5,issue_comment,1569,nilearn,nilearn,emdupre,2017-11-22 01:26:55,I think moving the decoding to the fetcher function is a great idea! The latest commit should do that. ,,
6,issue_comment,1569,nilearn,nilearn,codecov[bot],2017-11-21 18:49:30,"# [Codecov](https://codecov.io/gh/nilearn/nilearn/pull/1569?src=pr&el=h1) Report
> Merging [#1569](https://codecov.io/gh/nilearn/nilearn/pull/1569?src=pr&el=desc) into [master](https://codecov.io/gh/nilearn/nilearn/commit/627be2dc74c793b4d489ba62931288d8b71ef401?src=pr&el=desc) will **increase** coverage by `<.01%`.
> The diff coverage is `100%`.

[![Impacted file tree graph](https://codecov.io/gh/nilearn/nilearn/pull/1569/graphs/tree.svg?token=KpYArSdyXv&width=650&src=pr&height=150)](https://codecov.io/gh/nilearn/nilearn/pull/1569?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##           master    #1569      +/-   ##
==========================================
+ Coverage   94.45%   94.45%   +<.01%     
==========================================
  Files         125      125              
  Lines       15347    15348       +1     
==========================================
+ Hits        14496    14497       +1     
  Misses        851      851
```


| [Impacted Files](https://codecov.io/gh/nilearn/nilearn/pull/1569?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [nilearn/datasets/atlas.py](https://codecov.io/gh/nilearn/nilearn/pull/1569?src=pr&el=tree#diff-bmlsZWFybi9kYXRhc2V0cy9hdGxhcy5weQ==) | `88.29% <100%> (+0.03%)` | :arrow_up: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/nilearn/nilearn/pull/1569?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/nilearn/nilearn/pull/1569?src=pr&el=footer). Last update [627be2d...3664f7e](https://codecov.io/gh/nilearn/nilearn/pull/1569?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",,
7,pull_request_commit_comment,1569,nilearn,nilearn,GaelVaroquaux,2017-11-22 00:08:20,That's ugly :$. Do you think that we should be doing the decoding in the fetch_atlas_msdl function?,3664f7ee8d10698f8da00bd735b080497bc8ec72,"(None, '', u'examples/03_connectivity/plot_multi_subject_connectome.py')"
8,pull_request_commit,1569,nilearn,nilearn,emdupre,2017-11-21 17:22:02,"Add matrix labels for plot_multisubj example
Adds atlas labels to generated matrices in plot_multi_subject_connectome
example for ease of interpretability.",34ba672670c87e4e3dde6eb5fe437f6e4cf6f3e4,
9,pull_request_commit,1569,nilearn,nilearn,emdupre,2017-11-22 01:23:11,"Move byte str decoding to atlas fetcher

Moves byte string decoding for msdl_atlas_dataset.labels
from plot_multi_subject_connectome example to the dataset
fetcher. Cleans up the example for interpretability.",3664f7ee8d10698f8da00bd735b080497bc8ec72,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,1561,nilearn,nilearn,GaelVaroquaux,2017-11-17 04:23:32,"
Supersedes Pr #1421 and #1559 to fix the docstring.


",start issue,Anterior and posterior views
2,issue_closed,1561,nilearn,nilearn,GaelVaroquaux,2017-11-17 13:55:38,,closed issue,Anterior and posterior views
3,pull_request_title,1561,nilearn,nilearn,GaelVaroquaux,2017-11-17 04:23:32,"
Supersedes Pr #1421 and #1559 to fix the docstring.


",0eb96d8d5e903efd09fe71068aaab7e3019ab023,Anterior and posterior views
4,pull_request_merged,1561,nilearn,nilearn,GaelVaroquaux,2017-11-17 13:55:38,Anterior and posterior views,9f8da9055d6285df6319fcae4c634f3bca9797be,Pull request merge from GaelVaroquaux/nilearn:pr_1559 to nilearn/nilearn:master
5,issue_comment,1561,nilearn,nilearn,bthirion,2017-11-17 08:51:28,LGTM.,,
6,issue_comment,1561,nilearn,nilearn,codecov[bot],2017-11-17 04:44:58,"# [Codecov](https://codecov.io/gh/nilearn/nilearn/pull/1561?src=pr&el=h1) Report
> Merging [#1561](https://codecov.io/gh/nilearn/nilearn/pull/1561?src=pr&el=desc) into [master](https://codecov.io/gh/nilearn/nilearn/commit/75883a4c1d0891ece782a83921c9e62039124bc8?src=pr&el=desc) will **decrease** coverage by `0.03%`.
> The diff coverage is `25%`.

[![Impacted file tree graph](https://codecov.io/gh/nilearn/nilearn/pull/1561/graphs/tree.svg?width=650&height=150&token=KpYArSdyXv&src=pr)](https://codecov.io/gh/nilearn/nilearn/pull/1561?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##           master    #1561      +/-   ##
==========================================
- Coverage   94.28%   94.24%   -0.04%     
==========================================
  Files         122      122              
  Lines       14980    14988       +8     
==========================================
+ Hits        14124    14126       +2     
- Misses        856      862       +6
```


| [Impacted Files](https://codecov.io/gh/nilearn/nilearn/pull/1561?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [nilearn/plotting/surf\_plotting.py](https://codecov.io/gh/nilearn/nilearn/pull/1561?src=pr&el=tree#diff-bmlsZWFybi9wbG90dGluZy9zdXJmX3Bsb3R0aW5nLnB5) | `87.27% <25%> (-3.18%)` | :arrow_down: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/nilearn/nilearn/pull/1561?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/nilearn/nilearn/pull/1561?src=pr&el=footer). Last update [75883a4...0eb96d8](https://codecov.io/gh/nilearn/nilearn/pull/1561?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",,
7,pull_request_commit_comment,1561,nilearn,nilearn,KamalakerDadi,2017-11-17 12:20:20,This is added in 0.3.beta,0eb96d8d5e903efd09fe71068aaab7e3019ab023,"(None, '', u'doc/whats_new.rst')"
8,pull_request_commit_comment,1561,nilearn,nilearn,GaelVaroquaux,2017-11-17 13:55:24,Thanks. Fixed,0eb96d8d5e903efd09fe71068aaab7e3019ab023,"(None, '', u'doc/whats_new.rst')"
9,pull_request_commit,1561,nilearn,nilearn,JohnGriffiths,2017-03-24 19:53:21,added anterior and posterior view options,c7be76fa402efc526cbc5d1542328e76340e05d8,
10,pull_request_commit,1561,nilearn,nilearn,poquirion,2017-11-16 21:28:35,added new view in plot_surf_*,c763cd02e67fdb5a29f52deadbd4039f2445a8c0,
11,pull_request_commit,1561,nilearn,nilearn,poquirion,2017-11-16 21:29:22,added examples for plot_surf* views,dd1cfbcf9cb0256a7431782e1fde1499c7f3e72c,
12,pull_request_commit,1561,nilearn,nilearn,poquirion,2017-11-16 21:32:53,add whats_new,1a3409393a7070d4c876f60e08c71f84ff3ab582,
13,pull_request_commit,1561,nilearn,nilearn,GaelVaroquaux,2017-11-17 04:22:24,Fix docstring,dab197c174ffc25d0b2c468ff8279682b1c84529,
14,pull_request_commit,1561,nilearn,nilearn,GaelVaroquaux,2017-11-17 04:46:29,Fix docstring,9be3b8a69970d65b9faba82fef9276a629e0c19e,
15,pull_request_commit,1561,nilearn,nilearn,GaelVaroquaux,2017-11-17 13:54:58,fix whats new,0eb96d8d5e903efd09fe71068aaab7e3019ab023,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,1545,nilearn,nilearn,KamalakerDadi,2017-11-10 11:37:29,"Two issues was seen with recent SciPy here:

- smoothing_fwhm=0. fails with ```scipy.ndimage.gaussian_filter1d``` (see https://travis-ci.org/nilearn/nilearn/jobs/299711990#L3471). More details about this particular FIX is discussed in this issue #1537 
- Having more strict checks on the critical frequencies should be ```Digital filter critical frequencies must be 0 < Wn < 1``` with ```scipy.signal.butter``` rather should be btw 0 and 1. This FIX seems like a more reasonable approach to restrict to ```1 - 10 * np.finfo(1.).eps``` when given frequency is more than nyquist criteria.

Can I please have reviews ?",start issue,FIX: issues with recent SciPy
2,issue_closed,1545,nilearn,nilearn,GaelVaroquaux,2017-11-14 10:32:59,,closed issue,FIX: issues with recent SciPy
3,pull_request_title,1545,nilearn,nilearn,KamalakerDadi,2017-11-10 11:37:29,"Two issues was seen with recent SciPy here:

- smoothing_fwhm=0. fails with ```scipy.ndimage.gaussian_filter1d``` (see https://travis-ci.org/nilearn/nilearn/jobs/299711990#L3471). More details about this particular FIX is discussed in this issue #1537 
- Having more strict checks on the critical frequencies should be ```Digital filter critical frequencies must be 0 < Wn < 1``` with ```scipy.signal.butter``` rather should be btw 0 and 1. This FIX seems like a more reasonable approach to restrict to ```1 - 10 * np.finfo(1.).eps``` when given frequency is more than nyquist criteria.

Can I please have reviews ?",1ba930f47fd112d863e1af9037f4944ed5dd736b,FIX: issues with recent SciPy
4,pull_request_merged,1545,nilearn,nilearn,GaelVaroquaux,2017-11-14 10:32:59,FIX: issues with recent SciPy,726129022f41cb2fe981999cbef5732b495c0eaf,Pull request merge from KamalakerDadi/nilearn:check_scipy_new_release to nilearn/nilearn:master
5,issue_comment,1545,nilearn,nilearn,bthirion,2017-11-12 21:50:34,"Looks food to me overall. 
Thx.",,
6,issue_comment,1545,nilearn,nilearn,bthirion,2017-11-14 09:41:11,Good for me.,,
7,issue_comment,1545,nilearn,nilearn,KamalakerDadi,2017-11-14 08:44:49," >+    if LooseVersion(scipy.__version__) >= LooseVersion('1.0.0'):
 >+        if fwhm is not None and fwhm == 0.:
 >Why not simply if fwhm == 0.:
>I agree: we could apply this for all versions of scipy.

This is what been discussed in issue #1537 ",,
8,issue_comment,1545,nilearn,nilearn,codecov[bot],2017-11-10 13:05:02,"# [Codecov](https://codecov.io/gh/nilearn/nilearn/pull/1545?src=pr&el=h1) Report
> Merging [#1545](https://codecov.io/gh/nilearn/nilearn/pull/1545?src=pr&el=desc) into [master](https://codecov.io/gh/nilearn/nilearn/commit/286bc42c40a1e08a50d7a5e70d636c35c47456a8?src=pr&el=desc) will **increase** coverage by `<.01%`.
> The diff coverage is `100%`.

[![Impacted file tree graph](https://codecov.io/gh/nilearn/nilearn/pull/1545/graphs/tree.svg?height=150&width=650&token=KpYArSdyXv&src=pr)](https://codecov.io/gh/nilearn/nilearn/pull/1545?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##           master    #1545      +/-   ##
==========================================
+ Coverage   94.45%   94.46%   +<.01%     
==========================================
  Files         122      122              
  Lines       14916    14928      +12     
==========================================
+ Hits        14089    14101      +12     
  Misses        827      827
```


| [Impacted Files](https://codecov.io/gh/nilearn/nilearn/pull/1545?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [nilearn/image/tests/test\_image.py](https://codecov.io/gh/nilearn/nilearn/pull/1545?src=pr&el=tree#diff-bmlsZWFybi9pbWFnZS90ZXN0cy90ZXN0X2ltYWdlLnB5) | `99.68% <100%> (ø)` | :arrow_up: |
| [nilearn/image/image.py](https://codecov.io/gh/nilearn/nilearn/pull/1545?src=pr&el=tree#diff-bmlsZWFybi9pbWFnZS9pbWFnZS5weQ==) | `96.62% <100%> (+0.05%)` | :arrow_up: |
| [nilearn/signal.py](https://codecov.io/gh/nilearn/nilearn/pull/1545?src=pr&el=tree#diff-bmlsZWFybi9zaWduYWwucHk=) | `85.16% <100%> (ø)` | :arrow_up: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/nilearn/nilearn/pull/1545?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/nilearn/nilearn/pull/1545?src=pr&el=footer). Last update [286bc42...1ba930f](https://codecov.io/gh/nilearn/nilearn/pull/1545?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",,
9,pull_request_commit_comment,1545,nilearn,nilearn,bthirion,2017-11-12 21:48:13,Why not simply `if fwhm == 0.:`,1ba930f47fd112d863e1af9037f4944ed5dd736b,"(None, '', u'nilearn/image/image.py')"
10,pull_request_commit,1545,nilearn,nilearn,KamalakerDadi,2017-11-10 11:26:38,FIX: issues with recent SciPy,71805cc5b6a6a1d2fee180f2a5ac73f99b865a20,
11,pull_request_commit,1545,nilearn,nilearn,KamalakerDadi,2017-11-14 09:28:32,Addressed comments and added whatsnew,21512245e057e3a71e0cead3742f39c0ecbdf2e2,
12,pull_request_commit,1545,nilearn,nilearn,KamalakerDadi,2017-11-14 10:07:44,Removed unused imports,1ba930f47fd112d863e1af9037f4944ed5dd736b,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,1566,nilearn,nilearn,vukovicnikola,2017-11-20 17:36:08,"If I run a simple fit using, for example: 
```
cv = StratifiedKFold(n_folds=2,y=y)

decoder = SpaceNetClassifier(cv=cv, memory=""nilearn_cache"", penalty='tv-l1', memory_level=2, n_jobs=2, verbose=1, screening_percentile=20, mask= './mni_152_gm.nii')
decoder.fit(X, y)
```

According to the [Reference](http://nilearn.github.io/modules/generated/nilearn.decoding.SpaceNetClassifier.html),  there should be a decoder.alpha_ attribute. However, this does not exist when I inspect the decoder.

How to get the decoding accuracy without the best alpha from cv? Were there changes to SpaceNetClassifier since the reference page was last updated?",start issue,No alpha_ attribute in SpaceNetClassifier decoder
2,issue_closed,1566,nilearn,nilearn,vukovicnikola,2017-11-21 22:24:56,,closed issue,No alpha_ attribute in SpaceNetClassifier decoder
3,issue_comment,1566,nilearn,nilearn,bthirion,2017-11-20 18:40:06,"Sorry, I don't see the issue. Can you reproduce it on one of the examples provided with nilearn, e.g. 
http://nilearn.github.io/auto_examples/02_decoding/plot_mixed_gambles_space_net.html#sphx-glr-auto-examples-02-decoding-plot-mixed-gambles-space-net-py ?",,
4,issue_comment,1566,nilearn,nilearn,bthirion,2017-11-20 22:31:59,"Really weird. Can you reproduce on the datasets provided as examples ?
Are there some cross-validation folds with constant data ?",,
5,issue_comment,1566,nilearn,nilearn,bthirion,2017-11-21 16:31:40,"Hm. T am realizing that plot_haxby_space_net.py is broken. Yet, this was not detected by CircleCI...
Don't understand what's going on here.",,
6,issue_comment,1566,nilearn,nilearn,MadsJensen,2017-11-20 18:47:33,"@bthirion Hi just ran the example you mentioned above (just downloaded the .py and ran it). I get ""infs"" in the ""decoder.cv_scores""  and I have no ""decoder.alpha_"" either. 

Python = 3.5
nilearn = 0.4
scikit-learn = 0.19.0

",,
7,issue_comment,1566,nilearn,nilearn,MadsJensen,2017-11-20 19:46:50,"@KamalakerDadi  Great thanks for the clarification. But what about the ""inf"" in the cv_scores_ ? Is that expected? (Sorry I don't know the details of the SpaceNet algorithm.) ",,
8,issue_comment,1566,nilearn,nilearn,MadsJensen,2017-11-21 18:38:18,"ok, let's know if there is anything you would like from our side (@vukovicnikola or me) . 

",,
9,issue_comment,1566,nilearn,nilearn,KamalakerDadi,2017-11-20 19:23:19,"Sorry, for being so late in updating SpaceNet documentation. The documentation needs to be updated. `alpha_` is not an attribute.

The attribute you are interested in is
 `best_model_params_` : ndarray, shape (n_folds, n_parameter)
        Best model parameters (alpha, l1_ratio) saved for the different
        cross-validation folds.",,
10,issue_comment,1566,nilearn,nilearn,KamalakerDadi,2017-11-20 19:58:06,">But what about the ""inf"" in the cv_scores_ ? Is that expected? (Sorry I don't know the details of the SpaceNet algorithm.)

I don't know the algorithm very well too. But, pointing towards to look more closely into it. I can update your question soon.
",,
11,issue_comment,1566,nilearn,nilearn,KamalakerDadi,2017-11-21 22:09:33,">In detail, somebody whould check whether -\infty comes from numerical divergence --which should not occur-- or is a default value in the grid

Values are coming from while computing test score for model given weight maps 'w'. This line
https://github.com/nilearn/nilearn/blob/e34697bc22ee0061bbb548c89246cd814f23153a/nilearn/decoding/space_net.py#L259. I guess values are in the grid",,
12,issue_comment,1566,nilearn,nilearn,KamalakerDadi,2017-11-21 22:19:38,"Yes, except that the some of the documentation should be fixed which I will do it soon.",,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,1528,nilearn,nilearn,cancan101,2017-10-16 19:08:38,"Currently using `resample_img` with `interpolation='continuous'` (default) can lead to values outside of the input range (e.g. getting negative values). `skimage` has a [`clip` option](http://scikit-image.org/docs/dev/api/skimage.transform.html?highlight=resize#skimage.transform.resize) which states:
>Whether to clip the output to the range of values of the input image. This is enabled by default, since higher order interpolation may produce values outside the given input range.",start issue,Offer clip option in resample_img
2,issue_closed,1528,nilearn,nilearn,GaelVaroquaux,2017-11-18 15:20:14,,closed issue,Offer clip option in resample_img
3,issue_comment,1528,nilearn,nilearn,bthirion,2017-11-17 22:53:00,"I don't see disadvantage in adding clipping t the resampling. Yet another argument added to the function signature, but calling it 'clipping' should be transparent enough.",,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,1542,nilearn,nilearn,cancan101,2017-11-07 15:59:08,Closes https://github.com/nilearn/nilearn/issues/1363,start issue,[MRG+1] Suppress UserWarning on calls to affine_transform
2,issue_closed,1542,nilearn,nilearn,GaelVaroquaux,2017-11-14 20:36:17,,closed issue,[MRG+1] Suppress UserWarning on calls to affine_transform
3,pull_request_title,1542,nilearn,nilearn,cancan101,2017-11-07 15:59:08,Closes https://github.com/nilearn/nilearn/issues/1363,6d002b2bdea5712de17d526a5d3739b87df3bf5b,[MRG+1] Suppress UserWarning on calls to affine_transform
4,pull_request_merged,1542,nilearn,nilearn,GaelVaroquaux,2017-11-14 20:36:17,[MRG+1] Suppress UserWarning on calls to affine_transform,bbc5ae1abaa2d460d83f63e7ef2680a577f49a59,Pull request merge from cancan101/nilearn:supress_warnings to nilearn/nilearn:master
5,issue_comment,1542,nilearn,nilearn,cancan101,2017-11-07 17:47:17,not sure why this failed circle-ci,,
6,issue_comment,1542,nilearn,nilearn,cancan101,2017-11-09 14:02:18,So what do you want to do with this PR? ,,
7,issue_comment,1542,nilearn,nilearn,cancan101,2017-11-09 16:43:53,not sure what is failing here.,,
8,issue_comment,1542,nilearn,nilearn,cancan101,2017-11-14 15:18:31,done and squashed,,
9,issue_comment,1542,nilearn,nilearn,KamalakerDadi,2017-11-07 18:49:01,"I am not sure whether #1363 is to suppress warnings. But, we can wait for others opinion on this PR.

I think CircleCI failure is a glitch.",,
10,issue_comment,1542,nilearn,nilearn,KamalakerDadi,2017-11-08 18:58:04,Suppressing warnings and we never know if there is fuzzy stuff going on.,,
11,issue_comment,1542,nilearn,nilearn,KamalakerDadi,2017-11-09 09:22:31,">the filter, as it's implemented, will filter out a lot, and might filter relevant warnings.
This warning only appears in scipy 0.18 (and maybe 1.0, can someone check?)

No it didn't disappeared. It can be easily checked from one our travis environment 
https://travis-ci.org/nilearn/nilearn/jobs/299005132
and search for affine_transform",,
12,issue_comment,1542,nilearn,nilearn,KamalakerDadi,2017-11-09 17:31:41,">not sure what is failing here.

Failures are not related to your PR. I am preparing a FIX for that.",,
13,issue_comment,1542,nilearn,nilearn,KamalakerDadi,2017-11-14 12:23:23,">   not sure what is failing here.

>Failures are not related to your PR. I am preparing a FIX for that.

Failures are now fixed in master. Could please rebase ?",,
14,issue_comment,1542,nilearn,nilearn,KamalakerDadi,2017-11-14 18:26:08,">done and squashed

Thanks",,
15,issue_comment,1542,nilearn,nilearn,codecov[bot],2017-11-09 15:59:13,"# [Codecov](https://codecov.io/gh/nilearn/nilearn/pull/1542?src=pr&el=h1) Report
> Merging [#1542](https://codecov.io/gh/nilearn/nilearn/pull/1542?src=pr&el=desc) into [master](https://codecov.io/gh/nilearn/nilearn/commit/286bc42c40a1e08a50d7a5e70d636c35c47456a8?src=pr&el=desc) will **increase** coverage by `<.01%`.
> The diff coverage is `100%`.

[![Impacted file tree graph](https://codecov.io/gh/nilearn/nilearn/pull/1542/graphs/tree.svg?height=150&width=650&token=KpYArSdyXv&src=pr)](https://codecov.io/gh/nilearn/nilearn/pull/1542?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##           master    #1542      +/-   ##
==========================================
+ Coverage   94.45%   94.45%   +<.01%     
==========================================
  Files         122      122              
  Lines       14916    14920       +4     
==========================================
+ Hits        14089    14093       +4     
  Misses        827      827
```


| [Impacted Files](https://codecov.io/gh/nilearn/nilearn/pull/1542?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [nilearn/image/resampling.py](https://codecov.io/gh/nilearn/nilearn/pull/1542?src=pr&el=tree#diff-bmlsZWFybi9pbWFnZS9yZXNhbXBsaW5nLnB5) | `99.04% <100%> (+0.01%)` | :arrow_up: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/nilearn/nilearn/pull/1542?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/nilearn/nilearn/pull/1542?src=pr&el=footer). Last update [286bc42...ca61480](https://codecov.io/gh/nilearn/nilearn/pull/1542?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",,
16,issue_comment,1542,nilearn,nilearn,codecov[bot],2017-11-09 15:59:13,"# [Codecov](https://codecov.io/gh/nilearn/nilearn/pull/1542?src=pr&el=h1) Report
> Merging [#1542](https://codecov.io/gh/nilearn/nilearn/pull/1542?src=pr&el=desc) into [master](https://codecov.io/gh/nilearn/nilearn/commit/e442a34a9eda52b2c2697c5b176ec3d95a99e8d3?src=pr&el=desc) will **increase** coverage by `<.01%`.
> The diff coverage is `100%`.

[![Impacted file tree graph](https://codecov.io/gh/nilearn/nilearn/pull/1542/graphs/tree.svg?width=650&height=150&src=pr&token=KpYArSdyXv)](https://codecov.io/gh/nilearn/nilearn/pull/1542?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##           master    #1542      +/-   ##
==========================================
+ Coverage   94.45%   94.45%   +<.01%     
==========================================
  Files         122      122              
  Lines       14939    14945       +6     
==========================================
+ Hits        14110    14116       +6     
  Misses        829      829
```


| [Impacted Files](https://codecov.io/gh/nilearn/nilearn/pull/1542?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [nilearn/image/resampling.py](https://codecov.io/gh/nilearn/nilearn/pull/1542?src=pr&el=tree#diff-bmlsZWFybi9pbWFnZS9yZXNhbXBsaW5nLnB5) | `99.05% <100%> (+0.02%)` | :arrow_up: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/nilearn/nilearn/pull/1542?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/nilearn/nilearn/pull/1542?src=pr&el=footer). Last update [e442a34...6d002b2](https://codecov.io/gh/nilearn/nilearn/pull/1542?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",,
17,pull_request_commit,1542,nilearn,nilearn,cancan101,2017-11-07 15:58:53,Suppress UserWarning on calls to affine_transform,6d002b2bdea5712de17d526a5d3739b87df3bf5b,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,1555,nilearn,nilearn,KamalakerDadi,2017-11-16 20:35:22,"Should fix some issues to more get_affine(img) to img.affine

Please reviews ?",start issue,FIX: nibabel bumpup compatible changes
2,issue_closed,1555,nilearn,nilearn,GaelVaroquaux,2017-11-16 20:57:16,,closed issue,FIX: nibabel bumpup compatible changes
3,pull_request_title,1555,nilearn,nilearn,KamalakerDadi,2017-11-16 20:35:22,"Should fix some issues to more get_affine(img) to img.affine

Please reviews ?",9a4ee70ceaac81138d5a7614ae07914bb1ba78a2,FIX: nibabel bumpup compatible changes
4,pull_request_merged,1555,nilearn,nilearn,GaelVaroquaux,2017-11-16 20:57:16,FIX: nibabel bumpup compatible changes,ca6cf18c007dc96aa9ccc7799162d035bab2fc37,Pull request merge from KamalakerDadi/nilearn:fix_master to nilearn/nilearn:master
5,issue_comment,1555,nilearn,nilearn,KamalakerDadi,2017-11-16 20:57:30,">The failure is due to a network glitch

I am trying to get some clue from google",,
6,issue_comment,1555,nilearn,nilearn,KamalakerDadi,2017-11-16 21:08:43,">The failure is due to a network glitch

FYI:Network is now up and running.",,
7,pull_request_commit,1555,nilearn,nilearn,KamalakerDadi,2017-11-16 20:32:28,FIX: nibabel bumpup compatible changes,9a4ee70ceaac81138d5a7614ae07914bb1ba78a2,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,1516,nilearn,nilearn,jeromedockes,2017-09-28 12:05:23,"Hello @GaelVaroquaux , @mrahim , @agramfort, @juhuntenburg  and others,
 this is a PR about surface plotting.

nilearn has some awesome functions to plot surface data in
nilearn.plotting.surf_plotting. However, it doesn't offer a conversion from
volumetric to surface data.

It would be great to add a function to sample or project volumetric data on the
nodes of a cortical mesh; this would allow users to look at surface plots of
their 3d images (e.g. statistical maps).

In this PR we will try to add this to nilearn.

Most tools which offer this functionality (e.g. caret, freesurfer, pycortex)
usually propose several projection and sampling strategies, offering different
quality / speed tradeoffs. However, it seems to me that naive strategies are not
so far behind more elaborate ones - see for example [Operto, Grégory, et al.
""Projection of fMRI data onto the cortical surface using anatomically-informed
convolution kernels."" Neuroimage 39.1 (2008): 127-135].
For plotting and visualisation, the results of a simple strategy are probably
accurate enough for most users.

I therefore suggest to start by including a very simple and fast projection
scheme, and we can add more elaborate ones later if we want.
I'm just getting started but I think we can already start a discussion.

The proposed strategy is simply to draw a sample from a 3mm sphere around each
mesh node, and average the measures.

The image below illustrates that strategy: each red circle is a mesh node.
Samples are drawn from the blue crosses that are attached to it, and are inside
the image, and then averaged to compute the color inside the circle.
(This image is produced by the show_sampling.py example, which is only there to clarify
the strategy implemented in this PR and will be removed).


![illustration_2d](https://user-images.githubusercontent.com/9196501/30964668-aa433a20-a452-11e7-96d6-5a0f8c05c959.png)


Here is an example surface plot for a brainpedia image (id 32015 on Neurovault,
https://neurovault.org/media/images/1952/task007_face_vs_baseline_pycortex/index.html),
produced by brainpedia_surface.py:

![brainpedia_inflated](https://user-images.githubusercontent.com/9196501/30964957-c747b55a-a453-11e7-8a38-777e359d3461.png)

And here is the plot produced by pycortex for the same image, as shown on
Neurovault:

![brainpedia_pycortex](https://user-images.githubusercontent.com/9196501/30964987-e38cd4de-a453-11e7-9d5f-f1c284f93954.png)

Note about performance: in order to choose the positions of the samples to draw
from a unit ball, for now, we cluster points drawn from a uniform distribution
on the ball and keep the centroids (we can think of something better). This
takes a few seconds and the results are cached with joblib for the time being,
but since it only needs to be done once, when we have decided how many samples
we want, the positions will be hardcoded once and for all (no computing, no
caching). with 100 samples per ball, projecting a stat map of the full brain
with 2mm voxels on an fsaverage hemisphere mesh takes around 60 ms.
",start issue,[MRG] Cortex surface projections
2,issue_closed,1516,nilearn,nilearn,GaelVaroquaux,2017-11-19 19:01:26,,closed issue,[MRG] Cortex surface projections
3,pull_request_title,1516,nilearn,nilearn,jeromedockes,2017-09-28 12:05:23,"Hello @GaelVaroquaux , @mrahim , @agramfort, @juhuntenburg  and others,
 this is a PR about surface plotting.

nilearn has some awesome functions to plot surface data in
nilearn.plotting.surf_plotting. However, it doesn't offer a conversion from
volumetric to surface data.

It would be great to add a function to sample or project volumetric data on the
nodes of a cortical mesh; this would allow users to look at surface plots of
their 3d images (e.g. statistical maps).

In this PR we will try to add this to nilearn.

Most tools which offer this functionality (e.g. caret, freesurfer, pycortex)
usually propose several projection and sampling strategies, offering different
quality / speed tradeoffs. However, it seems to me that naive strategies are not
so far behind more elaborate ones - see for example [Operto, Grégory, et al.
""Projection of fMRI data onto the cortical surface using anatomically-informed
convolution kernels."" Neuroimage 39.1 (2008): 127-135].
For plotting and visualisation, the results of a simple strategy are probably
accurate enough for most users.

I therefore suggest to start by including a very simple and fast projection
scheme, and we can add more elaborate ones later if we want.
I'm just getting started but I think we can already start a discussion.

The proposed strategy is simply to draw a sample from a 3mm sphere around each
mesh node, and average the measures.

The image below illustrates that strategy: each red circle is a mesh node.
Samples are drawn from the blue crosses that are attached to it, and are inside
the image, and then averaged to compute the color inside the circle.
(This image is produced by the show_sampling.py example, which is only there to clarify
the strategy implemented in this PR and will be removed).


![illustration_2d](https://user-images.githubusercontent.com/9196501/30964668-aa433a20-a452-11e7-96d6-5a0f8c05c959.png)


Here is an example surface plot for a brainpedia image (id 32015 on Neurovault,
https://neurovault.org/media/images/1952/task007_face_vs_baseline_pycortex/index.html),
produced by brainpedia_surface.py:

![brainpedia_inflated](https://user-images.githubusercontent.com/9196501/30964957-c747b55a-a453-11e7-8a38-777e359d3461.png)

And here is the plot produced by pycortex for the same image, as shown on
Neurovault:

![brainpedia_pycortex](https://user-images.githubusercontent.com/9196501/30964987-e38cd4de-a453-11e7-9d5f-f1c284f93954.png)

Note about performance: in order to choose the positions of the samples to draw
from a unit ball, for now, we cluster points drawn from a uniform distribution
on the ball and keep the centroids (we can think of something better). This
takes a few seconds and the results are cached with joblib for the time being,
but since it only needs to be done once, when we have decided how many samples
we want, the positions will be hardcoded once and for all (no computing, no
caching). with 100 samples per ball, projecting a stat map of the full brain
with 2mm voxels on an fsaverage hemisphere mesh takes around 60 ms.
",b86bfb9208a09da54e33de5a7edff2d02c10cfb9,[MRG] Cortex surface projections
4,pull_request_merged,1516,nilearn,nilearn,GaelVaroquaux,2017-11-19 19:01:26,[MRG] Cortex surface projections,6269fdee4a048b5f6cbf8c5bb36f99e505c93e34,Pull request merge from jeromedockes/nilearn:cortex_surface_projections to nilearn/nilearn:master
5,issue_comment,1516,nilearn,nilearn,bthirion,2017-09-28 21:34:27,"Thx !

I have a general question: overall the difference with pycortex is not that large -- yet we lose a few details, like in the pSTS region. However, you seem to suggest that your strategy is much faster: have you checked ? Can you clarify the difference ? Why didn't you use pycortex or very similar code ?

",,
6,issue_comment,1516,nilearn,nilearn,bthirion,2017-10-19 10:39:15,"Beautiful and pedagogical contribution !
Thx. I should say, I'm convinced. I only remain a bit surprised that the line/linear approach doe not really work better than the ball, but this is not a huge difference.
I'll look more in detail at the PR now.",,
7,issue_comment,1516,nilearn,nilearn,eickenberg,2017-10-20 22:24:26,"This looks like a great thing to have so easily and transparently accessible to the user.

After some email discussion on the topic, here is a proposal to make it even more clear what is being done, with potentially huge benefits to seasoned users and perfect transparency for all of those who don't care:

Many of these transformations (here volume to surface projections, but think also volume to volume transformations, ROI extractions, ...) are linear operations on the data vectors. Many of them can be represented as very sparse matrices (e.g. one vertex in this specific surface projection case will not consider the values of more than say 10 voxels).

The idea would be to make this linear transformation explicit and hand it to experienced users if they request it. Ideally this would be done by representing the transformation as a scipy sparse matrix, or, at least as a scipy linear operator (by providing an adjoint/rmatvec transformation in addition to the forward direction). This would aid in

- caching (just save it)
- understandability of the object as well as its cached version (you know what it is and have it in your hands)
- flexibility (advanced users can use them explicitly and mold them to their purposes)
- potential savings in computation for complicated operations (imagine wanting to select values of a surface ROI in fsaverage, maybe a very small ROI. Concatenating volume -> individual surface -> fsaverage -> ROI projector can turn this operation into a linear operation on probably very few voxels of an individual brain. Likewise: you can easily use heavily masked voxel data as a starting point for these projections.)

Thoughts?",,
8,issue_comment,1516,nilearn,nilearn,eickenberg,2017-10-22 23:38:11,"> What's the usecase?

I can think of many. Here are 3

1. This is a first stepping stone to very efficient projectors from subject volume to e.g. mean activations across a cortical atlas defined in fsaverage space. There are so many imaginable conjugations of this setting where you can circumvent blowing dimensionality/memory usage out of proportion in intermediate calculations before collapsing back to a small space. Especially with large amounts of images/subjects this can be beneficial

2. It gives you a immediate access and understanding of what the projector is doing. You could use it easily to understand weird patterns in surface projection due to partial volume effects (e.g. one voxel going across a sulcus and projecting to different and disjoint parts of the surface). Simply doable by analyzing the columns of this projector matrix

3. Educational purposes: Making this sparse matrix representation clear will make it possible to shed light on what possible differences there can be between e.g. a GLM performed before or after surface projection. It turns out that the beta-maps are 1-to-1 translatable if that matrix is invertible. But the noise estimates and thus the activation maps might be different. 

In addition to this they are numpy/scipy objects and contain an understandable representation of the projector. Caching them can be done in a quasi-human-understandable manner.",,
9,issue_comment,1516,nilearn,nilearn,eickenberg,2017-10-23 17:05:12,"> hence the cost/benefit ratio seems small

It does seem small (although I think you want to argue that it is large :) ). If the projection were internally prepared and implemented as a sparse matrix multiplication (leading to no difference in functionality), then 

1. future developers, who may incidentally also be people close to the lab, might understand the linear nature of all these projections just by looking at the code they are working on

1.5 If atlas transformations for fsaverage atlases are incorporated, developers could create efficient projectors under the hood, because they understand that they are nothing other than a choice of linear projection.

2. these sparse matrices **could or could not** be exposed to the user. If exposing these matrices is considered a high maintenance cost because the change is outward-facing and will need to be handled with care, then don't expose it. Just let advanced enough users copy and paste the code use it at their own risk. That said, exposing these might add three lines and a docstring. The only downside is then being bound to maintaining these matrices (and who knows, maybe sparse matrices are slow compared to something more smart, but this can be tested)

",,
10,issue_comment,1516,nilearn,nilearn,larsoner,2017-11-19 18:35:49,"> fsaverage is good enough. I suspect that it covers the 90% usecases

IIUC all Freesurfer subjects have an affine transformation file that can applied to get data into MNI space. This is what we plan to use in MNE to transform to use `plot_glass_brain` for individual subjects, e.g.:

https://github.com/mne-tools/mne-python/pull/4496/files#diff-c38906291c7d4fa5e1df2d494b9c27d2R129

It would be great if the `nilearn` functionality in this PR can be used the same way, in other words, it's compatible with any data already in MNI space -- that seems sufficently general to me.

If you want to extend it to subjects other than `fsaverage` (which has an identity MNI transformation), though, I'd probably do it in a separate PR since this one already has a ton of discussion. But if you do want to do it now (or later) let me know and I'm happy to coordinate to help you work with the publicly available `sample` subject from the MNE dataset, which has a complete Freesurfer recon and time-varying volume and surface source estimates.",,
11,issue_comment,1516,nilearn,nilearn,jeromedockes,2017-10-17 20:43:27,"> Thx !
> 
> I have a general question: overall the difference with pycortex is not that large -- yet we lose a few details, like in the pSTS region. However, you seem to suggest that your strategy is much faster: have you checked ? Can you clarify the difference ? Why didn't you use pycortex or very similar code ?

Hello @bthirion , sorry for the late answer.

I think that the extra sharpness you see in the neurovault snapshot is mostly
due to the rendering and the fact that with pycortex, pixels on the screen are
mapped directly into the brain volume. In our case, we first map the mesh
vertices into the volume, then let matplotlib render the surface (by
interpolating surrounding mesh values for each pixel).

Fig. 4 in the pycortex paper (Gao, J. S., Huth, A. G., Lescroart, M. D., &
Gallant, J. L. (2015). Pycortex: an interactive surface visualizer for fMRI.
Frontiers in neuroinformatics, 9.) illustrates that:
![pycortex](https://user-images.githubusercontent.com/9196501/31687769-8b9666fa-b38a-11e7-9751-c2986623b77c.jpg)



https://www.ncbi.nlm.nih.gov/pmc/articles/PMC4586273/


This mapping of pixels into the image is done by WebGL, a javascript wrapper
around OpenGl, which allows pycortex to do this in reasonable time by performing
the computations on the graphics card.

I think we don't want this because these dependencies are heavy (and obviously
not python libraries), and the code would be much bigger. It is better to get
values for each vertex in the mesh, so that we can rely on the existing nilearn
surface plotting functions and matplotlib for the display. Moreover, someone may
want to use these values interpolated at mesh nodes to do analysis of surface
data (although I don't think I would recommend it).

There is a possibility to get a value for each mesh vertex with pycortex, but as
you can see in the images below the results are closer to ours. This projection
on the cortical mesh, unlike pixel mapping, doesn't require OpenGL.

I have added sampling along a normal to the cortex to what is implemented in
this PR. So now, using the 'kind' keyword, the user can choose between the ball
sampling that we originally proposed, and what is done by pycortex and others:
draw a normal to the cortex, select some points on this normal, interpolate
image values at those points, and average them.

for now, the PR has the two interpolation methods offered in scipy: nearest and
linear. Note that 'nearest' is not taking the value of the voxel nearest to the
vertex: it is taking the voxel nearest to each of several points along the
normal before averaging them. In the same way, linear computes an interpolation
for several points along the normal and averages them. On top of nearest and
linear, pycortex offers the lanczos filter, which is an approximation of an
optimal filter for preserving the frequencies in the image. I can easily add
this as well, but I think the images are very similar (see below), and the
interpolation is much slower: it takes several seconds for one image with the
fsaverage mesh, using all 4 cores and most of the memory of my laptop - so I'd
recommend sticking with scipy's nearest and linear interpolations. (For some
reason, even when choosing 'nearest', using scipy interpolation is several times
slower the indexing we did when I opened the PR, but let's keep it if we want
the linear interpolation).

There are still some extra details in the pycortex images. Some possible explainations:
- pycortex forces you to perform registration of your volume with the surface
  subject using freesurfer. This is much more annoying for the user (e.g. me),
  but there may be a reason for it.
- pycortex wants a full freesurfer subject. There are lots of information in
  there, but one thing which can help have nicer surface plots is that they have
  both the pial and white matter surfaces, and therefore take the values inside
  the cortex, between these surfaces. We only have one surface, so we take
  values symmetrically from both sides of it. This is maybe less fancy, but it
  means that you can use the output of nilearn.datasets.fetch_surf_fsaverage5.
- maybe we need to tune a bit the size of the neighbourhood we use (I'm using 3
  mm)

Finally, it is a bit hard to compare computation times because of pycortex's
caching, but the methods are similar so if you map the mesh (not the pixels) and
use either nearest or linear interpolation, it should be about the same. This
can give an idea:

pycortex:
---------
nearest: 288 ms
linear: 1.81 s
lanczos: 6.65 s

nilearn:
--------
nearest (line): 79 ms
linear (line): 107 ms
ball: 56 ms

If the objective is just to plot one image, all of these are fine (except maybe
lanczos).

I think that all images look kind of similar and the projection doesn't have a
huge impact, which is why probably why caret offers projection methods such as
simply taking the voxel the node falls within, averaging the values of this
voxel's neighbours, averaging values in a cube, or placing a gaussian blob on
the node
(http://brainvis.wustl.edu/wiki/index.php/Caret:Operations/MapVolumeToSurface)

some examples for two images (neurovault ids 32015 and 36044): 

image 32015:
------------

pycortex lanczos:
![pycortex_brainpedia_32015_lanczos](https://user-images.githubusercontent.com/9196501/31687606-16e8c528-b38a-11e7-98b2-8cdcb8bd7309.png)


pycortex linear:
![pycortex_brainpedia_32015_linear](https://user-images.githubusercontent.com/9196501/31687617-1b94b7e4-b38a-11e7-8b3f-1b5d0cc164d8.png)


pycortex nearest:

![pycortex_brainpedia_32015_nearest](https://user-images.githubusercontent.com/9196501/31687625-1f5ffb86-b38a-11e7-9386-d8e5cdf81e42.png)

nilearn ball, 5mm:

![brainpedia_32015_nilearn_ball_5mm](https://user-images.githubusercontent.com/9196501/31688334-5934ec70-b38c-11e7-949e-7faeff69b034.png)


nilearn line, linear:

![nilearn_brainpedia_32015_line_linear_3mm](https://user-images.githubusercontent.com/9196501/31687648-2f467cc8-b38a-11e7-8a59-71fd63037b8b.png)


nilearn line, nearest:

![nilearn_brainpedia_32015_line_nearest_3mm](https://user-images.githubusercontent.com/9196501/31687659-3b1c7dfe-b38a-11e7-9508-a76ae8d36380.png)


nilearn ball (nearest):
![nilearn_brainpedia_32015_ball_3mm](https://user-images.githubusercontent.com/9196501/31687672-44ef5856-b38a-11e7-8fb9-b0ad3b6aa5f3.png)


image 36044:
------------

pycortex lanczos:

![pycortex_brainpedia_36044_lanczos](https://user-images.githubusercontent.com/9196501/31687688-5003766e-b38a-11e7-8658-c740795cb957.png)


pycortex linear:
![pycortex_brainpedia_36044_linear](https://user-images.githubusercontent.com/9196501/31687712-59b005ba-b38a-11e7-89db-5340de1c8589.png)


pycortex nearest:
![pycortex_brainpedia_36044_nearest](https://user-images.githubusercontent.com/9196501/31687711-591e05ca-b38a-11e7-82a1-bd448d2609b0.png)


nilearn line, linear:
![nilearn_brainpedia_36044_line_linear_3mm](https://user-images.githubusercontent.com/9196501/31687727-62420462-b38a-11e7-8d80-e4bf373b97bb.png)


nilearn line, nearest:
![nilearn_brainpedia_36044_line_nearest_3mm](https://user-images.githubusercontent.com/9196501/31687732-67a4a6d0-b38a-11e7-994d-085285d4089e.png)


nilearn ball (nearest):
![nilearn_brainpedia_36044_ball_3mm](https://user-images.githubusercontent.com/9196501/31687738-6f548602-b38a-11e7-9f8c-6fef6ed2512c.png)
",,
12,issue_comment,1516,nilearn,nilearn,jeromedockes,2017-10-19 16:32:30,"> THe ball is an approximation of a Gaussian sampling by considering it as a density and choosing an small set of optimal points to approximate it.

The one we use now is a uniform distribution inside the ball. I can replace it with Gaussian if we want.",,
13,issue_comment,1516,nilearn,nilearn,jeromedockes,2017-10-21 23:46:53,"> The idea would be to make this linear transformation explicit and hand it to experienced users if they request it. Ideally this would be done by representing the transformation as a scipy sparse matrix

Sounds very interesting!
",,
14,issue_comment,1516,nilearn,nilearn,jeromedockes,2017-11-14 21:15:51,"> I am trying to reproduce one of the travis failure: xml.parsers.expat.ExpatError: no element found: line 1, column 0 but could not.

cannot reproduce either
",,
15,issue_comment,1516,nilearn,nilearn,jeromedockes,2017-11-14 21:32:33,"> I haven't gone through tests yet. I tried to do with ica maps but could not.

@KamalakerDadi could you send something to help me reproduce this?",,
16,issue_comment,1516,nilearn,nilearn,jeromedockes,2017-11-14 22:10:47,"> I haven't gone through tests yet. I tried to do with ica maps but could not.
> 
>     @KamalakerDadi could you send something to help me reproduce this?
> 
> from nilearn import datasets
> from nilearn.plotting import niimg_to_surf_data, plot_surf_stat_map
> 
> 
> fsaverage = datasets.fetch_surf_fsaverage5()
> texture = niimg_to_surf_data('CanICA_resting_state.nii.gz', fsaverage.pial_left)
> plot_surf_stat_map(fsaverage.pial_left, texture, cmap='bwr')

texture here will be a 2d array: each column is a surface map for the corresponding image. plot_surf_stat_map just wants one surface map at a time, try this:

```python
from nilearn import datasets, plotting

brainpedia = datasets.fetch_neurovault(collection_id=1952, max_images=7)
fsaverage = datasets.fetch_surf_fsaverage5()
texture = plotting.vol_to_surf(brainpedia.images, fsaverage.pial_left)

for img_texture in texture.T:
    plotting.plot_surf_stat_map(fsaverage.infl_left, img_texture)

plotting.show()
```

ps what is the error you get?",,
17,issue_comment,1516,nilearn,nilearn,jeromedockes,2017-11-14 23:14:37,"> it seems to me that the projection code should not live in the namespace of the plotting code

Done. I think the examples should be moved as well, where would you put them?",,
18,issue_comment,1516,nilearn,nilearn,jeromedockes,2017-11-14 23:25:58,"questions we haven't answered yet:
  - do we create a new subfolder in examples/ ? where do we put
    plot_3d_map_to_surface_projection.py and
    plot_surface_projection_strategies.py?
  - when some mesh vertices are outside the provided volume, is it ok to return
    nan for these vertices? should we provide a fill_value kwarg?",,
19,issue_comment,1516,nilearn,nilearn,jeromedockes,2017-11-15 17:52:04,"> The user-facing example is at the right place. The internal example should be moved to a sub directory of plotting.

moved it to subdirectory. should I edit gen_gallery.py so that the subdirectory is also explored to generate the gallery? ",,
20,issue_comment,1516,nilearn,nilearn,jeromedockes,2017-11-15 20:35:27,"> For other failure, I am trying to find a solution in nibabel issue tracker nipy/nibabel#581. It might be that xml.parser.Expat.version or valid GIFTI in failing travis containers.

It seems to be due to the mocking of fetching of the fsaverage files. The surface files I am trying to load are empty",,
21,issue_comment,1516,nilearn,nilearn,jeromedockes,2017-11-15 21:08:46,"> I would expect to fail on laptop if trying to load empty ?

Not necessarily: maybe you already have the fsaverage files on the laptop, so
they don't need to be fetched.

The problem was that test_fetch_mixed_gambles in
nilearn/datasets/tests/test_func.py was using @with_setup(setup_mock), but
forgot to @with_setup(setup_mock, teardown_mock). As a result, after executing
this test, dataset module was unusable: urllib.request was mocked, and any fetch
dataset would be a bunch of empty files.

travis passing now.",,
22,issue_comment,1516,nilearn,nilearn,jeromedockes,2017-11-15 21:17:03,"> So, I close the issue opened in nibabel ?

Yes I think so. I have checked that the file was actually empty, so this was not a nibabel issue.

Thanks a lot for your help debugging these 3 errors!
I'll look into appveyor now",,
23,issue_comment,1516,nilearn,nilearn,jeromedockes,2017-11-16 20:55:01,"> I don't think that you need to edit anything. You only need to add a README.txt in the subdirectory.

still not showing up :cry: ",,
24,issue_comment,1516,nilearn,nilearn,jeromedockes,2017-11-16 21:36:45,"> What are you trying to add ? Sorry, I could not catch.

the technical detail example does not show up in the examples index of the documentation, at least when I build it locally",,
25,issue_comment,1516,nilearn,nilearn,jeromedockes,2017-11-17 21:55:41,"> We are almost close to merge.

Thanks for all your help Kamalaker!",,
26,issue_comment,1516,nilearn,nilearn,jeromedockes,2017-11-18 02:17:35,"> I only remain a bit surprised that the line/linear approach doe not really work better than the ball

The images look very similar, but the linear interpolation is more stable when resampling the input image (using either the ball or normal sample positions)",,
27,issue_comment,1516,nilearn,nilearn,jeromedockes,2017-11-19 03:48:47,"> I am preparing a PR to do this.

is  #1564 going to be merged before this? should I remove anything related to scipy 0.13 support?",,
28,issue_comment,1516,nilearn,nilearn,jeromedockes,2017-11-19 04:08:38,"> . @jeromedockes should know if it beneficial to do this at a performance level ?

About performance:
- for one image, there is no big difference, linear takes about x1.5 more time
- for many images, since it is written as a dot product with a sparse matrix, nearest scales much better: for 100 images, linear takes x20 more time (2.86s for linear and 156ms for nearest on my laptop)
",,
29,issue_comment,1516,nilearn,nilearn,jeromedockes,2017-11-19 08:10:47,"apart from toy generated meshes, we have only been using fsaverage; does anyone have in mind other cortical meshes in mni space that are easily available and that we could try? ",,
30,issue_comment,1516,nilearn,nilearn,jeromedockes,2017-11-19 17:10:43,"> I didn't have time in mind, but more reabability

ah ok, in this case I change it",,
31,issue_comment,1516,nilearn,nilearn,jeromedockes,2017-11-19 17:28:08,"> I didn't have time in mind, but more reabability: we are moving around anobject that we are inverting. That is a bit surprising.

How is this for a compromise:
- inside _masked_indices, which was doing a lot of logical_not, I manipulate kept indices, but I return ~kept
- outside this function, masked is used once as-is, twice after doing NOT (if I was returning kept it would be twice as-is, once after taking NOT)

I just find it easier to understand what this is when it is called 'masked' something.
what do you think?",,
32,issue_comment,1516,nilearn,nilearn,jeromedockes,2017-11-19 18:52:14,"@larsoner it should work fine for any mesh and image if they're both in the same space - in particular if they're both in MNI space. My comment was simply that I would have liked to try and test it with a few other meshes, you can ignore it",,
33,issue_comment,1516,nilearn,nilearn,jeromedockes,2017-11-19 19:02:26,"> If you want to extend it to subjects other than fsaverage (which has an identity MNI transformation), though, I'd probably do it in a separate PR since this one already has a ton of discussion. But if you do want to do it now (or later) let me know and I'm happy to coordinate to help you work with the publicly available sample subject from the MNE dataset, which has a complete Freesurfer recon and time-varying volume and surface source estimates.

I know nothing about eeg or meg so this sounds like a cool learning opportunity if it can be useful to nilearn users. happy to work on it after today's release (as you said it would be a different PR). In the meanwhile, anything that is an affine transformation away from the image space is fine for the current functionality",,
34,issue_comment,1516,nilearn,nilearn,jeromedockes,2017-11-19 19:04:03,"> OK, tests ran. I think that this is good to go. Merging!

Great! many thanks to everyone involved in the reviews and discussion; it has been fun and very interesting for me",,
35,issue_comment,1516,nilearn,nilearn,KamalakerDadi,2017-09-30 08:24:40,FYI: CircleCI is now fixed and full details about the FIX can be found in this [thread](https://github.com/conda/conda/issues/6030),,
36,issue_comment,1516,nilearn,nilearn,KamalakerDadi,2017-11-14 12:25:54,">(This image is produced by the show_sampling.py example, which is only there to clarify
the strategy implemented in this PR and will be removed).

I am -1 on this. I would like to keep the example for user understanding. Similar thing is there for plot_affine_transformation.py
",,
37,issue_comment,1516,nilearn,nilearn,KamalakerDadi,2017-11-14 14:00:13,Sorry for the merge noise. Could you please rebase ?,,
38,issue_comment,1516,nilearn,nilearn,KamalakerDadi,2017-11-14 20:26:58,"I am trying to reproduce one of the travis failure: xml.parsers.expat.ExpatError: no element found: line 1, column 0 but could not.",,
39,issue_comment,1516,nilearn,nilearn,KamalakerDadi,2017-11-14 21:42:05,">I haven't gone through tests yet. I tried to do with ica maps but could not.

>@KamalakerDadi could you send something to help me reproduce this?

```python
from nilearn import datasets
from nilearn.plotting import niimg_to_surf_data, plot_surf_stat_map


fsaverage = datasets.fetch_surf_fsaverage5()
texture = niimg_to_surf_data('CanICA_resting_state.nii.gz', fsaverage.pial_left)
plot_surf_stat_map(fsaverage.pial_left, texture, cmap='bwr')
```
[CanICA_resting_state.nii.gz](https://github.com/nilearn/nilearn/files/1472608/CanICA_resting_state.nii.gz)
",,
40,issue_comment,1516,nilearn,nilearn,KamalakerDadi,2017-11-14 22:03:48,">    I am trying to reproduce one of the travis failure: xml.parsers.expat.ExpatError: no element found: line 1, column 0 but could not.

>cannot reproduce either

I can post the issue to nibabel tomorrow to get some help. Meanwhile, I was quickly going through this issue but with no striking thoughts. https://github.com/nipy/nibabel/issues/469",,
41,issue_comment,1516,nilearn,nilearn,KamalakerDadi,2017-11-14 22:17:40,">ps what is the error you get?

No problem now. :+1: I ran script with canica maps.",,
42,issue_comment,1516,nilearn,nilearn,KamalakerDadi,2017-11-15 08:48:58,">when some mesh vertices are outside the provided volume, is it ok to return
nan for these vertices? should we provide a fill_value kwarg?

Is there any value we can fill to make it even with background ? What is the practise other softwares does in this missing vertices ?",,
43,issue_comment,1516,nilearn,nilearn,KamalakerDadi,2017-11-15 15:07:49,"* Quickly scanning through Surface plotting PR. The reason for first travis env failure might be. As mentioned in testing function ```test_load_surf_mesh_file_gii``` in nilearn/tests/test_surface.py:
“If nibabel is of older version we skip tests as nibabel does not  support intent argument and intent codes are not handled properly with  older versions”. That's why we don't see the failure in other envs which have nibabel>2.1.0
Given this, we can first try by generating a dummy surface mesh object using ```_generate_surf``` rather than testing with pial_left surface mesh object.
Second try is upto dicussion if we want to skip test.

* Because one of the environment tests without matplotlib it fails if you do ```import matplotlib``` outside plotting module. Because of this all plotting functions are tested by setting the matplotlib backend in nilearn/plotting/__init__.py For instance, see this PR #546

* ~~For other failure, I am trying to find a solution in nibabel issue tracker https://github.com/nipy/nibabel/issues/581. It might be that xml.parser.Expat.__version__ or valid GIFTI in failing travis containers.~~
~~Can you please try to print the xml.parser.Expat.__version__ in new commit. Try to import and print before load_surface_mesh call ? And also, print(sha256sum --version). I am not sure how to do this ?~~",,
44,issue_comment,1516,nilearn,nilearn,KamalakerDadi,2017-11-15 20:51:34,">   For other failure, I am trying to find a solution in nibabel issue tracker nipy/nibabel#581. It might be that xml.parser.Expat.version or valid GIFTI in failing travis containers.

>It seems to be due to the mocking of fetching of the fsaverage files. The surface files I am trying to load are empty

I would expect to fail on laptop if trying to load empty ?",,
45,issue_comment,1516,nilearn,nilearn,KamalakerDadi,2017-11-15 21:12:27,">Not necessarily: maybe you already have the fsaverage files on the laptop, so
>they don't need to be fetched.

>The problem was that test_fetch_mixed_gambles in
>nilearn/datasets/tests/test_func.py was using @with_setup(setup_mock), but
>forgot to @with_setup(setup_mock, teardown_mock). As a result, after executing
>this test, dataset module was unusable: urllib.request was mocked, and any fetch
>dataset would be a bunch of empty files.

Great catch. :+1: 

>travis passing now.

So, I close the issue opened in nibabel ?",,
46,issue_comment,1516,nilearn,nilearn,KamalakerDadi,2017-11-15 21:22:03,"> I'll look into appveyor now

I will make another review now.",,
47,issue_comment,1516,nilearn,nilearn,KamalakerDadi,2017-11-16 12:48:17,I think we are almost there.,,
48,issue_comment,1516,nilearn,nilearn,KamalakerDadi,2017-11-16 13:00:50,"The technical examples in sub folders can't be seen anymore in the gallery ?
examples/01_plotting/technical_details/plot_surface_projection_strategies.py",,
49,issue_comment,1516,nilearn,nilearn,KamalakerDadi,2017-11-16 13:03:04,"> I am -1 on this. I would like to keep the example for user understanding.
 >Similar thing is there for plot_affine_transformation.py

>I think that we could create a subfolder of the plotting folder for such
examples called something like ""Technical matters"" and move these two
examples in there.

I think plot_affine_transformation.py needs to be moved as well to technical_details sub folder.",,
50,issue_comment,1516,nilearn,nilearn,KamalakerDadi,2017-11-16 21:18:19,">I don't think that you need to edit anything. You only need to add a README.txt in the subdirectory.

>still not showing up :cry:

What are you trying to add ? Sorry, I could not catch.

Also, sorry to ask lot of times to rebase. Travis failures should be fixed by rebase.",,
51,issue_comment,1516,nilearn,nilearn,KamalakerDadi,2017-11-16 21:51:57,"I am reading the documentation: It says
""You can have sub-folders in your examples directory, those will be processed by the gallery extension and presented in the gallery, as long as they also have a README.txt file. Sub-folders have to respect the same structure examples folder.""",,
52,issue_comment,1516,nilearn,nilearn,KamalakerDadi,2017-11-16 22:10:08,">OK, I am sorry, I had it wrong: sphinx-gallery does not explore in depth the directories (we could suggest this as an enhancement). 

May be it can be done by upgrading to new version. Right now we are at 0.1.11. I can take care of upgrading and testing this sub folder arch.",,
53,issue_comment,1516,nilearn,nilearn,KamalakerDadi,2017-11-17 21:07:01,Could you please add .. versionadded:: 0.3.2 to vol_to_surf ?,,
54,issue_comment,1516,nilearn,nilearn,KamalakerDadi,2017-11-17 21:08:05,I don't think I have much to say here. We are almost close to merge.,,
55,issue_comment,1516,nilearn,nilearn,KamalakerDadi,2017-11-18 19:51:27," >linear (trilinear) is available from 0.14 scipy.
>OK, how about we bump dependency to 0.14 for scipy?

I have no problem bumping to 0.14. @jeromedockes should know if it beneficial to do this at a performance level ?",,
56,issue_comment,1516,nilearn,nilearn,KamalakerDadi,2017-11-19 09:00:38,">I am preparing a PR to do this.

>is #1564 going to be merged before this? should I remove anything related to scipy 0.13 support?

Discussion was to have linear by default. We are bumping the scipy to 0.14",,
57,issue_comment,1516,nilearn,nilearn,KamalakerDadi,2017-11-19 15:29:00,I guess it was accidentally closed. Reopening again.,,
58,issue_comment,1516,nilearn,nilearn,codecov[bot],2017-11-15 21:43:21,"# [Codecov](https://codecov.io/gh/nilearn/nilearn/pull/1516?src=pr&el=h1) Report
> Merging [#1516](https://codecov.io/gh/nilearn/nilearn/pull/1516?src=pr&el=desc) into [master](https://codecov.io/gh/nilearn/nilearn/commit/dc6b15ea17c39327549233ba6e54fc684b041729?src=pr&el=desc) will **increase** coverage by `0.12%`.
> The diff coverage is `98.86%`.

[![Impacted file tree graph](https://codecov.io/gh/nilearn/nilearn/pull/1516/graphs/tree.svg?width=650&height=150&src=pr&token=KpYArSdyXv)](https://codecov.io/gh/nilearn/nilearn/pull/1516?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##           master    #1516      +/-   ##
==========================================
+ Coverage   94.29%   94.42%   +0.12%     
==========================================
  Files         122      125       +3     
  Lines       14997    15264     +267     
==========================================
+ Hits        14142    14413     +271     
+ Misses        855      851       -4
```


| [Impacted Files](https://codecov.io/gh/nilearn/nilearn/pull/1516?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [nilearn/plotting/\_\_init\_\_.py](https://codecov.io/gh/nilearn/nilearn/pull/1516?src=pr&el=tree#diff-bmlsZWFybi9wbG90dGluZy9fX2luaXRfXy5weQ==) | `83.33% <ø> (-0.67%)` | :arrow_down: |
| [nilearn/\_\_init\_\_.py](https://codecov.io/gh/nilearn/nilearn/pull/1516?src=pr&el=tree#diff-bmlsZWFybi9fX2luaXRfXy5weQ==) | `100% <ø> (ø)` | :arrow_up: |
| [nilearn/datasets/tests/test\_func.py](https://codecov.io/gh/nilearn/nilearn/pull/1516?src=pr&el=tree#diff-bmlsZWFybi9kYXRhc2V0cy90ZXN0cy90ZXN0X2Z1bmMucHk=) | `100% <100%> (ø)` | :arrow_up: |
| [nilearn/surface/\_\_init\_\_.py](https://codecov.io/gh/nilearn/nilearn/pull/1516?src=pr&el=tree#diff-bmlsZWFybi9zdXJmYWNlL19faW5pdF9fLnB5) | `100% <100%> (ø)` | |
| [nilearn/plotting/surf\_plotting.py](https://codecov.io/gh/nilearn/nilearn/pull/1516?src=pr&el=tree#diff-bmlsZWFybi9wbG90dGluZy9zdXJmX3Bsb3R0aW5nLnB5) | `84.16% <100%> (-3.11%)` | :arrow_down: |
| [nilearn/plotting/tests/test\_surf\_plotting.py](https://codecov.io/gh/nilearn/nilearn/pull/1516?src=pr&el=tree#diff-bmlsZWFybi9wbG90dGluZy90ZXN0cy90ZXN0X3N1cmZfcGxvdHRpbmcucHk=) | `100% <100%> (+0.98%)` | :arrow_up: |
| [nilearn/surface/surface.py](https://codecov.io/gh/nilearn/nilearn/pull/1516?src=pr&el=tree#diff-bmlsZWFybi9zdXJmYWNlL3N1cmZhY2UucHk=) | `98.33% <98.33%> (ø)` | |
| [nilearn/surface/tests/test\_surface.py](https://codecov.io/gh/nilearn/nilearn/pull/1516?src=pr&el=tree#diff-bmlsZWFybi9zdXJmYWNlL3Rlc3RzL3Rlc3Rfc3VyZmFjZS5weQ==) | `99.21% <99.21%> (ø)` | |
| ... and [4 more](https://codecov.io/gh/nilearn/nilearn/pull/1516?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/nilearn/nilearn/pull/1516?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/nilearn/nilearn/pull/1516?src=pr&el=footer). Last update [dc6b15e...b86bfb9](https://codecov.io/gh/nilearn/nilearn/pull/1516?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",,
59,pull_request_commit_comment,1516,nilearn,nilearn,banilo,2017-09-28 22:01:44,Perhaps consider adding a more verbose error message,b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'nilearn/plotting/surf_plotting.py')"
60,pull_request_commit_comment,1516,nilearn,nilearn,banilo,2017-09-28 22:02:26,this does not yet seem to make the standard mention of nii-like image compatability,b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'nilearn/plotting/surf_plotting.py')"
61,pull_request_commit_comment,1516,nilearn,nilearn,banilo,2017-09-28 22:04:58,"several imports in here appear to not follow the ""basic->more specific/elaborate"" convention... ",b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'nilearn/plotting/tests/test_surf_plotting.py')"
62,pull_request_commit_comment,1516,nilearn,nilearn,GaelVaroquaux,2017-09-29 08:53:34,"You need a docstring with a title, for the gallery. Sphinx-gallery will not accept to build a gallery item from this.",b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'examples/01_plotting/brainpedia_surface.py')"
63,pull_request_commit_comment,1516,nilearn,nilearn,GaelVaroquaux,2017-09-30 18:33:45,"I would like to avoid uncontroled RNGs in the codebase. The right way of doing this is to create a like RNG:
<pre>
rng = np.random.RandomState(0)
image = rng.uniform(...)
</pre>",b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'examples/01_plotting/show_ball_sampling.py')"
64,pull_request_commit_comment,1516,nilearn,nilearn,GaelVaroquaux,2017-09-30 18:35:38,"Sorry, I hadn't realized that this was an example, and not a test.

I would simply seed the global RNG here: it's simpler and the side effect is less important.",b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'examples/01_plotting/show_ball_sampling.py')"
65,pull_request_commit_comment,1516,nilearn,nilearn,GaelVaroquaux,2017-09-30 18:36:22,+1. This will not help the user.,b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'nilearn/plotting/surf_plotting.py')"
66,pull_request_commit_comment,1516,nilearn,nilearn,bthirion,2017-10-19 10:42:43,Please add a bit more here.,b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'examples/01_plotting/show_ball_sampling.py')"
67,pull_request_commit_comment,1516,nilearn,nilearn,bthirion,2017-10-19 10:46:06,Overall the structure of this second example does not follow the Nilearn conventions for examples (present them as a script rather than functions). Can this be reorganized a little bit ?,b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'examples/01_plotting/show_ball_sampling.py')"
68,pull_request_commit_comment,1516,nilearn,nilearn,bthirion,2017-10-19 10:49:33,there's a function for that.,b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'nilearn/plotting/surf_plotting.py')"
69,pull_request_commit_comment,1516,nilearn,nilearn,bthirion,2017-10-19 10:50:51,How do you unsure that these are outer normals. Is is from the mesh triangle encoding conventions (should be made explicit then) ?,b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'nilearn/plotting/surf_plotting.py')"
70,pull_request_commit_comment,1516,nilearn,nilearn,bthirion,2017-10-19 10:54:25,I find this a bit surprising for a  non-public functions,b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'nilearn/plotting/surf_plotting.py')"
71,pull_request_commit_comment,1516,nilearn,nilearn,bthirion,2017-10-19 10:55:46,I would take only the outer normal; Why do you center the interval ?,b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'nilearn/plotting/surf_plotting.py')"
72,pull_request_commit_comment,1516,nilearn,nilearn,bthirion,2017-10-19 10:56:14,n_points=10 probably suffices as a default ?,b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'nilearn/plotting/surf_plotting.py')"
73,pull_request_commit_comment,1516,nilearn,nilearn,bthirion,2017-10-19 11:01:57,test_ball_sampling(),b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'nilearn/plotting/tests/test_surf_plotting.py')"
74,pull_request_commit_comment,1516,nilearn,nilearn,bthirion,2017-10-19 11:05:00,Please add comment to explain what you're testing.,b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'nilearn/plotting/tests/test_surf_plotting.py')"
75,pull_request_commit_comment,1516,nilearn,nilearn,jeromedockes,2017-10-19 16:29:52,"Yes if we keep it this example should be reworked. Originally, I had only thrown
it in there to illustrate the sampling method for reviewers by producing the 2d
plot at the top of the PR, and was planning to remove it. However @GaelVaroquaux
suggested that it might be interesting to users as well. The only problem is
that in that case we need a coord_transform that can handle 2d images, which is
why I'm not using nilearn.image.coord_transform for now. It's a one-line
function though.
If we keep it I will also add an illustration for the line sampling.

",b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'examples/01_plotting/show_ball_sampling.py')"
76,pull_request_commit_comment,1516,nilearn,nilearn,jeromedockes,2017-10-19 16:30:10,"Yes, image.resampling.coord_transform. But it only handles 3d data, so if we
want to keep the example which illustrates the sampling methods in 2d we need
this (see comment). or is there another function for coord transforms in
nilearn?",b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'nilearn/plotting/surf_plotting.py')"
77,pull_request_commit_comment,1516,nilearn,nilearn,jeromedockes,2017-10-19 16:30:54,"Usually when faces in a triangular mesh are described by their ordered vertices,
the normal given by the right-hand rule points ""outwards"". I think that this
convention is respected by cortical meshes because that is what matplotlib
expects, and surf_plotting.plot_surf passes the faces to matplotlib without
modifying them (and it works fine). Can anyone confirm? I will make this explicit.",b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'nilearn/plotting/surf_plotting.py')"
78,pull_request_commit_comment,1516,nilearn,nilearn,jeromedockes,2017-10-19 16:31:19,"The problem is that I was not sure if we would always get a pial surface, or
sometimes a white matter surface, or something in between. If it's always pial
we can shift the interval inwards. We could also expose the shift as a
parameter, or ask the user to specify what kind of surface it is. Finally, I
think we should still keep at least a small portion of it on the other side to
be more robust to small registration problems (this is what caret does).
",b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'nilearn/plotting/surf_plotting.py')"
79,pull_request_commit_comment,1516,nilearn,nilearn,KamalakerDadi,2017-11-12 18:05:03,Can you leave empty line after so that hopefully sphinx failures can be fixed ?,b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'nilearn/plotting/surf_plotting.py')"
80,pull_request_commit_comment,1516,nilearn,nilearn,KamalakerDadi,2017-11-12 18:05:27,Same here can you leave empty line after ?,b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'nilearn/plotting/surf_plotting.py')"
81,pull_request_commit_comment,1516,nilearn,nilearn,KamalakerDadi,2017-11-12 18:12:05,Seems like this is new from SciPy 0.14.x. Do you know if there any alternatives for < 0.14 SciPy version. Because we support 0.13.3,b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'nilearn/plotting/surf_plotting.py')"
82,pull_request_commit_comment,1516,nilearn,nilearn,jeromedockes,2017-11-13 17:34:22,"Thanks for pointing this out. I'm not sure that there is an easy alternative,
because interpolation of data on a regular grid was introduced in 0.14. Before
that, the linear interpolation accepts a bunch of arbitrary points and computes
a delaunay triangulation, which is prohibitively slow - I waited 10 mn for the
2mm MNI template before giving up.
We could:
  - write our own linear interpolation, which would give us the opportunity to
    present it as a sparse matrix, with the same advantages we got from doing
    this for the nearest voxel interpolation.
  - issue a warning and fall back to nearest neighbour interpolation when the
    scipy version is < 0.14. Since the resulting images are almost identical
    (at least qualitatively, i.e. the plots will look the same), this seems
    reasonable to me.

What do you think?",b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'nilearn/plotting/surf_plotting.py')"
83,pull_request_commit_comment,1516,nilearn,nilearn,GaelVaroquaux,2017-11-14 13:57:20,"Can you use the map in other visualization examples rather:
https://2698-1235740-gh.circle-artifacts.com/0/home/ubuntu/nilearn/doc/_build/html/auto_examples/01_plotting/plot_demo_glass_brain.html#sphx-glr-auto-examples-01-plotting-plot-demo-glass-brain-py

That way it's easier to compare examples. Also, this map is easy to understand (it's a simple button press map)",b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'examples/01_plotting/plot_3d_map_projection.py')"
84,pull_request_commit_comment,1516,nilearn,nilearn,KamalakerDadi,2017-11-14 13:59:36,">What do you think?

2 option looks reasonable compromise. So, here nearest neighbour is faster compared to linear one ?",b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'nilearn/plotting/surf_plotting.py')"
85,pull_request_commit_comment,1516,nilearn,nilearn,KamalakerDadi,2017-11-14 14:03:03,"I am just trying to understand. ""Projecting a 3D statistical map onto"" ........ if this function is more suitable to plot statistical maps. 3D brain image seems like a more general or averaged one across timeseries of images.",b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'doc/plotting/index.rst')"
86,pull_request_commit_comment,1516,nilearn,nilearn,GaelVaroquaux,2017-11-14 14:03:20,"People would say ""a 3d brain volume""",b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'doc/whats_new.rst')"
87,pull_request_commit_comment,1516,nilearn,nilearn,KamalakerDadi,2017-11-14 14:05:21,I would write filename as plot_3d_map_to_surface_projection.py ?,b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'examples/01_plotting/plot_3d_map_projection.py')"
88,pull_request_commit_comment,1516,nilearn,nilearn,KamalakerDadi,2017-11-14 14:12:03,"I would write ""Download a 3D statistical map from"". Because you said 3D data after.",b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'examples/01_plotting/plot_3d_map_projection.py')"
89,pull_request_commit_comment,1516,nilearn,nilearn,KamalakerDadi,2017-11-14 14:46:59,General comment: Is there any easy way to compare between volume and surface projection of same statistical map ?,b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'examples/01_plotting/plot_3d_map_projection.py')"
90,pull_request_commit_comment,1516,nilearn,nilearn,GaelVaroquaux,2017-11-14 14:47:32,We prefer relative imports.,b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'nilearn/plotting/surf_plotting.py')"
91,pull_request_commit_comment,1516,nilearn,nilearn,KamalakerDadi,2017-11-14 15:04:08,"I hit nans while using faverage.infl_left or infl_right. How can we overcome this problem in ```niimg_to_surf_data``` ?
Keeping them to zero works ?",b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'examples/01_plotting/plot_3d_map_projection.py')"
92,pull_request_commit_comment,1516,nilearn,nilearn,KamalakerDadi,2017-11-14 15:19:27,"""3d volume""",b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'examples/01_plotting/plot_cortex_projection_strategies.py')"
93,pull_request_commit_comment,1516,nilearn,nilearn,KamalakerDadi,2017-11-14 15:38:42,"Ok. It only works for mesh data but not depth data ? For instance, depth data I am referring to sulc_left or right ?",b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'nilearn/plotting/surf_plotting.py')"
94,pull_request_commit_comment,1516,nilearn,nilearn,KamalakerDadi,2017-11-14 15:41:51,We are able to import ```from nilearn.plotting import niimg_to_surf_data```. I think we can say simply plotting.niimg_to_surf_data,b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'examples/01_plotting/plot_cortex_projection_strategies.py')"
95,pull_request_commit_comment,1516,nilearn,nilearn,KamalakerDadi,2017-11-14 15:42:40,same here plotting.plot_surf_stat_map for easy import understanding to user.,b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'examples/01_plotting/plot_cortex_projection_strategies.py')"
96,pull_request_commit_comment,1516,nilearn,nilearn,KamalakerDadi,2017-11-14 15:49:08,I would write filename as plot_surface_projection_strategies.py,b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'examples/01_plotting/plot_cortex_projection_strategies.py')"
97,pull_request_commit_comment,1516,nilearn,nilearn,KamalakerDadi,2017-11-14 16:22:43,"In all plotting functions, we said image->img if it not specific to statistical image. Otherwise, stat_map_img.",b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'nilearn/plotting/surf_plotting.py')"
98,pull_request_commit_comment,1516,nilearn,nilearn,KamalakerDadi,2017-11-14 16:23:44,mask -> mask_img ?,b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'nilearn/plotting/surf_plotting.py')"
99,pull_request_commit_comment,1516,nilearn,nilearn,KamalakerDadi,2017-11-14 16:24:58,n capital **N**iimg,b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'nilearn/plotting/surf_plotting.py')"
100,pull_request_commit_comment,1516,nilearn,nilearn,KamalakerDadi,2017-11-14 16:29:16,I would go for neighbouring -> neighboring,b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'nilearn/plotting/surf_plotting.py')"
101,pull_request_commit_comment,1516,nilearn,nilearn,KamalakerDadi,2017-11-14 16:35:03,Just to be consistent ======= -> -------------,b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'nilearn/plotting/surf_plotting.py')"
102,pull_request_commit_comment,1516,nilearn,nilearn,KamalakerDadi,2017-11-14 16:39:55,capital n,b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'nilearn/plotting/surf_plotting.py')"
103,pull_request_commit_comment,1516,nilearn,nilearn,KamalakerDadi,2017-11-14 16:41:57,array -> numpy.ndarray,b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'nilearn/plotting/surf_plotting.py')"
104,pull_request_commit_comment,1516,nilearn,nilearn,KamalakerDadi,2017-11-14 16:46:03,"Simply ""If image was a 3D image"" to ""If 3D image is provided""",b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'nilearn/plotting/surf_plotting.py')"
105,pull_request_commit_comment,1516,nilearn,nilearn,KamalakerDadi,2017-11-14 16:46:45,"Same here: ""If image was a 4d image"" to ""If 4D image is provided""",b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'nilearn/plotting/surf_plotting.py')"
106,pull_request_commit_comment,1516,nilearn,nilearn,KamalakerDadi,2017-11-14 16:51:21,May be we could simply use this in the first line and remove nilearn.image.load_img,b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'nilearn/plotting/surf_plotting.py')"
107,pull_request_commit_comment,1516,nilearn,nilearn,KamalakerDadi,2017-11-14 16:56:21,I haven't checked doing surface plotting with functions we have using 4D stat map image. Did you checked it works ?,b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'nilearn/plotting/surf_plotting.py')"
108,pull_request_commit_comment,1516,nilearn,nilearn,KamalakerDadi,2017-11-14 16:58:28,Why not ```from nilearn import image``` and use functions in image module ?,b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'nilearn/plotting/surf_plotting.py')"
109,pull_request_commit_comment,1516,nilearn,nilearn,KamalakerDadi,2017-11-14 17:07:20,Is it a good idea to use the same interpolation method as specified/specifies at the function level ?,b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'nilearn/plotting/surf_plotting.py')"
110,pull_request_commit_comment,1516,nilearn,nilearn,KamalakerDadi,2017-11-14 17:10:17,"Given that resampling is costly, can we do resampling only if both images are not in same FOV ? Or Is it necessary to do resampling to get better sampling points positions ?",b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'nilearn/plotting/surf_plotting.py')"
111,pull_request_commit_comment,1516,nilearn,nilearn,jeromedockes,2017-11-14 18:22:32,nearest neighbour does not use scipy.interpolate so it does not have this issue.,b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'nilearn/plotting/surf_plotting.py')"
112,pull_request_commit_comment,1516,nilearn,nilearn,jeromedockes,2017-11-14 18:37:32,should we plot both the surface projection and some slices or a glass brain in this example?,b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'examples/01_plotting/plot_3d_map_projection.py')"
113,pull_request_commit_comment,1516,nilearn,nilearn,jeromedockes,2017-11-14 18:47:20,"- infl_left and infl_right are the inflated surfaces: the nodes of the mesh have
  been moved to make the surface of the cortex smoother, inflated for display.
  They are not any more at their original position in the cortex, so it doesn't
  really make sense to sample the volume at these positions. I think what people
  would do is: use pial_left and pial_right, the true positions of the cortical
  mesh, to get the projectin, then use infl_left and infl_right, along with the
  computed projection, to make the display.

- for now, we get nans for vertices that are outside the image, or outside the
  mask if one is provided. I also don't really like returning nans, but values
  at these nodes truly aren't defined. we could provide a fill value kwarg?",b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'examples/01_plotting/plot_3d_map_projection.py')"
114,pull_request_commit_comment,1516,nilearn,nilearn,jeromedockes,2017-11-14 18:52:16,"It should be a mesh of the cortex. depth data does not give a mesh of the cortex, but the depth of the sulci at each position of such a mesh. From what I understand it is used mostly for shading the surface plots (although I don't see a difference in the resulting plot whether I pass this to  plot_surf_stat_map or not). So it is a different kind of data, not relevant for the projection. the description of the 'mesh' parameter has been copied from existing surface plotting functions",b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'nilearn/plotting/surf_plotting.py')"
115,pull_request_commit_comment,1516,nilearn,nilearn,jeromedockes,2017-11-14 19:07:19,I want to load it first to get its original shape. How would you do it?,b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'nilearn/plotting/surf_plotting.py')"
116,pull_request_commit_comment,1516,nilearn,nilearn,jeromedockes,2017-11-14 19:09:59,"I checked it words, and in test_surf_plotting.test_niimg_to_surf_data, I check we get the same result when we project an image by itself or as part of a 4d image. Maybe it needs more tests?",b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'nilearn/plotting/surf_plotting.py')"
117,pull_request_commit_comment,1516,nilearn,nilearn,jeromedockes,2017-11-14 19:11:37,"This is not related to sampling around mesh vertices, it is just to align the mask and the image. I use nearest because it is fast and preserves the datatype of the mask (continuous would transform the boolean mask into a floating-point image)",b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'nilearn/plotting/surf_plotting.py')"
118,pull_request_commit_comment,1516,nilearn,nilearn,KamalakerDadi,2017-11-14 19:21:27,I don't know much about surface plotting. I am justing trying to visualize both projections and thinking how would they look like. May be a general comment.,b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'examples/01_plotting/plot_3d_map_projection.py')"
119,pull_request_commit_comment,1516,nilearn,nilearn,KamalakerDadi,2017-11-14 19:29:10,Surface plotting users know exactly which mesh to use to get right display. You are right nans are problem. But keeping them zero is also not valid. What would be your choice of filling value ?,b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'examples/01_plotting/plot_3d_map_projection.py')"
120,pull_request_commit_comment,1516,nilearn,nilearn,jeromedockes,2017-11-14 19:50:44,"I don't think there is any reasonable default for filling value except nan, but we could allow the user to  choose a different one. If we use anything else than nan, e.g. 0, the user will not now if the image intensity at this point was 0, or it was filled because outside of mask or image",b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'examples/01_plotting/plot_3d_map_projection.py')"
121,pull_request_commit_comment,1516,nilearn,nilearn,KamalakerDadi,2017-11-14 19:53:04,I haven't gone through tests yet. I tried to do with ica maps but could not.,b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'nilearn/plotting/surf_plotting.py')"
122,pull_request_commit_comment,1516,nilearn,nilearn,jeromedockes,2017-11-14 20:25:10,added a glass brain to compare,b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'examples/01_plotting/plot_3d_map_projection.py')"
123,pull_request_commit_comment,1516,nilearn,nilearn,jeromedockes,2017-11-14 20:26:36,If it's easy could you send me the failing example? ,b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'nilearn/plotting/surf_plotting.py')"
124,pull_request_commit_comment,1516,nilearn,nilearn,KamalakerDadi,2017-11-16 09:27:43,"I would write: ""This example demonstrates about projection of 3D statistical map
onto a cortical mesh using :func:`nilearn.surface.vol_to_surf`. Display
a projected map with surface plot using :func:`nilearn.plotting.plot_surf_stat_map`.""",b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'examples/01_plotting/plot_3d_map_to_surface_projection.py')"
125,pull_request_commit_comment,1516,nilearn,nilearn,KamalakerDadi,2017-11-16 09:53:10,Can you please write what type of image you expect here ?,b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'nilearn/surface.py')"
126,pull_request_commit_comment,1516,nilearn,nilearn,KamalakerDadi,2017-11-16 10:00:22,"Can you please make Notes section and add few important technical details about 'line' and 'ball' sampling. I saw you have mentioned lot of technical details in the discussion. 

Can you pick very few and important ones. I think those will be useful to users ? ",b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'nilearn/surface.py')"
127,pull_request_commit_comment,1516,nilearn,nilearn,KamalakerDadi,2017-11-16 10:01:21,"In addition to this comment, may be details about performance, methods (kmeans), etc, etc.",b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'nilearn/surface.py')"
128,pull_request_commit_comment,1516,nilearn,nilearn,KamalakerDadi,2017-11-16 10:28:53,Can you please use ```check_niimg``` for mask_img before passing to resample_to_img ?,b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'nilearn/surface.py')"
129,pull_request_commit_comment,1516,nilearn,nilearn,KamalakerDadi,2017-11-16 10:29:34,You are right I cannot think of a better alternative.,b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'nilearn/surface.py')"
130,pull_request_commit_comment,1516,nilearn,nilearn,KamalakerDadi,2017-11-16 10:33:17,How can we improve to make sure that passed gifti file has empty object ? I am thinking of exactly the travis failures quite a while ago. Is it something should be checked in ```load_surf_mesh``` ?,b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'nilearn/surface.py')"
131,pull_request_commit_comment,1516,nilearn,nilearn,KamalakerDadi,2017-11-16 10:34:09,"Also, we accept path to Nifti object.",b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'nilearn/surface.py')"
132,pull_request_commit_comment,1516,nilearn,nilearn,KamalakerDadi,2017-11-16 11:05:48,Could you please also check if n_samples and radius is ```import numbers.Number``` ? AFAIK there is no validation on this ?,b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'nilearn/surface.py')"
133,pull_request_commit_comment,1516,nilearn,nilearn,KamalakerDadi,2017-11-16 11:42:31,Why don't we directly assign n_points here rather kwargs ?,b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'nilearn/surface.py')"
134,pull_request_commit_comment,1516,nilearn,nilearn,KamalakerDadi,2017-11-16 11:43:23,pair of numpy.ndarray(s),b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'nilearn/surface.py')"
135,pull_request_commit_comment,1516,nilearn,nilearn,KamalakerDadi,2017-11-16 11:51:53,numpy.ndarray,b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'nilearn/surface.py')"
136,pull_request_commit_comment,1516,nilearn,nilearn,KamalakerDadi,2017-11-16 12:07:30,We don't need this. We dropped supporting nibabel=1.2.0. Minimum version is 2.0.2,b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'nilearn/tests/test_surface.py')"
137,pull_request_commit_comment,1516,nilearn,nilearn,KamalakerDadi,2017-11-16 12:12:38,can you please also test expected sample locations shape ?,b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'nilearn/tests/test_surface.py')"
138,pull_request_commit_comment,1516,nilearn,nilearn,KamalakerDadi,2017-11-16 12:19:32,can you please test given mask ?,b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'nilearn/tests/test_surface.py')"
139,pull_request_commit_comment,1516,nilearn,nilearn,KamalakerDadi,2017-11-16 12:19:46,"same here, can you please test with mask ?",b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'nilearn/tests/test_surface.py')"
140,pull_request_commit_comment,1516,nilearn,nilearn,KamalakerDadi,2017-11-16 12:20:23,I understand that you have tested masked_indices but I would like to test with vol_to_surf ?,b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'nilearn/tests/test_surface.py')"
141,pull_request_commit_comment,1516,nilearn,nilearn,KamalakerDadi,2017-11-16 12:29:06,"I could not find _points_in_unit_ball ?

I am trying to understand why it is there now and why it will be removed after PR is ready to merge ?",b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'nilearn/surface.py')"
142,pull_request_commit_comment,1516,nilearn,nilearn,KamalakerDadi,2017-11-16 12:30:53,"So, this will fall back to nearest interpolation when scipy is < 0.14 and linear is given. Isn't it ?",b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'nilearn/surface.py')"
143,pull_request_commit_comment,1516,nilearn,nilearn,KamalakerDadi,2017-11-16 12:31:56,Can you add comment why need nan for masking ?,b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'nilearn/surface.py')"
144,pull_request_commit_comment,1516,nilearn,nilearn,KamalakerDadi,2017-11-16 12:33:21,Can you add comment regarding assigning nan values ?,b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'nilearn/surface.py')"
145,pull_request_commit_comment,1516,nilearn,nilearn,KamalakerDadi,2017-11-16 12:39:06,Why is it public ? What is the use case of sparse matrix ? Useful only when interpolation='nearest' ?,b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'nilearn/surface.py')"
146,pull_request_commit_comment,1516,nilearn,nilearn,KamalakerDadi,2017-11-16 12:44:13,Can you please comment for this version check ? Why we need version check ? Just to be clear for everybody,b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'nilearn/tests/test_surface.py')"
147,pull_request_commit_comment,1516,nilearn,nilearn,KamalakerDadi,2017-11-16 12:44:50,Can you please comment for version check ?,b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'nilearn/tests/test_surface.py')"
148,pull_request_commit_comment,1516,nilearn,nilearn,GaelVaroquaux,2017-11-16 14:19:08,We should break out these imports in the cells where they are used. It's easier for beginners.,b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'examples/01_plotting/plot_3d_map_to_surface_projection.py')"
149,pull_request_commit_comment,1516,nilearn,nilearn,jeromedockes,2017-11-16 20:17:13,Is this something that we usually do? In other nilearn functions I don't see this kind of type checking,b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'nilearn/surface.py')"
150,pull_request_commit_comment,1516,nilearn,nilearn,KamalakerDadi,2017-11-16 20:21:03,Just to make it much user friendly if accidentally got some weird inputs. I think it is a minor comment which you can avoid.,b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'nilearn/surface.py')"
151,pull_request_commit_comment,1516,nilearn,nilearn,jeromedockes,2017-11-16 20:22:35,"I think this was a very particular situation due to mocking of fetchers in our tests, I'm not sure it is likely to happen in user code. We can check the length of the surface files, but they could be corrupted in many other ways than being empty. Do you agree that this is a separate issue? so far this PR doesn't touch load_surface_mesh or any of the pre-existing surface plotting code.",b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'nilearn/surface.py')"
152,pull_request_commit_comment,1516,nilearn,nilearn,jeromedockes,2017-11-16 20:31:56,"Sorry this comment is obsolete. In order to use the 'ball' sampling strategy, we
need n points uniformly spread in the unit ball. How I do this now is by drawing
many samples from a uniform distribution over the unit ball, performing k-means
on these monte-carlo samples, and keeping the n centroids.

This is not great, so if you can think of a smarter way, let's change it.

Otherwise, these computed centroids need to be cached in some way: they are
independant of the image and the mesh, and take a little while to compute.
During development, I was using joblib, but I think we could compute the
centroid positions once and for all for a few values of n_samples, e.g. [20, 40,
80, 160], and ship these coordinates with the code, in csv files for example.
@KamalakerDadi  and @GaelVaroquaux  What do you think?",b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'nilearn/surface.py')"
153,pull_request_commit_comment,1516,nilearn,nilearn,KamalakerDadi,2017-11-16 20:31:57,">Do you agree that this is a separate issue? so far this PR doesn't touch load_surface_mesh or any of the pre-existing surface plotting code.

Agreed that's different. Not part of your PR.",b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'nilearn/surface.py')"
154,pull_request_commit_comment,1516,nilearn,nilearn,jeromedockes,2017-11-16 20:33:04,The idea was to let the callee (the projector) set the default if the user doesn't provide one,b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'nilearn/surface.py')"
155,pull_request_commit_comment,1516,nilearn,nilearn,jeromedockes,2017-11-16 20:35:09,"There has been quit a bit of discussion about this between @GaelVaroquaux  and @eickenberg (see above in this thread). Apparently having the projection matrix could be useful for advanced users. I have no problem with making this function private if you think it is better.
And yes for now this is only available for nearest neighbour interpolation",b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'nilearn/surface.py')"
156,pull_request_commit_comment,1516,nilearn,nilearn,jeromedockes,2017-11-16 20:37:53,"yes, this function will never be called if scipy < 0.14",b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'nilearn/surface.py')"
157,pull_request_commit_comment,1516,nilearn,nilearn,KamalakerDadi,2017-11-17 21:04:49,"Just to be aware that could you please comment saying that plot_surf_stat_map works  ?

NOTE: Example needs matplotlib version higher than 1.3.1.",b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(39, '', u'examples/01_plotting/plot_3d_map_to_surface_projection.py')"
158,pull_request_commit_comment,1516,nilearn,nilearn,KamalakerDadi,2017-11-17 21:06:14,While we are at it. I think it is a better option to also state default samples for 'line'.,b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'nilearn/surface/surface.py')"
159,pull_request_commit_comment,1516,nilearn,nilearn,jeromedockes,2017-11-17 21:42:38,I'm sorry what should the comment say?,b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(39, '', u'examples/01_plotting/plot_3d_map_to_surface_projection.py')"
160,pull_request_commit_comment,1516,nilearn,nilearn,jeromedockes,2017-11-17 21:42:56,I added your NOTE to the docstring,b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(39, '', u'examples/01_plotting/plot_3d_map_to_surface_projection.py')"
161,pull_request_commit_comment,1516,nilearn,nilearn,GaelVaroquaux,2017-11-18 16:59:36,Can you add load_surf_data and load_surf_mes here,b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'doc/modules/reference.rst')"
162,pull_request_commit_comment,1516,nilearn,nilearn,GaelVaroquaux,2017-11-18 19:03:13,"Maybe I missed the discussion, but does setting the interpolation to ""nearest"" by default affect negatively the quality of the results?",b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'nilearn/surface/surface.py')"
163,pull_request_commit_comment,1516,nilearn,nilearn,KamalakerDadi,2017-11-18 19:32:02,linear (trilinear) is available from 0.14 scipy.,b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'nilearn/surface/surface.py')"
164,pull_request_commit_comment,1516,nilearn,nilearn,jeromedockes,2017-11-19 03:45:55,yes the results are more stable when resampling and applying affine transforms to the input 3d image when using linear interpolation rather than nearest. I put nearest by default because users of scipy 0.13 who try to use linear get a warning saying that we are falling back to nearest,b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'nilearn/surface/surface.py')"
165,pull_request_commit_comment,1516,nilearn,nilearn,GaelVaroquaux,2017-11-19 14:39:32,"We should invert the order of ""interpolation"" and ""kind"" in the arguments as interpolation is probably more important to the user.",b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'nilearn/surface/surface.py')"
166,pull_request_commit_comment,1516,nilearn,nilearn,GaelVaroquaux,2017-11-19 14:41:05,"We should invert the order of this description with ""kind""",b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'nilearn/surface/surface.py')"
167,pull_request_commit_comment,1516,nilearn,nilearn,GaelVaroquaux,2017-11-19 14:42:02,TODO: remove this.,b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'nilearn/surface/surface.py')"
168,pull_request_commit_comment,1516,nilearn,nilearn,GaelVaroquaux,2017-11-19 14:45:37,"We should repeat a sentence on the speed of linear vs nearest interpolation above, in the documentation of the corresponding argument.",b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'nilearn/surface/surface.py')"
169,pull_request_commit_comment,1516,nilearn,nilearn,GaelVaroquaux,2017-11-19 14:50:20,We can remove this comment: we will now support only scipy >= 0.14,b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'nilearn/surface/surface.py')"
170,pull_request_commit_comment,1516,nilearn,nilearn,GaelVaroquaux,2017-11-19 15:18:22,"I have the impression that you are doing a lot of ""not"" operations when you are building this mask and using it. I wonder if it wouldn't be beneficial to invert the function and return the selected indices.",b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(211, '', u'nilearn/surface/surface.py')"
171,pull_request_commit_comment,1516,nilearn,nilearn,GaelVaroquaux,2017-11-19 15:21:13,"I would like here a warning that says that the function is experimental and that minor details such in the interpolation could change.

The reason that I would like this, is that we are considering merging this just before a release, and hence we have little insight on the best choices for hyperparameters. I want to be able to change those hyperparameters.

We'll remove the warning in the near future.",b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(None, '', u'nilearn/surface/surface.py')"
172,pull_request_commit_comment,1516,nilearn,nilearn,jeromedockes,2017-11-19 16:34:25,I'll try to change it and see if it makes a difference. I did it like this because it was easier to find a good name for the function. I really don't know if it makes a difference on the total time vol_to_surf takes to return (my guess is no),b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(211, '', u'nilearn/surface/surface.py')"
173,pull_request_commit_comment,1516,nilearn,nilearn,jeromedockes,2017-11-19 17:04:32,"I have written a patch inverting this function to _kept_indices. playing around with %timeit I see no difference, which makes sense: it takes 1 microsecond to do a logical not on an array of the size of fsaverage on my machine; around 6 microseconds for an array ten times bigger. Since we are dealing with dozens of milliseconds in vol_to_surf, this is very small. should I push this commit anyway?",b86bfb9208a09da54e33de5a7edff2d02c10cfb9,"(211, '', u'nilearn/surface/surface.py')"
174,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-09-28 07:49:14,add simple sampling of volume on mesh,b966ac9d230841f343979d64346582e0d0b5f37d,
175,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-09-28 11:33:49,add 4d,07881d05571aa865b3a90305a9d4524a77dd4c04,
176,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-09-28 12:21:37,import joblib from sklearn.externals,0f29725e8372e434a17f71c986be5b5e849c1683,
177,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-09-28 12:49:56,remove tuple unpacking for python2,07713747fae213db6f13c6cdcfb922e094b34775,
178,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-09-28 14:10:45,add tests for cortex projections,e15d04b3b7b027bc5e9623fbc848105d823a241f,
179,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-09-29 08:28:38,mention niimg-like compatibility inv niimg_to_surf docstring,c0c39d3cade000f98f53a2da0fbb3875c9eb4aa2,
180,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-09-29 08:33:28,reorder imports in test_surf_plotting,398965de8b620fd92215ee7fdb3d8d78d2782f06,
181,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-09-29 09:06:39,titles on vol to surf examples,4589a95dc30d5e35ec672c4824939d64bacba235,
182,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-10-10 02:17:34,add computing normals at mesh vertices,c7af4b1e468e8121a8a3730d2a39772adebacb33,
183,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-10-11 18:10:23,add sampling along normal,9f84b24af25db7bc2d46ae3937cf45843f5a3db2,
184,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-10-11 20:21:11,"use scipy for interpolation to allow linear interpolation

as a result, surface projection is slower, even when using
interpolation='nearest'",0c3e1d41d854c85b6c25c8d8fcb7069c038eddca,
185,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-10-17 21:51:29,choose kind and interpolation,c5d83b5498f556aefea0fba24f1ed968bd39a386,
186,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-10-21 21:31:52,make the direction of mesh normals more explicit,d1d9536d0bd3a2fde7c1b8527e34875a54c715db,
187,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-10-21 21:37:47,remove handling of None affine in non-public functions in surf_plotting,cdcbed1c07caeefe4e24eec374571df4fa20b4f4,
188,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-10-21 21:47:29,"only ten points on normal projection by default

+ let the sampling implementation choose the default number of sample points",58bd2f8b274afd8dedcbc746c7b6b4415638bf2f,
189,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-10-21 23:03:36,improve surf plotting tests,33bb932997395d168c4f2f40a9db08fde1d37e66,
190,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-10-21 23:41:36,improve ball sampling example,536cc191d00e8cf912294a48cddddfb2982974a0,
191,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-11-09 00:57:22,change cortical projection illustration example,389851d1b8b1644ceadb94571035c544973a6e80,
192,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-11-09 00:58:24,Merge branch 'master' into cortex_surface_projections,07d62bdf659caa51826035292dbfd0cabb2f0ce2,
193,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-11-09 01:04:59,img.affine rather than utils.compat.get_affine(img),9fb10f0eebc82b41a9ed8060b8c3928f71ef2fc7,
194,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-11-09 21:51:27,improve surface projection docstrings,d836a6f6de8c00bad92aafbd0dcde7d469591632,
195,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-11-09 22:42:04,"update surface plotting docs, examples and whats new",57049488b4af0d8661016e45c74edb82573d8da4,
196,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-11-11 00:33:53,add possibility to give a mask + speedup nearest neighbour sampling,eef506089efdbb7f236a363d92a2cac77455bb75,
197,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-11-11 00:39:58,more tests,85624ab752b60e758e5ba8a4c0af166c2f1a2806,
198,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-11-11 00:46:19,improve docstrings,6da5a924d2e2e58b0f17035c8acc06ea9c2b378b,
199,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-11-12 00:20:36,surf_plotting details (mostly docstrings),c234e607afff0dc92de303d45d15a2777ca7f588,
200,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-11-12 02:09:27,add tests for sample locations and masking,3cf1f358e95b9e45aceaced544e21051885e114e,
201,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-11-13 17:36:14,whitespace for sphinx gallery,8ad1071e9bba85d775988ce783fcf2a3c4ff14cd,
202,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-11-13 18:30:39,resample mask to image,2e585d5eb8d236473d3995bce914ae7aa6391e60,
203,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-11-13 19:43:18,test projection_matrix,21a7ff0de41eb4a3f2ba697241837d8b7f203c8e,
204,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-11-13 19:58:01,more sampling tests,bfe4c74654885293336d617435ce67bda5e9c2eb,
205,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-11-14 18:25:26,Merge branch 'master' into cortex_surface_projections,11e8c17d08405106253d439ee57e687b492d3184,
206,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-11-14 18:35:16,3d brain image -> 3d brain volume,ecd96c380f32f6e3ad183206b7ac3a3621111e11,
207,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-11-14 18:39:51,rename example plot_3d_map_projection.py -> plot_3d_map_to_surface_projection.py,63533ecfc8173419c9f450253ac41d4249c2e7ff,
208,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-11-14 18:40:29,relative import of nilearn.image.load_img,9d16db739efb3a7425d4f18861805bec4c66b1ec,
209,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-11-14 18:53:15,shorter imports in plot_cortex_projection_strategies.py narrative,c6e34a1e03cde30fb367a7afb6ab1b92f83cbfad,
210,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-11-14 18:54:19,rename plot_cortex_projection_strategies.py -> plot_surface_projection_strategies.py,c49c5c0f0a5879604f8da52bfa2b0f28e3360209,
211,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-11-14 18:56:45,image -> img,25ae312c0095a3289b352bdf7ef077939bc21b63,
212,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-11-14 18:59:12,mask -> mask_img,2a20304ed9c339828505e8297afe4a4994d80902,
213,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-11-14 19:00:10,niimg -> Niimg,4739d223de9b69bfc82c4f3b85abbea7e4a6b26b,
214,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-11-14 19:00:44,neighbouring -> neighboring,6ac2386596cb6be278a5030a7075648a09a6baa3,
215,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-11-14 19:02:47,===== -> -----,1f55f47723929c55e940b2d73c4ff6ef2d962a90,
216,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-11-14 19:04:19,in doc array -> numpy.ndarray,e8cc677fea6179142bdda347077aad3cc1dd98e5,
217,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-11-14 19:06:00,detail niimg_to_surf_data docstring,55878d65b82e26f0695e4503d20b64ea2b7c439d,
218,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-11-14 19:12:23,avoid copy when resampling mask,6f309adf124b673b1f3b2e63a37288c05fdd6f74,
219,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-11-14 20:22:10,use localizer_button_task rather than a brainpedia image for surf projection example,c50a5c3fd26f43eb11b53877b542f59e7c4f54a2,
220,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-11-14 20:33:07,niimg_to_surf_data -> vol_to_surf,77dd10f2a04fb9a033756a97fe3cf171c816ce18,
221,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-11-14 21:14:42,fix whats new,c5eea1dfa3483fb58ba796febb315edcadbe9ea3,
222,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-11-14 21:59:26,fall back to nearest neighbours when scipy < 0.14,6aa3f1264f6636000f4831f610b8e9aa9bc2e8af,
223,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-11-14 23:12:36,move surface manipulation functions to nilearn.surface,fe494982860d3d55c4f64a40980b88e02f09d492,
224,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-11-14 23:35:17,skip surf proj with interpolation test if scipy < 0.14,244eab21c3f4fa2d9c4c2a1b8a0ba0b36d499d77,
225,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-11-15 17:45:46,move technical detail example,6ba9b536ebd3bc3bf824b563da83238be52eed56,
226,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-11-15 18:22:12,don't load fsaverage in tests if nibabel <= 1.2.0,76d4f50aa92702812eee7672934acd1cdef84a99,
227,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-11-15 18:28:22,use scipy for triangulation -> don't import matplotlib out of plotting,1cbd3b369afce1f84b36eeabf43f1ac6c92ef7b8,
228,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-11-15 19:14:52,prettier surface projection example,754b83404ee517be3d19fabe64f22648ef14c3b8,
229,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-11-15 20:08:35,don't use scipy delaunay in tests if scipy < 0.14,7d8505130f49c8f370879cc55ce1c5647b4e6da1,
230,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-11-15 20:28:26,check fsaverage file,f1f3836d5f1ae11d56bc5313cacafa79f927d615,
231,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-11-15 20:49:21,missing teardown_mock in datasets test_func,fa838cfc0dfb5ae58e540bd35f837758815b95d9,
232,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-11-15 21:12:03,remove useless print,83ca7a4859d403231b44ae6026c88600bbe4b318,
233,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-11-15 21:41:13,make _uniform_ball_cloud deterministic,40bbfa473f9e92d4103ecafb53d33587d808830c,
234,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-11-16 18:36:39,improve surf projection example description + move imports,d3d69c2ed88ebfbd5e23419a46c9b1cf67cf06f1,
235,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-11-16 19:00:59,vol_to_surf docstring detail,d0982ad1525ef8ed0841acd0bfaa7a62a4b0df03,
236,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-11-16 19:02:05,check_niimg of mask for surf projection,2128c77b1583f0a92a0da208c9fd43b7e6f81947,
237,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-11-16 19:06:20,numpy.ndarray in docstrings,fcb8954b3a54d53e3deeccc05593ed11328cb8e6,
238,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-11-16 20:15:49,details about projection method in vol_to_surf docstring,73c3d25e73ad0b213ea71ca4bfd7abe560a9599e,
239,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-11-16 20:37:13,Merge branch 'master' into cortex_surface_projections,e0bd9b88ee47fa81669d1ebb38f99ed961d68816,
240,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-11-16 20:40:08,make projection_matrix private,756bd31ceb827a04a1a0b2db8d7138eafbd3dbe4,
241,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-11-16 20:48:56,add readme to 01_plotting/technical_details,6785cda54716418535c3b8a93208b1066b11197d,
242,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-11-16 21:34:21,"add precomputed ball positions for n_points in 10, 20, 40, 80, 160",2c74c847ad6e2b72c51dbb7b63defcc104db3c6d,
243,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-11-16 21:35:45,Merge branch 'master' into cortex_surface_projections,43bae74e0392654d3aa5b43b9904b8ea106ab9d6,
244,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-11-16 21:44:47,comment about returning NaN for bad vertices,bf904e32f544e36e59014ca38ed2f78ad6134dc5,
245,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-11-16 21:47:07,check sample_locations shape,5e5f2648fcead8ad4c86cd1c4e451eb9b7f3e0da,
246,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-11-16 21:53:32,comments about scipy version checks,59049a892ebd5ccf252ed5ad752379e17ae6796d,
247,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-11-16 21:54:01,no need to check for nibabel > 2.0.2,ea3f39e0834b1e1b4cd468dcf79265f7ef57bfc3,
248,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-11-16 22:05:30,test vol_to_surf with mask,94cf01c786925abc000b0e4da4ca30ad0163229d,
249,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-11-16 22:07:09,move example back to 01_plotting/,b11d0d12783cc5c455f6d61d58066b7fca50c03e,
250,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-11-16 22:26:48,define EfficiencyWarning if not in sklearn (new in 0.18),fca0e78016d50e6e572a09fa8838c12b98b66541,
251,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-11-16 22:30:29,fix indentation,1f03b77fea1c5d7f76f321fc6643ade21bf4c11a,
252,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-11-16 22:41:46,import assert_warns from nilearn,cec5afdfc305f5dc0386e228ba201d027b6dbc9c,
253,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-11-16 23:09:57,add ball cloud csvs to package data,43e4be28cae0f407c3ec928e121edf63d8cc12a6,
254,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-11-17 00:02:22,surface in its own package,91b2c17a48e10616a5b838ddef5bb7ccbaeaef62,
255,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-11-17 00:57:03,fix surface test data location in setup,ed016cc28ce676b4183bd4c0f4ff57c5d6d1514b,
256,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-11-17 01:29:55,"skip comparison of ball sample locations with cached values if sklearn < 0.18

k-means has been changed in 0.18",a70bb83e448bdafefa4446a4692fd384e85eeeff,
257,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-11-17 01:57:18,example description detail,f313e3dcef8f2915f904a33ce20fa41c920caa82,
258,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-11-17 17:49:53,link to function in example narrative,c0d56d648d6f97905b7ddbed424e5989423f5428,
259,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-11-17 20:16:39,minor comment,82d7670c8bf6f2ba65b302596cc93cdc5d1ae0bc,
260,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-11-17 20:32:02,docstring formatting,a00d6427be9d2de265d555ef36ebe4900e5a8586,
261,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-11-17 21:39:35,add note example needs matplotlib 1.3.1 to plot_3d_map_to_surface...,e38ecb9c43b569a1700e28a95828d9815847bf3b,
262,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-11-17 21:44:44,state n_samples defaults in vol_to_surf doc,9f294a8e0d6db20773bce77754b2ea0c870c72e7,
263,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-11-17 21:52:49,add versionadded to vol_to_surf,e71705981c608821026bb8e7c940ec685752e3bd,
264,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-11-18 17:32:57,import load_surf_data from nilearn.surface in plot_surf_stat_map ex,079ddcd86850d1f91ec0a3b81f2f0581312d81c9,
265,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-11-18 17:35:13,add load_surf_data and load_surf_mesh to doc/index.rst,25a09f68b3cf6c9b24fa8d95d5c8eab51acf5452,
266,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-11-18 17:45:01,add README.txt to nilearn/surface/data,9e52d9f89fa1b55a2e04a20cf138a738a25b1a1c,
267,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-11-19 04:24:26,"make interpolation='linear' the default in vol_to_surf

add a few more details about performance in docstring",1b2aec14366dd89a200b4a7723415d8573cb9495,
268,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-11-19 04:26:05,Merge branch 'master' into cortex_surface_projections,6c2244fa70ff8c9dd82052a7efd70a3dd2e362d3,
269,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-11-19 06:17:52,update vol_to_surf docstring to linear is the default,4cca98a253ae96ed70c0b08d3f5c43b957d59bc7,
270,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-11-19 16:06:06,invert order of interpolation and kind in vol_to_surf signature,ed78a66797972545bccced89d5e8233607e2f65f,
271,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-11-19 16:14:54,improve vol_to_surf docstring,3376c5155ba8d5ede5ea05236399396347c91393,
272,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-11-19 16:22:00,Merge branch 'master' into cortex_surface_projections,d1a57794cce80185c72024c85163599c31f5f550,
273,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-11-19 16:22:23,remove checks for scipy < 0.14 (supported version has been bumped),c8c440d3058a618eff9d0ebd4b3af19fa24cf353,
274,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-11-19 16:25:12,add WARNING experimental to vol_to_surf docstring,1ad5546e1af835539f0bca6665d5d1bc34ba3196,
275,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-11-19 16:28:19,unused import,28c26a03f359de392628a70613faab6ee600764f,
276,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-11-19 16:50:16,use a _kept_indices rather than _masked_indices to avoid ~ operations,256a8b19d0e0fa03bce9e758d54680a35fe75cf2,
277,pull_request_commit,1516,nilearn,nilearn,jeromedockes,2017-11-19 17:24:11,revert to _masked_indices but manipulate kept internally,b86bfb9208a09da54e33de5a7edff2d02c10cfb9,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,1554,nilearn,nilearn,poquirion,2017-11-16 20:32:11,Should fix #1528 ,start issue, [MRG+2] Resample_img clip fix issue #1528
2,issue_closed,1554,nilearn,nilearn,GaelVaroquaux,2017-11-18 15:20:14,,closed issue, [MRG+2] Resample_img clip fix issue #1528
3,pull_request_title,1554,nilearn,nilearn,poquirion,2017-11-16 20:32:11,Should fix #1528 ,76d0bccaff36ed96ba3d7473fe632c24653756ba, [MRG+2] Resample_img clip fix issue #1528
4,pull_request_merged,1554,nilearn,nilearn,GaelVaroquaux,2017-11-18 15:20:14, [MRG+2] Resample_img clip fix issue #1528,aaeb045b9cd74a2f5a71ca6232a99f1bc8799025,Pull request merge from poquirion/nilearn:resample_img_clip_1528 to nilearn/nilearn:master
5,issue_comment,1554,nilearn,nilearn,cancan101,2017-11-16 23:57:39,any desire to set the default to something like `None` to allow changing the default down the road from False to true?,,
6,issue_comment,1554,nilearn,nilearn,bthirion,2017-11-16 22:22:38,LGTM.,,
7,issue_comment,1554,nilearn,nilearn,KamalakerDadi,2017-11-16 20:50:32,travis should be fixed with this PR #1555 . ,,
8,pull_request_commit_comment,1554,nilearn,nilearn,KamalakerDadi,2017-11-16 20:39:58,preformed -> performed,76d0bccaff36ed96ba3d7473fe632c24653756ba,"(14, '', u'nilearn/image/resampling.py')"
9,pull_request_commit_comment,1554,nilearn,nilearn,KamalakerDadi,2017-11-16 20:40:13,preformed -> performed,76d0bccaff36ed96ba3d7473fe632c24653756ba,"(14, '', u'nilearn/image/resampling.py')"
10,pull_request_commit,1554,nilearn,nilearn,poquirion,2017-11-16 16:24:14,add clip option to resample_to_img and resample_img,4d6b3f35fd0b7ff7597ddb6be868810d388eb21f,
11,pull_request_commit,1554,nilearn,nilearn,poquirion,2017-11-16 20:30:53,add testing,76d0bccaff36ed96ba3d7473fe632c24653756ba,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,1544,nilearn,nilearn,banilo,2017-11-09 16:11:19,"Add our recent HBM paper to the docstring, because the paper contains extensive step-by-step explanation of how the method works and gives toy examples.",start issue,new sparse-invcov ref in docstring
2,issue_closed,1544,nilearn,nilearn,GaelVaroquaux,2017-11-19 16:03:07,,closed issue,new sparse-invcov ref in docstring
3,pull_request_title,1544,nilearn,nilearn,banilo,2017-11-09 16:11:19,"Add our recent HBM paper to the docstring, because the paper contains extensive step-by-step explanation of how the method works and gives toy examples.",c071239ad378fdf1399e723b3bd8f664ca6d9382,new sparse-invcov ref in docstring
4,issue_comment,1544,nilearn,nilearn,KamalakerDadi,2017-11-14 18:21:58,">Arguably, the citation that we should add is arXiv:1207.4255 (never published beyond arXiv ;( ), as we use the algorithm of this paper.

The citation you have mentioned is somehow hidden in
https://github.com/nilearn/nilearn/blob/master/doc/developers/group_sparse_covariance.rst",,
5,pull_request_commit,1544,nilearn,nilearn,banilo,2017-11-09 16:09:54,new sparse-invcov ref in docstring,c071239ad378fdf1399e723b3bd8f664ca6d9382,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,1140,nilearn,nilearn,GaelVaroquaux,2016-06-20 16:53:03,"We should consider using pandas in the examples to load CSV files. It might make the examples more readable and also give to the users more chances of being able to load new data (ie other than what's in the Haxby example).
",start issue,Use pandas in the examples to load CSV and txt files
2,issue_closed,1140,nilearn,nilearn,GaelVaroquaux,2017-11-17 20:59:31,,closed issue,Use pandas in the examples to load CSV and txt files
3,issue_comment,1140,nilearn,nilearn,aabadie,2016-06-21 19:44:32,"Maybe I can take this one. Any objection ?
",,
4,issue_comment,1140,nilearn,nilearn,aabadie,2016-06-21 20:30:23,"I like the idea but I'm wondering if it will really make things clearer for newcomers.

Example with the code taken from [examples/02_decoding/plot_haxby_anova_svm.py](https://github.com/nilearn/nilearn/blob/master/examples/02_decoding/plot_haxby_anova_svm.py):
- This the current version:

``` python
# Load the behavioral data
import numpy as np
y, session = np.loadtxt(haxby_dataset.session_target[0]).astype(""int"").T
conditions = np.recfromtxt(haxby_dataset.conditions_target[0])['f0']
```
- Here is the `pandas` version:

``` python
# Load the behavioral data
import pandas as pd
df = pd.read_csv(haxby_dataset.session_target[0], header=None,
                 names=['y', 'session'], delimiter=' ')
y = df.y.values
session = df.session.values
df = pd.read_csv(haxby_dataset.conditions_target[0], header=None,
                 names=['f0', 'f1'], delimiter=' ')
conditions = df.f0.values.astype('S12')
```

But maybe this is not the best example or I don't have a good usage of pandas.
",,
5,issue_comment,1140,nilearn,nilearn,AlexandreAbraham,2016-06-21 09:34:42,"+1 for adding it as a dependency otherwise it would be weird for people not to be able to run examples out of the box.
",,
6,issue_comment,1140,nilearn,nilearn,lesteve,2016-06-21 08:03:41,"> We should consider using pandas in the examples to load CSV files

Out of interest, would that be only for the examples for now, i.e. we wouldn't add it as a dependency of nilearn?
",,
7,issue_comment,1140,nilearn,nilearn,KamalakerDadi,2017-11-16 15:27:20,Thanks for pitching in. I am afraid this is weakly convinced to add pandas as a dependency. May be we wait others to pitch in to raise their opinion.,,
8,issue_comment,1140,nilearn,nilearn,emdupre,2017-11-16 15:07:44,I'm at the Montreal sprint and happy to pick this up!,,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,1537,nilearn,nilearn,banilo,2017-11-03 18:54:52,"Working with the current version 0.3.1, I noticed that setting smoothing_fwhm=0 in the NiftiMasker() initialization leads to all zero outputs when transforming nifti images. The default choice for ""non-active"" is None, but perhaps an informative warning may be thrown when this non-sensible choice is made for the smoothing argument.
",start issue,NiftiMasker: smoothing_fwhm=0 deletes data
2,issue_closed,1537,nilearn,nilearn,KamalakerDadi,2017-11-14 10:35:30,,closed issue,NiftiMasker: smoothing_fwhm=0 deletes data
3,issue_comment,1537,nilearn,nilearn,bthirion,2017-11-03 20:25:34,Yes. Can you issue a PR ?,,
4,issue_comment,1537,nilearn,nilearn,bthirion,2017-11-10 09:12:01,"* You have any equivalent sigma value when fwhm=0 ?
I would convert fwhm=0 to fwhm=None and spit a warning.",,
5,issue_comment,1537,nilearn,nilearn,bthirion,2017-11-10 10:07:34,"On 10/11/2017 10:43, KamalakerDadi wrote:
>
>     You have any equivalent sigma value when fwhm=0 ?
>     I would convert fwhm=0 to fwhm=None and spit a warning.
>     Switching 0 to None by default appears to be a viable approach to me.
>
> Thanks, just want to check. If this should be only to recent SciPy or 
> irrespective of versions ?
>
> —
> You are receiving this because you commented.
> Reply to this email directly, view it on GitHub 
> <https://github.com/nilearn/nilearn/issues/1537#issuecomment-343425943>, 
> or mute the thread 
> <https://github.com/notifications/unsubscribe-auth/AAOT1suwg8SpxRubkbh-ybfMeeVhjrQVks5s1BqpgaJpZM4QRiLr>.
>
Ideally, you want to check and only do that  with scipy 1.0.0

Thx.

",,
6,issue_comment,1537,nilearn,nilearn,banilo,2017-11-10 09:13:46,"Switching 0 to None by default appears to be a viable approach to me.

2017-11-10 10:03 GMT+01:00 KamalakerDadi <notifications@github.com>:

> I don't want to open a new issue because it is already there regarding
> smoothing_fwhm=0.
>
> Particularly, I see this issue in canica and dict_learning when tests are
> failing because both estimator tests used smoothing_fwhm=0.. See for
> failing of tests.
> https://travis-ci.org/nilearn/nilearn/jobs/299711990#L3471
>
> The problem is with SciPy 1.0.0, if I think I understood well:
> This code produces an array containing nans with smoothing_fwhm=0.
>
> import numpy as npfrom nilearn.image.image import _smooth_array
>
> data = np.zeros((40, 41, 42))
> data[20, 20, 20] = 1
> affine = np.eye(4)
> filtered = _smooth_array(data, affine, fwhm=0)/home/kamalakar/miniconda2/lib/python2.7/site-packages/scipy/ndimage/filters.py:207: RuntimeWarning: divide by zero encountered in double_scalars
>   p = numpy.polynomial.Polynomial([0, 0, -0.5 / (sigma * sigma)])/home/kamalakar/miniconda2/lib/python2.7/site-packages/numpy/polynomial/polynomial.py:775: RuntimeWarning: invalid value encountered in multiply
>   c0 = c[-i] + c0*x
> Result:
> array([[[ nan,  nan,  nan, ...,  nan,  nan,  nan],
>         [ nan,  nan,  nan, ...,  nan,  nan,  nan],
>         [ nan,  nan,  nan, ...,  nan,  nan,  nan],
>         ...,
>         [ nan,  nan,  nan, ...,  nan,  nan,  nan],
>         [ nan,  nan,  nan, ...,  nan,  nan,  nan],
>         [ nan,  nan,  nan, ...,  nan,  nan,  nan]],
>
>        [[ nan,  nan,  nan, ...,  nan,  nan,  nan],
>         [ nan,  nan,  nan, ...,  nan,  nan,  nan],
>         [ nan,  nan,  nan, ...,  nan,  nan,  nan],
>         ...,
>         [ nan,  nan,  nan, ...,  nan,  nan,  nan],
>         [ nan,  nan,  nan, ...,  nan,  nan,  nan],
>         [ nan,  nan,  nan, ...,  nan,  nan,  nan]],
>
>        [[ nan,  nan,  nan, ...,  nan,  nan,  nan],
>         [ nan,  nan,  nan, ...,  nan,  nan,  nan],
>         [ nan,  nan,  nan, ...,  nan,  nan,  nan],
>         ...,
>         [ nan,  nan,  nan, ...,  nan,  nan,  nan],
>         [ nan,  nan,  nan, ...,  nan,  nan,  nan],
>         [ nan,  nan,  nan, ...,  nan,  nan,  nan]],
>
>        ...,
>        [[ nan,  nan,  nan, ...,  nan,  nan,  nan],
>         [ nan,  nan,  nan, ...,  nan,  nan,  nan],
>         [ nan,  nan,  nan, ...,  nan,  nan,  nan],
>         ...,
>         [ nan,  nan,  nan, ...,  nan,  nan,  nan],
>         [ nan,  nan,  nan, ...,  nan,  nan,  nan],
>         [ nan,  nan,  nan, ...,  nan,  nan,  nan]],
>
>        [[ nan,  nan,  nan, ...,  nan,  nan,  nan],
>         [ nan,  nan,  nan, ...,  nan,  nan,  nan],
>         [ nan,  nan,  nan, ...,  nan,  nan,  nan],
>         ...,
>         [ nan,  nan,  nan, ...,  nan,  nan,  nan],
>         [ nan,  nan,  nan, ...,  nan,  nan,  nan],
>         [ nan,  nan,  nan, ...,  nan,  nan,  nan]],
>
>        [[ nan,  nan,  nan, ...,  nan,  nan,  nan],
>         [ nan,  nan,  nan, ...,  nan,  nan,  nan],
>         [ nan,  nan,  nan, ...,  nan,  nan,  nan],
>         ...,
>         [ nan,  nan,  nan, ...,  nan,  nan,  nan],
>         [ nan,  nan,  nan, ...,  nan,  nan,  nan],
>         [ nan,  nan,  nan, ...,  nan,  nan,  nan]]])
>
> Before SciPy 1.0.0
>
> Result:
> array([[[ 0.,  0.,  0., ...,  0.,  0.,  0.],
>         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
>         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
>         ...,
>         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
>         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
>         [ 0.,  0.,  0., ...,  0.,  0.,  0.]],
>
>        [[ 0.,  0.,  0., ...,  0.,  0.,  0.],
>         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
>         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
>         ...,
>         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
>         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
>         [ 0.,  0.,  0., ...,  0.,  0.,  0.]],
>
>        [[ 0.,  0.,  0., ...,  0.,  0.,  0.],
>         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
>         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
>         ...,
>         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
>         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
>         [ 0.,  0.,  0., ...,  0.,  0.,  0.]],
>
>        ...,
>        [[ 0.,  0.,  0., ...,  0.,  0.,  0.],
>         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
>         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
>         ...,
>         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
>         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
>         [ 0.,  0.,  0., ...,  0.,  0.,  0.]],
>
>        [[ 0.,  0.,  0., ...,  0.,  0.,  0.],
>         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
>         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
>         ...,
>         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
>         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
>         [ 0.,  0.,  0., ...,  0.,  0.,  0.]],
>
>        [[ 0.,  0.,  0., ...,  0.,  0.,  0.],
>         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
>         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
>         ...,
>         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
>         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
>         [ 0.,  0.,  0., ...,  0.,  0.,  0.]]])
>
> Internally the code uses scipy.ndimage.gaussian_filter1d.
> I see two options to fix this:
>
>    - To not accept smoothing_fwhm=0. rather advice users to specify as
>    smoothing_fwhm=None.
>    - If somebody argues that 0. is a scalar and acceptable input then we
>    need to ask in SciPy tracker about anything I am missing with
>    gaussian_filter1d before and after new release.
>    - You have any equivalent sigma value when fwhm=0 ?
>
> Please let me know your opinions as this some what important ?
> @banilo <https://github.com/banilo> do you mind if I take over your PR
> #1541 <https://github.com/nilearn/nilearn/pull/1541> ?
>
> —
> You are receiving this because you were mentioned.
> Reply to this email directly, view it on GitHub
> <https://github.com/nilearn/nilearn/issues/1537#issuecomment-343416525>,
> or mute the thread
> <https://github.com/notifications/unsubscribe-auth/ADufRAwNTBx92LryVenK59JwDvbxEDy4ks5s1BFMgaJpZM4QRiLr>
> .
>
",,
7,issue_comment,1537,nilearn,nilearn,KamalakerDadi,2017-11-10 09:03:05,"I don't want to open a new issue because it is already there regarding ```smoothing_fwhm=0```.

Particularly, I see this issue in canica and dict_learning when tests are failing because both estimator tests used ```smoothing_fwhm=0.```. See for failing of tests.
https://travis-ci.org/nilearn/nilearn/jobs/299711990#L3471

The problem is with SciPy 1.0.0, if I think I understood well:
This code produces an array containing nans with smoothing_fwhm=0.
```python
import numpy as np
from nilearn.image.image import _smooth_array

data = np.zeros((40, 41, 42))
data[20, 20, 20] = 1
affine = np.eye(4)
filtered = _smooth_array(data, affine, fwhm=0)
/home/kamalakar/miniconda2/lib/python2.7/site-packages/scipy/ndimage/filters.py:207: RuntimeWarning: divide by zero encountered in double_scalars
  p = numpy.polynomial.Polynomial([0, 0, -0.5 / (sigma * sigma)])
/home/kamalakar/miniconda2/lib/python2.7/site-packages/numpy/polynomial/polynomial.py:775: RuntimeWarning: invalid value encountered in multiply
  c0 = c[-i] + c0*x
Result:
array([[[ nan,  nan,  nan, ...,  nan,  nan,  nan],
        [ nan,  nan,  nan, ...,  nan,  nan,  nan],
        [ nan,  nan,  nan, ...,  nan,  nan,  nan],
        ..., 
        [ nan,  nan,  nan, ...,  nan,  nan,  nan],
        [ nan,  nan,  nan, ...,  nan,  nan,  nan],
        [ nan,  nan,  nan, ...,  nan,  nan,  nan]],

       [[ nan,  nan,  nan, ...,  nan,  nan,  nan],
        [ nan,  nan,  nan, ...,  nan,  nan,  nan],
        [ nan,  nan,  nan, ...,  nan,  nan,  nan],
        ..., 
        [ nan,  nan,  nan, ...,  nan,  nan,  nan],
        [ nan,  nan,  nan, ...,  nan,  nan,  nan],
        [ nan,  nan,  nan, ...,  nan,  nan,  nan]],

       [[ nan,  nan,  nan, ...,  nan,  nan,  nan],
        [ nan,  nan,  nan, ...,  nan,  nan,  nan],
        [ nan,  nan,  nan, ...,  nan,  nan,  nan],
        ..., 
        [ nan,  nan,  nan, ...,  nan,  nan,  nan],
        [ nan,  nan,  nan, ...,  nan,  nan,  nan],
        [ nan,  nan,  nan, ...,  nan,  nan,  nan]],

       ..., 
       [[ nan,  nan,  nan, ...,  nan,  nan,  nan],
        [ nan,  nan,  nan, ...,  nan,  nan,  nan],
        [ nan,  nan,  nan, ...,  nan,  nan,  nan],
        ..., 
        [ nan,  nan,  nan, ...,  nan,  nan,  nan],
        [ nan,  nan,  nan, ...,  nan,  nan,  nan],
        [ nan,  nan,  nan, ...,  nan,  nan,  nan]],

       [[ nan,  nan,  nan, ...,  nan,  nan,  nan],
        [ nan,  nan,  nan, ...,  nan,  nan,  nan],
        [ nan,  nan,  nan, ...,  nan,  nan,  nan],
        ..., 
        [ nan,  nan,  nan, ...,  nan,  nan,  nan],
        [ nan,  nan,  nan, ...,  nan,  nan,  nan],
        [ nan,  nan,  nan, ...,  nan,  nan,  nan]],

       [[ nan,  nan,  nan, ...,  nan,  nan,  nan],
        [ nan,  nan,  nan, ...,  nan,  nan,  nan],
        [ nan,  nan,  nan, ...,  nan,  nan,  nan],
        ..., 
        [ nan,  nan,  nan, ...,  nan,  nan,  nan],
        [ nan,  nan,  nan, ...,  nan,  nan,  nan],
        [ nan,  nan,  nan, ...,  nan,  nan,  nan]]])
```
Before SciPy 1.0.0
```python
Result:
array([[[ 0.,  0.,  0., ...,  0.,  0.,  0.],
        [ 0.,  0.,  0., ...,  0.,  0.,  0.],
        [ 0.,  0.,  0., ...,  0.,  0.,  0.],
        ..., 
        [ 0.,  0.,  0., ...,  0.,  0.,  0.],
        [ 0.,  0.,  0., ...,  0.,  0.,  0.],
        [ 0.,  0.,  0., ...,  0.,  0.,  0.]],

       [[ 0.,  0.,  0., ...,  0.,  0.,  0.],
        [ 0.,  0.,  0., ...,  0.,  0.,  0.],
        [ 0.,  0.,  0., ...,  0.,  0.,  0.],
        ..., 
        [ 0.,  0.,  0., ...,  0.,  0.,  0.],
        [ 0.,  0.,  0., ...,  0.,  0.,  0.],
        [ 0.,  0.,  0., ...,  0.,  0.,  0.]],

       [[ 0.,  0.,  0., ...,  0.,  0.,  0.],
        [ 0.,  0.,  0., ...,  0.,  0.,  0.],
        [ 0.,  0.,  0., ...,  0.,  0.,  0.],
        ..., 
        [ 0.,  0.,  0., ...,  0.,  0.,  0.],
        [ 0.,  0.,  0., ...,  0.,  0.,  0.],
        [ 0.,  0.,  0., ...,  0.,  0.,  0.]],

       ..., 
       [[ 0.,  0.,  0., ...,  0.,  0.,  0.],
        [ 0.,  0.,  0., ...,  0.,  0.,  0.],
        [ 0.,  0.,  0., ...,  0.,  0.,  0.],
        ..., 
        [ 0.,  0.,  0., ...,  0.,  0.,  0.],
        [ 0.,  0.,  0., ...,  0.,  0.,  0.],
        [ 0.,  0.,  0., ...,  0.,  0.,  0.]],

       [[ 0.,  0.,  0., ...,  0.,  0.,  0.],
        [ 0.,  0.,  0., ...,  0.,  0.,  0.],
        [ 0.,  0.,  0., ...,  0.,  0.,  0.],
        ..., 
        [ 0.,  0.,  0., ...,  0.,  0.,  0.],
        [ 0.,  0.,  0., ...,  0.,  0.,  0.],
        [ 0.,  0.,  0., ...,  0.,  0.,  0.]],

       [[ 0.,  0.,  0., ...,  0.,  0.,  0.],
        [ 0.,  0.,  0., ...,  0.,  0.,  0.],
        [ 0.,  0.,  0., ...,  0.,  0.,  0.],
        ..., 
        [ 0.,  0.,  0., ...,  0.,  0.,  0.],
        [ 0.,  0.,  0., ...,  0.,  0.,  0.],
        [ 0.,  0.,  0., ...,  0.,  0.,  0.]]])
```
Internally the code uses ```scipy.ndimage.gaussian_filter1d```.
I see two options to fix this:
- To not accept ```smoothing_fwhm=0.``` rather advice users to specify as ```smoothing_fwhm=None```.
- If somebody argues that 0. is a scalar and acceptable input then we need to ask in SciPy tracker about anything I am missing with ```gaussian_filter1d``` before and after new release.
- You have any equivalent ```sigma``` value when ```fwhm=0``` ?

Please let me know your opinions as this some what important ?
@banilo do you mind if I take over your PR #1541 ?",,
8,issue_comment,1537,nilearn,nilearn,KamalakerDadi,2017-11-10 09:43:05,">You have any equivalent sigma value when fwhm=0 ?
>I would convert fwhm=0 to fwhm=None and spit a warning.
>Switching 0 to None by default appears to be a viable approach to me.

Thanks, just want to check. If this should be only to recent SciPy or irrespective of versions ?",,
9,issue_comment,1537,nilearn,nilearn,KamalakerDadi,2017-11-14 10:35:30,Closing with PR #1545 ,,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,1435,nilearn,nilearn,albayenes,2017-04-07 23:22:32,"This PR is related to #1193 

find_xyz_cut_coord function mask parameter type changed as 3D niimg-like object. Test functions are corrected according to new function.

",start issue,find_xyz_cut_coord mask parameter type changed as 3D niimg-like object
2,issue_closed,1435,nilearn,nilearn,GaelVaroquaux,2017-11-16 19:57:09,,closed issue,find_xyz_cut_coord mask parameter type changed as 3D niimg-like object
3,pull_request_title,1435,nilearn,nilearn,albayenes,2017-04-07 23:22:32,"This PR is related to #1193 

find_xyz_cut_coord function mask parameter type changed as 3D niimg-like object. Test functions are corrected according to new function.

",3c98fb8d9848dd9fdbe84e121235b73fa7137c5a,find_xyz_cut_coord mask parameter type changed as 3D niimg-like object
4,issue_comment,1435,nilearn,nilearn,GaelVaroquaux,2017-11-16 19:57:09,Closing as superseeded by #1430,,
5,issue_comment,1435,nilearn,nilearn,codecov[bot],2017-04-08 00:59:17,"# [Codecov](https://codecov.io/gh/nilearn/nilearn/pull/1435?src=pr&el=h1) Report
> Merging [#1435](https://codecov.io/gh/nilearn/nilearn/pull/1435?src=pr&el=desc) into [master](https://codecov.io/gh/nilearn/nilearn/commit/c842617f46384d764707ae6a4335edad4f4684dc?src=pr&el=desc) will **increase** coverage by `<.01%`.
> The diff coverage is `100%`.

[![Impacted file tree graph](https://codecov.io/gh/nilearn/nilearn/pull/1435/graphs/tree.svg?height=150&width=650&token=KpYArSdyXv&src=pr)](https://codecov.io/gh/nilearn/nilearn/pull/1435?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##           master    #1435      +/-   ##
==========================================
+ Coverage   94.48%   94.48%   +<.01%     
==========================================
  Files         122      122              
  Lines       14910    14918       +8     
==========================================
+ Hits        14088    14096       +8     
  Misses        822      822
```


| [Impacted Files](https://codecov.io/gh/nilearn/nilearn/pull/1435?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [nilearn/plotting/tests/test\_find\_cuts.py](https://codecov.io/gh/nilearn/nilearn/pull/1435?src=pr&el=tree#diff-bmlsZWFybi9wbG90dGluZy90ZXN0cy90ZXN0X2ZpbmRfY3V0cy5weQ==) | `100% <100%> (ø)` | :arrow_up: |
| [nilearn/plotting/find\_cuts.py](https://codecov.io/gh/nilearn/nilearn/pull/1435?src=pr&el=tree#diff-bmlsZWFybi9wbG90dGluZy9maW5kX2N1dHMucHk=) | `90.71% <100%> (+0.34%)` | :arrow_up: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/nilearn/nilearn/pull/1435?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/nilearn/nilearn/pull/1435?src=pr&el=footer). Last update [c842617...3c98fb8](https://codecov.io/gh/nilearn/nilearn/pull/1435?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",,
6,issue_comment,1435,nilearn,nilearn,KamalakerDadi,2017-04-08 07:11:16,"Thank you for your PR.

This issue #1193 is under review with this PR #1430 FYI.",,
7,pull_request_commit,1435,nilearn,nilearn,albayenes,2017-04-07 23:15:21,find_xyz_cut mask parameter type changed as 3D niimg-like object,8e0dc9fddf7a06212a8ce6e9b4aa0e3f7b907a37,
8,pull_request_commit,1435,nilearn,nilearn,albayenes,2017-04-07 23:24:43,deleted unneccessary codes in test __init__.py,c7c3957edad7718c0eedb60f33499e4de64baeeb,
9,pull_request_commit,1435,nilearn,nilearn,albayenes,2017-08-10 09:22:46,Merge remote-tracking branch 'upstream/master',3c98fb8d9848dd9fdbe84e121235b73fa7137c5a,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,1567,nilearn,nilearn,emdupre,2017-11-20 20:35:21,"Nilearn is exposing the rst formatting in notebook creation (e.g., in http://nilearn.github.io/_downloads/plot_decoding_tutorial.ipynb). This is less readable and would be nice to patch.",start issue,Formatting in example notebooks
2,issue_closed,1567,nilearn,nilearn,emdupre,2017-11-23 00:25:03,,closed issue,Formatting in example notebooks
3,issue_comment,1567,nilearn,nilearn,emdupre,2017-11-23 00:25:03,"It looks like this issue is already open in Sphinx gallery: 

https://github.com/sphinx-gallery/sphinx-gallery/issues/219

Closing it here !
",,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,1441,nilearn,nilearn,salma1601,2017-04-19 13:21:20,"My code is often breaking because there is no contours are found for the default cut
```Python
display = plotting.plot_anat(anat_filename,
                             title='binary masks contours on top of anat')
display.add_contours(csf_mask_img, colors='c')
```
>ValueError: zero-size array to reduction operation minimum which has no identity

May be we can catch this error and simply replace it by a warning ? For instance, I use ROIs contours on top of my stat map plot but I don't want it to break just because of this visualization issue. What do you think ?",start issue,could display.add_contours error when no contour found be replaced with warning ?
2,issue_closed,1441,nilearn,nilearn,KamalakerDadi,2017-11-16 15:52:05,,closed issue,could display.add_contours error when no contour found be replaced with warning ?
3,issue_comment,1441,nilearn,nilearn,GaelVaroquaux,2017-04-19 13:26:43,"+1: to error imposes a lot of error managment for little benefits.
",,
4,issue_comment,1441,nilearn,nilearn,GaelVaroquaux,2017-11-16 16:24:27,"Great! One issue closed
",,
5,issue_comment,1441,nilearn,nilearn,salma1601,2017-05-30 10:13:31,Hi ! no sorry it didn't fix it.,,
6,issue_comment,1441,nilearn,nilearn,KamalakerDadi,2017-05-29 21:20:51,"Hi @salma1601 Could you test this FIX from this PR #1459 . I some how hope that it should fix. 
You should see something like this if it could able to find mask (contour) to overlay.
```python
nilearn/plotting/displays.py:670: UserWarning: empty mask
  get_mask_bounds(new_img_like(img, not_mask, affine))
```",,
7,issue_comment,1441,nilearn,nilearn,KamalakerDadi,2017-11-16 15:41:44,I was hoping that it should be fixed with PR #1459 . Is it the same warning you got as I asked in the thread ?,,
8,issue_comment,1441,nilearn,nilearn,KamalakerDadi,2017-11-16 15:52:05,">Gaël is sitting to my left and recommend the the issue be closed... I guess it is fixed.

Ok closing then. Thanks",,
9,issue_comment,1441,nilearn,nilearn,poquirion,2017-11-16 15:37:34,"I can't reproduce, but I tried with an empty mask. And got a warning, no error.",,
10,issue_comment,1441,nilearn,nilearn,poquirion,2017-11-16 15:45:56,Gaël is sitting to my left and recommend the the issue be closed... I guess it is fixed.,,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,1573,nilearn,nilearn,KamalakerDadi,2017-11-23 16:16:12,"Still need to check if anything is missing. Otherwise reviewable.

Thanks for reviewing.",start issue,[MRG] DOC: SpaceNet
2,issue_closed,1573,nilearn,nilearn,GaelVaroquaux,2017-11-30 16:38:42,,closed issue,[MRG] DOC: SpaceNet
3,pull_request_title,1573,nilearn,nilearn,KamalakerDadi,2017-11-23 16:16:12,"Still need to check if anything is missing. Otherwise reviewable.

Thanks for reviewing.",9dc1d9f1e2c707e77ba66d5dfed827fdb4d1e9b5,[MRG] DOC: SpaceNet
4,pull_request_merged,1573,nilearn,nilearn,GaelVaroquaux,2017-11-30 16:38:42,[MRG] DOC: SpaceNet,60ee7bb16f4271a51287f00f50782fa746104158,Pull request merge from KamalakerDadi/nilearn:doc_space to nilearn/nilearn:master
5,issue_comment,1573,nilearn,nilearn,codecov[bot],2017-11-23 20:47:31,"# [Codecov](https://codecov.io/gh/nilearn/nilearn/pull/1573?src=pr&el=h1) Report
> Merging [#1573](https://codecov.io/gh/nilearn/nilearn/pull/1573?src=pr&el=desc) into [master](https://codecov.io/gh/nilearn/nilearn/commit/1d90db33cbb864b2413647ea771edc25245c8ff7?src=pr&el=desc) will **increase** coverage by `<.01%`.
> The diff coverage is `100%`.

[![Impacted file tree graph](https://codecov.io/gh/nilearn/nilearn/pull/1573/graphs/tree.svg?width=650&token=KpYArSdyXv&height=150&src=pr)](https://codecov.io/gh/nilearn/nilearn/pull/1573?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##           master    #1573      +/-   ##
==========================================
+ Coverage   94.45%   94.45%   +<.01%     
==========================================
  Files         125      125              
  Lines       15348    15349       +1     
==========================================
+ Hits        14497    14498       +1     
  Misses        851      851
```


| [Impacted Files](https://codecov.io/gh/nilearn/nilearn/pull/1573?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [nilearn/decoding/space\_net.py](https://codecov.io/gh/nilearn/nilearn/pull/1573?src=pr&el=tree#diff-bmlsZWFybi9kZWNvZGluZy9zcGFjZV9uZXQucHk=) | `94.7% <100%> (+0.01%)` | :arrow_up: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/nilearn/nilearn/pull/1573?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/nilearn/nilearn/pull/1573?src=pr&el=footer). Last update [1d90db3...9dc1d9f](https://codecov.io/gh/nilearn/nilearn/pull/1573?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",,
6,pull_request_commit_comment,1573,nilearn,nilearn,KamalakerDadi,2017-11-23 21:27:14,"What is the right way to say about -infs in cv_scores_ as ?
I would like to add a note here about -inf values",9dc1d9f1e2c707e77ba66d5dfed827fdb4d1e9b5,"(89, '', u'nilearn/decoding/space_net.py')"
7,pull_request_commit_comment,1573,nilearn,nilearn,bthirion,2017-11-23 22:36:11,values of the mask image,9dc1d9f1e2c707e77ba66d5dfed827fdb4d1e9b5,"(None, '', u'nilearn/decoding/space_net.py')"
8,pull_request_commit_comment,1573,nilearn,nilearn,bthirion,2017-11-23 22:45:18,same comment here.,9dc1d9f1e2c707e77ba66d5dfed827fdb4d1e9b5,"(None, '', u'nilearn/decoding/space_net.py')"
9,pull_request_commit,1573,nilearn,nilearn,ainafp,2015-12-02 17:43:49,missing docs on attributes for space net added WIP,c4cc4f64a631783b99c25e1cef8caa08229333f9,
10,pull_request_commit,1573,nilearn,nilearn,ainafp,2015-12-02 18:01:53,added more attributes WIP,ca0ad4e7c5eb27f79fd076eca3159908202d3052,
11,pull_request_commit,1573,nilearn,nilearn,ainafp,2015-12-04 12:32:51,modified shapes of attributes + some typos,8e5ad2ce44a08fdba77081a3d7560ed68fb5dbe1,
12,pull_request_commit,1573,nilearn,nilearn,ainafp,2015-12-04 13:02:37,changes extended to SpaceNetRegressor and SpaceNetClassifier,c640555751a8522f9340cf7b2800f304f262795a,
13,pull_request_commit,1573,nilearn,nilearn,ainafp,2015-12-02 17:43:49,missing docs on attributes for space net added WIP,0464308f2305eba499fa727c367fb9dd9c66e0f5,
14,pull_request_commit,1573,nilearn,nilearn,ainafp,2015-12-02 18:01:53,added more attributes WIP,e703284e3d9bdda9de10428335a8a917c8808674,
15,pull_request_commit,1573,nilearn,nilearn,ainafp,2015-12-04 12:32:51,modified shapes of attributes + some typos,93c043a9091487e826a0476f9e4b2dae004a04ca,
16,pull_request_commit,1573,nilearn,nilearn,ainafp,2015-12-04 13:02:37,changes extended to SpaceNetRegressor and SpaceNetClassifier,626c0c992db4853181cf9d46be121fc68460d03b,
17,pull_request_commit,1573,nilearn,nilearn,KamalakerDadi,2017-11-23 16:14:14,[WIP] DOC: SpaceNet,484206f56d23af3c8f15ea792e8739d4c49ce05d,
18,pull_request_commit,1573,nilearn,nilearn,KamalakerDadi,2017-11-23 20:47:09,Fixing sphinx failure,4f9ebc31ef0143e715dc96ca90254fa25cce92ac,
19,pull_request_commit,1573,nilearn,nilearn,KamalakerDadi,2017-11-24 12:06:25,Addressed comment: Improve wording on mask_,9dc1d9f1e2c707e77ba66d5dfed827fdb4d1e9b5,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,1571,nilearn,nilearn,salma1601,2017-11-23 14:46:13,"nothing happens when you click on `Anaconda` in http://nilearn.github.io/introduction.html#installing-nilearn
",start issue,anaconda web address doesn't work for windows tab in installation page
2,issue_closed,1571,nilearn,nilearn,bthirion,2017-11-23 22:35:05,,closed issue,anaconda web address doesn't work for windows tab in installation page
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,1430,nilearn,nilearn,SylvainLan,2017-04-05 11:16:35,"#1193 
I didn't know if you wanted to keep the possibility to have the mask as a ndaray so to be sure I kept it, but can be removed. ",start issue,find_xyz_cut can take 3d niimg-like object as mask #1193
2,issue_closed,1430,nilearn,nilearn,GaelVaroquaux,2017-11-16 19:56:19,,closed issue,find_xyz_cut can take 3d niimg-like object as mask #1193
3,pull_request_title,1430,nilearn,nilearn,SylvainLan,2017-04-05 11:16:35,"#1193 
I didn't know if you wanted to keep the possibility to have the mask as a ndaray so to be sure I kept it, but can be removed. ",a42076f5b3257e8734549646215fe29b326099f5,find_xyz_cut can take 3d niimg-like object as mask #1193
4,issue_comment,1430,nilearn,nilearn,GaelVaroquaux,2017-11-16 19:54:41,I added a whats_new and merged.,,
5,issue_comment,1430,nilearn,nilearn,codecov[bot],2017-04-06 08:35:16,"# [Codecov](https://codecov.io/gh/nilearn/nilearn/pull/1430?src=pr&el=h1) Report
> Merging [#1430](https://codecov.io/gh/nilearn/nilearn/pull/1430?src=pr&el=desc) into [master](https://codecov.io/gh/nilearn/nilearn/commit/87c12efe14c005f1c916f76358639b55a306fb06?src=pr&el=desc) will **increase** coverage by `<.01%`.
> The diff coverage is `100%`.

[![Impacted file tree graph](https://codecov.io/gh/nilearn/nilearn/pull/1430/graphs/tree.svg?width=650&height=150&src=pr&token=KpYArSdyXv)](https://codecov.io/gh/nilearn/nilearn/pull/1430?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##           master    #1430      +/-   ##
==========================================
+ Coverage   94.51%   94.51%   +<.01%     
==========================================
  Files         118      118              
  Lines       13470    13477       +7     
==========================================
+ Hits        12731    12738       +7     
  Misses        739      739
```


| [Impacted Files](https://codecov.io/gh/nilearn/nilearn/pull/1430?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [nilearn/plotting/find\_cuts.py](https://codecov.io/gh/nilearn/nilearn/pull/1430?src=pr&el=tree#diff-bmlsZWFybi9wbG90dGluZy9maW5kX2N1dHMucHk=) | `90.64% <100%> (+0.27%)` | :arrow_up: |
| [nilearn/plotting/tests/test\_find\_cuts.py](https://codecov.io/gh/nilearn/nilearn/pull/1430?src=pr&el=tree#diff-bmlsZWFybi9wbG90dGluZy90ZXN0cy90ZXN0X2ZpbmRfY3V0cy5weQ==) | `100% <100%> (ø)` | :arrow_up: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/nilearn/nilearn/pull/1430?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/nilearn/nilearn/pull/1430?src=pr&el=footer). Last update [87c12ef...a42076f](https://codecov.io/gh/nilearn/nilearn/pull/1430?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).",,
6,issue_comment,1430,nilearn,nilearn,bthirion,2017-04-06 16:53:29,LGTM. Need to check the failures though.,,
7,issue_comment,1430,nilearn,nilearn,KamalakerDadi,2017-04-07 08:19:47,"Regarding failure: You may have forgotten to address this test function related to mask to be replaced by mask_img. 

```nilearn.plotting.tests.test_find_cuts.test_find_cuts_empty_mask_no_crash```",,
8,issue_comment,1430,nilearn,nilearn,bthirion,2017-04-13 09:36:49,LGTM.,,
9,issue_comment,1430,nilearn,nilearn,KamalakerDadi,2017-05-23 09:44:05,"There's a change of public API. I (@GaelVaroquaux, borrowing @KamalakerDadi's computer) think that it is fine, because people seldom pass a mask, but we should specify it in the whats_new.rst.",,
10,pull_request_commit_comment,1430,nilearn,nilearn,KamalakerDadi,2017-04-06 08:05:02,"This parameter should take only Nifti images and should be renamed from mask -> mask_img.

```mask_img : 3D Nifti1Image, optional```

Should be added a bit of documentation as,  ""An optional brain mask, provided mask_img should not be empty.""",a42076f5b3257e8734549646215fe29b326099f5,"(None, '', u'nilearn/plotting/find_cuts.py')"
11,pull_request_commit_comment,1430,nilearn,nilearn,KamalakerDadi,2017-04-06 08:09:17,"We should be doing this on the top. First, checking if it is a valid Nifti image in 3D and second using _safe_get_data on mask image to convert to data numpy array. Rest should do the job by itself. Tell me if I miss something here ?

 I think this snippet should be added on top after ```data = _safe_get_data(img)``` at line 55.
```python
mask_img=check_niimg_3d(mask_img)
mask = _safe_get_data(mask_img)
```",a42076f5b3257e8734549646215fe29b326099f5,"(None, '', u'nilearn/plotting/find_cuts.py')"
12,pull_request_commit_comment,1430,nilearn,nilearn,AlexandreAbraham,2017-04-13 09:51:20,"Do we really have the guarantee that img and mask_img are in the same space? We should at least check it, and at best raise an error or do a resampling if not.",a42076f5b3257e8734549646215fe29b326099f5,"(26, '', u'nilearn/plotting/find_cuts.py')"
13,pull_request_commit,1430,nilearn,nilearn,sylvain@dhcp-147-251.via.ecp.fr,2017-04-05 10:02:09,find_xyz_cut can take 3d niimg-like object as mask,441ea5fed6ced255b1ba7a3c535f8bcb9f2b5054,
14,pull_request_commit,1430,nilearn,nilearn,SylvainLan,2017-04-06 08:35:19,fix PR,3d8fe5d06fd821746b3b851db438d7a48db5d7e0,
15,pull_request_commit,1430,nilearn,nilearn,SylvainLan,2017-04-06 08:36:59,fix PR,99b068cc9b8f1d1402eff5321196f76b5ad63109,
16,pull_request_commit,1430,nilearn,nilearn,SylvainLan,2017-04-06 09:44:11,modify the test to fit the new signature,048fb831addc0808acad4b45da8c0ed079fa50e1,
17,pull_request_commit,1430,nilearn,nilearn,SylvainLan,2017-04-12 09:46:28,change test to fit the new signature,200b27fdf0f5583255d44e67620927d1c14f16eb,
18,pull_request_commit,1430,nilearn,nilearn,SylvainLan,2017-04-14 07:34:48,check mask_img and img live in the same space,fd8959a8559d4711016f536cc055a6fb57d83d84,
19,pull_request_commit,1430,nilearn,nilearn,SylvainLan,2017-04-14 08:03:35,typo,2215caad8583ef088af32786cb15c8e638783429,
20,pull_request_commit,1430,nilearn,nilearn,SylvainLan,2017-04-14 08:04:34,typo,a42076f5b3257e8734549646215fe29b326099f5,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,1523,nilearn,nilearn,jeromedockes,2017-10-10 16:49:07,- [x] separate atlas levels,start issue,[MRG+1] add a Talairach atlas fetcher (see http://talairach.org)
2,issue_closed,1523,nilearn,nilearn,GaelVaroquaux,2017-11-19 18:42:17,,closed issue,[MRG+1] add a Talairach atlas fetcher (see http://talairach.org)
3,pull_request_title,1523,nilearn,nilearn,jeromedockes,2017-10-10 16:49:07,- [x] separate atlas levels,e215cef75c46ad976b5d8a464a2b841948d6f8dc,[MRG+1] add a Talairach atlas fetcher (see http://talairach.org)
4,pull_request_merged,1523,nilearn,nilearn,GaelVaroquaux,2017-11-19 18:42:17,[MRG+1] add a Talairach atlas fetcher (see http://talairach.org),965bacbb0f60e43b259015f836b6a7a410230f7d,Pull request merge from jeromedockes/nilearn:talairach_fetcher to nilearn/nilearn:master
5,issue_comment,1523,nilearn,nilearn,bthirion,2017-10-11 12:51:40,LGTM. +1 for merge,,
6,issue_comment,1523,nilearn,nilearn,bthirion,2017-10-14 19:39:18,"On the other hand, doesn't this type of feature add to the heterogeneity across atlases (I mean API-wise) ? I'm not a big fan of this idea.",,
7,issue_comment,1523,nilearn,nilearn,bthirion,2017-10-16 21:33:09,You're probably right that using a kw for the type of representation expected is probably the simplest and clearest approach.,,
8,issue_comment,1523,nilearn,nilearn,KamalakerDadi,2017-10-13 19:45:19,"Could you please rebase ?
The tests failures are fixed in master now.",,
9,issue_comment,1523,nilearn,nilearn,KamalakerDadi,2017-10-13 20:16:17,"Minor comments from my side.
Once you rebase we can check for all CIs to green. Otherwise it is almost to merge.",,
10,issue_comment,1523,nilearn,nilearn,KamalakerDadi,2017-10-13 20:38:27,Have you looked at the atlas visualizing it ? Is it a ROI or cortical thickness ?,,
11,issue_comment,1523,nilearn,nilearn,KamalakerDadi,2017-10-13 20:47:11,Looks great. Waiting for CIs to be green.,,
12,issue_comment,1523,nilearn,nilearn,KamalakerDadi,2017-10-14 06:15:21,">they are rois with multiple levels of description (hemisphere, lobe, gyrus, tissue type, Brodmann area)

Thinking about a bit of it. May be we should also have an option to fetch each level or all levels at once.
For instance, atlas_type='hemisphere' something like this ?",,
13,issue_comment,1523,nilearn,nilearn,KamalakerDadi,2017-11-18 19:56:10,"I have checked that I can be able to download atlas at each level. I just want to make sure that labels are ordered according to the indices in the atlas provided. Otherwise, +1 for merge.",,
14,issue_comment,1523,nilearn,nilearn,KamalakerDadi,2017-11-18 20:03:13," >I just want to make sure that labels are ordered according to the
 indices in the atlas provided.
>Have you been able to check this?

I can load the labels and see that there are 72 for brodmann and 56 for gyrus. Its a bit hard to check because I don't have anatomical knowledge.",,
15,issue_comment,1523,nilearn,nilearn,KamalakerDadi,2017-11-19 08:12:31,">I just want to make sure that labels are ordered according to the indices in the atlas provided

>They are, by construction. I have also checked this visually by looking at the hemispheres, the lobes, the gyri and the tissue types

LGTM",,
16,issue_comment,1523,nilearn,nilearn,KamalakerDadi,2017-11-19 08:57:46,">added some plots if you want to have a look

Looks good. Thanks",,
17,issue_comment,1523,nilearn,nilearn,codecov[bot],2017-10-13 22:15:31,"# [Codecov](https://codecov.io/gh/nilearn/nilearn/pull/1523?src=pr&el=h1) Report
> Merging [#1523](https://codecov.io/gh/nilearn/nilearn/pull/1523?src=pr&el=desc) into [master](https://codecov.io/gh/nilearn/nilearn/commit/d14a60d5fe4d09c8b10a44effe534b482d6f6db2?src=pr&el=desc) will **increase** coverage by `0.1%`.
> The diff coverage is `100%`.

[![Impacted file tree graph](https://codecov.io/gh/nilearn/nilearn/pull/1523/graphs/tree.svg?src=pr&height=150&width=650&token=KpYArSdyXv)](https://codecov.io/gh/nilearn/nilearn/pull/1523?src=pr&el=tree)

```diff
@@            Coverage Diff            @@
##           master    #1523     +/-   ##
=========================================
+ Coverage   94.22%   94.33%   +0.1%     
=========================================
  Files         122      122             
  Lines       15011    15080     +69     
=========================================
+ Hits        14144    14225     +81     
+ Misses        867      855     -12
```


| [Impacted Files](https://codecov.io/gh/nilearn/nilearn/pull/1523?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [nilearn/datasets/\_\_init\_\_.py](https://codecov.io/gh/nilearn/nilearn/pull/1523?src=pr&el=tree#diff-bmlsZWFybi9kYXRhc2V0cy9fX2luaXRfXy5weQ==) | `100% <ø> (ø)` | :arrow_up: |
| [nilearn/datasets/tests/test\_atlas.py](https://codecov.io/gh/nilearn/nilearn/pull/1523?src=pr&el=tree#diff-bmlsZWFybi9kYXRhc2V0cy90ZXN0cy90ZXN0X2F0bGFzLnB5) | `99.63% <100%> (+0.03%)` | :arrow_up: |
| [nilearn/datasets/atlas.py](https://codecov.io/gh/nilearn/nilearn/pull/1523?src=pr&el=tree#diff-bmlsZWFybi9kYXRhc2V0cy9hdGxhcy5weQ==) | `88.25% <100%> (+2.83%)` | :arrow_up: |
| [nilearn/signal.py](https://codecov.io/gh/nilearn/nilearn/pull/1523?src=pr&el=tree#diff-bmlsZWFybi9zaWduYWwucHk=) | `91.07% <0%> (+5.9%)` | :arrow_up: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/nilearn/nilearn/pull/1523?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/nilearn/nilearn/pull/1523?src=pr&el=footer). Last update [d14a60d...e215cef](https://codecov.io/gh/nilearn/nilearn/pull/1523?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",,
18,pull_request_commit_comment,1523,nilearn,nilearn,KamalakerDadi,2017-10-13 20:01:52,"You should use get_header ```from nilearn._utils.compat import get_header```.
This way we could adapt to multiple versions of nibabel.",e215cef75c46ad976b5d8a464a2b841948d6f8dc,"(None, '', u'nilearn/datasets/atlas.py')"
19,pull_request_commit_comment,1523,nilearn,nilearn,KamalakerDadi,2017-10-13 20:04:28,Can you add .. versionadded:: 0.3.2 ?,e215cef75c46ad976b5d8a464a2b841948d6f8dc,"(None, '', u'nilearn/datasets/atlas.py')"
20,pull_request_commit_comment,1523,nilearn,nilearn,KamalakerDadi,2017-10-13 20:04:52,Perhaps string -> str,e215cef75c46ad976b5d8a464a2b841948d6f8dc,"(None, '', u'nilearn/datasets/atlas.py')"
21,pull_request_commit_comment,1523,nilearn,nilearn,KamalakerDadi,2017-10-13 20:08:01,Reference: http://www.sphinx-doc.org/en/stable/markup/para.html,e215cef75c46ad976b5d8a464a2b841948d6f8dc,"(None, '', u'nilearn/datasets/atlas.py')"
22,pull_request_commit_comment,1523,nilearn,nilearn,KamalakerDadi,2017-10-13 20:12:24,Why is that we don't have other arguments like ```resume``` and ```verbose``` ?,e215cef75c46ad976b5d8a464a2b841948d6f8dc,"(None, '', u'nilearn/datasets/atlas.py')"
23,pull_request_commit_comment,1523,nilearn,nilearn,KamalakerDadi,2017-11-05 09:50:55,We just bumped nibabel to 2.0.2. I think these imports get_affine and get_header can be removed.,e215cef75c46ad976b5d8a464a2b841948d6f8dc,"(None, '', u'nilearn/datasets/atlas.py')"
24,pull_request_commit_comment,1523,nilearn,nilearn,KamalakerDadi,2017-11-05 09:51:23,atlas.header should be fine now after rebase.,e215cef75c46ad976b5d8a464a2b841948d6f8dc,"(None, '', u'nilearn/datasets/atlas.py')"
25,pull_request_commit_comment,1523,nilearn,nilearn,KamalakerDadi,2017-11-18 19:33:29,May be we don't need to import load_img. We can use check_niimg,e215cef75c46ad976b5d8a464a2b841948d6f8dc,"(None, '', u'nilearn/datasets/atlas.py')"
26,pull_request_commit_comment,1523,nilearn,nilearn,KamalakerDadi,2017-11-18 19:40:25,Could you please add verbose in this function ?,e215cef75c46ad976b5d8a464a2b841948d6f8dc,"(None, '', u'nilearn/datasets/atlas.py')"
27,pull_request_commit_comment,1523,nilearn,nilearn,KamalakerDadi,2017-11-18 19:41:11,Small question: Are these labels sorted according to maps indices ?,e215cef75c46ad976b5d8a464a2b841948d6f8dc,"(140, '', u'nilearn/datasets/atlas.py')"
28,pull_request_commit_comment,1523,nilearn,nilearn,KamalakerDadi,2017-11-18 19:44:48,Could you please add short comment about what this code block does ?,e215cef75c46ad976b5d8a464a2b841948d6f8dc,"(None, '', u'nilearn/datasets/atlas.py')"
29,pull_request_commit_comment,1523,nilearn,nilearn,GaelVaroquaux,2017-11-18 20:07:12,Why a function and not a constant?,e215cef75c46ad976b5d8a464a2b841948d6f8dc,"(None, '', u'nilearn/datasets/atlas.py')"
30,pull_request_commit_comment,1523,nilearn,nilearn,jeromedockes,2017-11-19 04:36:17,"yes, should I repeat this here or is 'values are indices in the list of labels' enough?",e215cef75c46ad976b5d8a464a2b841948d6f8dc,"(140, '', u'nilearn/datasets/atlas.py')"
31,pull_request_commit_comment,1523,nilearn,nilearn,KamalakerDadi,2017-11-19 08:14:31,I think that should be enough.,e215cef75c46ad976b5d8a464a2b841948d6f8dc,"(140, '', u'nilearn/datasets/atlas.py')"
32,pull_request_commit_comment,1523,nilearn,nilearn,GaelVaroquaux,2017-11-19 16:09:03,"I would prefer if you did not define the local variable ""levels"", but rather used the module global ""_TALAIRACH_LEVELS"". It helps following the code.",e215cef75c46ad976b5d8a464a2b841948d6f8dc,"(None, '', u'nilearn/datasets/atlas.py')"
33,pull_request_commit,1523,nilearn,nilearn,jeromedockes,2017-10-10 05:54:53,add test for fetch_atlas_talairach,41508b5b7fc38000b447cf03316d971eb13e1688,
34,pull_request_commit,1523,nilearn,nilearn,jeromedockes,2017-10-10 16:20:53,add doc for talairach atlas,5c34d39c5a644e39a7ed9351fc6d1a7098a0a4cd,
35,pull_request_commit,1523,nilearn,nilearn,jeromedockes,2017-10-10 16:47:34,doc details,29485c685f474bfea659bb0b18e552b8817c2f85,
36,pull_request_commit,1523,nilearn,nilearn,jeromedockes,2017-10-13 20:23:01,use _utils.compat.get_header rather than img.header,87bdc05d9bd6073bfabf739d69e0c8e937383d56,
37,pull_request_commit,1523,nilearn,nilearn,jeromedockes,2017-10-13 20:26:07,add versionadded to talairach,1be3dcc52e8ce5fd155e034e6630de245ccd7eff,
38,pull_request_commit,1523,nilearn,nilearn,jeromedockes,2017-10-13 20:29:24,add resume and verbose to talairach fetcher,7a0fcd4469144f030087afc4bded341e01e352af,
39,pull_request_commit,1523,nilearn,nilearn,jeromedockes,2017-10-13 20:30:18,Merge branch 'master' into talairach_fetcher,b484e7493d84598130519cc03d3c35f40b854dfb,
40,pull_request_commit,1523,nilearn,nilearn,jeromedockes,2017-10-13 22:14:45,white line at end of docstring,58e03af5010dec131d8816d1923e88b58802b674,
41,pull_request_commit,1523,nilearn,nilearn,jeromedockes,2017-11-17 04:42:09,Merge branch 'master' into talairach_fetcher,af2e3c93a1a0c882500ca5ff824435c705ef15e4,
42,pull_request_commit,1523,nilearn,nilearn,jeromedockes,2017-11-17 04:51:30,don't use get_header,7c3d095b88aa1a9745abb9f360d313f10a633d9d,
43,pull_request_commit,1523,nilearn,nilearn,jeromedockes,2017-11-17 07:07:56,"separate talairach atlas levels

store each level on 8 bits of an int64 image",716c3987161ddc0b652f3d88eb092bf285658279,
44,pull_request_commit,1523,nilearn,nilearn,jeromedockes,2017-11-17 17:46:38,bitwise operators instead of np functions,b922f97b6ea75dbbc5ac739548dd3293e2c7a74b,
45,pull_request_commit,1523,nilearn,nilearn,jeromedockes,2017-11-17 23:56:03,new tests for talairach fetcher,a04fdeac1f3d7ad8f0e49393bb48e090c124ef99,
46,pull_request_commit,1523,nilearn,nilearn,jeromedockes,2017-11-18 00:07:37,line too long in docstring,34db4e40590adee03e763938affb1263909202b2,
47,pull_request_commit,1523,nilearn,nilearn,jeromedockes,2017-11-18 00:09:29,Merge branch 'master' into talairach_fetcher,3d1cd9023dbc0ce4b7418ea56d81e27a74806547,
48,pull_request_commit,1523,nilearn,nilearn,jeromedockes,2017-11-18 00:37:13,fix typo + add test,8a61a72e63cfb134ff00b9c96e79475ca8d8f787,
49,pull_request_commit,1523,nilearn,nilearn,jeromedockes,2017-11-18 01:11:04,force no mmap loading image to free file handle,df11c0ccecaa40e13f8e5c7db6792f87e173b136,
50,pull_request_commit,1523,nilearn,nilearn,jeromedockes,2017-11-18 02:10:42,talairach docstring formatting,72729456557d16904a106b96c28fefaa30ca7549,
51,pull_request_commit,1523,nilearn,nilearn,jeromedockes,2017-11-19 04:15:33,replace _talairach_levels() with a constant,c0f3302b3413d8c4b47246907149733c4f28a4dd,
52,pull_request_commit,1523,nilearn,nilearn,jeromedockes,2017-11-19 04:26:23,Merge branch 'master' into talairach_fetcher,1f596bcf229881e0d5d003e9873619897a94b602,
53,pull_request_commit,1523,nilearn,nilearn,jeromedockes,2017-11-19 04:38:30,"talairach fetcher detail

- remove import load_img (not used)
- use verbose kwarg in _get_dataset_dir
- add comments",ad3fda68ae85451b2d0ec1b2482f78a4616e61f0,
54,pull_request_commit,1523,nilearn,nilearn,jeromedockes,2017-11-19 04:45:30,improve _separate_talairach_levels comments,de6882f63081552e8186d8e759f13b5134c8b50d,
55,pull_request_commit,1523,nilearn,nilearn,jeromedockes,2017-11-19 17:41:55,use _TALAIRACH_LEVELS rather than local variables,e215cef75c46ad976b5d8a464a2b841948d6f8dc,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,1559,nilearn,nilearn,poquirion,2017-11-16 21:36:57,"Supersedes Pr #1421 
It ticks the 3 boxes",start issue,Supersedes Pr #1421
2,issue_closed,1559,nilearn,nilearn,GaelVaroquaux,2017-11-17 13:56:00,,closed issue,Supersedes Pr #1421
3,pull_request_title,1559,nilearn,nilearn,poquirion,2017-11-16 21:36:57,"Supersedes Pr #1421 
It ticks the 3 boxes",56bec872059c9fd9c933a9b8104803ad1ef2adf9,Supersedes Pr #1421
4,pull_request_commit_comment,1559,nilearn,nilearn,GaelVaroquaux,2017-11-17 04:34:41,Circle was failing because the identation here was wrong.,56bec872059c9fd9c933a9b8104803ad1ef2adf9,"(6, '', u'nilearn/plotting/surf_plotting.py')"
5,pull_request_commit,1559,nilearn,nilearn,JohnGriffiths,2017-03-24 19:53:21,added anterior and posterior view options,e5d209cb300ac95abccab6fdfd7312b98297c1b5,
6,pull_request_commit,1559,nilearn,nilearn,poquirion,2017-11-16 21:28:35,added new view in plot_surf_*,8b3425d12d2708d979486a2f68b004de48e0ae0a,
7,pull_request_commit,1559,nilearn,nilearn,poquirion,2017-11-16 21:29:22,added examples for plot_surf* views,cc6c0cf42d6cdce2b0b0de9be15a2df7e9a23bd7,
8,pull_request_commit,1559,nilearn,nilearn,poquirion,2017-11-16 21:32:53,add whats_new,56bec872059c9fd9c933a9b8104803ad1ef2adf9,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,1558,nilearn,nilearn,KamalakerDadi,2017-11-16 21:28:15,,start issue,FIX: doc/whats_new
2,issue_closed,1558,nilearn,nilearn,KamalakerDadi,2017-11-16 21:30:21,,closed issue,FIX: doc/whats_new
3,pull_request_title,1558,nilearn,nilearn,KamalakerDadi,2017-11-16 21:28:15,,14e0a4e937bd4300d3c8f80761519b4a4ef38288,FIX: doc/whats_new
4,pull_request_commit,1558,nilearn,nilearn,KamalakerDadi,2017-11-16 21:27:21,FIX: doc/whats_new,14e0a4e937bd4300d3c8f80761519b4a4ef38288,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,1572,nilearn,nilearn,salma1601,2017-11-23 14:46:40,try fix #1571 ,start issue,try fix the anaconda web address
2,issue_closed,1572,nilearn,nilearn,bthirion,2017-11-23 22:35:05,,closed issue,try fix the anaconda web address
3,pull_request_title,1572,nilearn,nilearn,salma1601,2017-11-23 14:46:40,try fix #1571 ,d1f80fbbf004ff78557e6ccf1b4846248cad4d8f,try fix the anaconda web address
4,pull_request_merged,1572,nilearn,nilearn,bthirion,2017-11-23 22:35:05,try fix the anaconda web address,772d5ef38bce97369025c2099781a97259263ed7,Pull request merge from salma1601/nilearn:anaconda_site to nilearn/nilearn:master
5,issue_comment,1572,nilearn,nilearn,KamalakerDadi,2017-11-23 20:54:51,LGTM,,
6,issue_comment,1572,nilearn,nilearn,codecov[bot],2017-11-23 16:10:14,"# [Codecov](https://codecov.io/gh/nilearn/nilearn/pull/1572?src=pr&el=h1) Report
> Merging [#1572](https://codecov.io/gh/nilearn/nilearn/pull/1572?src=pr&el=desc) into [master](https://codecov.io/gh/nilearn/nilearn/commit/1d90db33cbb864b2413647ea771edc25245c8ff7?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/nilearn/nilearn/pull/1572/graphs/tree.svg?width=650&token=KpYArSdyXv&height=150&src=pr)](https://codecov.io/gh/nilearn/nilearn/pull/1572?src=pr&el=tree)

```diff
@@           Coverage Diff           @@
##           master    #1572   +/-   ##
=======================================
  Coverage   94.45%   94.45%           
=======================================
  Files         125      125           
  Lines       15348    15348           
=======================================
  Hits        14497    14497           
  Misses        851      851
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/nilearn/nilearn/pull/1572?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/nilearn/nilearn/pull/1572?src=pr&el=footer). Last update [1d90db3...d1f80fb](https://codecov.io/gh/nilearn/nilearn/pull/1572?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",,
7,pull_request_commit,1572,nilearn,nilearn,salma1601,2017-11-23 14:42:11,try fix the anaconda web address,d1f80fbbf004ff78557e6ccf1b4846248cad4d8f,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,1193,nilearn,nilearn,AlexandreAbraham,2016-08-02 20:39:04,"Unlike all img functions that takes all input as niimg, this one force the mask to be a numpy array, which is a bit odd.
",start issue,find_xyz_cut_coords takes numpy array as mask
2,issue_closed,1193,nilearn,nilearn,GaelVaroquaux,2017-11-16 19:56:53,,closed issue,find_xyz_cut_coords takes numpy array as mask
3,issue_comment,1193,nilearn,nilearn,GaelVaroquaux,2016-08-02 20:40:12,"> Unlike all img functions that takes all input as niimg, this one force
> the mask to be a numpy array, which is a bit odd.

+1
",,
4,issue_comment,1193,nilearn,nilearn,GaelVaroquaux,2016-11-28 06:35:58,"+1 @shoshber 

Do you want to have a go at it?",,
5,issue_comment,1193,nilearn,nilearn,GaelVaroquaux,2016-11-29 06:32:16,"> I know it's annoying when someone keeps suggesting changes without contributing, sorry!

Don't worry, I've been in open source too long to be annoyed :). It's
just that things would get done, and that's cool. We'll probably get
along to doing this, but right now we are busy with other things.
",,
6,issue_comment,1193,nilearn,nilearn,GaelVaroquaux,2017-11-16 19:56:52,Fixed in #1430,,
7,issue_comment,1193,nilearn,nilearn,shoshber,2016-11-28 04:31:23,"+1. Same for `find_cut_slices()`. I can call them with the input as a Nifti1Image, but not as a niimg, which is a lot less convenient!",,
8,issue_comment,1193,nilearn,nilearn,shoshber,2016-11-29 00:37:23,"I don't have time at the moment (looming deadlines), unfortunately. I know it's annoying when someone keeps suggesting changes without contributing, sorry!",,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,1550,nilearn,nilearn,KamalakerDadi,2017-11-14 12:08:00,Updating all new enhancements and minor fixes.,start issue,DOC: Update whats_new
2,issue_closed,1550,nilearn,nilearn,GaelVaroquaux,2017-11-14 13:26:15,,closed issue,DOC: Update whats_new
3,pull_request_title,1550,nilearn,nilearn,KamalakerDadi,2017-11-14 12:08:00,Updating all new enhancements and minor fixes.,a67e4c3271b5ee4a8398611b98ef5d2625483761,DOC: Update whats_new
4,pull_request_merged,1550,nilearn,nilearn,GaelVaroquaux,2017-11-14 13:26:15,DOC: Update whats_new,e442a34a9eda52b2c2697c5b176ec3d95a99e8d3,Pull request merge from KamalakerDadi/nilearn:update_whatsnew to nilearn/nilearn:master
5,issue_comment,1550,nilearn,nilearn,codecov[bot],2017-11-14 13:35:13,"# [Codecov](https://codecov.io/gh/nilearn/nilearn/pull/1550?src=pr&el=h1) Report
> Merging [#1550](https://codecov.io/gh/nilearn/nilearn/pull/1550?src=pr&el=desc) into [master](https://codecov.io/gh/nilearn/nilearn/commit/2520333761ddee468cfb948d5ad12525d9d186c3?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/nilearn/nilearn/pull/1550/graphs/tree.svg?width=650&src=pr&token=KpYArSdyXv&height=150)](https://codecov.io/gh/nilearn/nilearn/pull/1550?src=pr&el=tree)

```diff
@@           Coverage Diff           @@
##           master    #1550   +/-   ##
=======================================
  Coverage   94.45%   94.45%           
=======================================
  Files         122      122           
  Lines       14939    14939           
=======================================
  Hits        14110    14110           
  Misses        829      829
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/nilearn/nilearn/pull/1550?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/nilearn/nilearn/pull/1550?src=pr&el=footer). Last update [2520333...a67e4c3](https://codecov.io/gh/nilearn/nilearn/pull/1550?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",,
6,pull_request_commit,1550,nilearn,nilearn,KamalakerDadi,2017-11-14 12:06:53,DOC: Update whats_new,a67e4c3271b5ee4a8398611b98ef5d2625483761,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,1556,nilearn,nilearn,emdupre,2017-11-16 21:01:48,"In response to #1140, updates examples to use pandas instead of numpy when handling csv files. Also patches `space_net.py` to check if input is classifier when converting to numeric, otherwise stimuli labels passed from pandas introduce errors. ",start issue,Pandas examples
2,issue_closed,1556,nilearn,nilearn,GaelVaroquaux,2017-11-17 20:44:04,,closed issue,Pandas examples
3,pull_request_title,1556,nilearn,nilearn,emdupre,2017-11-16 21:01:48,"In response to #1140, updates examples to use pandas instead of numpy when handling csv files. Also patches `space_net.py` to check if input is classifier when converting to numeric, otherwise stimuli labels passed from pandas introduce errors. ",f6e9fe56718944e8e1ff0fa886638f1fb3205a4a,Pandas examples
4,pull_request_merged,1556,nilearn,nilearn,GaelVaroquaux,2017-11-17 20:44:04,Pandas examples,e34697bc22ee0061bbb548c89246cd814f23153a,Pull request merge from emdupre/nilearn:pandas-examples to nilearn/nilearn:master
5,issue_comment,1556,nilearn,nilearn,emdupre,2017-11-17 16:17:49,"I hadn't seen that @GaelVaroquaux opened a new PR on this, but I made commits addressing the doc build failure and moving numpy imports to relevant cells. I can close this, though, if you'd rather move ahead with #1562!",,
6,issue_comment,1556,nilearn,nilearn,emdupre,2017-11-17 16:37:06,"Pushed the bug fix you implemented, and 829c572 should address the review comments on the other PR",,
7,issue_comment,1556,nilearn,nilearn,codecov[bot],2017-11-16 21:50:27,"# [Codecov](https://codecov.io/gh/nilearn/nilearn/pull/1556?src=pr&el=h1) Report
> Merging [#1556](https://codecov.io/gh/nilearn/nilearn/pull/1556?src=pr&el=desc) into [master](https://codecov.io/gh/nilearn/nilearn/commit/ca6cf18c007dc96aa9ccc7799162d035bab2fc37?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/nilearn/nilearn/pull/1556/graphs/tree.svg?width=650&height=150&src=pr&token=KpYArSdyXv)](https://codecov.io/gh/nilearn/nilearn/pull/1556?src=pr&el=tree)

```diff
@@           Coverage Diff           @@
##           master    #1556   +/-   ##
=======================================
  Coverage   94.28%   94.28%           
=======================================
  Files         122      122           
  Lines       14980    14980           
=======================================
  Hits        14124    14124           
  Misses        856      856
```


| [Impacted Files](https://codecov.io/gh/nilearn/nilearn/pull/1556?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [nilearn/decoding/space\_net.py](https://codecov.io/gh/nilearn/nilearn/pull/1556?src=pr&el=tree#diff-bmlsZWFybi9kZWNvZGluZy9zcGFjZV9uZXQucHk=) | `94.69% <ø> (ø)` | :arrow_up: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/nilearn/nilearn/pull/1556?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/nilearn/nilearn/pull/1556?src=pr&el=footer). Last update [ca6cf18...d444daf](https://codecov.io/gh/nilearn/nilearn/pull/1556?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",,
8,issue_comment,1556,nilearn,nilearn,codecov[bot],2017-11-16 21:50:27,"# [Codecov](https://codecov.io/gh/nilearn/nilearn/pull/1556?src=pr&el=h1) Report
> Merging [#1556](https://codecov.io/gh/nilearn/nilearn/pull/1556?src=pr&el=desc) into [master](https://codecov.io/gh/nilearn/nilearn/commit/9f8da9055d6285df6319fcae4c634f3bca9797be?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/nilearn/nilearn/pull/1556/graphs/tree.svg?width=650&height=150&src=pr&token=KpYArSdyXv)](https://codecov.io/gh/nilearn/nilearn/pull/1556?src=pr&el=tree)

```diff
@@           Coverage Diff           @@
##           master    #1556   +/-   ##
=======================================
  Coverage   94.23%   94.23%           
=======================================
  Files         122      122           
  Lines       14992    14992           
=======================================
  Hits        14127    14127           
  Misses        865      865
```


| [Impacted Files](https://codecov.io/gh/nilearn/nilearn/pull/1556?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [nilearn/decoding/space\_net.py](https://codecov.io/gh/nilearn/nilearn/pull/1556?src=pr&el=tree#diff-bmlsZWFybi9kZWNvZGluZy9zcGFjZV9uZXQucHk=) | `94.69% <ø> (ø)` | :arrow_up: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/nilearn/nilearn/pull/1556?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/nilearn/nilearn/pull/1556?src=pr&el=footer). Last update [9f8da90...f6e9fe5](https://codecov.io/gh/nilearn/nilearn/pull/1556?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",,
9,pull_request_commit_comment,1556,nilearn,nilearn,GaelVaroquaux,2017-11-16 21:07:27,Do we still need numpy in this example?,f6e9fe56718944e8e1ff0fa886638f1fb3205a4a,"(None, '', u'examples/02_decoding/plot_haxby_anova_svm.py')"
10,pull_request_commit_comment,1556,nilearn,nilearn,GaelVaroquaux,2017-11-16 21:11:46,"Should it be ""sep"" rather than ""delimiter""?",f6e9fe56718944e8e1ff0fa886638f1fb3205a4a,"(None, '', u'examples/02_decoding/plot_haxby_grid_search.py')"
11,pull_request_commit_comment,1556,nilearn,nilearn,GaelVaroquaux,2017-11-16 21:15:07,"Strange: you use "".values"" in one of the indexing to ""conditions"" but not the other.",f6e9fe56718944e8e1ff0fa886638f1fb3205a4a,"(None, '', u'examples/plot_decoding_tutorial.py')"
12,pull_request_commit_comment,1556,nilearn,nilearn,GaelVaroquaux,2017-11-16 21:16:16,"Can we replace the above by ""haxby_labels.unique()""?",f6e9fe56718944e8e1ff0fa886638f1fb3205a4a,"(None, '', u'examples/04_manipulating_images/plot_roi_extraction.py')"
13,pull_request_commit_comment,1556,nilearn,nilearn,GaelVaroquaux,2017-11-16 21:18:54,"Would ""(haxby_labels == 'house').sum()"" give the same result?",f6e9fe56718944e8e1ff0fa886638f1fb3205a4a,"(None, '', u'examples/04_manipulating_images/plot_roi_extraction.py')"
14,pull_request_commit_comment,1556,nilearn,nilearn,emdupre,2017-11-16 21:50:49,"It's removed, and in `plot_haxby_space_net.py`!",f6e9fe56718944e8e1ff0fa886638f1fb3205a4a,"(None, '', u'examples/02_decoding/plot_haxby_anova_svm.py')"
15,pull_request_commit_comment,1556,nilearn,nilearn,emdupre,2017-11-16 21:51:04,"Patched this for consistency, thanks!",f6e9fe56718944e8e1ff0fa886638f1fb3205a4a,"(None, '', u'examples/02_decoding/plot_haxby_grid_search.py')"
16,pull_request_commit_comment,1556,nilearn,nilearn,emdupre,2017-11-16 21:53:30,"This gives a different result, actually, so I'm keeping with the same code for now!",f6e9fe56718944e8e1ff0fa886638f1fb3205a4a,"(None, '', u'examples/04_manipulating_images/plot_roi_extraction.py')"
17,pull_request_commit_comment,1556,nilearn,nilearn,bthirion,2017-11-16 22:29:31,"sep="" "" ",f6e9fe56718944e8e1ff0fa886638f1fb3205a4a,"(None, '', u'examples/05_advanced/plot_haxby_mass_univariate.py')"
18,pull_request_commit_comment,1556,nilearn,nilearn,bthirion,2017-11-16 22:30:51,"Seems unrelated, but correct.",f6e9fe56718944e8e1ff0fa886638f1fb3205a4a,"(5, '', u'nilearn/decoding/space_net.py')"
19,pull_request_commit_comment,1556,nilearn,nilearn,emdupre,2017-11-16 23:55:16,Thanks for catching that!,f6e9fe56718944e8e1ff0fa886638f1fb3205a4a,"(None, '', u'examples/05_advanced/plot_haxby_mass_univariate.py')"
20,pull_request_commit_comment,1556,nilearn,nilearn,GaelVaroquaux,2017-11-17 20:27:03,"It's actually not unrelated: the changes that we did implied that we were passing in non numerical values for y, and hence the code started failing where it shoudn't :).",f6e9fe56718944e8e1ff0fa886638f1fb3205a4a,"(5, '', u'nilearn/decoding/space_net.py')"
21,pull_request_commit,1556,nilearn,nilearn,emdupre,2017-11-16 16:46:37,Use pandas for behavioral data in examples,987a4a93f98eec5f69c34d62ab92b6e63d5c07bb,
22,pull_request_commit,1556,nilearn,nilearn,emdupre,2017-11-16 20:53:59,Increase readability of behavioral data,48a4af7f2e248d4fe2c2853a3ec7457564da93bc,
23,pull_request_commit,1556,nilearn,nilearn,emdupre,2017-11-16 20:56:32,Update check_X_y to check if classifier,74198407c6962334bd29b57c51fa8e7b73b63b0b,
24,pull_request_commit,1556,nilearn,nilearn,emdupre,2017-11-16 21:35:12,Remove unnecessary imports,3f79b3e10c8808ba036a509982e7bfcaf2b0d271,
25,pull_request_commit,1556,nilearn,nilearn,emdupre,2017-11-16 21:46:24,"Update pd.read_csv args

Updates pd.read_csv calls to use the preferred ""sep"" instead of
""delimiter.""",a387bf1fbca41edb7dc8ac30eb7008ee2d3463ae,
26,pull_request_commit,1556,nilearn,nilearn,emdupre,2017-11-16 21:49:01,"Patches for pd dtypes in example

Patches condition renaming to work with pandas datatype (over old numpy),
converts numpy unique to pandas unique to chip away at numpy dependency.",8a08fbd66d59cd754e51df75c7c0cd9edcb7cc70,
27,pull_request_commit,1556,nilearn,nilearn,emdupre,2017-11-17 16:05:27,Update documentation to include pandas,1c4cba519531eaf11a9571e065ed8f17c0955dda,
28,pull_request_commit,1556,nilearn,nilearn,emdupre,2017-11-17 16:16:07,Move np imports to relevant cells,829c572ed129b96d97932932962743a4af6aec2b,
29,pull_request_commit,1556,nilearn,nilearn,emdupre,2017-11-17 16:28:27,BUG: @GaelVaroquaux fix for latest pandas,f6e9fe56718944e8e1ff0fa886638f1fb3205a4a,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,1418,nilearn,nilearn,KamalakerDadi,2017-03-21 17:59:21,"This PR should fix incorrect labels as mentioned in this issue #1371. An update of all atlases to atlases shipped with FSL version 5.0. This version has in-built symmetrically split *cortical* atlases (max-prob types).

Can I have reviews on this please ?",start issue,[MRG] ENH: Update Harvard Oxford atlas from 3.3 to 5.0
2,issue_closed,1418,nilearn,nilearn,GaelVaroquaux,2017-11-16 19:46:45,,closed issue,[MRG] ENH: Update Harvard Oxford atlas from 3.3 to 5.0
3,pull_request_title,1418,nilearn,nilearn,KamalakerDadi,2017-03-21 17:59:21,"This PR should fix incorrect labels as mentioned in this issue #1371. An update of all atlases to atlases shipped with FSL version 5.0. This version has in-built symmetrically split *cortical* atlases (max-prob types).

Can I have reviews on this please ?",0c27090f58db7d625c76c4281ee87d1a27eb4fd5,[MRG] ENH: Update Harvard Oxford atlas from 3.3 to 5.0
4,pull_request_merged,1418,nilearn,nilearn,GaelVaroquaux,2017-11-16 19:46:45,[MRG] ENH: Update Harvard Oxford atlas from 3.3 to 5.0,832a109c4954e8d6bcd0df9f96cf7d6e6a6357c0,Pull request merge from KamalakerDadi/nilearn:update_harvard_atlas to nilearn/nilearn:master
5,issue_comment,1418,nilearn,nilearn,GaelVaroquaux,2017-05-29 20:11:34,"Could you rebase this again on master, to see if CircleCI is then successful.",,
6,issue_comment,1418,nilearn,nilearn,GaelVaroquaux,2017-11-16 19:46:41,LGTM. Merging. Thank you!,,
7,issue_comment,1418,nilearn,nilearn,codecov[bot],2017-05-29 20:29:13,"# [Codecov](https://codecov.io/gh/nilearn/nilearn/pull/1418?src=pr&el=h1) Report
> Merging [#1418](https://codecov.io/gh/nilearn/nilearn/pull/1418?src=pr&el=desc) into [master](https://codecov.io/gh/nilearn/nilearn/commit/6fe6245f75c0440e551b6402874146fffa4bed69?src=pr&el=desc) will **decrease** coverage by `0.17%`.
> The diff coverage is `96.87%`.

[![Impacted file tree graph](https://codecov.io/gh/nilearn/nilearn/pull/1418/graphs/tree.svg?width=650&height=150&src=pr&token=KpYArSdyXv)](https://codecov.io/gh/nilearn/nilearn/pull/1418?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##           master    #1418      +/-   ##
==========================================
- Coverage   94.65%   94.48%   -0.18%     
==========================================
  Files         120      120              
  Lines       14659    14678      +19     
==========================================
- Hits        13876    13869       -7     
- Misses        783      809      +26
```


| [Impacted Files](https://codecov.io/gh/nilearn/nilearn/pull/1418?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [nilearn/datasets/tests/test\_atlas.py](https://codecov.io/gh/nilearn/nilearn/pull/1418?src=pr&el=tree#diff-bmlsZWFybi9kYXRhc2V0cy90ZXN0cy90ZXN0X2F0bGFzLnB5) | `100% <100%> (ø)` | :arrow_up: |
| [nilearn/datasets/atlas.py](https://codecov.io/gh/nilearn/nilearn/pull/1418?src=pr&el=tree#diff-bmlsZWFybi9kYXRhc2V0cy9hdGxhcy5weQ==) | `85.41% <91.66%> (-10.77%)` | :arrow_down: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/nilearn/nilearn/pull/1418?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/nilearn/nilearn/pull/1418?src=pr&el=footer). Last update [6fe6245...0c27090](https://codecov.io/gh/nilearn/nilearn/pull/1418?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",,
8,pull_request_commit,1418,nilearn,nilearn,KamalakerDadi,2017-03-21 17:38:43,ENH: Update Harvard Oxford atlas from 3.3 to 5.0,9df22084c5753cd5b3480afddee054dcdd774438,
9,pull_request_commit,1418,nilearn,nilearn,KamalakerDadi,2017-05-16 09:08:05,Minor: doc improvements & rebase,0c27090f58db7d625c76c4281ee87d1a27eb4fd5,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,1371,nilearn,nilearn,duchesnay,2017-01-30 13:38:47,"Atlas sub-maxprob-thr0-1mm of HarvardOxford.tgz contains incorrect labels.

**1) Fetch** from http://www.nitrc.org/frs/download.php/7700/HarvardOxford.tgz
```
import numpy as np
import nibabel as nib
import nilearn.datasets

atlascort = nilearn.datasets.fetch_atlas_harvard_oxford(""cort-maxprob-thr0-1mm"",
    data_dir=None, symmetric_split=False, resume=True, verbose=1)
atlassub = nilearn.datasets.fetch_atlas_harvard_oxford(""sub-maxprob-thr0-1mm"",
    data_dir=None, symmetric_split=False, resume=True, verbose=1)

atlascort_img_fetch = nib.load(atlascort.maps)
atlassub_img_fetch = nib.load(atlassub.maps)
```

**2) Local** HarvardOxford atlas from FSL
```
atlascort_filename = '/usr/share/data/harvard-oxford-atlases/HarvardOxford/HarvardOxford-cort-maxprob-thr0-1mm.nii.gz'
atlassub_filename = '/usr/share/data/harvard-oxford-atlases/HarvardOxford/HarvardOxford-sub-maxprob-thr0-1mm.nii.gz'

atlascort_img_local = nib.load(atlascort_filename)
atlassub_img_local = nib.load(atlassub_filename)

```
**3) Compare**

```
# cort is OK
assert np.all(np.unique(atlascort_img_local.get_data()) == 
       np.unique(atlascort_img_fetch.get_data()))

# sub cort label image contains errors
assert np.all(np.unique(atlassub_img_local.get_data()) == 
    np.unique(atlassub_img_fetch.get_data())), ""Labels mismatch""

print(np.unique(atlassub_img_local.get_data()))
# [  0.   1.   2.   3.   4.   5.   6.   7.   8.   9.  10.  11.  12.  13.  14.
#  15.  16.  17.  18.  19.  20.  21.]

print(np.unique(atlassub_img_fetch.get_data()))
# [ 0  2  3  4 10 11 12 13 16 17 18 26 41 42 43 49 50 51 52 53 54 58]
```",start issue,nilearn.datasets.fetch_atlas_harvard_oxford: Errors in HarvardOxford.tgz / sub-maxprob-thr0-1mm
2,issue_closed,1371,nilearn,nilearn,GaelVaroquaux,2017-11-16 19:47:10,,closed issue,nilearn.datasets.fetch_atlas_harvard_oxford: Errors in HarvardOxford.tgz / sub-maxprob-thr0-1mm
3,issue_comment,1371,nilearn,nilearn,mrahim,2017-01-30 15:44:14,"Thanks @duchesnay  for spotting this.
According to the header, the atlas on nitrc is outdated (FSL 3.3).
```python
<class 'nibabel.nifti1.Nifti1Header'> object, endian='<'
sizeof_hdr      : 348
data_type       : b''
db_name         : b''
extents         : 0
session_error   : 0
regular         : b'r'
dim_info        : 0
dim             : [  3 182 218 182   1   1   1   1]
intent_p1       : 0.0
intent_p2       : 0.0
intent_p3       : 0.0
intent_code     : none
datatype        : uint8
bitpix          : 8
slice_start     : 0
pixdim          : [-1.  1.  1.  1.  1.  1.  1.  1.]
vox_offset      : 0.0
scl_slope       : nan
scl_inter       : nan
slice_end       : 0
slice_code      : unknown
xyzt_units      : 10
cal_max         : 58.0
cal_min         : 0.0
slice_duration  : 0.0
toffset         : 0.0
glmax           : 0
glmin           : 0
descrip         : b'FSL3.3'
aux_file        : b'MGH-Subcortical'
qform_code      : aligned
sform_code      : aligned
quatern_b       : 0.0
quatern_c       : 1.0
quatern_d       : 0.0
qoffset_x       : 90.0
qoffset_y       : -126.0
qoffset_z       : -72.0
srow_x          : [ -1.   0.   0.  90.]
srow_y          : [   0.    1.    0. -126.]
srow_z          : [  0.   0.   1. -72.]
intent_name     : b''
magic           : b'n+1'
```
",,
4,issue_comment,1371,nilearn,nilearn,mrahim,2017-03-14 10:36:33,I would prefer replacing current archive (3.3) with the newest one.,,
5,issue_comment,1371,nilearn,nilearn,KamalakerDadi,2017-03-13 19:35:06,"Can we fix this by adding an argument called `version` to choose atlas data between 3.3 (current version) and 5.0 (enhancement) ?
This also requires to upload data of version 5.0 to NITRC.",,
6,issue_comment,1371,nilearn,nilearn,GaelVaroquaux,2017-03-14 10:38:16,"> I would prefer replacing current archive (3.3) with the newest one.

Agreed. But I also think that we should stop loading from the local FSL
install, as we are going to keep running in this problem.
",,
7,issue_comment,1371,nilearn,nilearn,KamalakerDadi,2017-03-15 15:27:19," >I would prefer replacing current archive (3.3) with the newest one.
>Agreed. But I also think that we should stop loading from the local FSL
install, as we are going to keep running in this problem.

Ok.",,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,1421,nilearn,nilearn,JohnGriffiths,2017-03-24 20:12:59,,start issue,[stalled] added anterior and posterior view options
2,issue_closed,1421,nilearn,nilearn,GaelVaroquaux,2017-11-17 13:57:40,,closed issue,[stalled] added anterior and posterior view options
3,pull_request_title,1421,nilearn,nilearn,JohnGriffiths,2017-03-24 20:12:59,,e47b92e96ecbce40c8cdc01cae31abcf31625500,[stalled] added anterior and posterior view options
4,issue_comment,1421,nilearn,nilearn,GaelVaroquaux,2017-05-23 10:13:13,"In general, this looks good, but it would be useful if it could be ilustrated in an example. Can you add one example block to an existing example about this.",,
5,issue_comment,1421,nilearn,nilearn,GaelVaroquaux,2017-11-16 20:00:45,"I just realized: for the sake of consistency, these options should also be added to plot_surf_roi and plot_surf_stat_map",,
6,issue_comment,1421,nilearn,nilearn,GaelVaroquaux,2017-11-16 20:09:47,"I am marking this PR as stalled: it needs:

* [ ] the arguments to be added to plot_surf_roi and plot_surf_stat_map
* [ ] usage in an existing example
* [ ] an entry in the whats_new


",,
7,issue_comment,1421,nilearn,nilearn,GaelVaroquaux,2017-11-17 13:57:40,Merged via #1561,,
8,pull_request_commit,1421,nilearn,nilearn,JohnGriffiths,2017-03-24 19:53:21,added anterior and posterior view options,e47b92e96ecbce40c8cdc01cae31abcf31625500,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,1546,nilearn,nilearn,d-van-de-velden,2017-11-10 13:43:35,"Dear nilearn-Team,

I am using your package some months now. Somehow I wasn't able to plot Nifti1 images anymore.
Using and function from `nilearn.plotting` gives me the `AttrributeError: Unknown property facecolor`.

Here is the Traceback:
```
`Traceback (most recent call last):

  File ""<ipython-input-4-01b0b33a2aaf>"", line 4, in <module>
    threshold= stcdata.min(), annotate=True, title='iter _ t=%.2f ms' % (t_in_ms), cmap='n_jet')

  File ""/home/daniel/anaconda2/lib/python2.7/site-packages/nilearn/plotting/img_plotting.py"", line 999, in plot_stat_map
    **kwargs)

  File ""/home/daniel/anaconda2/lib/python2.7/site-packages/nilearn/plotting/img_plotting.py"", line 183, in _plot_img_with_bg
    colorbar=colorbar)

  File ""/home/daniel/anaconda2/lib/python2.7/site-packages/nilearn/plotting/displays.py"", line 513, in init_with_figure
    return cls(cut_coords, axes, black_bg, **kwargs)

  File ""/home/daniel/anaconda2/lib/python2.7/site-packages/nilearn/plotting/displays.py"", line 460, in __init__
    self._init_axes(**kwargs)

  File ""/home/daniel/anaconda2/lib/python2.7/site-packages/nilearn/plotting/displays.py"", line 922, in _init_axes
    facecolor=axisbg, aspect='equal')

  File ""/home/daniel/anaconda2/lib/python2.7/site-packages/matplotlib/figure.py"", line 915, in add_axes
    a = projection_class(self, rect, **kwargs)

  File ""/home/daniel/anaconda2/lib/python2.7/site-packages/matplotlib/axes/_base.py"", line 537, in __init__
    self.update(kwargs)

  File ""/home/daniel/anaconda2/lib/python2.7/site-packages/matplotlib/artist.py"", line 856, in update
    raise AttributeError('Unknown property %s' % k)

AttributeError: Unknown property facecolor`
```

I am hoping you can tell me how to fix this, because I am using your tools very often.

Thanks in advance and greetings,
Daniel

",start issue,Internal AttributeError: Unknown property facecolor
2,issue_closed,1546,nilearn,nilearn,d-van-de-velden,2017-11-14 09:35:12,,closed issue,Internal AttributeError: Unknown property facecolor
3,issue_comment,1546,nilearn,nilearn,KamalakerDadi,2017-11-10 14:09:21,"Along with the version of matplotlib as Gael asked. Could you please also give us some script to reproduce the error ? It would make us easy to see what is going on.
Thanks for the minimal reproducible script.",,
4,issue_comment,1546,nilearn,nilearn,KamalakerDadi,2017-11-10 14:55:11,"Does this helps to you ?
https://github.com/nilearn/nilearn/issues/1269",,
5,issue_comment,1546,nilearn,nilearn,KamalakerDadi,2017-11-14 09:19:23,"Just curious, which matplotlib version have you updated ?",,
6,issue_comment,1546,nilearn,nilearn,KamalakerDadi,2017-11-14 09:19:50,Can you close this issue if everything seems OK ?,,
7,issue_comment,1546,nilearn,nilearn,d-van-de-velden,2017-11-10 14:28:08,"I did ""update"" matplotlib recently. I am using matplotlib 2.0.2 now.
I already solved the problem myself. But somehow another, different Error pops up.

Just by trying to `import nilearn.plotting` the Traceback looks like this

```
from nilearn import plotting
Traceback (most recent call last):

  File ""<ipython-input-18-35cd2f5e057b>"", line 1, in <module>
    from nilearn import plotting

  File ""/home/daniel/anaconda2/lib/python2.7/site-packages/nilearn/plotting/__init__.py"", line 38, in <module>
    from . import cm

  File ""/home/daniel/anaconda2/lib/python2.7/site-packages/nilearn/plotting/cm.py"", line 144, in <module>
    _cmaps_data['ocean_hot'] =  _concat_cmap(_cm.ocean, _cm.hot_r)

  File ""/home/daniel/anaconda2/lib/python2.7/site-packages/nilearn/plotting/cm.py"", line 70, in _concat_cmap
    colors = cmap1(ps)

  File ""/home/daniel/anaconda2/lib/python2.7/site-packages/matplotlib/colors.py"", line 487, in __call__
    cbook._putmask(xa, xa == 1.0, almost_one)

AttributeError: 'module' object has no attribute '_putmask'
```
Unfortunately the minimal reproducible script only contains one line:
`from nilearn import plotting`

Thanks for your assistance,
Daniel",,
8,issue_comment,1546,nilearn,nilearn,d-van-de-velden,2017-11-14 07:27:53,"I don't want to reinstall nilearn, but I will give it a try.
Furthermore, I remind you that the problem is not importing `nilearn.plotting`, but that there is something wrong with a module.",,
9,issue_comment,1546,nilearn,nilearn,d-van-de-velden,2017-11-14 08:32:36,"Solved the problem. 
Since the problem was a false/defect module I went for:
1. Uninstall matplotlib
2. Uninstall nilearn
and then installed all again.
There really was a dependecy issue with nilearn and matplotlib.

Nevertheless, I thank you for your help.",,
10,issue_comment,1546,nilearn,nilearn,d-van-de-velden,2017-11-14 09:35:09,"Everything seems okay. I am using matplotlib version 2.1.0.
",,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,1563,nilearn,nilearn,KamalakerDadi,2017-11-17 09:01:11,Added few missing documenation. Minor cosmetics improvements.,start issue,DOC: Update whats_new deprecated anat_img in plot_prob_atlas
2,issue_closed,1563,nilearn,nilearn,GaelVaroquaux,2017-11-17 21:03:04,,closed issue,DOC: Update whats_new deprecated anat_img in plot_prob_atlas
3,pull_request_title,1563,nilearn,nilearn,KamalakerDadi,2017-11-17 09:01:11,Added few missing documenation. Minor cosmetics improvements.,5fe838f213d09d4e739a942722e8336a75467aa1,DOC: Update whats_new deprecated anat_img in plot_prob_atlas
4,pull_request_merged,1563,nilearn,nilearn,GaelVaroquaux,2017-11-17 21:03:04,DOC: Update whats_new deprecated anat_img in plot_prob_atlas,a941c3dd1be83c6b2001f4f99853cba65340607e,Pull request merge from KamalakerDadi/nilearn:update_doc_whats_new to nilearn/nilearn:master
5,issue_comment,1563,nilearn,nilearn,bthirion,2017-11-17 09:46:46,LGTM,,
6,issue_comment,1563,nilearn,nilearn,codecov[bot],2017-11-17 10:28:45,"# [Codecov](https://codecov.io/gh/nilearn/nilearn/pull/1563?src=pr&el=h1) Report
> Merging [#1563](https://codecov.io/gh/nilearn/nilearn/pull/1563?src=pr&el=desc) into [master](https://codecov.io/gh/nilearn/nilearn/commit/f51a9f6cf8cc8bfd2219a448871210f3299da851?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/nilearn/nilearn/pull/1563/graphs/tree.svg?token=KpYArSdyXv&src=pr&width=650&height=150)](https://codecov.io/gh/nilearn/nilearn/pull/1563?src=pr&el=tree)

```diff
@@           Coverage Diff           @@
##           master    #1563   +/-   ##
=======================================
  Coverage   94.23%   94.23%           
=======================================
  Files         122      122           
  Lines       14992    14992           
=======================================
  Hits        14127    14127           
  Misses        865      865
```


| [Impacted Files](https://codecov.io/gh/nilearn/nilearn/pull/1563?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [nilearn/plotting/img\_plotting.py](https://codecov.io/gh/nilearn/nilearn/pull/1563?src=pr&el=tree#diff-bmlsZWFybi9wbG90dGluZy9pbWdfcGxvdHRpbmcucHk=) | `93.35% <ø> (ø)` | :arrow_up: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/nilearn/nilearn/pull/1563?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/nilearn/nilearn/pull/1563?src=pr&el=footer). Last update [f51a9f6...5fe838f](https://codecov.io/gh/nilearn/nilearn/pull/1563?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",,
7,pull_request_commit,1563,nilearn,nilearn,KamalakerDadi,2017-11-17 08:59:49,DOC: Update whats_new deprecated anat_img in plot_prob_atlas,22399307997dbe3e3d47ed11e7586a6cab3f5991,
8,pull_request_commit,1563,nilearn,nilearn,GaelVaroquaux,2017-11-17 21:02:04,Merge branch 'master' into update_doc_whats_new,818c8b101309f7d244bf95e5dddc925a775a7040,
9,pull_request_commit,1563,nilearn,nilearn,GaelVaroquaux,2017-11-17 21:02:51,Merge branch 'master' into update_doc_whats_new,5fe838f213d09d4e739a942722e8336a75467aa1,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,1562,nilearn,nilearn,GaelVaroquaux,2017-11-17 05:22:54,This is a continuation of #1556 to fix a reference in the docs.,start issue,MRG: Pandas examples (continuation of #1556)
2,issue_closed,1562,nilearn,nilearn,GaelVaroquaux,2017-11-17 21:00:34,,closed issue,MRG: Pandas examples (continuation of #1556)
3,pull_request_title,1562,nilearn,nilearn,GaelVaroquaux,2017-11-17 05:22:54,This is a continuation of #1556 to fix a reference in the docs.,7eceb5eee32cea0b987429621a2ff55958bd85e3,MRG: Pandas examples (continuation of #1556)
4,issue_comment,1562,nilearn,nilearn,KamalakerDadi,2017-11-17 09:28:51,Can you please add into doc/whats_new.rst ?,,
5,issue_comment,1562,nilearn,nilearn,KamalakerDadi,2017-11-17 10:50:45,Can you please also look into doc/manipulating_images/input_output.rst ? at section 5.1.3.3. Text files: phenotype or behavior,,
6,issue_comment,1562,nilearn,nilearn,KamalakerDadi,2017-11-17 11:00:46,"Also, there are very few missed areas:
examples/02_decoding/plot_miyawaki_encoding.py
examples/02_decoding/plot_miyawaki_reconstruction.py",,
7,issue_comment,1562,nilearn,nilearn,KamalakerDadi,2017-11-17 12:44:03,"I don't understand this circleci failure and I don't have precise reason to know why it is failing. I can't reproduce it locally either. 

May be few things, can fix the problem either using `align` to center or `scale` to 25%. Currently it is aligned to right & squeezed and I don't see it very clearly (because it is too small). 

If I remember correctly, I saw similar problem in Decoding PR which is not solved yet.",,
8,issue_comment,1562,nilearn,nilearn,KamalakerDadi,2017-11-17 15:53:07,Great!,,
9,issue_comment,1562,nilearn,nilearn,KamalakerDadi,2017-11-17 19:28:31,LGTM,,
10,issue_comment,1562,nilearn,nilearn,emdupre,2017-11-17 17:27:03,"I've tried to address these comments in #1556, but I haven't updated either of the miyawaki examples:
examples/02_decoding/plot_miyawaki_encoding.py
examples/02_decoding/plot_miyawaki_reconstruction.py
the files that are being loaded here aren't typical use cases for pandas, so I thought it was better to handle them with numpy. ",,
11,issue_comment,1562,nilearn,nilearn,codecov[bot],2017-11-17 14:19:14,"# [Codecov](https://codecov.io/gh/nilearn/nilearn/pull/1562?src=pr&el=h1) Report
> Merging [#1562](https://codecov.io/gh/nilearn/nilearn/pull/1562?src=pr&el=desc) into [master](https://codecov.io/gh/nilearn/nilearn/commit/eafd950a64474649af821b32187d6ff79f07a7e1?src=pr&el=desc) will **decrease** coverage by `0.03%`.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/nilearn/nilearn/pull/1562/graphs/tree.svg?token=KpYArSdyXv&width=650&height=150&src=pr)](https://codecov.io/gh/nilearn/nilearn/pull/1562?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##           master    #1562      +/-   ##
==========================================
- Coverage   94.26%   94.23%   -0.04%     
==========================================
  Files         122      122              
  Lines       14984    14992       +8     
==========================================
+ Hits        14125    14127       +2     
- Misses        859      865       +6
```


| [Impacted Files](https://codecov.io/gh/nilearn/nilearn/pull/1562?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [nilearn/decoding/space\_net.py](https://codecov.io/gh/nilearn/nilearn/pull/1562?src=pr&el=tree#diff-bmlsZWFybi9kZWNvZGluZy9zcGFjZV9uZXQucHk=) | `94.69% <ø> (ø)` | :arrow_up: |
| [nilearn/plotting/surf\_plotting.py](https://codecov.io/gh/nilearn/nilearn/pull/1562?src=pr&el=tree#diff-bmlsZWFybi9wbG90dGluZy9zdXJmX3Bsb3R0aW5nLnB5) | `87.27% <0%> (-3.18%)` | :arrow_down: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/nilearn/nilearn/pull/1562?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/nilearn/nilearn/pull/1562?src=pr&el=footer). Last update [eafd950...7eceb5e](https://codecov.io/gh/nilearn/nilearn/pull/1562?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",,
12,pull_request_commit_comment,1562,nilearn,nilearn,KamalakerDadi,2017-11-17 09:43:37,The numpy function `recfromcsv` -> The pandas function `read_csv`,7eceb5eee32cea0b987429621a2ff55958bd85e3,"(1, '', u'doc/building_blocks/manual_pipeline.rst')"
13,pull_request_commit_comment,1562,nilearn,nilearn,KamalakerDadi,2017-11-17 10:11:33,Can you please import numpy at relevant section ? ,7eceb5eee32cea0b987429621a2ff55958bd85e3,"(3, '', u'examples/02_decoding/plot_haxby_full_analysis.py')"
14,pull_request_commit_comment,1562,nilearn,nilearn,KamalakerDadi,2017-11-17 10:34:59,Can you please import numpy at relevant section/cell ? Makes it easier in user guide,7eceb5eee32cea0b987429621a2ff55958bd85e3,"(3, '', u'examples/02_decoding/plot_haxby_searchlight.py')"
15,pull_request_commit_comment,1562,nilearn,nilearn,KamalakerDadi,2017-11-17 10:39:18,"using numpy -> using pandas. Also, can you please import numpy at relevant section ?",7eceb5eee32cea0b987429621a2ff55958bd85e3,"(2, '', u'examples/04_manipulating_images/plot_roi_extraction.py')"
16,pull_request_commit,1562,nilearn,nilearn,emdupre,2017-11-16 16:46:37,Use pandas for behavioral data in examples,987a4a93f98eec5f69c34d62ab92b6e63d5c07bb,
17,pull_request_commit,1562,nilearn,nilearn,emdupre,2017-11-16 20:53:59,Increase readability of behavioral data,48a4af7f2e248d4fe2c2853a3ec7457564da93bc,
18,pull_request_commit,1562,nilearn,nilearn,emdupre,2017-11-16 20:56:32,Update check_X_y to check if classifier,74198407c6962334bd29b57c51fa8e7b73b63b0b,
19,pull_request_commit,1562,nilearn,nilearn,emdupre,2017-11-16 21:35:12,Remove unnecessary imports,3f79b3e10c8808ba036a509982e7bfcaf2b0d271,
20,pull_request_commit,1562,nilearn,nilearn,emdupre,2017-11-16 21:46:24,"Update pd.read_csv args

Updates pd.read_csv calls to use the preferred ""sep"" instead of
""delimiter.""",a387bf1fbca41edb7dc8ac30eb7008ee2d3463ae,
21,pull_request_commit,1562,nilearn,nilearn,emdupre,2017-11-16 21:49:01,"Patches for pd dtypes in example

Patches condition renaming to work with pandas datatype (over old numpy),
converts numpy unique to pandas unique to chip away at numpy dependency.",8a08fbd66d59cd754e51df75c7c0cd9edcb7cc70,
22,pull_request_commit,1562,nilearn,nilearn,GaelVaroquaux,2017-11-17 05:21:03,Fix doc reference,54bd7746fde9bbc23472161db899d90b08811473,
23,pull_request_commit,1562,nilearn,nilearn,GaelVaroquaux,2017-11-17 14:18:52,BUG: fix for latest pandas,7eceb5eee32cea0b987429621a2ff55958bd85e3,
