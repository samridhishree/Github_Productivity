"rectype","issueid","project_owner","project_name","actor","time","text","action","title"
"issue_title","373","idan","oauthlib","jvanasco","2015-08-08 22:47:04","this is mostly targeted at the oauth1 docs.  i haven't gotten into oauth2 yet.

there are 2 rather annoying bits:
1. all the args dealing with tokens use `token`. it would be a lot better if they used terms like `request_token` and `access_token`.  
2. when there are dicts/objects involved, I think it might make more sense to have a package that lists the various 'interfaces' that are expected.  

for example, `save_request_token` in 'request_validator' expects `token` to be a dictionary that includes at least 3 terms.  meanwhile `save_verifier` expects `token` to be a string and implements a `verifier` dict that has several `oauth_` prefixed items.  while it's great that these are documented very well, the repetition of terms and concepts in difference contexts can be very confusing.
","start issue","suggestion: oauth1 docs - more consistent and document 'interfaces'"
"issue_comment","373","idan","oauthlib","jvanasco","2015-08-10 19:52:40","FWIW, I documented/consolidated the objects used in validator.py in the context of an implemented server.  originally i used flask-oauthlib, but it was too messy so just started re-implementing in a pyramid library.

https://gist.github.com/jvanasco/d723b592b7ace14e9b30
","",""
