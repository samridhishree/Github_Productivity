,rectype,issueid,project_owner,project_name,actor,time,text,action,title
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,197,nilearn,nilearn,bthirion,2014-05-28 20:27:20,"Fed up with the two failing tests. The following should fix them hopefully.
",start issue,Fix failures
2,issue_closed,197,nilearn,nilearn,GaelVaroquaux,2014-05-29 13:35:35,,closed issue,Fix failures
3,pull_request_title,197,nilearn,nilearn,bthirion,2014-05-28 20:27:20,"Fed up with the two failing tests. The following should fix them hopefully.
",dd7c34ea3480f2ffd8843171676aaa22b1777bd8,Fix failures
4,pull_request_merged,197,nilearn,nilearn,GaelVaroquaux,2014-05-29 13:35:35,Fix failures,b8f235f0581c0319691f2f50ee660b9fb897c4e7,Pull request merge from bthirion/nilearn:fix_failures to nilearn/nilearn:master
5,issue_comment,197,nilearn,nilearn,GaelVaroquaux,2014-05-28 20:39:07,"Looks good to me. Thanks!

Merging.
",,
6,pull_request_commit,197,nilearn,nilearn,bthirion,2014-05-28 17:54:47,relaxed the numerical constraint in test_signal,5734ed6c1ff01bf729688f0abdcd25d45260d95a,
7,pull_request_commit,197,nilearn,nilearn,bthirion,2014-05-28 17:54:56,more robust test for canica,dd7c34ea3480f2ffd8843171676aaa22b1777bd8,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,199,nilearn,nilearn,GaelVaroquaux,2014-05-29 17:49:12,"My branch better_pca fixes a bunch of stuff in the MultiPCA.
",start issue,Merge in the better_pca branch
2,issue_closed,199,nilearn,nilearn,lesteve,2014-10-08 06:51:13,,closed issue,Merge in the better_pca branch
3,issue_comment,199,nilearn,nilearn,GaelVaroquaux,2014-05-29 18:13:59,"See comments by @AlexandreAbraham : https://github.com/GaelVaroquaux/nilearn/commit/8448c7a3e3851395d91eff10c493c1a3
6d581119#commitcomment-6492427
",,
4,issue_comment,199,nilearn,nilearn,lesteve,2014-10-08 06:48:58,"duplicate of #251 
",,
0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
1,issue_title,174,nilearn,nilearn,eickenberg,2014-03-19 17:42:13,"Status quo:
resample_img will not calculate a new bounding box for the data and will keep exactly the same shape as the original data. This leads, in several cases I have had, to completely empty views on the data. A test will follow.

Proposition:
Act similarly to resample_img given a 3D affine. In this case, this coordinate origin is unknown and nilearn calculates a bounding box around the data and sets the new origin to one corner of this box.
Given a 4D affine, resample_img should also recalculate a bounding box in order to be sure to contain the full data that were to be transformed. However, the coordinate origin should be adopted from the given affine.

How does this sound?
",start issue,"resample_img given 4D affine and no target shape does not ""do the right thing"""
2,issue_closed,174,nilearn,nilearn,eickenberg,2014-05-29 13:40:04,,closed issue,"resample_img given 4D affine and no target shape does not ""do the right thing"""
3,issue_comment,174,nilearn,nilearn,eickenberg,2014-05-29 13:40:04,"Ah, yes. I closed the PR, but not this issue.
",,
