"rectype","issueid","project_owner","project_name","actor","time","text","action","title"
"issue_title","86","pycqa","astroid","pylint-bot","2015-03-27 11:47:59","Originally reported by: **Claudiu Popa (BitBucket: [PCManticore](http://bitbucket.org/PCManticore), GitHub: @PCManticore)**

---

Example:

```
#!python

import six
import lala

class A(six.with_metaclass(object, lala.lala)):
    pass
```

The .mro() for A will be [A], while it should be [A, lala.lala]. The problem is in scoped_nodes.Class._inferred_bases, where the temporary class hack is skipped, without
yielding the metaclass in question.

---
- Bitbucket: https://bitbucket.org/logilab/astroid/issue/85
","start issue","Class.mro doesn't take in account six.with_metaclass"
"issue_closed","86","pycqa","astroid","pylint-bot","2015-12-09 05:53:17","","closed issue","Class.mro doesn't take in account six.with_metaclass"
"issue_comment","86","pycqa","astroid","pylint-bot","2015-03-31 10:41:31","_Original comment by_ **Claudiu Popa (BitBucket: [PCManticore](http://bitbucket.org/PCManticore), GitHub: @PCManticore)**:

---

Proper mro support for six.with_metaclass. Closes issue #85.
","",""
"issue_comment","86","pycqa","astroid","pylint-bot","2015-11-11 15:14:12","_Original comment by_ **Claudiu Popa (BitBucket: [PCManticore](http://bitbucket.org/PCManticore), GitHub: @PCManticore)**:

---

Proper mro support for six.with_metaclass. Closes issue #85.
","",""
