"rectype","issueid","project_owner","project_name","actor","time","text","action","title","provenance","paths","plus_1","urls","issues","userref","code"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-05-05 16:26:10","Merge pull request #144 from matthewlmcclure/fix-doc-string-20130502

Fix a copy-paste-o in a link to RFC 3986","005e0485cee33c167eb6a03c72b0aa0603b1cd0a","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/signature.py""]']","False","[]","[{u'raw': u'#144', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'144', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","jturmel","2014-03-30 21:49:38","Add pyjwt to tox.ini","00790328f3c6e28f49d193411d344703ad376ce7","","api.github.com,git_clone","[u'[""tox.ini""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-05-30 08:54:30","Update references to point to RFC.","00843c732475c914c58d00716262a63666d74b4a","","api.github.com,git_clone","[u'[""oauthlib/oauth2/draft25/__init__.py"", ""oauthlib/oauth2/draft25/grant_types.py"", ""oauthlib/oauth2/draft25/parameters.py"", ""oauthlib/oauth2/draft25/tokens.py"", ""oauthlib/oauth2/draft25/errors.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2017-07-30 06:51:09","Merge pull request #473 from jdufresne/assertequal

Replace all uses of assertEquals with assertEqual","008ebbdebd4c3a0f584ea45007e2581ac71606c2","","api.github.com,git_clone","[u'[""tests/oauth1/rfc5849/test_client.py"", ""tests/oauth1/rfc5849/test_signatures.py""]']","False","[]","[{u'raw': u'#473', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'473', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","mvo5","2012-10-29 08:40:39","add additional tiny test","00afba917616cc1187c2a06c86def64d9fc480f6","","api.github.com,git_clone","[u'[""tests/oauth1/rfc5849/test_client.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","lepture","2013-05-31 09:22:54","add test case for is_secure_transport","00f5de52a8fb944c968213501ccdf1bbc9e751d0","","api.github.com,git_clone","[u'[""tests/oauth2/rfc6749/test_utils.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-06-18 20:23:33","Request token endpoint. #95","012deaf43189fb94a5b7a392ccfb6c15acb03d1e","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/endpoints/request_token.py"", ""tests/oauth1/rfc5849/endpoints/test_request_token.py""]']","False","[]","[{u'raw': u'#95', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'95', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","masci@evonove.it","2013-09-20 23:06:02","added test involving client_authentication_required method","012fbbebcdafa28340ecaf5addb5c1b9da30057b","","api.github.com,git_clone","[u'[""tests/oauth2/rfc6749/grant_types/test_resource_owner_password.py"", ""tests/oauth2/rfc6749/grant_types/test_authorization_code.py"", ""tests/oauth2/rfc6749/grant_types/test_refresh_token.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-03-31 08:59:22","Utility methods for OAuth2","0144e370874e8525b955eb007a90c205e5df7559","","api.github.com,git_clone","[u'[""oauthlib/oauth2_draft25/utils.py"", ""tests/oauth2_draft25/test_utils.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","idan","2012-04-11 09:15:40","PEP8 cleanup","018719878738cf3432a1398cffae29a9f781b327","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/__init__.py"", ""oauthlib/oauth1/rfc5849/utils.py"", ""oauthlib/oauth1/rfc5849/parameters.py"", ""oauthlib/oauth1/rfc5849/signature.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-02-05 22:03:00","Server configurations","01f8fb5c9d5a94fd9cddcd067896d502df8f050d","","api.github.com,git_clone","[u'[""docs/server2.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ondrowan","2013-02-14 22:36:07","Added my little self to AUTHORS","0215a772a8d725244a2cf09b49b237eb3fc418da","","api.github.com,git_clone","[u'[""AUTHORS""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","omerk@checkpoint.com","2017-09-17 11:14:31","Sorted imports.","0218f8da4f6405c6a38ea7e01feacf73b35dd698","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/grant_types/refresh_token.py"", ""oauthlib/oauth2/rfc6749/endpoints/base.py"", ""oauthlib/oauth2/rfc6749/clients/backend_application.py"", ""oauthlib/oauth2/rfc6749/tokens.py"", ""oauthlib/oauth2/rfc6749/utils.py"", ""tests/oauth2/rfc6749/endpoints/test_error_responses.py"", ""tests/oauth1/rfc5849/endpoints/test_request_token.py"", ""tests/oauth2/rfc6749/test_server.py"", ""oauthlib/oauth1/rfc5849/endpoints/resource.py"", ""tests/oauth2/rfc6749/grant_types/test_implicit.py"", ""oauthlib/oauth1/rfc5849/endpoints/authorization.py"", ""oauthlib/uri_validate.py"", ""tests/oauth2/rfc6749/clients/test_web_application.py"", ""tests/oauth2/rfc6749/grant_types/test_resource_owner_password.py"", ""tests/oauth2/rfc6749/grant_types/test_client_credentials.py"", ""oauthlib/oauth1/rfc5849/request_validator.py"", ""tests/oauth1/rfc5849/endpoints/test_access_token.py"", ""oauthlib/oauth2/rfc6749/errors.py"", ""tests/oauth2/rfc6749/endpoints/test_extra_credentials.py"", ""oauthlib/oauth2/rfc6749/parameters.py"", ""oauthlib/oauth2/rfc6749/grant_types/resource_owner_password_credentials.py"", ""tests/oauth1/rfc5849/test_request_validator.py"", ""docs/conf.py"", ""oauthlib/oauth2/rfc6749/clients/mobile_application.py"", ""tests/oauth2/rfc6749/test_parameters.py"", ""oauthlib/oauth1/rfc5849/parameters.py"", ""tests/oauth1/rfc5849/test_parameters.py"", ""tests/oauth1/rfc5849/endpoints/test_resource.py"", ""tests/oauth1/rfc5849/test_client.py"", ""tests/oauth1/rfc5849/endpoints/test_base.py"", ""oauthlib/oauth2/rfc6749/grant_types/authorization_code.py"", ""oauthlib/oauth2/rfc6749/endpoints/authorization.py"", ""tests/oauth2/rfc6749/grant_types/test_authorization_code.py"", ""tests/oauth2/rfc6749/grant_types/test_openid_connect.py"", ""oauthlib/oauth1/rfc5849/signature.py"", ""tests/oauth2/rfc6749/endpoints/test_claims_handling.py"", ""setup.py"", ""oauthlib/oauth2/rfc6749/clients/base.py"", ""oauthlib/oauth2/rfc6749/endpoints/revocation.py"", ""oauthlib/oauth1/rfc5849/endpoints/base.py"", ""oauthlib/oauth1/rfc5849/endpoints/access_token.py"", ""oauthlib/oauth1/rfc5849/endpoints/request_token.py"", ""tests/oauth2/rfc6749/test_utils.py"", ""tests/oauth2/rfc6749/endpoints/test_revocation_endpoint.py"", ""tests/oauth1/rfc5849/endpoints/test_signature_only.py"", ""tests/test_common.py"", ""oauthlib/oauth2/rfc6749/grant_types/base.py"", ""tests/oauth2/rfc6749/test_tokens.py"", ""oauthlib/oauth2/rfc6749/clients/legacy_application.py"", ""tests/oauth2/rfc6749/endpoints/test_client_authentication.py"", ""tests/oauth2/rfc6749/endpoints/test_base_endpoint.py"", ""oauthlib/oauth2/rfc6749/grant_types/client_credentials.py"", ""tests/oauth2/rfc6749/endpoints/test_resource_owner_association.py"", ""tests/oauth2/rfc6749/endpoints/test_credentials_preservation.py"", ""oauthlib/oauth2/rfc6749/grant_types/implicit.py"", ""tests/oauth2/rfc6749/endpoints/test_prompt_handling.py"", ""tests/oauth2/rfc6749/clients/test_base.py"", ""oauthlib/oauth2/rfc6749/endpoints/token.py"", ""tests/oauth2/rfc6749/grant_types/test_refresh_token.py"", ""oauthlib/oauth1/rfc5849/utils.py"", ""oauthlib/oauth2/rfc6749/clients/service_application.py"", ""tests/oauth1/rfc5849/test_utils.py"", ""oauthlib/oauth1/rfc5849/endpoints/pre_configured.py"", ""oauthlib/oauth2/rfc6749/clients/web_application.py"", ""oauthlib/oauth1/rfc5849/endpoints/signature_only.py"", ""tests/oauth1/rfc5849/test_signatures.py"", ""tests/oauth2/rfc6749/endpoints/test_scope_handling.py"", ""oauthlib/oauth1/rfc5849/errors.py"", ""tests/oauth2/rfc6749/test_request_validator.py"", ""tests/oauth2/rfc6749/clients/test_service_application.py"", ""tests/oauth2/rfc6749/clients/test_backend_application.py"", ""oauthlib/oauth2/rfc6749/request_validator.py"", ""tests/oauth1/rfc5849/endpoints/test_authorization.py"", ""oauthlib/oauth2/rfc6749/grant_types/openid_connect.py"", ""oauthlib/oauth2/rfc6749/endpoints/pre_configured.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","eofs","2016-03-11 09:15:02","Allow `/` and `?` characters per RFC 3986 section 3.4 specification.

Fixes #404","028720698e17a61b975acced53fad31e569fe41c","","api.github.com,git_clone","[u'[""oauthlib/common.py""]']","False","[]","[{u'raw': u'#404', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'404', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","calebbrown","2012-04-18 13:14:17","Make prepare_headers return non-unicode strings.

Because there is an assumption that headers are encoding in ASCII,
and because all the parameters are passed through utils.escape anyway
we shouldn't use unicode strings when building the header.

When it was returning unicode strings the base string used to generate
the signature was being double encoded.","028ff8dced3c63365c580345a145a5e997c312d0","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/parameters.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","idan","2012-05-03 05:37:39","0.1.2","029708cea64c6b2a19d28de49b0e0f4ba6cf59ac","","api.github.com,git_clone","[u'[""setup.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2014-04-18 14:42:59","Merge pull request #244 from x746e/master

Unshadowed a test","029c7f2ab19a5dc838dc783abcdf52c7fa2bb337","","api.github.com,git_clone","[u'[""tests/oauth1/rfc5849/test_utils.py"", ""tests/oauth1/rfc5849/endpoints/test_authorization.py""]']","False","[]","[{u'raw': u'#244', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'244', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2014-10-27 16:54:34","Add old commmon.log back.","02ca2ebc36000740e109c4d9c3e7dd01e03c1c7e","","api.github.com,git_clone","[u'[""oauthlib/common.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","marienz","2012-06-06 21:08:12","Use assertItemsEqual to test lists of headers and parameters.

This is cleaner, and makes the tests not depend on dictionary
order (which may change, and is different in pypy).","02ff18492bd147aaaea6b57b7c698536433561fd","","api.github.com,git_clone","[u'[""tests/oauth1/rfc5849/test_signatures.py"", ""tests/oauth1/rfc5849/test_utils.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-11-08 20:57:56","Update test signature, relates to #64","030ed82a25bbe735ab59ad4b55f6e31cb59c9fee","","api.github.com,git_clone","[u'[""tests/oauth1/rfc5849/test_server.py""]']","False","[]","[{u'raw': u'#64', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'64', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2014-10-03 13:31:09","Raise OIDCNoPrompt exception upon authorization if requested.","0348a5731c6324641d0c56abd51107e343d1e94d","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/grant_types/openid_connect.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-06-21 10:30:42","Validator confirm_scopes becomes get_original_scopes. #182, #183","035d46c73ab7feb4719e4642dafc9bb21aa8bd2c","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/grant_types/refresh_token.py"", ""tests/oauth2/rfc6749/test_grant_types.py"", ""oauthlib/oauth2/rfc6749/request_validator.py""]']","False","[]","[{u'raw': u'#182', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'182', u'']}, {u'raw': u'#183', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'183', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-03-15 17:30:16","Filter port based on scheme as suggested by dgouldin","0361b5dda0707f9ce36b55315004ffb86b09ab23","","api.github.com,git_clone","[u'[""oauthlib/signature.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-07-09 15:59:39","Add token_generator param to pre-configured Server. #192.","03735492b33b1ce8ac8a7fb05fcd017d26d443d7","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/endpoints/pre_configured.py""]']","False","[]","[{u'raw': u'#192', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'192', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","idan","2012-04-11 10:04:26","Merge pull request #16 from ib-lundgren/oauth2_utils

Utility methods for OAuth2","03cb39d506d2698f2c3179eddc5a1a60d2b0589f","","api.github.com,git_clone","[u'[""oauthlib/oauth2_draft25/utils.py"", ""tests/oauth2_draft25/test_utils.py""]']","False","[]","[{u'raw': u'#16', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'16', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","idan","2012-03-12 21:27:56","Actually return the value from urlencode","03df2cab13dda1be737d40453056757f4bc2644a","","api.github.com,git_clone","[u'[""oauthlib/utils.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","lepture","2015-07-02 05:51:18","Merge pull request #354 from myyang/fix_missing_attribute

Fix and remove missing attribute: _client","03ea1a11f328a8baaf6ff11777b42e1f90b088e8","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/clients/base.py"", ""tests/oauth2/rfc6749/clients/test_base.py""]']","False","[]","[{u'raw': u'#354', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'354', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-11-17 11:43:38","OAuth2 error types","03f93bd968b2e664c4e1ccd79e48fc3e5d359465","","api.github.com,git_clone","[u'[""oauthlib/oauth2/draft25/errors.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-09-12 18:19:51","Remove dead code for plaintext signature in Client.","03fcc49e15e40412fe4951df0195e8b739fd24f0","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/__init__.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2014-06-25 17:08:15","Include Python 3.4 in tox.ini","04095295e4cf0d49d1f45707f68addeed7704caa","","api.github.com,git_clone","[u'[""tox.ini""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-03-05 20:07:08","Merge pull request #126 from grunskis/master

Fixed issue #125 (Read the docs not generating docs from source)","040f08ab058ef350177582bca42605a18708907c","","api.github.com,git_clone","[u'[""docs/client.rst"", ""docs/conf.py"", ""docs/server.rst""]']","False","[]","[{u'raw': u'#125', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'125', u'']}, {u'raw': u'#126', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'126', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2014-10-27 16:56:50","0.7.3","04631866c058defb480462db1ec13cb7f88780a9","","api.github.com,git_clone","[u'[""oauthlib/__init__.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2017-09-24 13:01:00","Merge pull request #487 from MitterdorferMathias/master

initialization of variable","04959fe009cb2622c7422c736456cdbd36ec43b3","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/errors.py""]']","False","[]","[{u'raw': u'#487', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'487', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-03-24 17:37:09","more merge prep","04f38ecee9c40dc80a7fe15934800ee5067f9b0f","","api.github.com,git_clone","[u'[]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","dgouldin","2012-03-14 05:56:12","Updating tests to reflect changes in handling headers.","05061d81d6348d9066c530ad8174925cef142a83","","api.github.com,git_clone","[u'[""oauthlib/parameters.py"", ""tests/test_signatures.py"", ""tests/test_parameters.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","whit537","2014-09-17 16:19:39","Relax token_type checking","0544857516745f4ba6c9829702253e17c9f77458","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/parameters.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2014-01-20 11:09:23","0.6.1","056e7ce13de4de913af8617891dc92e0ea43c669","","api.github.com,git_clone","[u'[""README.rst"", ""oauthlib/__init__.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2017-03-31 09:03:07","Merge pull request #462 from skion/oidc-errors

Add remaining OIDC errors","0573457a1f32417f9b280b5102a123ee49739bbf","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/errors.py""]']","False","[]","[{u'raw': u'#462', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'462', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-02-23 15:35:35","raise_from_error and a few new errors","05ad7f363a1604a67db5da00d5c0ed9f4dc7d1b2","","api.github.com,git_clone","[u'[""oauthlib/oauth2/draft25/errors.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","squirly","2013-07-26 18:59:50","Added tests.","06a93d1e87ed950138c07ba036554d0d0ddfb87f","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/endpoints/authorization.py"", ""tests/oauth1/rfc5849/endpoints/test_authorization.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","joelstevenson","2016-08-26 23:39:52","Test for membership should be ""not in"", here too.","06c0bd8e2deb7c9c2e4c5d7874bc94c90e334d4d","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/grant_types/openid_connect.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","jdufresne","2017-02-07 02:17:53","Add universal wheel support

See http://pythonwheels.com/

Python wheels provide faster installation for pure Python packages. To upload a
wheel to PyPI use the command:

python setup.py sdist bdist_wheel upload","06c7c58bac102838c46a5bef47e3d1758f7095c0","","api.github.com,git_clone","[u'[""setup.cfg""]']","False","[u'http://pythonwheels.com/']","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2014-06-04 13:28:00","Expose is_secure_transport publicly via ouathlib.oauth2.","06e410d349bf48eb878036ea512485ae79429a5d","","api.github.com,git_clone","[u'[""oauthlib/oauth2/__init__.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","joelstevenson","2016-05-02 18:21:11","Pairing with the previous commit, revert the change related to response_type in AuthorizationEndpoint so that they must appear in the order specified in the spec.  Just keeps the code clean and simple this way.","071ecaf8221fdc8cc2793238f067c78a26e2763d","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/endpoints/authorization.py"", ""oauthlib/oauth2/rfc6749/request_validator.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-09-13 09:54:30","Update README with long overdue OAuth 2 details.","0731fbfe722621663fd2279039a8e8aceaa94e68","","api.github.com,git_clone","[u'[""README.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","masci@evonove.it","2013-09-16 22:31:25","ask validator if client has to be authenticated","07326c9baad1dcc631157f8edfa508066aee6d23","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/grant_types/refresh_token.py"", ""oauthlib/oauth2/rfc6749/grant_types/resource_owner_password_credentials.py"", ""oauthlib/oauth2/rfc6749/grant_types/authorization_code.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-10-04 10:23:01","Populate a unix timestamp expires_at from expires_in in new tokens.","07675eb845f7df88b3b5d19ec848f58401c54c8e","","api.github.com,git_clone","[u'[""tests/oauth2/rfc6749/clients/test_backend_application.py"", ""oauthlib/oauth2/rfc6749/parameters.py"", ""tests/oauth2/rfc6749/clients/test_legacy_application.py"", ""tests/oauth2/rfc6749/test_parameters.py"", ""tests/oauth2/rfc6749/clients/test_web_application.py"", ""tests/oauth2/rfc6749/clients/test_mobile_application.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2014-10-03 13:30:19","Response mode support.","077b4a0516e6975d0ef732262fb8f313f7371094","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/grant_types/implicit.py"", ""oauthlib/oauth2/rfc6749/grant_types/authorization_code.py"", ""oauthlib/oauth2/rfc6749/grant_types/base.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-05-30 11:13:12","Split OAuth2 large modules into smaller ones. #168.","07b2c2bca9b7c0deb24a801841b373198b8a99bf","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/grant_types/refresh_token.py"", ""oauthlib/oauth2/rfc6749/endpoints/base.py"", ""oauthlib/oauth2/rfc6749/clients/backend_application.py"", ""oauthlib/oauth2/rfc6749/endpoints/__init__.py"", ""tests/oauth2/rfc6749/test_server.py"", ""oauthlib/oauth2/rfc6749/__init__.py"", ""oauthlib/oauth2/rfc6749/grant_types/resource_owner_password_credentials.py"", ""oauthlib/oauth2/__init__.py"", ""oauthlib/oauth2/rfc6749/grant_types.py"", ""oauthlib/oauth2/rfc6749/grant_types/authorization_code.py"", ""oauthlib/oauth2/rfc6749/endpoints/authorization.py"", ""oauthlib/oauth2/rfc6749/grant_types/base.py"", ""oauthlib/oauth2/rfc6749/clients/base.py"", ""tests/oauth2/rfc6749/test_client.py"", ""oauthlib/common.py"", ""oauthlib/oauth2/rfc6749/clients/legacy_application.py"", ""oauthlib/oauth2/rfc6749/grant_types/client_credentials.py"", ""oauthlib/oauth2/rfc6749/grant_types/implicit.py"", ""oauthlib/oauth2/rfc6749/endpoints/token.py"", ""oauthlib/oauth2/rfc6749/clients/web_application.py"", ""oauthlib/oauth2/rfc6749/clients/mobile_application.py"", ""oauthlib/oauth2/rfc6749/clients/__init__.py"", ""oauthlib/oauth2/rfc6749/grant_types/__init__.py"", ""oauthlib/oauth2/rfc6749/endpoints/pre_configured.py"", ""oauthlib/oauth2/rfc6749/request_validator.py"", ""oauthlib/oauth2/rfc6749/endpoints/resource.py""]']","False","[]","[{u'raw': u'#168', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'168', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2015-07-25 07:23:37","Bumped version to 1.0.1.","07f50f8b68fb2b93b6ea1c2f553a08df121325d8","","api.github.com,git_clone","[u'[""oauthlib/__init__.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2015-07-01 11:27:56","Merge pull request #350 from cheif/master

Handle empty/non-parsable query strings","08970a85b516fc98d8a67518d33698528deb2512","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/grant_types/implicit.py"", ""oauthlib/oauth2/rfc6749/grant_types/authorization_code.py"", ""tests/oauth2/rfc6749/endpoints/test_error_responses.py""]']","False","[]","[{u'raw': u'#350', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'350', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","idan","2012-03-12 23:59:03","Update parameter tests

* Use a list of 2-tuples for param inputs for consistency
* Add test for authorization headers with garbage extra data","09a7d9aea71e8d4881dc882242085499e775034d","","api.github.com,git_clone","[u'[""tests/test_parameters.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2014-07-06 17:26:19","A few initial OpenID Connect validation methods for silent logins and user matching","09b79fec5943a4ca0ff635b7525c00c07cae40af","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/request_validator.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","georgewhewell","2015-01-27 17:32:06","Lock requirements to specific versions. Use requirements.txt for tox deps.","09e4af26a387b3fce03f3cb1a38c6cff6a6c1af3","","api.github.com,git_clone","[u'[""requirements.txt"", ""tox.ini""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","pydanny","2012-03-13 04:14:46","Test for normalized parameters","09eb08defedb495fae0560498b08aef081b6ecd4","","api.github.com,git_clone","[u'[""tests/test_signatures.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","matthewlmcclure","2013-05-02 03:40:53","Fix defect in choice of authority for signature base string

The spec <http://tools.ietf.org/html/rfc5849#section-3.4.1.2> indicates
that:

    The host and port values MUST match the content of the HTTP
    request ""Host"" header field.

Fixes https://github.com/idan/oauthlib/issues/142","0a1e428802838ea8a965f90edac144dd1f8d719a","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/__init__.py"", ""oauthlib/oauth1/rfc5849/signature.py""]']","False","[u'http://tools.ietf.org/html/rfc5849#section-3.4.1.2', u'https://github.com/idan/oauthlib/issues/142']","[{u'raw': u'https://github.com/idan/oauthlib/issues/142', u'refstyle': u'url', u'parts': [u'idan', u'oauthlib', u'142', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","whit537","2014-09-17 14:33:55","Implement URL-encoding fallback for access tokens","0a21ddfcdd0bfc108d7225d3074d58141259f519","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/parameters.py"", ""tests/oauth2/rfc6749/test_parameters.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-10-25 19:48:00","Redirect users interested in requests to requests","0a57c7c833d17f2a259d954ce065871b17603c9a","","api.github.com,git_clone","[u'[""README.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2014-01-20 10:40:39","Merge pull request #231 from masci/client_credential_contenttype

Wrong Content-Type header returned by client credential grant","0b02436e443eef2309639822cfa76f569801a30f","","api.github.com,git_clone","[u'[""tests/oauth2/rfc6749/grant_types/test_client_credentials.py"", ""oauthlib/oauth2/rfc6749/grant_types/client_credentials.py""]']","False","[]","[{u'raw': u'#231', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'231', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","lepture","2013-07-03 07:15:17","fix test cases for realms","0b0662708d4b27df01e78d076f7f7a482c3c5289","","api.github.com,git_clone","[u'[""tests/oauth1/rfc5849/test_request_validator.py"", ""tests/oauth1/rfc5849/endpoints/test_request_token.py"", ""tests/oauth1/rfc5849/endpoints/test_resource.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-04-26 13:53:23","Moved import to top","0b0705bf18b6451e8d1db3804c42f6ace1c3150c","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/utils.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","lepture","2013-05-29 12:33:22","add badge for coveralls, and fix travis badge","0b15326c8314691c198a016f4566f4c0ccaf8994","","api.github.com,git_clone","[u'[""README.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","x746e","2014-04-15 11:27:59","Move docstrings above `from __future__` imports.

Docstrings are considered as such by python only if they are the first
statement in the file/block.  Even if they are preceded by a
`from __future__` import they are interpreted as just a string.","0bd355c057d99e2df57483519e49198c086c38c1","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/endpoints/base.py"", ""oauthlib/oauth2/rfc6749/clients/backend_application.py"", ""oauthlib/oauth2/rfc6749/tokens.py"", ""oauthlib/oauth2/rfc6749/endpoints/__init__.py"", ""oauthlib/oauth1/__init__.py"", ""oauthlib/oauth2/rfc6749/utils.py"", ""oauthlib/oauth1/rfc5849/endpoints/resource.py"", ""oauthlib/oauth1/rfc5849/endpoints/authorization.py"", ""oauthlib/uri_validate.py"", ""oauthlib/oauth1/rfc5849/__init__.py"", ""oauthlib/oauth1/rfc5849/request_validator.py"", ""oauthlib/oauth2/rfc6749/__init__.py"", ""oauthlib/oauth2/__init__.py"", ""oauthlib/oauth1/rfc5849/parameters.py"", ""oauthlib/oauth2/rfc6749/endpoints/authorization.py"", ""oauthlib/oauth1/rfc5849/signature.py"", ""oauthlib/oauth2/rfc6749/clients/base.py"", ""oauthlib/oauth2/rfc6749/endpoints/revocation.py"", ""oauthlib/oauth1/rfc5849/endpoints/base.py"", ""oauthlib/oauth1/rfc5849/endpoints/access_token.py"", ""oauthlib/oauth1/rfc5849/endpoints/request_token.py"", ""oauthlib/common.py"", ""oauthlib/oauth2/rfc6749/clients/legacy_application.py"", ""oauthlib/oauth2/rfc6749/endpoints/token.py"", ""oauthlib/oauth1/rfc5849/utils.py"", ""oauthlib/oauth2/rfc6749/clients/web_application.py"", ""oauthlib/oauth2/rfc6749/clients/mobile_application.py"", ""oauthlib/oauth2/rfc6749/clients/__init__.py"", ""oauthlib/oauth2/rfc6749/endpoints/resource.py"", ""oauthlib/oauth2/rfc6749/parameters.py"", ""oauthlib/oauth2/rfc6749/endpoints/pre_configured.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-02-19 19:25:55","Invalid scope check","0c38a6a17405166a15d886b4f1a04600e704d71a","","api.github.com,git_clone","[u'[""tests/oauth2/draft25/test_servers.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","hoylen","2017-01-26 00:55:42","Only log signature base string when verification fails.","0c7c8fb2e0e331d7e1460f2c6476a425abf395eb","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/signature.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","xiaohanyu","2015-12-18 04:40:50","Fix typo in README.rst","0cb3857cb5a193489d20a40b480bb142fc8e12ec","","api.github.com,git_clone","[u'[""README.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2016-04-11 08:44:40","Coverage should be pinned for Python 3.2.","0ccdb98ebcfd42a74c8898b7999a7b0ba2979b1f","","api.github.com,git_clone","[u'[""requirements-test32.txt""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","bootandy","2015-03-03 21:10:17","InvalidRequestError is oauth1 not oauth2","0d2a7755a7ce0b1c981bd79de20e6aec0018856b","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/endpoints/base.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","idan","2012-03-13 18:20:31","Whitespace and PEP8 cleanup","0d36fa77a3aa0e74007d2874c0353379012e6605","","api.github.com,git_clone","[u'[""tests/test_signatures.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","whit537","2014-09-17 15:10:03","Support expires as an alias for expires_in","0d87ea236379023aa646a91df21e52c1c674dd6a","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/parameters.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","idan","2012-03-12 22:40:55","Stub test harness out","0e7040ac579d9a657571bebc2ca8ebd5eec20ca6","","api.github.com,git_clone","[u'[""tests/__init__.py"", ""tests/parameters.py"", ""tests/unittest/__init__.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","idan","2012-05-01 19:51:10","Fix unicode leaks

Wrap stdlib quote, unquote, urlencode in versions that protect the
internal usage of unicode. All data going out is encoded as UTF-8, and
the results are read back in and decoded from UTF-8.","0e92aeb000115674144c7af82d43329418205e40","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/__init__.py"", ""oauthlib/oauth1/rfc5849/parameters.py"", ""tests/oauth1/rfc5849/test_parameters.py"", ""oauthlib/common.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-02-11 23:34:27","0.3.7","0e9f5e504fad3ecfcdbcba301e72160844fcc18e","","api.github.com,git_clone","[u'[""setup.py"", ""README.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-09-19 08:55:18","API Docs for token_expires_in. Fix #211.","0f740d0989ab16c182e8303a711d9eb488331673","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/endpoints/pre_configured.py""]']","False","[]","[{u'raw': u'#211', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'211', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","joelstevenson","2016-04-26 18:15:54","Merge branch 'openid_connect' of https://github.com/joelstevenson/oauthlib into openid_connect","0fee646124b4af3cdf16189c64ac64777bc1c919","","api.github.com,git_clone","[u'[""tests/oauth2/rfc6749/test_server.py"", ""oauthlib/oauth2/rfc6749/grant_types/authorization_code.py"", ""oauthlib/oauth2/rfc6749/endpoints/authorization.py"", ""oauthlib/oauth2/rfc6749/grant_types/base.py"", ""oauthlib/oauth2/rfc6749/grant_types/openid_connect.py"", ""oauthlib/oauth2/rfc6749/grant_types/implicit.py"", ""oauthlib/oauth2/rfc6749/endpoints/pre_configured.py""]']","False","[u'https://github.com/joelstevenson/oauthlib']","[]","[]","[]"
"commit_messages","","idan","oauthlib","kevinv@aweber.com","2017-02-23 20:26:36","Update proxy keys on CaseInsensitiveDict.update()","10308ccdf1d6fc92cfed8a3b25779e7cbb73f9b0","","api.github.com,git_clone","[u'[""tests/test_common.py"", ""oauthlib/common.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2017-07-30 06:50:34","Merge pull request #474 from jdufresne/bytes-warnings

Fix BytesWarning issued when using a string placeholder for bytes object","103a9519a288b5fe3142bbb2cc456e5560ba29f8","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/utils.py""]']","False","[]","[{u'raw': u'#474', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'474', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-11-17 12:57:02","Unicode and import fixes","105b8a503480b7e5066ff3286d2ccc104cf021de","","api.github.com,git_clone","[u'[""oauthlib/oauth2/draft25/__init__.py"", ""oauthlib/oauth2/draft25/grant_types.py"", ""oauthlib/oauth2/draft25/errors.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","dgouldin","2012-09-07 17:51:00","Adding initial set of authorization server tests against redirect uri construction. Actual implementation is yet to be done so tests fail.","10952e0226666bd6d408346a2295667f72f6eb56","","api.github.com,git_clone","[u'[""oauthlib/oauth2/draft25/__init__.py"", ""tests/oauth2/draft25/test_server.py"", ""oauthlib/oauth2/draft25/exceptions.py"", ""oauthlib/oauth2/__init__.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-06-29 11:59:29","Only add not None extra values","10c5896005de940c0c6f85834b0e4560daf1744d","","api.github.com,git_clone","[u'[""oauthlib/oauth2/draft25/parameters.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2015-07-01 09:42:36","Merge pull request #351 from myyang/fix_typo

Fix redirect_url typo and add test cases for function.","110d96bc529771ad200d190e1560531665c052fa","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/clients/base.py"", ""tests/oauth2/rfc6749/clients/test_base.py"", ""tests/oauth2/rfc6749/clients/test_web_application.py""]']","False","[]","[{u'raw': u'#351', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'351', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-08-03 18:57:00","Merge pull request #201 from squirly/#200

OAuth2 API cleanup to match OAuth1. Proposal for Issue #200","1122945efbf3d1be6fed0e2279dfb81f785ad706","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/grant_types/refresh_token.py"", ""oauthlib/oauth2/rfc6749/__init__.py"", ""oauthlib/oauth2/rfc6749/grant_types/resource_owner_password_credentials.py"", ""oauthlib/oauth2/rfc6749/endpoints/base.py"", ""tests/oauth2/rfc6749/test_servers.py"", ""oauthlib/oauth2/rfc6749/grant_types/client_credentials.py"", ""tests/oauth2/rfc6749/test_grant_types.py"", ""docs/oauth2/endpoints.rst"", ""oauthlib/oauth2/rfc6749/grant_types/authorization_code.py"", ""tests/oauth2/rfc6749/test_server.py"", ""docs/oauth2/server.rst"", ""oauthlib/oauth2/rfc6749/grant_types/implicit.py""]']","False","[]","[{u'raw': u'#200', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'200', u'']}, {u'raw': u'#201', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'201', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-01-15 20:45:19","Merge pull request #93 from russss/master

OAuth 1 implementation uses a nonexistent dummy_resource_owner","11580381ce36a7e1a601e3881562da5c59eb9633","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/__init__.py"", ""tests/oauth1/rfc5849/test_server.py""]']","False","[]","[{u'raw': u'#93', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'93', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","pydanny","2012-03-13 21:38:50","Adding a test for nonce generation","1181c96410108ac6f3ac93843c37c1e4e1735c49","","api.github.com,git_clone","[u'[""tests/test_utils.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","omerk@checkpoint.com","2017-09-07 10:50:53","Bump version to 2.0.3.","122b51c72a78aad249ee6547d89f8bc0a06fd9b3","","api.github.com,git_clone","[u'[""CHANGELOG.rst"", ""oauthlib/__init__.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","lepture","2013-05-24 13:43:43","add coveralls","122d1a6c4b6e34f3cec447ec8b2577a3f627cdfd","","api.github.com,git_clone","[u'["".travis.yml""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-02-18 18:00:22","Python 3 import fix.","126167b5a4a74072270c8b0a40d8e5f54c0b5f3f","","api.github.com,git_clone","[u'[""tests/oauth2/draft25/test_servers.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","idan","2012-04-11 10:09:32","PEP8 cleanup and fix OAuth2 import paths","13215507f611abc3409d57e3910787bcf3b297c2","","api.github.com,git_clone","[u'[""tests/oauth2/draft25/test_tokens.py"", ""oauthlib/oauth2/draft25/utils.py"", ""tests/oauth2/draft25/test_utils.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-04-30 00:53:08","Toxification step 1 #25","136ac665894e4d00ecb7481b8cfc704074a303d4","","api.github.com,git_clone","[u'[""tox.ini""]']","False","[]","[{u'raw': u'#25', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'25', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2016-06-01 12:55:06","Include changelog in release tar. Fixes #421.","13905ac61bacc28de4591d5c374e9a70a762d6d2","","api.github.com,git_clone","[u'[""MANIFEST.in""]']","False","[]","[{u'raw': u'#421', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'421', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","lepture","2013-05-31 11:59:09","another debug-mode. #170","13d78662ee023b201d4c954c51b2e3071aa7026e","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/clients/base.py""]']","False","[]","[{u'raw': u'#170', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'170', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-11-01 20:35:24","Merge pull request #60 from mvo5/master

Add ""realm"" to the client","13d7f9c50ce387aeb6fcc395baf3e0101a2a0fca","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/__init__.py"", ""tests/oauth1/rfc5849/test_client.py"", ""AUTHORS""]']","False","[]","[{u'raw': u'#60', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'60', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2014-05-28 13:20:42","Pass request object to oauth1.Client.get_oauth_params.

This makes it much easier to do interesting client customisations which
require extra OAuth params to be included in the signature calculation
as well as in the authorization header.","14061935013ae20f58995dd2918c009166010bbc","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/__init__.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","jdufresne","2017-10-24 13:14:47","Include license file in the generated wheel package (#494)

The wheel package format supports including the license file. This is
done using the [metadata] section in the setup.cfg file. For additional
information on this feature, see:

https://wheel.readthedocs.io/en/stable/index.html#including-the-license-in-the-generated-wheel-file","14215244249f2d8df73ec47dbab5db1efd0fc2f4","","api.github.com,git_clone","[u'[""setup.cfg""]']","False","[u'https://wheel.readthedocs.io/en/stable/index.html#including-the-license-in-the-generated-wheel-file']","[{u'raw': u'#494', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'494', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","johanmeiring","2013-03-26 14:18:30","Fixes inconsistencies between docs and code","146cccff5131dc3a6f7de95faa286c4cb4ef2385","","api.github.com,git_clone","[u'[""oauthlib/oauth2/ext/django.py"", ""oauthlib/oauth2/draft25/grant_types.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","brettcannon","2017-06-13 17:20:44","Use SVG badges in README

They look nicer than the PNG versions.","14c4673eb933be7e49254fad77af0c96add7c231","","api.github.com,git_clone","[u'[""README.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","jturmel","2014-03-23 04:05:53","Move setup.py requirements

* Moved requires for cryptotoken changes so that you don't have to install
  the dependencies if you aren't going to use cryptotokens","14f687b7355df142ea76145dea53bcbe7d012fdc","","api.github.com,git_clone","[u'[""setup.py"", ""oauthlib/common.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","dahlia","2013-05-24 13:28:32","Add optional expires_in parameter to BearerToken

The expires_in is still 3600 by default.","14fffb8dc1c6a3fabf35bc74c3032abcae402a67","","api.github.com,git_clone","[u'[""tests/oauth2/draft25/test_grant_types.py"", ""tests/oauth2/draft25/test_server.py"", ""oauthlib/oauth2/draft25/tokens.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","stephane","2013-05-06 12:32:25","Fix wrong offsets in ASCII art","152457dc0c606021ca85a154fcdc8a8c33b63073","","api.github.com,git_clone","[u'[""oauthlib/oauth2/draft25/grant_types.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-06-18 20:31:34","Convenience imports for the new OAuth 1 provider.","1571f0bbb3a22bdc70172246ac0a54793b538464","","api.github.com,git_clone","[u'[""oauthlib/oauth1/__init__.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-01-30 19:41:38","Rename django oauth2 decorator to avoid nosetest confusion","15800cce3f5f4174f0c33e2cc6383e6bea15d0cb","","api.github.com,git_clone","[u'[""oauthlib/oauth2/ext/django.py"", ""oauthlib/oauth2/ext/django/__init__.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-05-31 09:28:53","Merge pull request #171 from lepture/doc-mistakes

docstring fix","15a5f0aa12338078157b719b67a5555f22080d5b","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/request_validator.py""]']","False","[]","[{u'raw': u'#171', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'171', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-11-17 11:39:43","Add params to fragment","15d98b0122db2c552d428eacbd38124a2b7e8675","","api.github.com,git_clone","[u'[""oauthlib/common.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-09-12 10:42:43","PEP8 cleanup of test_signatures.","1640640d756b4cdf9ced2d3df0ad0015670616d9","","api.github.com,git_clone","[u'[""tests/oauth1/rfc5849/test_signatures.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2014-07-06 17:26:49","Add token modifier and save to refresh token grant as well.","16566e35a535edf99b1d2dd5fcf4386b85c4a414","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/grant_types/refresh_token.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2015-05-23 17:38:12","Merge pull request #332 from tilgovi/patch-1

Add link to pyramid-oauthlib","16cd3b255b2c86ec7da412357cad899c72d8dbf7","","api.github.com,git_clone","[u'[""README.rst""]']","False","[]","[{u'raw': u'#332', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'332', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-11-01 09:17:24","Merge pull request #218 from edevil/ReturnRequest

Include the request object in the returned dict","170d04e87489fb338e660d8248873908037db6ae","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/grant_types/implicit.py"", ""oauthlib/oauth2/rfc6749/grant_types/authorization_code.py""]']","False","[]","[{u'raw': u'#218', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'218', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","idan","2012-03-13 00:08:53","Unicode all the params. Add test for prepare_form_encoded_body.","17d904d752de07df4dbba876a71e35a8b0457aa6","","api.github.com,git_clone","[u'[""tests/test_parameters.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","dgouldin","2012-04-24 16:03:00","Merge remote-tracking branch 'origin/master'

Conflicts:
	oauthlib/oauth1/rfc5849/signature.py","183353d029f5f6dfad0bc3b3682ba811b3838de3","","api.github.com,git_clone","[u'[""docs/client.rst"", ""oauthlib/oauth1/rfc5849/utils.py"", ""oauthlib/common.py"", ""tests/test_common.py"", ""oauthlib/oauth1/rfc5849/parameters.py"", ""tests/oauth1/rfc5849/test_parameters.py"", ""oauthlib/oauth1/rfc5849/signature.py"", ""oauthlib/oauth1/rfc5849/__init__.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","lepture","2013-11-04 03:24:15","Add meta info in oauthlib module","1846ebff5c71a8c3bb0c9cccd29460f656f5a21b","","api.github.com,git_clone","[u'[""oauthlib/__init__.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-06-25 12:31:58","0.2.0","184db924c5b3f208a3e34432e38a253ab4ed8d6d","","api.github.com,git_clone","[u'[""setup.py"", ""README.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-03-25 14:27:29","Two ways to validate scope on resource access.","1851681fe31e06381f7d311864676c2e8585eaf8","","api.github.com,git_clone","[u'[""oauthlib/oauth2/draft25/grant_types.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","lepture","2015-11-13 01:20:05","Add request token for OAuth 1","192f0f963cfaf90668aca983db04dce11d639b47","","api.github.com,git_clone","[u'[""oauthlib/common.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-02-07 22:28:46","Merge pull request #105 from andreif/master

Use absolute import in Django extension fixing self-import.","19324c0303c98b71d559105729ce929ce615da72","","api.github.com,git_clone","[u'[""docs/server2.rst"", ""oauthlib/oauth2/ext/django.py""]']","False","[]","[{u'raw': u'#105', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'105', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","dasevilla","2014-05-09 19:02:37","Use a more specific env variable for insecure transports","196450140fcff0692eb9c31e85f79df017ff2316","","api.github.com,git_clone","[u'[""tests/oauth2/rfc6749/test_utils.py"", ""oauthlib/oauth2/rfc6749/utils.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-02-23 15:37:25","Use new errors, expires_at and require https","19a752b8fd494c190f6f53fe3aa64ff8dd490f79","","api.github.com,git_clone","[u'[""oauthlib/oauth2/draft25/__init__.py"", ""tests/oauth2/draft25/test_client.py"", ""oauthlib/oauth2/draft25/parameters.py"", ""tests/oauth2/draft25/test_parameters.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-09-17 14:18:12","Merge branch 'master' of https://github.com/idan/oauthlib","1a06325edb3dd2ea083827e30f92544cc69db5f0","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/tokens.py""]']","False","[u'https://github.com/idan/oauthlib']","[]","[]","[]"
"commit_messages","","idan","oauthlib","joelstevenson","2016-05-02 18:24:38","Minor cleanup","1a186cec18a503ee2f26026138a5614fb582e46f","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/endpoints/authorization.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","idan","2012-04-24 06:43:19","Render request before collecting parameters

Otherwise OAuth parameters aren't collected, duh.","1a359904f43b1537fcbb9d4c802f657262e5196b","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/__init__.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","RodneyRichardson","2014-10-07 14:13:40","Pick up state from request, if not specified.","1a7227df037ba7c36548997a7948b6f12ee7c591","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/errors.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-10-23 19:47:42","Post merge fix","1a8e59f6889f79f4280d49284dabdac8bee003c4","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/parameters.py"", ""oauthlib/oauth1/rfc5849/__init__.py"", ""tests/unittest/__init__.py"", ""oauthlib/oauth2/draft25/parameters.py"", ""oauthlib/oauth2/draft25/tokens.py"", ""oauthlib/oauth2/__init__.py"", ""oauthlib/oauth1/__init__.py"", ""tests/oauth1/rfc5849/test_parameters.py"", ""oauthlib/oauth2/draft25/utils.py"", ""oauthlib/oauth1/rfc5849/signature.py"", ""tests/oauth2/draft25/test_tokens.py"", ""setup.py"", ""oauthlib/common.py"", ""oauthlib/oauth2/draft25/__init__.py"", ""tests/test_common.py"", ""tests/oauth2/draft25/test_parameters.py"", ""tests/oauth2/draft25/test_client.py"", ""oauthlib/oauth2/draft25/exceptions.py"", ""oauthlib/oauth1/rfc5849/utils.py"", ""tests/oauth1/rfc5849/test_utils.py"", ""tests/oauth1/rfc5849/test_signatures.py"", ""tests/oauth2/draft25/test_utils.py"", ""tests/oauth1/rfc5849/test_server.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","johanmeiring","2013-04-02 17:05:05","Fixes further validator inconsistencies","1a900daf2e9a1ebb9852d5ab3669fdb4c0b16d2b","","api.github.com,git_clone","[u'[""oauthlib/oauth2/draft25/grant_types.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-06-18 20:28:15","Resource token endpoint. #95","1a972155fe1e678f44e08e7a355e87160d789160","","api.github.com,git_clone","[u'[""tests/oauth1/rfc5849/endpoints/test_resource.py"", ""oauthlib/oauth1/rfc5849/endpoints/resource.py""]']","False","[]","[{u'raw': u'#95', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'95', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","majidfn","2013-12-23 20:21:41","Just a Typo in the headers

Instead of the Content-Type it was mentioned Authorization.","1ae5fd02be7683c2121a37ee120b44fbe9aa86d0","","api.github.com,git_clone","[u'[""docs/oauth1/client.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","idan","2012-05-01 20:01:45","Remove dead code","1aebdfcfe222274a56780969ff5d7edcfded013f","","api.github.com,git_clone","[u'[""oauthlib/common.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2015-08-10 08:26:02","Merge pull request #371 from SONIFI/master

Python3 fix: encodes request body before hashing","1b0de72791f939f145500e7a2ff98af9cb074e9e","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/__init__.py""]']","False","[]","[{u'raw': u'#371', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'371', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","kumy","2013-07-24 13:51:05","Add star to the set of safe characters in urls","1b40aa17f9ff3db1df05b97725a8d4043b0b261e","","api.github.com,git_clone","[u'[""tests/test_common.py"", ""oauthlib/common.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2014-07-06 17:26:19","A few initial OpenID Connect validation methods for silent logins and user matching","1b4bc8a9bac3be2aab6c33b7d56f4cbd6370404b","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/request_validator.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-06-25 12:27:36","Huge server update","1b9474a212fac1a673d38c85d59400a5190182fd","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/__init__.py"", ""tests/oauth1/rfc5849/test_server.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","idan","2012-03-13 19:03:38","Merge branch 'master' of github.com:idangazit/oauthlib","1ba63673e8085019b8761f8da5b8e21dcac022d7","","api.github.com,git_clone","[u'[""tests/test_signatures.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-09-13 09:46:11","Add OAuth 1 access token endpoint validator method invalidate_request_token. Fix #202.","1bcca7e395fda2deb344ee0d5db534d8f55ce023","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/request_validator.py"", ""tests/oauth1/rfc5849/endpoints/test_access_token.py"", ""oauthlib/oauth1/rfc5849/endpoints/access_token.py""]']","False","[]","[{u'raw': u'#202', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'202', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","josephtate","2015-04-13 16:20:27","Allow tuples for list_to_scope and scope_to_list in addition to sets and lists.  Treat sets the same as lists/tuples instead of recursing, add tests for sets.","1be2f1cde1ee003d33f5445bb60642801ff7102b","","api.github.com,git_clone","[u'[""tests/oauth2/rfc6749/test_utils.py"", ""oauthlib/oauth2/rfc6749/utils.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","pydanny","2012-03-12 22:41:48","Bigger git ignore","1bf095711b4eff0ebec22855f586027fd5479372","","api.github.com,git_clone","[u'["".gitignore""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2017-06-15 10:45:59","Merge pull request #480 from orenmazor/wrong_url_error

redirect_uri mismatch","1c38f099f38858d6a659641613fb7e2f32161bbb","","api.github.com,git_clone","[u'[""tests/oauth2/rfc6749/endpoints/test_credentials_preservation.py"", ""oauthlib/oauth2/rfc6749/grant_types/authorization_code.py"", ""tests/oauth2/rfc6749/endpoints/test_error_responses.py"", ""tests/oauth2/rfc6749/grant_types/test_authorization_code.py""]']","False","[]","[{u'raw': u'#480', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'480', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","pydanny","2012-03-13 20:02:53","added test for filtered oauth params","1c43019f3f4efb88e4f67a54aa5e00dd1a3e63f0","","api.github.com,git_clone","[u'[""tests/test_utils.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-06-18 20:30:13","Refactor old Server into a base request validator. #95","1c900c97d6f713244430856404b7ca7163f9c682","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/request_validator.py""]']","False","[]","[{u'raw': u'#95', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'95', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2016-04-11 09:32:40","Merge pull request #411 from idan/slots

Use slots for token bearer + Fix the build","1cc0df53c217107341fc9b9234311c919c2d9246","","api.github.com,git_clone","[u'[""tox.ini"", ""oauthlib/oauth2/rfc6749/tokens.py"", ""requirements.txt"", "".travis.yml"", ""requirements-test.txt"", ""requirements-test32.txt""]']","False","[]","[{u'raw': u'#411', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'411', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2014-10-01 13:58:19","New validator method get_auth_code_scopes.","1ce0a4fe77413633c1b6d701aae0c94c220b4713","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/request_validator.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-11-16 14:13:07","Merge pull request #71 from tomchristie/master

Tweak README as requested in #70.","1cebe76d272e289b8922a427d99418948c7a478d","","api.github.com,git_clone","[u'[""README.rst""]']","False","[]","[{u'raw': u'#70', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'70', u'']}, {u'raw': u'#71', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'71', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2014-05-27 13:06:17","Merge pull request #249 from dasevilla/insecure-uris

Use a more specific env variable for insecure transports","1d9dd252a0761be7cfbce5ef0c0f749d963b35d4","","api.github.com,git_clone","[u'[""tests/oauth2/rfc6749/test_utils.py"", ""oauthlib/oauth2/rfc6749/utils.py""]']","False","[]","[{u'raw': u'#249', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'249', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-02-23 15:38:45","0.3.8","1da50150c508ae96c7f05cdf4ab987cb5611034c","","api.github.com,git_clone","[u'[""setup.py"", ""README.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","lepture","2017-10-18 15:09:25","Try another way to fix travis","1dcea0406affbcbf28e6e8f4a5307adf6bca46d1","","api.github.com,git_clone","[u'["".travis.yml""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","dgouldin","2012-03-31 23:40:40","Merge pull request #15 from ib-lundgren/oauth2_namespace

OAuth 2 draft 25 initial","1de3a7f69a7da291cb85c92e3c3b416af70bc4e4","","api.github.com,git_clone","[u'[""oauthlib/oauth2_draft25/__init__.py"", ""tests/oauth2_draft25/__init__.py""]']","False","[]","[{u'raw': u'#15', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'15', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2014-06-06 10:50:33","Rename crypto token to signed token in setup.","1e36ed9a9d18c8f97df61975fb4f91fb2affa276","","api.github.com,git_clone","[u'[""setup.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-02-03 16:21:55","Grant type validation and scope check refactor","1e76fb32b405f13b4f9705788d42900e4bd94b07","","api.github.com,git_clone","[u'[""oauthlib/oauth2/draft25/grant_types.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2015-07-19 10:18:45","Merge pull request #357 from idan/new-version-release-notes

Updated release notes","1e7f47188dde3e83759a8be9770dee598f9281d0","","api.github.com,git_clone","[u'[""CHANGELOG.rst""]']","False","[]","[{u'raw': u'#357', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'357', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-09-19 14:30:19","Add installation instructions for pypi, github and a few OSs. Fix #77.","1ebfebaaa68a45e878049d57a0cdc1db4c6c7c13","","api.github.com,git_clone","[u'[""docs/installation.rst"", ""docs/oauth2/preconfigured_servers.rst"", ""docs/index.rst""]']","False","[]","[{u'raw': u'#77', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'77', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-09-19 14:43:25","Add supported versions and platforms to docs.","1eca3219ccf292b695381f956642e0130882651f","","api.github.com,git_clone","[u'[""docs/feature_matrix.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-06-13 15:34:09","Move shared functionality (#30)","1edaaf2f5e92744e4fd06c908e507a47279b3db9","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/utils.py"", ""tests/oauth1/rfc5849/test_utils.py"", ""oauthlib/common.py"", ""tests/test_common.py"", ""tests/oauth2/draft25/test_utils.py"", ""oauthlib/oauth2/draft25/utils.py"", ""oauthlib/oauth1/rfc5849/__init__.py"", ""oauthlib/oauth2/draft25/tokens.py""]']","False","[]","[{u'raw': u'#30', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'30', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","masci","2015-07-20 09:38:10","add token_type_hint to the list of default Request params","1ee0003814a5f89090f59802cbcccdb1e9f0938d","","api.github.com,git_clone","[u'[""tests/oauth2/rfc6749/endpoints/test_revocation_endpoint.py"", ""oauthlib/common.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-03-31 08:51:24","OAuth 2 draft 25 initial","1f0a93f4ed8afedd3ea7c4e6510f23d5ebddd4e7","","api.github.com,git_clone","[u'[""oauthlib/oauth2_draft25/__init__.py"", ""tests/oauth2_draft25/__init__.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","calebbrown","2012-04-18 11:51:58","Fix a bug in oauth1.signature.collect_parameters preventing unescaping.","1f292e6923aa9419d28e3700e22102dffd447886","","api.github.com,git_clone","[u'[""tests/oauth1/rfc5849/test_server.py"", ""oauthlib/oauth1/rfc5849/signature.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-03-24 17:27:23","signature -> request_signature","1f4697bd02cd37eed49c425f776c122afd350e03","","api.github.com,git_clone","[u'[""oauthlib/oauth.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","al-the-x","2014-03-25 21:55:20","Allowing custom signature methods to be registered and used...

The ""PIZZA"" signature method signs all requests with the string ""PIZZA"" as a trivial example of a custom signing method.","1fa7cf1823faa477b88e6b62e80a4e13dbd48809","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/__init__.py"", ""tests/oauth1/rfc5849/test_client.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","masci","2014-01-19 22:58:24","return application/json content type in case of error","200055490ad0dae5f5618df0f090cbaa08d844c9","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/grant_types/client_credentials.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2014-10-01 12:58:21","Merge pull request #275 from DavidMuller/resource_owner_password_credential_grant_optional_refresh_token

Resource owner password credential grant optional refresh token","201f9f00ff176c6105142d63b33c85127983b011","","api.github.com,git_clone","[u'[""tests/oauth2/rfc6749/grant_types/test_resource_owner_password.py"", ""oauthlib/oauth2/rfc6749/grant_types/resource_owner_password_credentials.py""]']","False","[]","[{u'raw': u'#275', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'275', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","pydanny","2012-03-13 18:31:06","Fix tests that got broken","2030553574453019ac43efa387465004e7173c41","","api.github.com,git_clone","[u'[""tests/test_signatures.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2015-10-25 11:11:52","Merge pull request #385 from julienmeyer/master

Add ( and ) in urlencoded safe characters","205d940383fef28af02ec5aa198fe352f78295a8","","api.github.com,git_clone","[u'[""tests/test_common.py"", ""oauthlib/common.py""]']","False","[]","[{u'raw': u'#385', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'385', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","idan","2012-05-01 09:25:13","Refactor utility methods, improve robustness of OAuth1 Client.sign

* Move quote, unquote, urldecode to oauthlib.common
* Use urldecode for extract_params
* Simplify request logic: store body and decoded_body instead of
body_has_params
* Document steps in Client.sign
* Properly validate requests in Client.sign","208ed69acb602d23e59e0c759fb6479bd7d0e53b","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/utils.py"", ""tests/oauth1/rfc5849/test_utils.py"", ""oauthlib/common.py"", ""tests/test_common.py"", ""tests/oauth1/rfc5849/test_signatures.py"", ""oauthlib/oauth1/rfc5849/__init__.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2014-04-18 14:43:44","Merge pull request #245 from x746e/moved-docstrings-to-the-top

Move docstrings above `from __future__` imports.","20d6640a7c8eadc4b5af15895c1358b868a02464","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/endpoints/base.py"", ""oauthlib/oauth2/rfc6749/clients/backend_application.py"", ""oauthlib/oauth2/rfc6749/tokens.py"", ""oauthlib/oauth2/rfc6749/endpoints/__init__.py"", ""oauthlib/oauth1/__init__.py"", ""oauthlib/oauth2/rfc6749/utils.py"", ""oauthlib/oauth1/rfc5849/endpoints/resource.py"", ""oauthlib/oauth1/rfc5849/endpoints/authorization.py"", ""oauthlib/uri_validate.py"", ""oauthlib/oauth1/rfc5849/__init__.py"", ""oauthlib/oauth1/rfc5849/request_validator.py"", ""oauthlib/oauth2/rfc6749/__init__.py"", ""oauthlib/oauth2/__init__.py"", ""oauthlib/oauth1/rfc5849/parameters.py"", ""oauthlib/oauth2/rfc6749/endpoints/authorization.py"", ""oauthlib/oauth1/rfc5849/signature.py"", ""oauthlib/oauth2/rfc6749/clients/base.py"", ""oauthlib/oauth2/rfc6749/endpoints/revocation.py"", ""oauthlib/oauth1/rfc5849/endpoints/base.py"", ""oauthlib/oauth1/rfc5849/endpoints/access_token.py"", ""oauthlib/oauth1/rfc5849/endpoints/request_token.py"", ""oauthlib/common.py"", ""oauthlib/oauth2/rfc6749/clients/legacy_application.py"", ""oauthlib/oauth2/rfc6749/endpoints/token.py"", ""oauthlib/oauth1/rfc5849/utils.py"", ""oauthlib/oauth2/rfc6749/clients/web_application.py"", ""oauthlib/oauth2/rfc6749/clients/mobile_application.py"", ""oauthlib/oauth2/rfc6749/clients/__init__.py"", ""oauthlib/oauth2/rfc6749/endpoints/resource.py"", ""oauthlib/oauth2/rfc6749/parameters.py"", ""oauthlib/oauth2/rfc6749/endpoints/pre_configured.py""]']","False","[]","[{u'raw': u'#245', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'245', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-11-19 18:27:52","0.3.4","20e71a41edc1a632d9437ca927ea0d3b0535c7f9","","api.github.com,git_clone","[u'[""setup.py"", ""README.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","synasius","2013-05-29 11:00:39","Fixed docstrings","20eb31952ecf858cf7ee395fc7749419f919f3c2","","api.github.com,git_clone","[u'[""oauthlib/oauth2/draft25/__init__.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-02-06 19:20:11","Merge pull request #103 from andreif/master

Fixed typos in grant_types. Initialized attributes to avoid validation errors.","2162c44e489bcfb19503e9e50fe334f16ca4b0c0","","api.github.com,git_clone","[u'[""docs/server2.rst"", ""oauthlib/oauth2/draft25/__init__.py"", ""oauthlib/oauth2/draft25/grant_types.py"", ""oauthlib/oauth2/draft25/tokens.py"", ""oauthlib/oauth2/draft25/errors.py""]']","False","[]","[{u'raw': u'#103', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'103', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2014-07-06 17:27:10","Initial sketch of OpenID Connect grant extensions.

Only drafted some of the parameters introduced and little validation has
been implemented so far. The id_token creation is also on the TODO list
but a lot of it is created by @intelie in his fork already.","21cbb8f711cb7ba71ef0c5706ff37c595d2d7cbd","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/grant_types/openid_connect.py""]']","False","[]","[]","[u'@intelie']","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-05-28 15:00:14","Merge pull request #158 from lepture/travis

add more python version in travis and tox. #73","21d31ee5aa2284b9a26037a99a7cf99a37131bd2","","api.github.com,git_clone","[u'["".travis.yml"", "".travis_install.py"", ""tox.ini""]']","False","[]","[{u'raw': u'#158', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'158', u'']}, {u'raw': u'#73', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'73', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","joelstevenson","2016-04-25 23:49:25","Handle multi-valued response_types as specified in http://openid.net/specs/oauth-v2-multiple-response-types-1_0.html#Combinations
Handle new 'none' response_type
Implicit flow won't generate a token unless it is asked for (skipped for ""id_token"" response_type","21f39752241c56ca4538d09e225f4653b9446d9e","","api.github.com,git_clone","[u'[""tests/oauth2/rfc6749/test_server.py"", ""oauthlib/oauth2/rfc6749/grant_types/authorization_code.py"", ""oauthlib/oauth2/rfc6749/endpoints/authorization.py"", ""oauthlib/oauth2/rfc6749/grant_types/base.py"", ""oauthlib/oauth2/rfc6749/grant_types/openid_connect.py"", ""oauthlib/oauth2/rfc6749/grant_types/implicit.py"", ""oauthlib/oauth2/rfc6749/endpoints/pre_configured.py""]']","False","[u'http://openid.net/specs/oauth-v2-multiple-response-types-1_0.html#Combinations']","[]","[]","[]"
"commit_messages","","idan","oauthlib","idan","2012-03-14 00:24:14","Add OAuth body signature type to client","222b9ffc922c957608b27bb5081ea88cfc3d0be7","","api.github.com,git_clone","[u'[""oauthlib/oauth.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","tilgovi","2015-03-17 13:56:35","Add link to pyramid-oauthlib

Disclosure: I am the author of pyramid-oauthlib","2235b9732929acc2212ae55b9ac7eaeed161941c","","api.github.com,git_clone","[u'[""README.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-06-18 20:21:59","Remove old OAuth 1 provider and make way for the new one. #95.","2261e99ae65fafd03aed337bf100faa6942108e3","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/__init__.py"", ""oauthlib/oauth1/rfc5849/endpoints/__init__.py"", ""tests/oauth1/rfc5849/endpoints/__init__.py"", ""oauthlib/oauth2/rfc6749/exceptions.py""]']","False","[]","[{u'raw': u'#95', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'95', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","foxx","2015-06-19 15:09:03","more code indent issues","226e783e20b09f0e9314d4ad2b9a36410e3be529","","api.github.com,git_clone","[u'[""docs/oauth2/server.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-05-31 09:28:24","Merge pull request #170 from lepture/debug-mode

Debug mode","229b2f78b545b8fb8fb3d879c278d8cecc91c7a4","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/parameters.py"", ""tests/oauth2/rfc6749/test_utils.py"", ""oauthlib/oauth2/rfc6749/utils.py"", ""AUTHORS""]']","False","[]","[{u'raw': u'#170', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'170', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","tbartelmess","2016-04-13 19:15:37","access -> accessed","22a5747998c3e359ac5186426045a1696e228f8c","","api.github.com,git_clone","[u'[""docs/oauth2/server.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-06-18 20:29:36","Preconfigured all in one endpoint - WebApplicationServer. #95","2327c50b5f73d2e769ddcb9d2f98d3657db013f8","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/endpoints/pre_configured.py""]']","False","[]","[{u'raw': u'#95', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'95', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2014-04-18 14:42:39","Merge pull request #243 from jturmel/patch-1

Updated AUTHORS with Josh Turmel","233cb685c6ae4820ad7c63c9611753139c50fa19","","api.github.com,git_clone","[u'[""AUTHORS""]']","False","[]","[{u'raw': u'#243', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'243', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","x746e","2014-04-15 10:17:45","Unshadowed a test.

There were two test methods named `test_create_authorization_response`
in `tests.oauth1.rfc5849.endpoints.test_authorization.ResourceEndpointTest`,
so second one was shadowing the first.

Also renamed the test case.","235a1909b990c1e7bc82846a6efccde67b638c53","","api.github.com,git_clone","[u'[""tests/oauth1/rfc5849/endpoints/test_authorization.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","stephane","2013-05-23 13:28:45","Wrap and trailing whitespaces in README.rst","2361afa930088ada30197d1817e0d14a8b8d05fc","","api.github.com,git_clone","[u'[""README.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","lepture","2013-10-12 13:28:07","JSON content type has no charset.","23d6cb819dae4f2f7a1b23769a7eec5679a7c311","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/grant_types/client_credentials.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-10-04 10:21:46","Accept new unix timestamp param expires_at in tokens.","247f10c32c94a5eb40aad4e7b5d91eb5e8bae080","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/clients/base.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-09-13 10:05:31","0.6.0","25c82a2c925dcdb37704a1bf145830c8084ec33c","","api.github.com,git_clone","[u'[""setup.py"", ""README.rst"", ""docs/conf.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2016-05-01 07:28:35","Bumped version to 1.1.1.","25d3c12933017c47c9d63de939b559846b23fca5","","api.github.com,git_clone","[u'[""oauthlib/__init__.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-03-16 18:57:28","Allow empty strings and duplicate keys in query","26205a0a72fe5dcb95db18bb2bb90af701eacfb5","","api.github.com,git_clone","[u'[""tests/test_signatures.py"", ""oauthlib/signature.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-02-03 14:19:29","Split responsibility into the three endpoints","269747cff17e7f509d16044859f1e51a1d02ccf7","","api.github.com,git_clone","[u'[""oauthlib/oauth2/ext/django.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","pydanny","2012-03-13 03:08:30","Adding in the body","26aaa5ebb316e5941bead47eebe26349d894df13","","api.github.com,git_clone","[u'[""tests/test_signatures.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2017-07-30 06:48:58","Merge pull request #479 from brettcannon/patch-1

Use SVG badges in README","26acdff0025f378cd503040f5241f1207abda991","","api.github.com,git_clone","[u'[""README.rst""]']","False","[]","[{u'raw': u'#479', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'479', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2016-04-28 10:26:28","Merge pull request #417 from bjmc/sanitize-logging

Improves sanitizing sensitive data from Request.__repr__","26c9db82c059d9ed4affe25744bb7ab60cf7c4a5","","api.github.com,git_clone","[u'[""tests/test_common.py"", ""oauthlib/common.py""]']","False","[]","[{u'raw': u'#417', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'417', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","tino","2013-01-05 13:48:01","Add missing ``validate_bearer_token`` to ``RequestValidator`` placeholder class","26e50668348fa19d6d8a7aa9cc57d4fee66d630b","","api.github.com,git_clone","[u'[""oauthlib/oauth2/draft25/grant_types.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-05-29 13:05:24","Merge pull request #166 from synasius/request-param-error

Request parameter error","272cf4c6418093272150d3624e0af4f8948179f5","","api.github.com,git_clone","[u'[""oauthlib/oauth2/draft25/__init__.py"", ""oauthlib/oauth2/draft25/grant_types.py"", ""oauthlib/oauth2/draft25/errors.py""]']","False","[]","[{u'raw': u'#166', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'166', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","flippmoke","2013-05-07 21:26:23","Updated the documentation for dynamic scopes.","273d5139a880a90dc6afd658199339af8e031e6d","","api.github.com,git_clone","[u'[""docs/server2.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","dgouldin","2012-03-13 03:00:41","Making callback_uri required on client, adding oauth server class which checks the signature against the client, adding a collect_parameters option to disable exclusion of oauth_signature.","274528191d2e3a4945b440f5b4c151bc756e67c5","","api.github.com,git_clone","[u'[""oauthlib/oauth.py"", ""oauthlib/signature.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","lepture","2013-10-12 13:34:52","Fix all application/json mimetypes.","274b899af69082656c8ba5f755d25f264b88eb01","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/grant_types/refresh_token.py"", ""oauthlib/oauth2/rfc6749/parameters.py"", ""docs/oauth2/endpoints/token.rst"", ""oauthlib/oauth2/rfc6749/grant_types/authorization_code.py"", ""oauthlib/oauth2/rfc6749/grant_types/resource_owner_password_credentials.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ondrowan","2013-02-01 10:37:57","Added missing crypto library to requirements.txt","276672252b2e287f09b023728e10e98ad4cd39a2","","api.github.com,git_clone","[u'[""requirements.txt""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2015-07-04 14:19:10","Updated release notes.","276c27c8a418c7c399e710cafa43b42efbb9d22e","","api.github.com,git_clone","[u'[""CHANGELOG.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","lepture","2013-09-16 08:22:00","The ability to vary expires_in per request.","27b480ba552adb256d5ee1338da981bb3a60dc62","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/tokens.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2015-07-01 09:41:24","Merge pull request #349 from foxx/patch-2

more code indent issues","281cbdb2523495121c4f3e2ffd55616f7f829a6a","","api.github.com,git_clone","[u'[""docs/oauth2/server.rst""]']","False","[]","[{u'raw': u'#349', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'349', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","josephtate","2015-02-27 07:06:02","add failing test","281e2773b18051b0091a62780c0387a98c99660a","","api.github.com,git_clone","[u'[""tests/oauth2/rfc6749/test_parameters.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","bjmc","2016-11-21 14:19:30","OIDC grants are proxies","28cf20b3ad64b568bff8507ea68a231651bd132e","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/grant_types/openid_connect.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-05-23 15:03:50","Merge pull request #157 from stephane/missing-args

Small fixes related to OAuth2 and Django example","28f1d3bb1a406b3f45f6cf2f1ccce96e2b31c489","","api.github.com,git_clone","[u'[""docs/server2.rst"", ""examples/skeleton_oauth2_web_application_server.py"", ""README.rst"", ""docs/server.rst""]']","False","[]","[{u'raw': u'#157', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'157', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","bjmc","2016-04-25 17:11:04","Better sanitizing for common.Request.__repr__","28f5b265f782d07e6052f2e2be49d4b0e7208188","","api.github.com,git_clone","[u'[""oauthlib/common.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2014-10-23 17:51:10","Merge branch 'allow-invalid-token-type-hint' of https://github.com/RodneyRichardson/oauthlib into RodneyRichardson-allow-invalid-token-type-hint","28fe4c9567f7386afc2662e78e4060c6900fd5ae","","api.github.com,git_clone","[u'[""tests/oauth2/rfc6749/endpoints/test_revocation_endpoint.py"", ""oauthlib/oauth2/rfc6749/endpoints/revocation.py""]']","False","[u'https://github.com/RodneyRichardson/oauthlib']","[]","[]","[]"
"commit_messages","","idan","oauthlib","kyle@gumstix.com","2013-07-23 16:28:34","Changed exception message in authorization.py; changed a validation parameter in resource.py from request_token to access_token; updated authors","29406ee09b7d1f9d4c4967492dbce9cb22bcc1cf","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/endpoints/resource.py"", ""oauthlib/oauth1/rfc5849/endpoints/authorization.py"", ""AUTHORS""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2014-06-03 13:37:15","Fix Oauth1 client tests to pass request param to get_oauth_params method.","294630c1c7946c57e2b315761361c6aec76cd2ca","","api.github.com,git_clone","[u'[""tests/oauth1/rfc5849/test_client.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","joelstevenson","2016-04-16 00:43:46","First pass attempt at updating openid_connect branch","29597b9df3046611f037059cf392e48090bc796f","","api.github.com,git_clone","[u'[""tox.ini"", ""tests/oauth2/rfc6749/grant_types/test_openid_connect.py"", ""oauthlib/common.py"", ""oauthlib/oauth2/rfc6749/grant_types/authorization_code.py"", ""tests/oauth2/rfc6749/grant_types/test_authorization_code.py"", ""oauthlib/oauth2/rfc6749/request_validator.py"", ""oauthlib/oauth2/rfc6749/grant_types/openid_connect.py"", ""oauthlib/oauth2/rfc6749/grant_types/implicit.py"", ""oauthlib/oauth2/rfc6749/endpoints/revocation.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","idan","2012-04-23 11:43:35","Disable strict parsing when extracting parameters.

Strict parsing chokes on strings where keys don't always have values.
The problem is that disabling strict parsing means ""foo bar baz"" doesn't raise
valueerror, it simply ends up as a sole parameter with no value, defeating
checks for non-formencoded bodies.","299e019846792ff78ba7a106913765f25e0d198b","","api.github.com,git_clone","[u'[""oauthlib/common.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2014-10-27 14:06:13","Merge pull request #285 from garcianavalon/update_docs_token_creation

updated token endpoint documentation to reflect current behavior","29c30f822eed4a84752a6a2dfa39bf981ed9c8e8","","api.github.com,git_clone","[u'[""docs/oauth2/endpoints/token.rst""]']","False","[]","[{u'raw': u'#285', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'285', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","idan","2012-04-25 06:39:18","Merge pull request #23 from calebbrown/bugs/broken_server

Fix the failing server tests.","29e9ff2188c0047d4ea1ac1c08b69fe2a6afabfc","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/__init__.py"", ""tests/oauth1/rfc5849/test_server.py""]']","False","[]","[{u'raw': u'#23', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'23', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","frewsxcv","2014-06-20 16:29:34","Enable automated testing with Python 3.4","2a0a2884e8dbc4ac75ff6584b5fba87369c67f31","","api.github.com,git_clone","[u'["".travis.yml""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-11-17 11:40:39","BearerToken for oauth2 provider","2a2043c5f1ad467f6ee12444b273731a4c7e9c77","","api.github.com,git_clone","[u'[""oauthlib/oauth2/draft25/tokens.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","idan","2012-05-03 05:30:36","Add pycrypto requires to setup.py

pycrypto is used for RSA signatures.","2ada9f7de518897bb56b007170f6990ae1401687","","api.github.com,git_clone","[u'[""setup.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","TizianoPerrucci","2017-03-08 09:53:19","Changed all implicit imports * with explicit classes imports","2b6cdfe4cdc62f521d401bf225fcc77739149174","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/clients/__init__.py"", ""oauthlib/oauth1/__init__.py"", ""oauthlib/oauth2/__init__.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-02-13 20:40:03","Merge pull request #108 from ondrowan/patch-2

Fixed wrong function reference in OAuth server docs","2b862957a285b4c8e6f86c815ace4410afa2e88b","","api.github.com,git_clone","[u'[""docs/server.rst""]']","False","[]","[{u'raw': u'#108', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'108', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","orenmazor","2017-06-14 16:19:22","switch to sending the MismatchingRedirectURIError instead","2bcb8754980d7eb54ba12a34ead1694baa12340b","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/grant_types/authorization_code.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","idan","2012-05-02 21:41:03","Capture OAuth1 generated signature for debug logging","2c903c4fc0f11a11c92262719612fce165f91c11","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/__init__.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-05-06 18:59:36","Merge pull request #146 from stephane/docs-typo

Docs typo","2cfcc6a6d687257e69b5904029373e0ba54850cb","","api.github.com,git_clone","[u'[""docs/preconfigured_servers.rst"", ""oauthlib/oauth2/draft25/grant_types.py""]']","False","[]","[{u'raw': u'#146', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'146', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","idan","2012-05-01 20:02:47","Decode query to unicode in urldecode

For completeness' sake.","2cfecffef0e597bae2aaf8ca5deff95def75ddd5","","api.github.com,git_clone","[u'[""oauthlib/common.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2014-09-24 16:32:39","Auto pep8 changes throughout the code base.","2d7dab66b589159712f96bd0086f45ae3c32216d","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/grant_types/refresh_token.py"", ""oauthlib/oauth2/rfc6749/endpoints/base.py"", ""oauthlib/oauth2/rfc6749/clients/backend_application.py"", ""oauthlib/oauth2/rfc6749/utils.py"", ""oauthlib/oauth1/rfc5849/endpoints/resource.py"", ""oauthlib/oauth1/rfc5849/endpoints/authorization.py"", ""oauthlib/uri_validate.py"", ""oauthlib/oauth1/rfc5849/__init__.py"", ""oauthlib/oauth1/rfc5849/request_validator.py"", ""oauthlib/oauth2/rfc6749/errors.py"", ""oauthlib/oauth2/rfc6749/__init__.py"", ""oauthlib/oauth2/rfc6749/grant_types/resource_owner_password_credentials.py"", ""oauthlib/oauth2/rfc6749/clients/mobile_application.py"", ""oauthlib/oauth1/rfc5849/parameters.py"", ""oauthlib/oauth2/rfc6749/grant_types/authorization_code.py"", ""oauthlib/oauth2/rfc6749/endpoints/authorization.py"", ""oauthlib/oauth1/rfc5849/signature.py"", ""oauthlib/oauth2/rfc6749/clients/base.py"", ""oauthlib/oauth2/rfc6749/endpoints/revocation.py"", ""oauthlib/oauth1/rfc5849/endpoints/base.py"", ""oauthlib/oauth1/rfc5849/endpoints/access_token.py"", ""oauthlib/oauth1/rfc5849/endpoints/request_token.py"", ""oauthlib/common.py"", ""oauthlib/oauth2/rfc6749/grant_types/base.py"", ""oauthlib/oauth2/rfc6749/clients/legacy_application.py"", ""oauthlib/oauth2/rfc6749/grant_types/client_credentials.py"", ""oauthlib/oauth2/rfc6749/grant_types/implicit.py"", ""oauthlib/oauth2/rfc6749/endpoints/token.py"", ""oauthlib/__init__.py"", ""oauthlib/oauth1/rfc5849/endpoints/pre_configured.py"", ""oauthlib/oauth2/rfc6749/clients/web_application.py"", ""oauthlib/oauth1/rfc5849/endpoints/signature_only.py"", ""oauthlib/oauth2/rfc6749/endpoints/resource.py"", ""oauthlib/oauth2/rfc6749/request_validator.py"", ""oauthlib/oauth2/rfc6749/parameters.py"", ""oauthlib/oauth2/rfc6749/endpoints/pre_configured.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","swsnider","2012-11-09 08:00:27","change returned request object so that it contains the realm paramter if one was passed in.","2d9a1cf4e72872dd5d574d6c712f9b8720bb4ffc","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/__init__.py"", ""oauthlib/oauth1/rfc5849/signature.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-02-05 20:37:17","OAuth 2 client usage placeholder","2daa877ca05c9e7a5f65b36c8b3c4c6aa02e092c","","api.github.com,git_clone","[u'[""docs/client2.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-11-17 12:55:07","Fixed blooper in url_equals","2dbedb93b63147d3abec13007792127a54fcbec8","","api.github.com,git_clone","[u'[""tests/unittest/__init__.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-03-25 14:01:51","Extra credentials usage tests.","2e2fe9326b84285fd2c41f622ca94b112a429340","","api.github.com,git_clone","[u'[""tests/oauth2/draft25/test_servers.py"", ""oauthlib/oauth2/draft25/grant_types.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","dmuller@guidebook.com","2014-09-29 21:27:39","Add docstring for ResourceOwnerPasswordCredentialsGrant __init__","2e4e232ade206962b7979e7c0299d7ff0cd4ad41","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/grant_types/resource_owner_password_credentials.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-07-26 18:09:42","Test for correct nonce_checking across endpoints.","2f01d5ba3a1d94904a1eea67db1276922f39c8ec","","api.github.com,git_clone","[u'[""tests/oauth1/rfc5849/endpoints/test_access_token.py"", ""tests/oauth1/rfc5849/endpoints/test_request_token.py"", ""tests/oauth1/rfc5849/endpoints/test_resource.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ondrowan","2013-02-14 23:19:44","Changes to testing stuff
* simplified tox config
* added python 3 to travis config","2f0871bcc53ba9875c415eddc3b7f1878d2e8806","","api.github.com,git_clone","[u'["".travis.yml"", ""README.rst"", ""tox.ini""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","dgouldin","2012-03-24 18:02:32","Merge pull request #12 from ib-lundgren/dict_and_list_as_body

Allow body=dict/list in sign_request","2f251b6deb645584af805918c4db3d8ab999c751","","api.github.com,git_clone","[u'[""oauthlib/signature.py""]']","False","[]","[{u'raw': u'#12', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'12', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","clintecker","2013-06-21 14:57:48","changing server example to reflect changes to request validator in 035d46c73ab7feb4719e4642dafc9bb21aa8bd2c","2f42009a5e6a4893c4272b397b1456a225e74d5f","","api.github.com,git_clone","[u'[""examples/skeleton_oauth2_web_application_server.py"", ""AUTHORS""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","joelstevenson","2016-04-29 16:29:22","Prevent save_token() from being called twice within create_token_response().  We call save_token() after any token modifiers have run so we can tell the token_handler's create_token() method not to save the token and do that explicitly ourselves.","2f7fd6cde2e10a9980ad4ef2e438d6b93769e613","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/grant_types/refresh_token.py"", ""oauthlib/oauth2/rfc6749/grant_types/resource_owner_password_credentials.py"", ""tests/oauth2/rfc6749/grant_types/test_refresh_token.py"", ""oauthlib/oauth2/rfc6749/tokens.py"", ""tests/oauth2/rfc6749/grant_types/test_implicit.py"", ""oauthlib/oauth2/rfc6749/grant_types/client_credentials.py"", ""oauthlib/oauth2/rfc6749/grant_types/authorization_code.py"", ""tests/oauth2/rfc6749/grant_types/test_authorization_code.py"", ""tests/oauth2/rfc6749/grant_types/test_openid_connect.py"", ""tests/oauth2/rfc6749/grant_types/test_resource_owner_password.py"", ""tests/oauth2/rfc6749/grant_types/test_client_credentials.py"", ""oauthlib/oauth2/rfc6749/grant_types/implicit.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","idan","2012-03-13 00:22:13","Sort query params to put oauth_ ones last","2fb4d431d073a689a37b1fc42ca0bc700bae732c","","api.github.com,git_clone","[u'[""oauthlib/parameters.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","edevil","2013-10-29 16:43:54","Correct interface of RequestValidator.confirm_redirect_uri() to make it consistent with the call in AuthorizationCodeGrant.validate_token_request().","3023c2b9bc17c556348a8602b7e82c52da1ee36d","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/request_validator.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2015-07-19 10:23:08","Bumped version to 1.0.0.","308dfd1ec9988feeb2f3af94e8a2e4d8480324f6","","api.github.com,git_clone","[u'[""oauthlib/__init__.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2017-03-19 12:40:48","Merge pull request #455 from bjmc/prompt_bug

Fixes bug with 'prompt' parameter","30cbfa46e17840b438de848a0b9f9b6b6cd035af","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/grant_types/openid_connect.py"", ""tests/oauth2/rfc6749/endpoints/test_prompt_handling.py""]']","False","[]","[{u'raw': u'#455', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'455', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","mvo5","2012-10-29 08:14:52","address some of the review points from Ib","30ea4234a5917a9afebeb4669091b5e871a775b8","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/__init__.py"", ""AUTHORS""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2015-07-19 08:33:37","Merge pull request #325 from djmitche/token_generator_fix

Fix documentation for token_generator signature","311b57cc25a56d337be785af8f993b1ea4021fa5","","api.github.com,git_clone","[u'[""docs/oauth2/preconfigured_servers.rst""]']","False","[]","[{u'raw': u'#325', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'325', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-11-09 18:23:57","Merge pull request #65 from swsnider/master

Correct a small oversight in the Server code.","313a1c224f3245091b11af3f9ac67530b8e0f3e6","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/__init__.py"", ""oauthlib/oauth1/rfc5849/signature.py"", ""tests/oauth1/rfc5849/test_signatures.py"", ""AUTHORS""]']","False","[]","[{u'raw': u'#65', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'65', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","pydanny","2012-03-13 00:22:51","Adding how to contribute","31710fe8b16ff3b19ccc770a635ed7994f00562d","","api.github.com,git_clone","[u'[""docs/contributing.rst"", ""docs/index.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2016-11-24 15:57:41","Merge pull request #440 from fabfuel/ensure-request-client_id-from-request-client

Ensure request.client_id in grant authorization_code","3185028db1711b7c0bc1be1ab3ab9a0a9249469f","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/grant_types/authorization_code.py""]']","False","[]","[{u'raw': u'#440', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'440', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","idan","2012-04-23 06:45:38","Updated Client internals using Request","319f10b4070e07f9b1b944bef9cb92822e156f76","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/__init__.py"", ""docs/client.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","skion","2017-09-12 21:26:19","Add nonce to docstring.","32319c82375e1d892c8bab258ce57686793e00df","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/grant_types/openid_connect.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","fabfuel","2016-10-03 08:38:38","Ensure request.client_id after checking request.client.client_id","335d9e8b427163bc64c18cb7ad54e609fcd84b23","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/grant_types/authorization_code.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","idan","2012-04-23 06:41:48","Use extract_params to normalize behavior in signature.py","33c16251ec6bbd45c962263f7f4fbc7548e47704","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/utils.py"", ""oauthlib/oauth1/rfc5849/signature.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","sean-dev@farley.org","2013-06-28 14:56:30","Improve resilience to bad authorization headers

Catch IndexError when calling parse_keqv_list in
parse_authorization_header.  parse_keqv_list could raise an IndexError
exception if the header has an incomplete key=value pair.  Some examples
of this are a broken OAuth header (e.g., OAuth oauth_nonce=) and client
code that attempts to use IWA for authentication (i.e., Negotiate
b2F1dGhsaWI=).  IWA uses Base64 which may end with an ""="".

Add unit tests for bad authorization headers raising ValueError.","349d9f398afd58cc993f207c4035b85e2bf86b26","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/utils.py"", ""tests/oauth1/rfc5849/test_utils.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2016-04-20 08:29:26","Merge pull request #413 from tbartelmess/patch-1

access -> accessed","34e5a07f7be4ae29823cb8129c1177fe3c3d55cf","","api.github.com,git_clone","[u'[""docs/oauth2/server.rst""]']","False","[]","[{u'raw': u'#413', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'413', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","senko","2012-11-13 10:04:46","oauth1.rfc5849.Server.verify_request(): have a consistent return value type","351586178d6bf5a95a34a2344f1d14426947d206","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/__init__.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-03-24 17:36:02","merge prep","354c07006f885b0ff468f44efebe1c4d8df646ec","","api.github.com,git_clone","[u'[""tests/test_signatures.py"", ""oauthlib/oauth.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","skion","2017-07-29 22:22:49","Fix tests for hybrid fragments.","35fee2b8f21372d02a2e460a07e19a2abe5f2169","","api.github.com,git_clone","[u'[""tests/oauth2/rfc6749/grant_types/test_authorization_code.py"", ""tests/oauth2/rfc6749/grant_types/test_openid_connect.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","calebbrown","2012-04-18 13:17:25","Update the tests. Strengthen the unescape and escape tests and add more
server tests.","361d306d11efedaa63b281d2e87b25f54ef91b38","","api.github.com,git_clone","[u'[""tests/oauth1/rfc5849/test_server.py"", ""tests/oauth1/rfc5849/test_utils.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","dgouldin","2012-03-15 17:48:57","Merge pull request #6 from ib-lundgren/filter_https

Strip default ports by scheme from within normalize_base_string_uri.","36990a68ed513f9798f89444952df17425ebf1da","","api.github.com,git_clone","[u'[""oauthlib/signature.py""]']","False","[]","[{u'raw': u'#6', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'6', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-05-20 16:58:07","Check for items(), not dict instance to allow pseudo dicts.","36b2094cfad9e3e11e12b78b5d2252d419082ad4","","api.github.com,git_clone","[u'[""oauthlib/common.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-07-09 19:54:37","0.3.0","36e07d9476a67086ec1a8d917cdc703531673440","","api.github.com,git_clone","[u'[""setup.py"", ""README.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","jvanasco","2015-08-11 19:35:50","fixed docsting on `invalidate_request_token`","372b686b8a24aae94101e56a9c042813ef23971e","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/request_validator.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2016-12-06 12:09:46","Remove support for Python 2.6 and 3.2-3.3. Fixes #432.","373c3eed55bf4125d2442c791265c967820511a5","","api.github.com,git_clone","[u'["".travis.yml""]']","False","[]","[{u'raw': u'#432', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'432', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","idan","2012-04-11 08:55:20","Add ""and contributors"" to copyright","375d6d07ff376788c9999b066d3f89bcbaf3eae9","","api.github.com,git_clone","[u'[""LICENSE""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","idan","2012-04-29 11:05:00","Add travis notifications to #oauthlib on freenode IRC","377872a65060e78886ed5266f7582f3e0be28bb7","","api.github.com,git_clone","[u'["".travis.yml""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","idan","2012-04-23 06:44:52","Make method signatures in parameters.py consistent

* Use oauthlib.common.extract_params
* replace _add_params_to_qs with _append_parms
* remove no-longer-needed order_params decorator
* Yes I know this breaks tests right now :(","37bd92d1b5bfa0bac80dde79a38bca72c03e95a8","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/parameters.py"", ""tests/oauth1/rfc5849/test_parameters.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","hirokiky","2015-09-29 02:35:39","Added tests auth grant without refresh token","37bea19049497c820891c2ccbcce9c4b9dc0d7b9","","api.github.com,git_clone","[u'[""tests/oauth2/rfc6749/grant_types/test_authorization_code.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","hoylen","2017-01-16 04:48:00","Extra logging for verification failures.","3865fa8ec208fb927615530854348d414a3cc1a4","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/endpoints/signature_only.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","idan","2012-04-24 06:42:21","Allow rendering of body signatures without supplied body params","389a1b63686b50bfec7a732a2b38cf2d11caa9c4","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/__init__.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","idan","2012-05-03 05:31:33","v0.1.1","38bde2d15e4e19afc5c3489bd72cf4dc818135d5","","api.github.com,git_clone","[u'[""setup.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2016-09-03 08:52:31","Bumped version.","38c563dbcf38b663717336dac74c88077efd2e1e","","api.github.com,git_clone","[u'["".travis.yml"", ""CHANGELOG.rst"", ""oauthlib/__init__.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","idan","2012-03-12 21:21:00","Add OAuth-safe urlencode","38d00ac1569bbdfdd88f8c3e919adc7651cb6b51","","api.github.com,git_clone","[u'[""oauthlib/utils.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2014-09-24 14:30:46","Fix error message init and add request details.

Errors were not initialised and thus no message would be
included. Changed to now include the error label, description
and request details.","39013947bd2e242dda85fb0f150c49be23fd7510","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/errors.py"", ""oauthlib/oauth2/rfc6749/errors.py"", ""oauthlib/common.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2014-04-12 10:17:48","Merge pull request #240 from asteinlein/master

Support for scopes being arbitrary objects","393d09ad41d350d2b5cc8c5072cc5cf191ce8638","","api.github.com,git_clone","[u'[""tests/oauth2/rfc6749/test_utils.py"", ""oauthlib/oauth2/rfc6749/utils.py""]']","False","[]","[{u'raw': u'#240', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'240', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","idan","2012-03-12 21:21:40","First stab at parameters.py

Implements section 3.5 of the spec","39556cc20f663412b8ae653196a306414955ac7f","","api.github.com,git_clone","[u'[""oauthlib/parameters.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ghickman","2012-03-13 04:11:07","Add basic setup.py","3983c7ef39503a14ffa029fa48a0a4301ba7d89c","","api.github.com,git_clone","[u'[""setup.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-10-04 10:20:32","Restructure client tests per grant type.","398c003b236f81c8bb9a98bd1ec817e70e7da8c9","","api.github.com,git_clone","[u'[""tests/oauth2/rfc6749/clients/test_backend_application.py"", ""tests/oauth2/rfc6749/test_client.py"", ""tests/oauth2/rfc6749/clients/test_legacy_application.py"", ""tests/oauth2/rfc6749/clients/test_mobile_application.py"", ""tests/oauth2/rfc6749/clients/__init__.py"", ""tests/oauth2/rfc6749/clients/test_web_application.py"", ""tests/oauth2/rfc6749/clients/test_base.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","kennethreitz","2012-04-07 22:00:26","setup.py test","3996d1bf6ad2404b7eb34637df53480c6f2b9c28","","api.github.com,git_clone","[u'[""setup.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","lepture","2013-05-31 13:48:17","move uri.lower() to is_secure_transport","39e43961b98f79a55948db0710c8e2403408d12a","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/parameters.py"", ""oauthlib/oauth2/rfc6749/clients/base.py"", ""oauthlib/oauth2/rfc6749/utils.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-09-17 14:18:04","Restructure API docs to mimic code structure more.","3a30df69d19f56d1eeedcba9c0742186e85aac85","","api.github.com,git_clone","[u'[""docs/oauth2/endpoints/endpoints.rst"", ""docs/oauth2/endpoints/token.rst"", ""docs/oauth2/tokens/bearer.rst"", ""oauthlib/oauth1/rfc5849/endpoints/resource.py"", ""docs/oauth2/endpoints/revocation.rst"", ""docs/oauth2/grants/grants.rst"", ""docs/oauth1/endpoints/access_token.rst"", ""docs/oauth2/server.rst"", ""docs/oauth1/endpoints/authorization.rst"", ""docs/oauth2/tokens/mac.rst"", ""docs/oauth2/clients/backendapplicationclient.rst"", ""docs/oauth2/clients/legacyapplicationclient.rst"", ""docs/oauth1/endpoints/endpoints.rst"", ""docs/oauth2/endpoints/resource.rst"", ""docs/oauth2/tokens/tokens.rst"", ""docs/oauth1/endpoints/resource.rst"", ""docs/oauth2/tokens/saml.rst"", ""oauthlib/oauth1/rfc5849/endpoints/request_token.py"", ""docs/oauth1/client.rst"", ""docs/oauth1/oauth1.rst"", ""docs/oauth2/clients/mobileapplicationclient.rst"", ""docs/oauth2/clients/client.rst"", ""docs/oauth2/tokens/jwt.rst"", ""docs/oauth2/endpoints/authorization.rst"", ""docs/oauth1/endpoints/request_token.rst"", ""docs/oauth2/clients/webapplicationclient.rst"", ""docs/oauth2/clients/baseclient.rst"", ""oauthlib/oauth1/rfc5849/endpoints/authorization.py"", ""docs/oauth1/server.rst"", ""docs/oauth1/endpoints.rst"", ""docs/oauth2/oauth2.rst"", ""oauthlib/oauth1/rfc5849/endpoints/access_token.py"", ""docs/index.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-04-26 11:13:09","Regex fix","3ac2b61395f4e9489aa4ee8cc46ef68ef9ac9082","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/utils.py"", ""tests/oauth1/rfc5849/test_utils.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","whit537","2014-09-17 16:07:17","Failing test for token_type relaxation","3afd5cd84ee21312b0081850f7f4895c95bb121d","","api.github.com,git_clone","[u'[""tests/oauth2/rfc6749/test_parameters.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2016-11-24 15:51:46","Merge pull request #442 from mistermocha/master

scrubbing rsa_key from __repr__","3bac2e23d0fed1a0f0ffa9b0d9f5fb9e174e6e51","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/__init__.py""]']","False","[]","[{u'raw': u'#442', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'442', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2014-09-22 14:35:52","Merge pull request #268 from whit537/facebook

work around Facebook's non-conformance","3bb2bfbb593386169e997e3332b236c077a546db","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/parameters.py"", ""tests/oauth2/rfc6749/test_parameters.py"", ""docs/oauth2/tokens/tokens.rst""]']","False","[]","[{u'raw': u'#268', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'268', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","djmitche","2015-02-26 23:08:35","update docs for save_authorization_code","3bc7d571bf890a4befda3bbbe6d78ba3ea38c515","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/request_validator.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-11-21 19:51:01","Merge pull request #81 from dafyddcrosby/fix_bdist_rpm

Fix broken setup.py bdist_rpm","3bcbb25f6b15d23fe79de34389363b0c5f078a82","","api.github.com,git_clone","[u'[""setup.py""]']","False","[]","[{u'raw': u'#81', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'81', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-02-07 22:26:39","Fix #94","3c31b036273b5d29b2bd2d77df92814d74280807","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/__init__.py""]']","False","[]","[{u'raw': u'#94', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'94', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","idan","2012-04-11 14:04:25","Add author/email to setup.py","3c5045cad694ceb767fd2fee2e2bee0144ffa078","","api.github.com,git_clone","[u'[""setup.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ondrowan","2013-02-03 17:41:37","Added mock and nose to requirements.txt","3c5c90d5a1773fd3ebe6520d18284d7635227f1d","","api.github.com,git_clone","[u'[""requirements.txt""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-02-18 18:34:26","Rolling back #115 travis changes.","3c772052ec1db6cdb9b80b8870feaa1e1c17f8aa","","api.github.com,git_clone","[u'["".travis.yml""]']","False","[]","[{u'raw': u'#115', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'115', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-11-10 22:52:25","Merge pull request #222 from lepture/meta

Meta","3c8278c779f7e46b7fa85137d6831a39898ca24c","","api.github.com,git_clone","[u'[""setup.py"", ""oauthlib/__init__.py""]']","False","[]","[{u'raw': u'#222', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'222', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","idan","2012-05-01 11:56:41","Add unicode_params method","3c85c60eaaaf731f7b0d0e2e8cd6e580da6c3afa","","api.github.com,git_clone","[u'[""oauthlib/common.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2014-06-25 17:09:23","Test key libraries using oauthlib with make test #254.

It is important, especially for releases, to keep disruptions low and
not break the code for people using oauthlib. To start off we include 3
libraries which master versions on Github can be tested against local
oauthlib version.

To include another library, send a PR :)","3c987c3948218933842034ee1e127d1f9a1bf61a","","api.github.com,git_clone","[u'[""Makefile""]']","False","[]","[{u'raw': u'#254', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'254', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-11-10 22:53:31","Merge pull request #223 from wrr/test_name_conflict

Fix test method name conflict.","3cf2da98d1f50d23e2e5e7c27d4d94441f9b3c5c","","api.github.com,git_clone","[u'[""tests/oauth2/rfc6749/grant_types/test_refresh_token.py""]']","False","[]","[{u'raw': u'#223', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'223', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2014-07-06 17:26:49","Add token modifier and save to refresh token grant as well.","3d0ebb6ac6d482218f6f58ea76ec69bec925b109","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/grant_types/refresh_token.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2016-03-14 09:48:50","Merge pull request #400 from arnicvs/niels/patch-token-scope-processing

Fix for oauth2 token processing","3d73326d4956fdf0bb8342df87c66fd13e217836","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/tokens.py""]']","False","[]","[{u'raw': u'#400', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'400', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","asteinlein","2014-03-27 14:23:03","Support for scopes being arbitrary objects

Improves list_to_scope() and scope_to_list() to deal with objects, by
calling str()/unicode() on elements in the lists instead of assuming
they are string/unicode objects.","3d8db358c6d1fdfd21ebb1f074205c7e3e5c267c","","api.github.com,git_clone","[u'[""tests/oauth2/rfc6749/test_utils.py"", ""oauthlib/oauth2/rfc6749/utils.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","idan","2012-05-02 20:41:23","Whitelist master branch only for travis-ci","3db8042978ea1adb4f120d7560d6e784eda7feb2","","api.github.com,git_clone","[u'["".travis.yml""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","orenmazor","2017-06-14 16:22:27","adjust the test for the new exception","3dc0f8e2048c9dd4d2eb5ca1b0b2eaefd47b09d6","","api.github.com,git_clone","[u'[""tests/oauth2/rfc6749/endpoints/test_credentials_preservation.py"", ""tests/oauth2/rfc6749/endpoints/test_error_responses.py"", ""tests/oauth2/rfc6749/grant_types/test_authorization_code.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","idan","2012-05-01 19:49:04","PEP8 police raid","3dd98efeb30b191d70a497c4e91c6632d393309a","","api.github.com,git_clone","[u'[""tests/oauth1/rfc5849/test_server.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2015-07-19 08:32:45","Merge pull request #326 from CoolGoose/patch-2

fix method params and clarify oauth_protected","3df94af950989b4594fde7df509723d77d0df2bf","","api.github.com,git_clone","[u'[""docs/oauth1/server.rst""]']","False","[]","[{u'raw': u'#326', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'326', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","arnicvs","2015-11-03 11:58:19","Fixed OAuth2Token() breaking when scope is passed in params but has value None.","3e314218e1f691f91eecf7dfadb82d47fad8c185","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/tokens.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-02-20 21:25:28","Redirect URI preservation test","3e34a9aafcc5cfe0d2e22d59e6e564d009e98a83","","api.github.com,git_clone","[u'[""tests/oauth2/draft25/test_servers.py"", ""oauthlib/oauth2/draft25/grant_types.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","dgouldin","2012-04-07 21:09:42","Merge pull request #10 from ib-lundgren/parameter_verification

Section 3.(2|4|5) changes","3e3db5b8c5328908191487344e54698845af6c91","","api.github.com,git_clone","[u'[""oauthlib/oauth.py""]']","False","[]","[{u'raw': u'#10', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'10', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-01-05 10:57:29","Merge pull request #87 from warsaw/issue86

Issue86","3e62dd062b5ef03d268134bda7c49960e0d8ea25","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/__init__.py"", ""tests/oauth1/rfc5849/test_client.py""]']","False","[]","[{u'raw': u'#87', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'87', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","skion","2015-03-05 14:23:15","Test trimming of whitespace.","3e7b6178e2db14043e1bfe0beba8ab971f42cfc5","","api.github.com,git_clone","[u'[""tests/oauth2/rfc6749/test_utils.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2016-11-23 10:22:37","Bump version to 2.0.1.","3eb6fe934c8c8d6c34e22b4e4fc1bd01d0266df6","","api.github.com,git_clone","[u'[""CHANGELOG.rst"", ""oauthlib/__init__.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","dmuller@guidebook.com","2014-09-29 20:57:50","Add refresh_token keyword arg","3ed13c7e3ce2b9d8e5e66776ceb6487c88303f7a","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/grant_types/resource_owner_password_credentials.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-06-21 15:04:01","Merge pull request #184 from clintecker/cleanup_for_original_scopes

Changing server example to reflect recent changes to request validator","3f1008106e3dd7b3874e567a992093ed94e95428","","api.github.com,git_clone","[u'[""examples/skeleton_oauth2_web_application_server.py"", ""AUTHORS""]']","False","[]","[{u'raw': u'#184', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'184', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-03-14 23:15:38","Added RSA Test","3f5339e4a4a7400e4f9cd86f0a167d05282db999","","api.github.com,git_clone","[u'[""tests/test_signatures.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","doigoid","2013-02-22 19:02:38","Log into the oauthlib namespace, not the root one","3f817cd6463a79ff89ae536e7af5b741a74d9f10","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/__init__.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-03-24 17:05:12","Merge branch 'master' of https://github.com/idangazit/oauthlib into hmac_test","3f84a28055620ab656304ebd6e75ff71c02b9c95","","api.github.com,git_clone","[u'[""tests/test_signatures.py"", ""oauthlib/signature.py"", "".gitignore""]']","False","[u'https://github.com/idangazit/oauthlib']","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-06-25 12:29:44","Merge branch 'server_docs'","3fa3c3d901fbc23aa1413e2488ccc66fa5a05f46","","api.github.com,git_clone","[u'[""docs/server.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","kennethreitz","2012-06-28 21:36:07","new repo location","40243cadced83b6e9efe6db5d3b5766f2175105a","","api.github.com,git_clone","[u'[""setup.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","dgouldin","2012-03-12 22:10:38","Adding spec 3.4 base functions to the signature module.","406f2806b2e51f94a43bc28d30940d306d1d18ce","","api.github.com,git_clone","[u'[""oauthlib/signature.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","jdufresne","2017-04-16 21:14:22","Fix BytesWarning issued when using a string placeholder for bytes object

When running tests, fixes warnings of the form:

.../oauthlib/oauthlib/oauth1/rfc5849/utils.py:56: BytesWarning: str() on a bytes instance","40952892042c85d08107c009f77790b823fcad3c","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/utils.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-06-28 16:00:01","OAuth2 client types proposal, #44","4116c81fb1f9b591008db6b805d81ca6aca521c4","","api.github.com,git_clone","[u'[""oauthlib/oauth2/draft25/__init__.py""]']","False","[]","[{u'raw': u'#44', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'44', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2015-07-01 10:36:51","Travis deploy to PyPI on github tag. #333, #346.","4149010e856fcd03ae7833d66953c130898122cc","","api.github.com,git_clone","[u'["".travis.yml""]']","False","[]","[{u'raw': u'#333', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'333', u'']}, {u'raw': u'#346', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'346', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","calebbrown","2012-04-24 23:15:20","Fix the failing tests.

 * Order of values returned from client.sign() were changed
 * Call to Client.get_oauth_signature() in
   Server.check_request_signature() needs to take a Request()","41576dbcd659dc09a042191d41f460f138b96102","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/__init__.py"", ""tests/oauth1/rfc5849/test_server.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","bjmc","2016-11-21 14:47:59","Adds tests for custom grant validators","41f853f9d56bfb403b40f00054a56242e1be52ed","","api.github.com,git_clone","[u'[""tests/oauth2/rfc6749/grant_types/test_client_credentials.py"", ""tests/oauth2/rfc6749/grant_types/test_resource_owner_password.py"", ""tests/oauth2/rfc6749/grant_types/test_implicit.py"", ""tests/oauth2/rfc6749/grant_types/test_authorization_code.py"", ""tests/oauth2/rfc6749/grant_types/test_refresh_token.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-09-16 08:42:15","Merge pull request #206 from lepture/expires

The ability to vary expires_in per request.","4234b53e4a20255884f732e7f208efca19f6eec1","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/tokens.py""]']","False","[]","[{u'raw': u'#206', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'206', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","kippandrew","2016-12-07 05:30:59","Python 3 fixes","4297a7e3db43b5bf293537964e0f51332dcb181f","","api.github.com,git_clone","[u'[""tests/oauth2/rfc6749/endpoints/test_revocation_endpoint.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-07-26 18:05:45","Merge branch 'patch-1' of https://github.com/kdazzle/oauthlib into kdazzle-patch-1","42a00c8996cb9770c175e01929720d0bc1a611cf","","api.github.com,git_clone","[u'[""AUTHORS"", ""oauthlib/oauth1/rfc5849/endpoints/resource.py"", ""oauthlib/oauth1/rfc5849/endpoints/authorization.py"", ""docs/oauth1/server.rst"", ""oauthlib/oauth1/rfc5849/request_validator.py"", ""oauthlib/oauth1/rfc5849/endpoints/access_token.py""]']","False","[u'https://github.com/kdazzle/oauthlib']","[]","[]","[]"
"commit_messages","","idan","oauthlib","lepture","2015-07-02 07:14:07","Improve regex performance for invalid_hex","42d973d7854a694dea290251e21025b0b90440f4","","api.github.com,git_clone","[u'[""oauthlib/common.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-12-21 22:54:39","Refactoring towards spec compliance, step 1.","43124ab671f73e33a6a5f608dcb4afd997619a8f","","api.github.com,git_clone","[u'[""oauthlib/oauth2/draft25/grant_types.py"", ""tests/oauth2/draft25/test_server.py"", ""oauthlib/oauth2/draft25/errors.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","idan","2012-03-12 18:46:59","Minor cleanup of docstrings","4335dedcd393318421b51f523308cd162fd7595a","","api.github.com,git_clone","[u'[""oauthlib/utils.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","omerk@checkpoint.com","2017-09-17 11:19:48","Fixed typo in imports.","433e1a1337f2a2a206da14636ef8e33158cd6895","","api.github.com,git_clone","[u'[""oauthlib/oauth2/__init__.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","flippmoke","2013-05-07 21:06:29","Small modification so that the dynamnic scopes now will pass the requests object in django.","43887add3a7bdccfdc5af9bde43559101cd3ed02","","api.github.com,git_clone","[u'[""oauthlib/oauth2/ext/django.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2016-06-01 13:02:42","Bumped version.","43fb7f5bfb5fb1086d2d8ef1e57b77e84db24b45","","api.github.com,git_clone","[u'[""oauthlib/__init__.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-03-25 11:27:55","Response type tests.","441433c01319e4992de6d32067f5e68363512229","","api.github.com,git_clone","[u'[""tests/oauth2/draft25/test_servers.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","idan","2012-05-03 05:36:43","I ARE RETARDED. Setup.py needs install_requires.","4463ab62e6861c016a92417811c54a957be025ce","","api.github.com,git_clone","[u'[""setup.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","joelstevenson","2016-08-18 22:29:01","Move the claims handling into OpenIDConnectBase._inflate_claims() and a new AuthCodeGrantDispatcher to route requests to either the default AuthorizationCodeGrant or OpenIDConnectAuthCode depending on scope when the request's response_type is a simple (ambiguous) 'code'.
Include basic docs about OpenID Connect auth flow support","447465547cc9a14350d024ed25b374614c475eec","","api.github.com,git_clone","[u'[""docs/feature_matrix.rst"", ""docs/oauth2/oidc.rst"", ""docs/oauth2/oidc/validator.rst"", ""oauthlib/oauth2/rfc6749/grant_types/__init__.py"", ""oauthlib/oauth2/rfc6749/request_validator.py"", ""oauthlib/oauth2/rfc6749/grant_types/openid_connect.py"", ""docs/oauth2/oidc/id_tokens.rst"", ""oauthlib/oauth2/rfc6749/grant_types/authorization_code.py"", ""oauthlib/oauth2/rfc6749/endpoints/pre_configured.py"", ""docs/index.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-06-12 20:25:42","Merge pull request #42 from ib-lundgren/soft_pycrypto

Soft dependency on PyCrypto","44ba3fd479aeb2eac28814054bb123a71204ed27","","api.github.com,git_clone","[u'["".travis.yml"", ""docs/client.rst"", ""setup.py"", ""oauthlib/oauth1/rfc5849/signature.py""]']","False","[]","[{u'raw': u'#42', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'42', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","lepture","2013-07-09 15:38:32","style fix for setup.py. add classifiers","4502cd9fce0575b02424e58958eb424315acac15","","api.github.com,git_clone","[u'[""setup.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2014-04-12 10:10:38","Merge pull request #237 from jturmel/add_crypto_token_generator

Add crypto token capability","455b105b9f1b7bb8ea4b3d44e3dd00f6ca7cc8a1","","api.github.com,git_clone","[u'[""tox.ini"", ""oauthlib/oauth2/rfc6749/tokens.py"", ""requirements.txt"", ""oauthlib/common.py"", ""tests/oauth2/rfc6749/test_server.py"", ""setup.py"", "".travis.yml"", ""oauthlib/oauth2/rfc6749/endpoints/pre_configured.py""]']","False","[]","[{u'raw': u'#237', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'237', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2014-10-17 08:39:45","Merge pull request #282 from singingwolfboy/document-envvars

Document environment variables","456d85faf277b130a8710a5744e04b13caa72747","","api.github.com,git_clone","[u'[""docs/oauth2/clients/client.rst"", ""docs/oauth2/oauth2.rst"", ""docs/oauth2/security.rst""]']","False","[]","[{u'raw': u'#282', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'282', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-02-04 23:17:26","Revert default urlencoding","457212b12a441d9b117d7ac8543869caeb5fd186","","api.github.com,git_clone","[u'[""tests/test_common.py"", ""oauthlib/common.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-11-13 12:12:37","Merge pull request #69 from senko/fix-oauth1-verify-request-retval

Fix oauth1 Server.verify_request() return value","45a57f79579c5310d28b3d1905c54414b9cd8e73","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/__init__.py"", ""tests/oauth1/rfc5849/test_server.py""]']","False","[]","[{u'raw': u'#69', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'69', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-09-19 08:54:47","Remove now obsolete doc files.","45c75b6d90825be0e70d1390c5a4f192092ea5e5","","api.github.com,git_clone","[u'[""docs/oauth2/overview.rst"", ""docs/oauth1/endpoints.rst"", ""docs/oauth2/endpoints.rst"", ""docs/oauth2/tokens.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2014-04-18 14:44:04","Merge pull request #246 from x746e/patch-1

Removed mention of django-oauth-toolkit from oauth1 server docs.","45d7967ff0630de1c88e2de12fd59fde40eb0dec","","api.github.com,git_clone","[u'[""docs/oauth1/server.rst""]']","False","[]","[{u'raw': u'#246', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'246', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","hoylen","2017-08-01 05:26:04","Fixed default get_default_realms to raise NotImplementedError.","46230575731178b69956debfd40371d26bbd3bf3","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/request_validator.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","tomchristie","2012-11-13 13:12:36","Include self in authors","466600ce8fe53a433883ee6fd2f29026cb0c48a4","","api.github.com,git_clone","[u'[""AUTHORS""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","flippmoke","2013-05-16 15:56:41","Removed the use of the flask g object from the extension, the properties can now be pulled from the OAuth2ProviderDecorator","4735da3da8542270c5f17e6ec9f7160408172f28","","api.github.com,git_clone","[u'[""oauthlib/oauth2/ext/flask.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-09-19 09:16:03","Use validator.rotate_refresh_token to decide whether to replace or re-use. Fix #194.","4757b62140a0e0aa6f96b6269ade5802442d066a","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/request_validator.py"", ""oauthlib/oauth2/rfc6749/tokens.py""]']","False","[]","[{u'raw': u'#194', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'194', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","dgouldin","2012-03-14 05:24:21","Moving to headers dict from authorization_header string, fixing authorization header creation, adding unescape util function, normalizing the format of params returned by collect_parameters.","478e24fa447fd953bdf1a4960426a98d698dff71","","api.github.com,git_clone","[u'[""oauthlib/utils.py"", ""oauthlib/parameters.py"", ""oauthlib/oauth.py"", ""oauthlib/signature.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","steve.huwig@unizin.org","2017-01-05 15:07:22","Add log statements to except clauses","47f38135620f9ee515df265bf4ec3877b3ef6500","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/endpoints/signature_only.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-11-11 22:50:16","Merge pull request #67 from lalinsky/refresh-kwargs

Make it possible to pass extra parameters to prepare_refresh_body","483c0ec464476cc2f7dc888211c3c7f077e25728","","api.github.com,git_clone","[u'[""oauthlib/oauth2/draft25/__init__.py""]']","False","[]","[{u'raw': u'#67', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'67', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2014-10-23 17:45:36","Add blinker to tox.ini","48647eb093337f9db73c69d7027b6a657b20ff35","","api.github.com,git_clone","[u'[""tox.ini""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-03-28 10:38:33","Merge pull request #129 from andy-shea/tokentypefix

Changed token type validation to be case-insensitive","48a17b3262d5b7b11dc06de8a215f9d68503e05a","","api.github.com,git_clone","[u'[""oauthlib/oauth2/draft25/__init__.py"", ""tests/oauth2/draft25/test_client.py""]']","False","[]","[{u'raw': u'#129', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'129', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","dgouldin","2012-03-12 18:30:55","Adding a stub module for section 3.4 of the spec (signature).","48f895420b67e0e260deca8b17bc3a4c0bf688c3","","api.github.com,git_clone","[u'[""oauthlib/signature.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2015-04-02 11:38:33","Merge pull request #298 from techtonik/patch-1

Fix docs - python-rsa is not used","4902549a2a60973e1c8195f8ed7993ceedd9098d","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/signature.py""]']","False","[]","[{u'raw': u'#298', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'298', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2014-10-16 08:53:18","Merge pull request #278 from RodneyRichardson/issues/277/add-state-to-oauth2error

Issues/277/add state to oauth2error","4a14f204908eb7f6fb9ac3a0ece5730b3d4146cb","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/grant_types/refresh_token.py"", ""oauthlib/oauth2/rfc6749/grant_types/resource_owner_password_credentials.py"", ""oauthlib/oauth2/rfc6749/grant_types/client_credentials.py"", ""oauthlib/oauth2/rfc6749/grant_types/authorization_code.py"", ""oauthlib/oauth2/rfc6749/grant_types/base.py"", ""oauthlib/oauth2/rfc6749/grant_types/implicit.py"", ""oauthlib/oauth2/rfc6749/errors.py""]']","False","[]","[{u'raw': u'#278', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'278', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","matthewlmcclure","2013-05-03 04:18:26","Make normalize_base_string_uri handle scheme and path more conformantly

* only accept absolute URIs including a scheme
* use the root path if the input path is empty","4a7130d9c0c5097b2b218bafcde4667ca559111f","","api.github.com,git_clone","[u'[""tests/oauth1/rfc5849/test_client.py"", ""tests/oauth1/rfc5849/test_signatures.py"", ""oauthlib/oauth1/rfc5849/signature.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","idan","2012-03-13 18:24:08","Added documentation stubs for client and server usage","4aa165583874e57f13bb86139d092770670026ad","","api.github.com,git_clone","[u'[""docs/client.rst"", ""docs/server.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","singingwolfboy","2014-09-16 02:23:51","Add links to Flask-Dance","4aa81a592e92c4b33add235db308b28adfa4b9fe","","api.github.com,git_clone","[u'[""README.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","jdufresne","2017-10-27 15:56:28","When deploying a release to PyPI, include the wheel distribution (#496)

For Travis CI documentation on including a bdist_wheel distribution,
see:

https://docs.travis-ci.com/user/deployment/pypi/#Uploading-different-distributions

Fixes #493","4b85d90a54572f54b8b19d036d76d043cf116699","","api.github.com,git_clone","[u'["".travis.yml""]']","False","[u'https://docs.travis-ci.com/user/deployment/pypi/#Uploading-different-distributions']","[{u'raw': u'#493', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'493', u'']}, {u'raw': u'#496', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'496', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","joelstevenson","2016-04-16 00:46:13","Merge branch 'openid_connect' of https://github.com/joelstevenson/oauthlib into openid_connect","4c160d739a322964b873ca60f90df5384e337c44","","api.github.com,git_clone","[u'[]']","False","[u'https://github.com/joelstevenson/oauthlib']","[]","[]","[]"
"commit_messages","","idan","oauthlib","idan","2012-04-11 09:50:30","Move oauth2 bits to their new home","4c2f7f90b4c756b152cf9ff4fc7c413a2694e8cc","","api.github.com,git_clone","[u'[""tests/oauth2_draft25/test_tokens.py"", ""tests/oauth2/draft25/test_tokens.py"", ""oauthlib/oauth2_draft25/tokens.py"", ""oauthlib/oauth2/draft25/tokens.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-03-02 19:52:02","Merge branch 'master' of https://github.com/idan/oauthlib","4ca52e6c64a31bb245ab7c476ef84a01e5563f79","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/__init__.py"", ""oauthlib/common.py""]']","False","[u'https://github.com/idan/oauthlib']","[]","[]","[]"
"commit_messages","","idan","oauthlib","st4lk","2015-03-26 18:09:22","precise oauth1 client workflow","4cc868b45ef7291dba89162551754c0be8a2baf9","","api.github.com,git_clone","[u'[""docs/oauth1/client.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","synasius","2013-05-29 12:05:57","Add request parameters to error object","4cdceb0bb6a36fb1387c400db6dd24b442535c3c","","api.github.com,git_clone","[u'[""oauthlib/oauth2/draft25/errors.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","dgouldin","2012-03-13 06:52:12","Fixing signature module to escape the components of the base signature string correctly, making unicode -> string conversions sane.","4cf57012884090aa7374a30f0a697559df0730e9","","api.github.com,git_clone","[u'[""oauthlib/parameters.py"", ""oauthlib/signature.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","idan","2012-04-19 06:29:57","Merge pull request #20 from calebbrown/master

Bug fixes for the OAuth 1.0 Client and Server","4d26eb92e9a1f568bd7667fc857b83d47a372708","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/utils.py"", ""tests/oauth1/rfc5849/test_utils.py"", ""AUTHORS"", ""tests/oauth1/rfc5849/test_server.py"", ""oauthlib/oauth1/rfc5849/signature.py"", ""oauthlib/oauth1/rfc5849/__init__.py""]']","False","[]","[{u'raw': u'#20', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'20', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-06-18 20:23:05","Base endpoint for parameter checking and signature verification. #95","4d627ce3e0f1ebe346052b8dcae92d04a42af105","","api.github.com,git_clone","[u'[""tests/oauth1/rfc5849/endpoints/test_base.py"", ""oauthlib/oauth1/rfc5849/endpoints/base.py""]']","False","[]","[{u'raw': u'#95', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'95', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","metatoaster","2013-01-11 15:11:27","Fix a mess to formatting made in parent.","4d64a2c6ea6ae80e43130186a4266f90175b4590","","api.github.com,git_clone","[u'[""tests/oauth1/rfc5849/test_server.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","tikitu","2012-08-14 10:48:15","Fix Idan's github name in docs/contributing.rst

idangazit -> idan","4d74b697df3c54bce315e1d404b3f7ad4123be99","","api.github.com,git_clone","[u'[""docs/contributing.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","idan","2012-03-12 23:20:05","Merge branch 'master' of github.com:idangazit/oauthlib","4d96ddeff527c3c56a420ee43447076184715e67","","api.github.com,git_clone","[u'["".gitignore""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2014-10-01 13:58:00","Support for extra token validators and code modifiers.","4da15da8e4ac49b42f7d5ab2c9b42de2f2d194c6","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/grant_types/authorization_code.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","idan","2012-03-12 23:23:52","Didn't do this right the last time?","4e1248bbc3af81cdb70433d5d6aaca085769a8bf","","api.github.com,git_clone","[u'[""tests/parameters.py"", ""tests/test_parameters.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","kennethreitz","2012-04-07 22:03:27","simplify travis","4e2bbbdd5127e6980290739dc0e6f3f2b6459196","","api.github.com,git_clone","[u'["".travis.yml""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","masci@evonove.it","2013-09-18 13:31:41","client authentication needed by default","4ea5db5724bf71d84d27f4c68f177129bac1c637","","api.github.com,git_clone","[u'[""tests/oauth2/rfc6749/test_request_validator.py"", ""oauthlib/oauth2/rfc6749/request_validator.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","swsnider","2012-11-09 08:04:00","clarify that only the Authorization: header can contain the realm parameter.","4eb0c575b62e43e368671e1e52122afdfd80df10","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/__init__.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2017-03-19 12:48:15","Bump version to 2.0.2.","4ec41c67e36355cd2aeca094d676b172fea4717a","","api.github.com,git_clone","[u'[""CHANGELOG.rst"", ""oauthlib/__init__.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-05-20 17:11:39","0.4.1","4ed94f7fac84c69b799f475444729320aa7888be","","api.github.com,git_clone","[u'[""setup.py"", ""README.rst"", ""docs/conf.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","dasevilla","2014-05-16 00:22:07","Use OAUTHLIB_INSECURE_TRANSPORT","4ef9e33d85ef85998ea2a4d211569056058524cf","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/utils.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","kennethreitz","2013-05-14 13:50:05","Merge pull request #149 from stephane/docs-wrap-80

Docs wrap 80","4f0f00122a9d5be9efdbb8413c3618bed3f3a380","","api.github.com,git_clone","[u'[""docs/oauth2_overview.rst"", ""docs/server2.rst"", ""docs/client.rst"", ""docs/tokens.rst"", ""docs/server.rst"", ""docs/endpoints.rst"", ""docs/contributing.rst"", ""docs/index.rst""]']","False","[]","[{u'raw': u'#149', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'149', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","dgouldin","2012-04-24 16:20:25","Removing an errant comma (oops). NOTE: 2 tests are currently broken: tests.oauth1.rfc5849.test_server.ServerTests.test_server_callback_request & tests.oauth1.rfc5849.test_server.ServerTests.test_basic_server_request","4f3c81a194a725b7b9eea4ea6d9f663cf6b9c036","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/signature.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-02-20 22:43:48","Refactor auth code client_id fallback auth","4f48d73e39e81d28215399952aeb1da672cd8c9a","","api.github.com,git_clone","[u'[""tests/oauth2/draft25/test_grant_types.py"", ""tests/oauth2/draft25/test_servers.py"", ""oauthlib/oauth2/draft25/grant_types.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","CoolGoose","2015-03-01 10:09:01","fix method params and clarify oauth_protected","4f913c6a6568c815e207435f1f12c72bdb1d7547","","api.github.com,git_clone","[u'[""docs/oauth1/server.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-09-12 10:47:34","Merge branch 'master' of https://github.com/idan/oauthlib","4f9c5bf32008ff5d6c34597737d6fca7613dd769","","api.github.com,git_clone","[u'["".travis.yml"", "".travis_install.py"", ""oauthlib/oauth2/rfc6749/request_validator.py""]']","False","[u'https://github.com/idan/oauthlib']","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2014-10-01 13:58:19","New validator method get_auth_code_scopes.","4fec68d3e587db718fafd2554ef6094893b93431","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/request_validator.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","techtonik","2014-11-17 19:07:57","Fix docs - python-rsa is not used","4ffd675db432f8d1f25c9e8112195f62b51caa93","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/signature.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","idan","2012-03-13 19:03:22","PEP8 cleanup","502772f280428dc18ebd31e126e5d1bcd50913f2","","api.github.com,git_clone","[u'[""oauthlib/signature.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","dgouldin","2012-03-24 17:15:15","Merge pull request #5 from ib-lundgren/hmac_test

Updated HMAC test","50f37791e6f8aadd6f8f923047c0ad885023d21a","","api.github.com,git_clone","[u'[""tests/test_signatures.py""]']","False","[]","[{u'raw': u'#5', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'5', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","squirly","2013-07-26 18:35:55","Updated flask server example.","513ec6afbb6ab663fd1c9578f4a64fc734d7cb68","","api.github.com,git_clone","[u'[""docs/oauth1/server.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2015-04-19 14:30:19","Merge pull request #323 from josephtate/master-fix-306

Fix #306: handle token responses where no scope is provided because it has not changed","514cad74bde4cd7781b496155058a79507245798","","api.github.com,git_clone","[u'[""tests/oauth2/rfc6749/test_parameters.py"", ""oauthlib/oauth2/rfc6749/tokens.py""]']","False","[]","[{u'raw': u'#306', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'306', u'']}, {u'raw': u'#323', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'323', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","wannabehero","2015-02-14 08:37:05","Providing `oauth_body_hash` for bodies on non-form-encoded requests","51675237c410b413a11091926436420493c52866","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/__init__.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","squirly","2013-08-02 00:05:38","Document possibility and handling  of oob callback in get_redirect_uri.","517e01f5db428fe4c3e56119faad1760a8841c9f","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/request_validator.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-02-21 22:37:45","Client association tests","51ce5b7ac7b196bfbc4a44eb1376aa7acf23ac14","","api.github.com,git_clone","[u'[""tests/oauth2/draft25/test_servers.py"", ""oauthlib/oauth2/draft25/grant_types.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-03-02 19:57:54","Wreaking havoc in the world of documentation","520865b6631d91c560a94ebabe476926ed9878e9","","api.github.com,git_clone","[u'[""tests/oauth2/draft25/test_server.py"", ""docs/client.rst"", ""docs/legacyapplicationclient.rst"", ""docs/validator.rst"", ""oauthlib/oauth2/draft25/grant_types.py"", ""docs/backendapplicationclient.rst"", ""docs/client2.rst"", ""docs/authcode.rst"", ""docs/endpoints.rst"", ""oauthlib/oauth2/draft25/parameters.py"", ""docs/implicit.rst"", ""oauthlib/oauth2/draft25/tokens.py"", ""docs/oauth2_overview.rst"", ""oauthlib/oauth2/__init__.py"", ""docs/server.rst"", ""docs/preconfigured_servers.rst"", ""tests/oauth2/draft25/test_servers.py"", ""docs/server2.rst"", ""oauthlib/oauth2/draft25/__init__.py"", ""docs/decorators.rst"", ""docs/webapplicationclient.rst"", ""docs/credentials.rst"", ""tests/oauth2/draft25/test_grant_types.py"", ""docs/mobileapplicationclient.rst"", ""tests/oauth2/draft25/test_client.py"", ""docs/tokens.rst"", ""docs/security.rst"", ""docs/password.rst"", ""oauthlib/oauth2/ext/django.py"", ""docs/index.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","lepture","2013-05-31 09:11:00","docstring fix","529fe69f995c8e5ba98e89dce624f2c1def9737a","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/request_validator.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-05-20 09:29:48","Make escape error message more informative.","52a25183d5074a1207ed733e6c0bf5510dd07f80","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/utils.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-03-25 12:41:02","Invalid client tests.","52beecea4597cc3b2c873a5e477d4d2e924c07d0","","api.github.com,git_clone","[u'[""tests/oauth2/draft25/test_servers.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","lepture","2013-05-28 09:07:51","clean whitespace, fix blank lines according to pep8","52d26568d1221baab3a4d759819d43f3cd10f9b1","","api.github.com,git_clone","[u'[""oauthlib/oauth2/draft25/__init__.py"", ""oauthlib/oauth2/draft25/utils.py"", ""oauthlib/oauth2/draft25/exceptions.py"", ""oauthlib/oauth2/ext/flask.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2017-09-18 07:58:01","Merge pull request #481 from skion/always-nonce

Pass through nonce in code flow","52d50679024586e157ffab365978af38497d07e6","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/grant_types/openid_connect.py"", ""tests/oauth2/rfc6749/endpoints/test_prompt_handling.py"", ""tests/oauth2/rfc6749/endpoints/test_openid_connect_params_handling.py""]']","False","[]","[{u'raw': u'#481', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'481', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-02-05 21:36:32","First go at OAuth 2 provider docs","531185bb90662824f054ee03f20aa0b11223edbb","","api.github.com,git_clone","[u'[""docs/server2.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","matthewlmcclure","2013-05-02 21:00:07","Fix a copy-paste-o in a link to RFC 3986","536425b37b0e7360ab83d53df8ed54f7254a3a25","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/signature.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","kdazzle","2015-05-09 19:18:12","#340 - raise AttributeError from common.Request.__getattr__+ add tests","539558a02edbadb8d6ef690fb0beb2510a5eeb17","","api.github.com,git_clone","[u'[""tests/test_common.py"", ""oauthlib/common.py""]']","False","[]","[{u'raw': u'#340', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'340', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","idan","2012-03-14 00:26:34","Resolve merge conflict","547b6095fb51f055d333310af96f8eb61de29807","","api.github.com,git_clone","[u'[""tests/test_utils.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","dgouldin","2012-03-13 03:44:32","Making callback_uri optional again in client (whoops), adding a util function to generate random token strings.","5481b130526ec604937bd71fa4dc214a7ab003ef","","api.github.com,git_clone","[u'[""oauthlib/utils.py"", ""oauthlib/oauth.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","RodneyRichardson","2014-10-07 14:26:12","Remove redundant ""state=request.state"" parameters","54a4632171d054ba2e1ad7538c74d626432d0dbe","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/grant_types/refresh_token.py"", ""oauthlib/oauth2/rfc6749/grant_types/resource_owner_password_credentials.py"", ""oauthlib/oauth2/rfc6749/grant_types/client_credentials.py"", ""oauthlib/oauth2/rfc6749/grant_types/authorization_code.py"", ""oauthlib/oauth2/rfc6749/grant_types/base.py"", ""oauthlib/oauth2/rfc6749/grant_types/implicit.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","joelstevenson","2016-04-29 19:55:19","Parse request.claims in ResourceEndpoint.verify_request() when the token's scope includes openid and there are claims submitted in the request.","5546a120153899d8d712a048f664dcb55bb4b791","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/endpoints/resource.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","lepture","2013-05-31 03:18:31","debug support for prepare_grant_uri","55679cadef0c784317bc571b3a2d593ad6a3687a","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/parameters.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","idan","2012-03-12 18:33:26","Add utils, parameters.py","55c51c87f4557aee58ec093735f318b5da094cc8","","api.github.com,git_clone","[u'[""oauthlib/parameters.py"", ""oauthlib/utils.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","singingwolfboy","2014-09-12 02:49:31","Make scope change warning more informative","55d89cdcfd311add19d15aad975c949c1f3d8cf7","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/parameters.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","mikix","2012-09-03 15:13:35","fix some byte/unicode arguments for Python 2.6's benefit","56a5c730609b9d8ac4ec4303448ae79c7443216e","","api.github.com,git_clone","[u'[""oauthlib/oauth2/draft25/utils.py"", ""oauthlib/oauth1/rfc5849/signature.py"", ""oauthlib/oauth1/rfc5849/utils.py"", ""oauthlib/common.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-06-27 17:27:09","0.2.1","56b0cec481c7457a658b54f979f0fea3c1189c12","","api.github.com,git_clone","[u'[""setup.py"", ""README.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2014-05-28 12:51:50","Improve urldecode error message on incorrectly encoded strings. CC #227.","56c6c38a99bb35b1065fa650fa8937122e47ab57","","api.github.com,git_clone","[u'[""oauthlib/common.py""]']","False","[]","[{u'raw': u'#227', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'227', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-05-17 08:56:35","Merge pull request #150 from Kroisse/master

Fix some typo in the example code","578434565ef52332f55d785da2bd39a45014328e","","api.github.com,git_clone","[u'[""examples/skeleton_oauth2_web_application_server.py""]']","False","[]","[{u'raw': u'#150', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'150', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-07-02 21:27:24","Native client -> client credentials client","57aecb0648ada06d89ba790944ac01036ff21e16","","api.github.com,git_clone","[u'[""oauthlib/oauth2/draft25/__init__.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-06-12 15:36:58","Merge pull request #41 from marienz/issue40-tests-dict-ordering

Improve tests, fixing issue #40","57fbf34e050893c3f213549448723bc8e2233781","","api.github.com,git_clone","[u'[""tests/oauth1/rfc5849/test_signatures.py"", ""tests/oauth1/rfc5849/test_utils.py""]']","False","[]","[{u'raw': u'#40', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'40', u'']}, {u'raw': u'#41', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'41', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","idan","2012-05-02 05:57:39","Merge branch 'master' of github.com:idangazit/oauthlib","5806535de38a552fd0bb68af928cd19a9e8727bd","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/utils.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-05-21 14:38:48","Merge pull request #148 from flippmoke/master

Flask OAuth2 Provider and Dynamic Scopes","5836435fa2911092ebc0b0418b5f7bf9b106cb48","","api.github.com,git_clone","[u'[""docs/server2.rst"", ""oauthlib/oauth2/ext/django.py"", ""oauthlib/oauth2/ext/flask.py"", ""AUTHORS""]']","False","[]","[{u'raw': u'#148', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'148', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","jvanasco","2015-08-12 16:37:21","adding validator_log to store what the endpoint computed","58a2a735ac329f890c5dd4a042b35ee544084db0","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/endpoints/request_token.py"", ""oauthlib/common.py"", ""oauthlib/oauth1/rfc5849/endpoints/signature_only.py"", ""oauthlib/oauth1/rfc5849/endpoints/resource.py"", ""tests/oauth1/rfc5849/endpoints/test_resource.py"", ""oauthlib/oauth1/rfc5849/endpoints/access_token.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","idan","2012-05-06 06:54:44","Use python-rsa instead of pycrypto

Switched because pycrypto has binary bits which require compilation, making
usage of oauthlib on windows more painful than necessary.","5917e4c5fd67256acd0b838bd29065b3b632312c","","api.github.com,git_clone","[u'[""setup.py"", ""oauthlib/oauth1/rfc5849/signature.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","idan","2012-04-23 06:25:56","Add Request representation","5935e5de29d1162ed83b7cab7aa1de5e4258d203","","api.github.com,git_clone","[u'[""tests/test_common.py"", ""oauthlib/common.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-03-25 14:07:54","Invalidate auth code after use.","593ee6bdad3b781019bee1fc5be4a06589a068c1","","api.github.com,git_clone","[u'[""oauthlib/oauth2/draft25/grant_types.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","squirly","2013-08-01 19:32:53","Fixed error in example, added myself to authors.","59483c6dfbd260a4f18815edebc0bd3e4f58152d","","api.github.com,git_clone","[u'[""docs/oauth1/server.rst"", ""AUTHORS""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2016-04-10 08:45:59","Fix pypy upgrade script.","59986721afff63040966a8858c64950a0a485cd7","","api.github.com,git_clone","[u'["".travis.yml""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","kennethreitz","2012-04-07 22:12:10","make test","59ba874311931639c8161474c86a09da83296b7b","","api.github.com,git_clone","[u'["".travis.yml""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-07-21 13:50:44","Multiple scopes support","59e4b5f0ded7733ac36d3be81e859c324e4df781","","api.github.com,git_clone","[u'[""oauthlib/oauth2/draft25/utils.py"", ""oauthlib/oauth2/draft25/parameters.py"", ""tests/oauth2/draft25/test_parameters.py"", ""tests/oauth2/draft25/test_client.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","aleksandr@butchershopcreative.com","2013-10-10 16:21:02","Set headers on client credentials access token response","5a85227295dbd7e23138acd921cc058206bb062c","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/grant_types/client_credentials.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-07-09 16:48:25","Merge branch 'master' of https://github.com/scfarley/oauthlib into scfarley-master","5a9d57dd5f179102ed95cbc75986f913bb6fb326","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/utils.py"", ""tests/oauth1/rfc5849/test_utils.py""]']","False","[u'https://github.com/scfarley/oauthlib']","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2014-10-24 14:01:38","Fix forgotten test in prev. commit py3 issue.","5a9f7444e5cfbb8a4c11b66619783094a336252e","","api.github.com,git_clone","[u'[""tests/oauth2/rfc6749/test_parameters.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","edevil","2013-10-28 17:52:51","Include the request object in the returned dict, it can be used to cache information that will be used later.","5b135340a51396124cb51cd246b0a0e598852bb0","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/grant_types/implicit.py"", ""oauthlib/oauth2/rfc6749/grant_types/authorization_code.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-08-03 18:56:17","Merge pull request #199 from squirly/master

The authorization endpoint now returns a 200 on ""oob"" oauth_callbacks.","5b8aa2d3762d5f800a1db3d07f15702cb007c7e9","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/endpoints/request_token.py"", ""tests/oauth1/rfc5849/endpoints/test_authorization.py"", ""AUTHORS"", ""tests/oauth1/rfc5849/endpoints/test_request_token.py"", ""tests/oauth1/rfc5849/endpoints/test_base.py"", ""oauthlib/oauth1/rfc5849/endpoints/authorization.py"", ""docs/oauth1/server.rst"", ""oauthlib/oauth1/rfc5849/request_validator.py"", ""tests/oauth1/rfc5849/endpoints/test_access_token.py"", ""oauthlib/oauth1/rfc5849/endpoints/access_token.py""]']","False","[]","[{u'raw': u'#199', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'199', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","diox","2014-02-11 16:56:00","Fix docstrings to reflect the actual returned value of validate_* methods","5bb609ee0118fadb9fad484ace924761f9e1a30c","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/endpoints/request_token.py"", ""oauthlib/oauth1/rfc5849/endpoints/access_token.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","hoylen","2017-01-18 04:06:28","Include function names for NotImplementedError exceptions.","5c05aa0fe0d9277acf557eb243c8164c8695a391","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/request_validator.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","dafyddcrosby","2012-11-20 17:12:30","Fix broken setup.py bdist_rpm","5c72ca703a76c37276c16253f3694e21cd4c5123","","api.github.com,git_clone","[u'[""setup.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","mitgr81","2015-08-04 14:53:10","Python3 fix: encodes request body before hashing

In python 3 hashlib works on bytestrings, so we need to encode arguments
to most, if not all, hashing functions.","5c81414cbb242f921939500a1c27eec8256a015f","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/__init__.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","dgouldin","2012-03-14 06:07:58","Tweaking function signatures for more sensible defaults.","5cba7e11ab8dc72f1faf0a6a4681475ee8ffaea7","","api.github.com,git_clone","[u'[""oauthlib/oauth.py"", ""oauthlib/signature.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","kennethreitz","2014-06-23 19:12:13","Merge pull request #255 from frewsxcv/patch-1

Enable automated testing with Python 3.4","5cdd8f7e4c8d8ac2adbc1639cbd1a83c3071f738","","api.github.com,git_clone","[u'["".travis.yml""]']","False","[]","[{u'raw': u'#255', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'255', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-10-25 10:37:41","Merge pull request #35 from eriolv/please-provide-tests-as-a-package

Please provide tests as a package","5d0b4c57d86427c82209f8929df673ebdf7a6308","","api.github.com,git_clone","[u'[""setup.py""]']","False","[]","[{u'raw': u'#35', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'35', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","jturmel","2014-03-30 04:33:26","Changes per PR comments

* Rename methods from crypto to signed
* Since generating a signed token to be used as a refresh token could be a bit
  overkill in terms of length/storage, allow setting of refresh token generator
  separately, or it defaults to whatever the other token generator was set to
* Simplify tests per PR comments","5d0fc1182f6d9826764cc43ade99bc5e5a81c711","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/tokens.py"", ""tests/oauth2/rfc6749/test_server.py"", ""oauthlib/oauth2/rfc6749/endpoints/pre_configured.py"", ""oauthlib/common.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-05-30 11:50:43","Fix #78.","5e246a16924161fdda538973e4a9645f39f0cfcf","","api.github.com,git_clone","[u'[""docs/contributing.rst""]']","False","[]","[{u'raw': u'#78', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'78', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-02-05 21:36:11","OAuth 2 provider convenience imports","5e429e8e4af20872fd5dd559856fa0ee082c16c1","","api.github.com,git_clone","[u'[""oauthlib/oauth2/__init__.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","eriol","2012-05-04 23:29:47","Provided tests as a package so tests/__init__.py and
test/test_common.py won't be missing. Right now tests shipped in
sdist are broken because of the missing files.","5eacf802ed21e12fdf983223fb9d1546a366f8e6","","api.github.com,git_clone","[u'[""setup.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-02-20 21:48:08","Missing default or invalid redirect_uri tests.","5eb0b50b6397c59195f7f359b3d1b2cdf343ea2e","","api.github.com,git_clone","[u'[""tests/oauth2/draft25/test_servers.py"", ""oauthlib/oauth2/draft25/grant_types.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2014-10-24 13:27:57","Fix flaky test depending on internal order.

Python 3 is not consistent in internal order
when using sets, dicts etc and test should
not depend on that being the case.","5f18bb11be7d627cc31e197fd137200846e3b009","","api.github.com,git_clone","[u'[""tests/oauth2/rfc6749/test_parameters.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-03-15 22:37:56","Ignore Vim .swp files","5f76b1485649278d690c1ab35a5237ad33b128c2","","api.github.com,git_clone","[u'["".gitignore""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","pydanny","2012-03-13 07:00:25","Merge branch 'master' of github.com:idangazit/oauthlib","5fec3523188d5e5f1b55cd5ee0a941592bf0574b","","api.github.com,git_clone","[u'[""oauthlib/parameters.py"", ""oauthlib/signature.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-03-16 22:37:44","Allow body=dict/list in sign_request","6059f9b483d9ca0a1f53a1edfc08b75347bc84e0","","api.github.com,git_clone","[u'[""oauthlib/signature.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","marienz","2012-06-06 21:16:06","Use more specific assert methods in the tests where possible.

This should make no difference as long as the tests pass, but produce
better messages if they fail.","605e04637c0d03d1ea1709ee1650567d14f2c554","","api.github.com,git_clone","[u'[""tests/oauth1/rfc5849/test_signatures.py"", ""tests/oauth1/rfc5849/test_utils.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-03-24 17:07:48","Added control hmac key","6069b12a36a6dcc5e77db594dd842743e786a0e4","","api.github.com,git_clone","[u'[""tests/test_signatures.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","pydanny","2012-03-13 21:47:17","Test fix.","609c675a28a0cb299b56db0b3e54aa19437eb11c","","api.github.com,git_clone","[u'[""tests/test_utils.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2016-08-28 07:48:56","Merge pull request #429 from vincent-kuwornu/docs-typo

Fix typo in docstring.","60b5a353d5d63de0430fe8b6fab253555510c1d3","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/clients/base.py""]']","False","[]","[{u'raw': u'#429', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'429', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2017-03-31 09:09:27","Merge pull request #456 from empiricalthought/master

Add log statements to except clauses","6115f2259831a3d16e0d8e9a630a1c109f366c09","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/endpoints/signature_only.py""]']","False","[]","[{u'raw': u'#456', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'456', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2017-08-02 09:03:18","Merge pull request #458 from hoylen/doc-edits

Documented PyJWT dependency and improved logging and exception messages","612ac5b0f606e689b86d6918884391cb8e07c060","","api.github.com,git_clone","[u'[""docs/oauth1/client.rst"", ""docs/oauth1/server.rst"", ""oauthlib/oauth1/rfc5849/endpoints/signature_only.py"", ""oauthlib/oauth1/rfc5849/signature.py"", ""oauthlib/oauth1/rfc5849/__init__.py"", ""oauthlib/oauth1/rfc5849/request_validator.py""]']","False","[]","[{u'raw': u'#458', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'458', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","asteinlein","2014-04-30 16:51:43","Use 401 status code for some OAuth 2 errors","615b8136f3488319222a43ca55d40854d6cd8fd1","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/grant_types/refresh_token.py"", ""tests/oauth2/rfc6749/grant_types/test_resource_owner_password.py"", ""tests/oauth2/rfc6749/grant_types/test_refresh_token.py"", ""oauthlib/oauth2/rfc6749/errors.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","mvo5","2012-09-24 12:50:56","add the ""realm"" at the right place","619c8db9ac78f5e6b4a59f3b344df968969988bd","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/__init__.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","kippandrew","2016-12-07 04:57:00","Fix tests","619db8c1e0cee28182011e9802efddaf1bd5e237","","api.github.com,git_clone","[u'[""tests/oauth2/rfc6749/endpoints/test_revocation_endpoint.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-09-12 09:05:33","Restructure OAuth2 tests.","62058f2d031d91bb6173fe06a1f6f11e22a9f03e","","api.github.com,git_clone","[u'[""tests/oauth2/rfc6749/endpoints/test_extra_credentials.py"", ""tests/oauth2/rfc6749/test_grant_types.py"", ""tests/oauth2/rfc6749/endpoints/test_utils.py"", ""tests/oauth2/rfc6749/endpoints/test_client_authentication.py"", ""tests/oauth2/rfc6749/endpoints/test_resource_owner_association.py"", ""tests/oauth2/rfc6749/grant_types/test_refresh_token.py"", ""tests/oauth2/rfc6749/test_utils.py"", ""tests/oauth2/rfc6749/test_servers.py"", ""tests/oauth2/rfc6749/endpoints/test_error_responses.py"", ""tests/oauth2/rfc6749/endpoints/test_scope_handling.py"", ""tests/oauth2/rfc6749/grant_types/test_resource_owner_password.py"", ""tests/oauth2/rfc6749/test_request_validator.py"", ""tests/oauth2/rfc6749/grant_types/test_implicit.py"", ""tests/oauth2/rfc6749/endpoints/test_base_endpoint.py"", ""tests/oauth2/rfc6749/grant_types/test_authorization_code.py"", ""oauthlib/oauth2/rfc6749/request_validator.py"", ""tests/oauth2/rfc6749/endpoints/test_credentials_preservation.py"", ""tests/oauth2/rfc6749/grant_types/test_client_credentials.py"", ""tests/oauth2/rfc6749/endpoints/__init__.py"", ""tests/oauth2/rfc6749/grant_types/__init__.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-09-13 09:32:53","Refactor common tests into subject area tests.","62435fcb0cbfb5a9b1578244da555f1c2fcdcbb7","","api.github.com,git_clone","[u'[""tests/test_common.py"", ""oauthlib/common.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","mdxs","2014-07-10 14:44:51","Show support for Python 3.4","62604da4e5d728bf2ccc4e9e470f70a3aa180a88","","api.github.com,git_clone","[u'[""setup.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2014-07-06 17:25:24","Add the first few OpenID connect error classes.","6290435070bd7b27c3e7c52c0cb22fb454ad452f","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/errors.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2014-10-23 18:40:48","Move changelog into its own file.","62ee76f22e8b0a53b2eda4a88e2891ed6578083b","","api.github.com,git_clone","[u'[""CHANGELOG.rst"", ""README.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-02-21 21:54:01","Optional token generator","6302b1f66378ff54b9899803fefa598e3c19570a","","api.github.com,git_clone","[u'[""oauthlib/oauth2/draft25/__init__.py"", ""oauthlib/oauth2/draft25/tokens.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-02-18 19:23:15","Trying out travis+tox #115","636ec2bd79cf2ef5c716f55eec615ec8996e91ec","","api.github.com,git_clone","[u'["".travis.yml""]']","False","[]","[{u'raw': u'#115', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'115', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","swistakm","2014-05-22 08:51:56","docs: add missing method usage info in oauth1 RequestValidator.get_realms() docstring","63d24136625d430a91778c521d5d5a90ba612fed","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/request_validator.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2014-04-12 10:07:17","Merge pull request #239 from aspiredu/master

Add support for custom signature methods to `oauth1.Client`","6450527b935bb9167d550a220b9c9839302bca74","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/__init__.py"", ""tests/oauth1/rfc5849/test_client.py"", ""tests/oauth1/rfc5849/test_signatures.py"", ""oauthlib/oauth1/rfc5849/signature.py""]']","False","[]","[{u'raw': u'#239', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'239', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2014-06-03 13:39:59","Merge pull request #251 from tuannh99/master

Accept 'Content-Type: application/x-www-form-urlencoded;charset=utf8' al...","64cd2af9ad3cb4c1b28af024549efc982c79fbc1","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/endpoints/base.py""]']","False","[]","[{u'raw': u'#251', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'251', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","skion","2017-02-13 23:08:38","Add two error codes from RFC 6750.","652560b2a4dff97607d04a204d119af17ecd50e9","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/errors.py"", ""oauthlib/oauth2/rfc6749/endpoints/pre_configured.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","pydanny","2012-03-13 06:54:43","Adding in test for sign_plaintest method in signatures. :cake:","65965740d6c2aa56fb3737af242e430895711e0d","","api.github.com,git_clone","[u'[""tests/test_signatures.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-07-09 17:01:28","Merge branch 'pypi' of https://github.com/lepture/oauthlib into lepture-pypi","66127c5cfa91b3b76a4c342ef36f55a09e077cd1","","api.github.com,git_clone","[u'[""setup.py""]']","False","[u'https://github.com/lepture/oauthlib']","[]","[]","[]"
"commit_messages","","idan","oauthlib","steve.huwig@unizin.org","2017-01-09 14:32:29","Use a more grep-able variable name","66260fab4a9bd81ba9e74323147bad3f25ddcd56","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/endpoints/signature_only.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-11-18 17:59:58","Sketching out some endpoint tests","66701d5a0ecd802a5bcc1fc8373f03058722f7a8","","api.github.com,git_clone","[u'[""tests/oauth2/draft25/test_server.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2014-07-06 17:25:24","Add the first few OpenID connect error classes.","67369baee81dfbfb6d89dd8404da8c91f14ba209","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/errors.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2015-07-02 08:46:10","Merge pull request #341 from kdazzle/request-getattr

#340 - calling getattr on Request should raise an AttributeError if that attribute doesn't exist","674543558fa95c41285b874390a54f28e36983a9","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/grant_types/resource_owner_password_credentials.py"", ""oauthlib/common.py"", ""tests/test_common.py"", ""oauthlib/oauth2/rfc6749/grant_types/client_credentials.py"", ""oauthlib/oauth2/rfc6749/grant_types/authorization_code.py"", ""oauthlib/oauth2/rfc6749/grant_types/base.py""]']","False","[]","[{u'raw': u'#340', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'340', u'']}, {u'raw': u'#341', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'341', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2016-09-03 08:57:48","Fix travis.","67f973ff7f98bb3d892a33eda67ba1dab3bddead","","api.github.com,git_clone","[u'["".travis.yml""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","lalinsky","2012-11-10 14:17:06","Add support for v01 MAC tokens","680459a1b9e42fab645138a587a218a77a8234d7","","api.github.com,git_clone","[u'[""oauthlib/oauth2/draft25/__init__.py"", ""tests/oauth2/draft25/test_client.py"", ""oauthlib/oauth2/draft25/utils.py"", ""oauthlib/oauth2/draft25/tokens.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","metatoaster","2013-01-11 14:43:01","Test for callback verification

  - Not all requests will need the oauth_callback attribute.
  - For requests that need it (i.e. requests for Temporary Credentials)
    they must be checked.","6817f4fb527bd423b16ce16d91ad4af30538f6b5","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/__init__.py"", ""tests/oauth1/rfc5849/test_server.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","idan","2012-04-29 10:59:39","More string format fixes for python 2.6","68896d81b70ed09d47d31c96bf0afa074af587db","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/__init__.py"", ""oauthlib/oauth2/draft25/tokens.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","pydanny","2012-03-13 22:25:23","Test on urlencode utils function","68eed85afb02492e89dc74f4e5b0b9f54d6b400d","","api.github.com,git_clone","[u'[""tests/test_utils.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","lepture","2013-05-31 03:18:57","add myself in authors","692d3d348f5ab85cc202062e0065e3143e4e62f2","","api.github.com,git_clone","[u'[""AUTHORS""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2016-12-06 12:17:20","Update CHANGELOG.rst","69302c8c5c91a2398863484e480bc57fad83d459","","api.github.com,git_clone","[u'[""CHANGELOG.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","lepture","2015-07-28 05:46:00","Add client_secret for Request","69645ff5d8b918aaefca0a8d0caaef23d5fe3662","","api.github.com,git_clone","[u'[""oauthlib/common.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","senko","2012-11-13 10:03:40","test that oauth1 Server.verify_request has consistent return value type","698eaffb8a434e251141759c63bfaa6ac37debf6","","api.github.com,git_clone","[u'[""tests/oauth1/rfc5849/test_server.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-11-18 17:12:50","Import constants in oauth1 from rfc","69ccf40329fdbae9353cae781df131886dfd1b45","","api.github.com,git_clone","[u'[""oauthlib/oauth1/__init__.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","joelstevenson","2016-04-26 00:24:50","Iterate correctly over response_types dict without using six","69decb87e64d0f6b61283f3c1910bd6672a1da3f","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/endpoints/authorization.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2015-07-19 08:50:15","Merge pull request #360 from idan/save-authorization_code-docs

Save authorization code docs","69dff9c34b007858a1a342537dd8580ecaa793d0","","api.github.com,git_clone","[u'[""tests/oauth2/rfc6749/endpoints/test_revocation_endpoint.py"", ""oauthlib/oauth2/rfc6749/request_validator.py""]']","False","[]","[{u'raw': u'#360', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'360', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-01-07 22:59:33","Experimental default unicode conversion (#53, #68, #86)","69ec1ab5698e1f8530615f7900f74ddf21aee183","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/__init__.py"", ""tests/oauth1/rfc5849/test_client.py"", ""tests/test_common.py"", ""oauthlib/common.py""]']","False","[]","[{u'raw': u'#53', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'53', u'']}, {u'raw': u'#68', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'68', u'']}, {u'raw': u'#86', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'86', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-11-08 20:34:55","Merge remote-tracking branch 'swsnider/master'","69ec6824c6721cdc4623143b8eae48723d844fb6","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/__init__.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2015-04-02 11:23:35","Merge pull request #335 from st4lk/oauth1_docs

Precise oauth1 client workflow in documentation","69f11a195403ca6853086f553d07f3857f761e62","","api.github.com,git_clone","[u'[""docs/oauth1/client.rst""]']","False","[]","[{u'raw': u'#335', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'335', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-02-05 19:22:20","Merge branch 'master' of https://github.com/idan/oauthlib","6a1c1654bfa34c01bb8d733cf2ed4b13eabc929d","","api.github.com,git_clone","[u'[""requirements.txt""]']","False","[u'https://github.com/idan/oauthlib']","[]","[]","[]"
"commit_messages","","idan","oauthlib","cheif","2015-06-26 13:48:33","Handle empty/non-parsable query strings","6a4351461304508203ca9eb522cfa055e8831020","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/grant_types/implicit.py"", ""oauthlib/oauth2/rfc6749/grant_types/authorization_code.py"", ""tests/oauth2/rfc6749/endpoints/test_error_responses.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","vincent-kuwornu","2016-07-07 13:56:22","Fix typo in docstring.","6a498c7952df6aa5e41aab8a64e1cfbe057e650b","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/clients/base.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","idan","2012-04-23 08:46:41","PEP8, whitespace cleanup. Unused code/imports removal.","6a4a5ab88a9a8a774aa70631a79ca9c1b3ad5570","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/__init__.py"", ""oauthlib/oauth1/rfc5849/utils.py"", ""oauthlib/oauth1/rfc5849/parameters.py"", ""oauthlib/oauth1/rfc5849/signature.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-06-18 20:23:57","Authorization endpoint. #95","6a634e0fe9abf14058e56749ecfa27db1c6b1732","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/endpoints/authorization.py"", ""tests/oauth1/rfc5849/endpoints/test_authorization.py""]']","False","[]","[{u'raw': u'#95', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'95', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","dgouldin","2012-03-13 04:03:03","Fixing a bunch of unicode errors.","6a7e6ffcc2e8f2ddcdb9fba02fc00e6bb2b4f90a","","api.github.com,git_clone","[u'[""oauthlib/utils.py"", ""oauthlib/oauth.py"", ""oauthlib/signature.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","svetlyak40wt","2014-12-01 13:21:49","Add release dates to versions where it is possible. They are recovered from commit messages.","6b991666e46490cdf15990753930bd2a8148f3e3","","api.github.com,git_clone","[u'[""CHANGELOG.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-05-31 10:11:50","Merge branch 'master' of https://github.com/idan/oauthlib","6bb22001c85ea1b155d5dfcc680e210ac72dcf13","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/parameters.py"", ""tests/oauth2/rfc6749/test_utils.py"", ""oauthlib/oauth2/rfc6749/utils.py"", ""oauthlib/oauth2/rfc6749/request_validator.py"", ""AUTHORS""]']","False","[u'https://github.com/idan/oauthlib']","[]","[]","[]"
"commit_messages","","idan","oauthlib","lepture","2013-05-24 13:19:29","add more python version in travis and tox. #73","6c0c76c98e740b62b9dd55cf14a263a35b9f1909","","api.github.com,git_clone","[u'["".travis.yml"", ""tox.ini""]']","False","[]","[{u'raw': u'#73', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'73', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","pydanny","2012-03-13 19:52:12","Add a test for filtered params.","6c0c7914f3a57823834b1be492b307992f943629","","api.github.com,git_clone","[u'[""tests/test_utils.py"", ""oauthlib/oauth.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2016-04-10 08:51:36","Fix the build for python 3.2.","6c0d7cf441e6aba214162826f0dd59a2d7585273","","api.github.com,git_clone","[u'["".travis.yml""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2014-09-25 16:21:28","Sketching out an improved OAuth 2 client API.

The new API will be more consistent than the current and include a few
more security checks. This should reduce the work necessary for people
building OAuth 2 client support into their favourite HTTP request
framework.

Currently undocumented, untested and subject to change in the near
future.","6c14274ca7260c4eb849495d87a4c9f0d61daf53","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/clients/base.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","tomchristie","2013-06-17 13:43:33","Typo. `include` -> `includes`","6c3c6d86cd8d45911e7a5317bd33ce15c69f3e25","","api.github.com,git_clone","[u'[""README.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","pydanny","2012-03-14 06:18:08","Merge branch 'master' of github.com:idangazit/oauthlib","6cc32aaae5c97e36e32c04232e1135e1e82a0177","","api.github.com,git_clone","[u'[""oauthlib/oauth.py"", ""oauthlib/signature.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","warsaw","2013-01-04 17:08:03","Fix issue #86 by adding `nonce` and `timestamp` arguments to Client
constructor.  In get_oauth_params(), use the explicitly provided nonce and
timestamp if given, otherwise generate them.","6d562597e5c1c23743331b9682a5eb9a1c36afbc","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/__init__.py"", ""tests/oauth1/rfc5849/test_client.py""]']","False","[]","[{u'raw': u'#86', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'86', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","calebbrown","2012-04-19 03:08:02","Add self to AUTHORS","6d56d09ac887130a1cc2c1f0d3cce30fc70b629b","","api.github.com,git_clone","[u'[""AUTHORS""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-06-20 14:07:22","Add initial refresh token grant tests. Fix #182.","6d762fce70fcd4edc70358c4b7ef72591cc7518a","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/grant_types/refresh_token.py"", ""tests/oauth2/rfc6749/test_grant_types.py""]']","False","[]","[{u'raw': u'#182', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'182', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","dmuller@guidebook.com","2014-09-29 21:08:48","Test ResourceOwnerPasswordCredentialsGrant generates no refresh token","6dee915acf998c5fbc18d7a342dc9ca570127dfa","","api.github.com,git_clone","[u'[""tests/oauth2/rfc6749/grant_types/test_resource_owner_password.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-03-25 12:33:27","Unsupported grant type tests.","6dfe89d41665771512da367f7ba30c991e8c1a4d","","api.github.com,git_clone","[u'[""tests/oauth2/draft25/test_servers.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","richardasaurus","2016-07-08 14:04:27","Update tox.ini","6eca23db3492411f139ba405195d8b19e5052418","","api.github.com,git_clone","[u'[""tox.ini""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","squirly","2013-08-01 00:02:56","Fixed flask server example.","6efc8c04e46d5a731962e2fae9b9599097c5a2d4","","api.github.com,git_clone","[u'[""docs/oauth1/server.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-05-30 11:56:02","Fix links from draft25 - rfc move.","6f1f4b660f8fcfbdc21a33c8df51485c2bb5725a","","api.github.com,git_clone","[u'[""docs/tokens.rst"", ""docs/validator.rst"", ""docs/legacyapplicationclient.rst"", ""docs/webapplicationclient.rst"", ""docs/credentials.rst"", ""docs/baseclient.rst"", ""docs/preconfigured_servers.rst"", ""docs/backendapplicationclient.rst"", ""docs/mobileapplicationclient.rst"", ""docs/endpoints.rst"", ""docs/authcode.rst"", ""docs/password.rst"", ""docs/implicit.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2014-06-10 10:31:21","Merge pull request #252 from teeberg/master

Copy variables dict before scrubbing secrets.","6f4fb95255b9242237edb3c22d7fcab791e77d8d","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/__init__.py""]']","False","[]","[{u'raw': u'#252', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'252', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-02-19 19:43:46","State preservation check.","6f8ad0fe85692629ba60532bbefaee1642c3dc75","","api.github.com,git_clone","[u'[""tests/oauth2/draft25/test_servers.py"", ""oauthlib/oauth2/draft25/grant_types.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-03-24 17:47:35","added keywords","6f95a037af0901d49ff3174d33672105b7ef3a08","","api.github.com,git_clone","[u'[""oauthlib/signature.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-06-25 12:19:07","updates to tokens and realm","6fcf91723dd2efc3f8279b52b8f1a0ad47b216c9","","api.github.com,git_clone","[u'[""docs/server.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-07-12 13:50:11","Blank out scopes arg in token endpoint.","6fe70413ee6c87720ea6421d64683624f230795a","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/endpoints/token.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2014-09-25 16:25:46","Merge branch 'autopep8'","6ffcc4f2ae6b66e42c1f58b6de634fe969b473a0","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/parameters.py"", ""oauthlib/oauth2/rfc6749/clients/base.py"", ""oauthlib/oauth2/rfc6749/endpoints/revocation.py"", ""tests/oauth2/rfc6749/clients/test_base.py"", ""tests/oauth2/rfc6749/endpoints/test_revocation_endpoint.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2017-03-31 09:11:17","Merge pull request #453 from kippandrew/fix-revocation-public-clients

Public clients should be validated when revoking tokens","70262c730450b28e07d3543c1a6d48c13cd7ea1e","","api.github.com,git_clone","[u'[""tests/oauth2/rfc6749/endpoints/test_revocation_endpoint.py"", ""oauthlib/oauth2/rfc6749/endpoints/revocation.py""]']","False","[]","[{u'raw': u'#453', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'453', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2015-07-01 09:47:07","Merge pull request #336 from josephtate/betterscopesupport

Allow tuples for list_to_scope as well as sets and lists","70879b5c79b0469d1015b225a82aa5598c84d5cb","","api.github.com,git_clone","[u'[""tests/oauth2/rfc6749/test_utils.py"", ""oauthlib/oauth2/rfc6749/utils.py""]']","False","[]","[{u'raw': u'#336', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'336', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-06-29 12:01:25","Merge branch 'master' of https://github.com/idan/oauthlib","70b256eb16f55be65e9542d06854333eb403b57d","","api.github.com,git_clone","[u'[""setup.py""]']","False","[u'https://github.com/idan/oauthlib']","[]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2017-03-31 09:08:11","Merge pull request #459 from jdufresne/uni-wheel

Add universal wheel support","70dd283be31ae02284bcf16fcd29385bbf917bee","","api.github.com,git_clone","[u'[""setup.cfg""]']","False","[]","[{u'raw': u'#459', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'459', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","calebbrown","2012-04-18 11:38:41","Extract the signature method for the signature method, not the
signature.","7118970bb198b1bd34c43e0073da54df3d09d749","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/__init__.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","kdazzle","2015-05-24 23:29:23","Merge remote-tracking branch 'upstream/master' into request-getattr","7168c03ce6307f21e632dfbbfc62e1a89e6282a3","","api.github.com,git_clone","[u'[""tests/oauth2/rfc6749/endpoints/test_revocation_endpoint.py"", ""oauthlib/oauth2/rfc6749/endpoints/revocation.py"", ""README.rst"", ""oauthlib/oauth2/rfc6749/errors.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","pydanny","2012-03-13 20:24:22","Add test utils","716e60b5f69a1c51c2861c36b17dc55a8d6929d2","","api.github.com,git_clone","[u'[""tests/test_utils.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-03-24 17:14:39","Removed oauth_token from required params","72557abea0956324ea34c9edf5e93cde283eab51","","api.github.com,git_clone","[u'[""oauthlib/oauth.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","andy-shea","2013-03-28 01:39:22","Changed token type validation to be case-insensitive.","725b5f5fb8d398d388b76eed13c9e0c3519d5139","","api.github.com,git_clone","[u'[""oauthlib/oauth2/draft25/__init__.py"", ""tests/oauth2/draft25/test_client.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-02-14 22:44:50","Merge pull request #112 from ondrowan/oauth1_server_callback_fix

Fixed verify_request_token_request in OAuth1 server","729d18188918d055a4fde34fca94fb1b2c10e518","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/__init__.py"", ""tests/oauth1/rfc5849/test_server.py"", ""AUTHORS""]']","False","[]","[{u'raw': u'#112', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'112', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","dgouldin","2012-03-14 04:35:28","Fixing a broken prepare_form_encoded_body test.","72c34cd0da24374c25b83dbae560aed9968149b6","","api.github.com,git_clone","[u'[""tests/test_parameters.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","grunskis","2013-03-04 14:19:19","generate documentation from source files, part of #125","73435ef9fbe1094c504d8920882b48d8372a2916","","api.github.com,git_clone","[u'[""docs/conf.py""]']","False","[]","[{u'raw': u'#125', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'125', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-03-02 19:51:59","Docs improvements","73536bb3f5cf57ff3d96db735774dc97a44a898b","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/__init__.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","skion","2017-02-21 21:34:07","Redirect errors according to response_mode.","739c67342f71c94d10b0f2af869202a9391ae3f4","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/grant_types/authorization_code.py"", ""oauthlib/oauth2/rfc6749/errors.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-06-18 20:27:47","Access token endpoint. #95","73a618068c70dc7698960f55c2ed5fc70074fde9","","api.github.com,git_clone","[u'[""tests/oauth1/rfc5849/endpoints/test_access_token.py"", ""oauthlib/oauth1/rfc5849/endpoints/access_token.py""]']","False","[]","[{u'raw': u'#95', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'95', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","loisaidasam","2013-04-16 22:13:08","fixing a few typos in the doc...","73d82b3d0361d6a17bffc19a30142ec321465c63","","api.github.com,git_clone","[u'[""docs/server2.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","idan","2012-05-01 19:52:22","Add dstufft to AUTHORS","73de3fb4c428a3b101a46b040c2a7fa2c171ff26","","api.github.com,git_clone","[u'[""AUTHORS""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","lepture","2013-07-03 07:08:18","use realms as the list container, realm as the string container","73ed8f4dd3c496ce06bf691627f48988c2e62b3e","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/endpoints/request_token.py"", ""oauthlib/oauth1/rfc5849/endpoints/resource.py"", ""oauthlib/oauth1/rfc5849/request_validator.py"", ""oauthlib/oauth1/rfc5849/endpoints/access_token.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","andreif","2013-02-06 23:09:40","Use absolute import in Django extension fixing self-import.","7409cd817a5011b3acd348f2be16130d2e59e380","","api.github.com,git_clone","[u'[""oauthlib/oauth2/ext/django.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2015-08-16 12:06:48","Merge pull request #376 from jvanasco/fix-docstring_invalidate

fixed docsting on `invalidate_request_token`","740d6b3415554a246e3dff944aafc584ec211466","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/request_validator.py""]']","False","[]","[{u'raw': u'#376', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'376', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-07-24 14:03:00","Merge pull request #198 from kumy/master

Add star to the set of safe characters in urls","742da83b759e4df9a93bfa34dee7eb98e36db680","","api.github.com,git_clone","[u'[""tests/test_common.py"", ""oauthlib/common.py""]']","False","[]","[{u'raw': u'#198', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'198', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","skion","2017-02-23 21:34:15","Hybrid response types should be fragment-encoded.","75c83e4d9aec4ed2699c5427e030202a4e8a9264","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/grant_types/openid_connect.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2015-04-02 11:04:54","Merge pull request #310 from georgewhewell/lock-requirements

Lock requirements to specific versions. Use requirements.txt for tox dep...","75e44a92a8f92dbeceb5874d3a5d9688594ab7bc","","api.github.com,git_clone","[u'["".travis.yml"", ""requirements.txt"", ""requirements-test.txt"", ""tox.ini""]']","False","[]","[{u'raw': u'#310', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'310', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2015-04-19 14:29:32","Merge pull request #322 from josephtate/fix-pyjwt-gte-0.4.0

This patch fixes PyJWT support when pyjwt >= 0.4.0","761ff80b48006250e285aae15347f49bf2cf8978","","api.github.com,git_clone","[u'[""CHANGELOG.rst"", ""docs/oauth1/client.rst"", ""oauthlib/oauth2/rfc6749/clients/service_application.py"", ""oauthlib/common.py"", ""docs/faq.rst"", ""requirements.txt"", ""oauthlib/oauth2/rfc6749/utils.py"", ""docs/feature_matrix.rst"", ""tests/oauth1/rfc5849/test_signatures.py"", ""tests/oauth2/rfc6749/test_server.py"", ""tests/oauth2/rfc6749/test_utils.py"", ""tests/oauth2/rfc6749/clients/test_service_application.py"", ""oauthlib/oauth1/rfc5849/signature.py"", ""setup.py""]']","False","[]","[{u'raw': u'#322', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'322', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","pydanny","2012-03-13 22:41:41","testing the parsing of auth headers","76855e5a2f449cda8dc16ecde21ec77ef8a05730","","api.github.com,git_clone","[u'[""tests/test_utils.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","swsnider","2012-11-09 17:04:25","adding myself to AUTHORS as suggested by idan.","76bc671637e65a87a81b7f95f256adec2e4fdfc4","","api.github.com,git_clone","[u'[""AUTHORS""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","johanmeiring","2013-04-03 12:47:17","Fixes decorators that were throwing errors","76e8bc7eff107000849f7428e469c70801680e3f","","api.github.com,git_clone","[u'[""oauthlib/oauth2/ext/django.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","lepture","2013-05-29 12:18:56","coverall only cover the package, not the tests","77a4bf2fb595e79bb24d8173c69b8886e852fe33","","api.github.com,git_clone","[u'["".travis.yml""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2014-10-03 13:32:56","OpenID Connect core tests.","77c7774589e7e2348947ba3fb6a070795bba1819","","api.github.com,git_clone","[u'[""tests/oauth2/rfc6749/grant_types/test_openid_connect.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","joelstevenson","2016-11-22 16:38:25","Fix a typo","7843972fa4334709149f0247cce643491784504a","","api.github.com,git_clone","[u'[""tests/oauth2/rfc6749/test_server.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-03-16 10:24:00","Changed OAuthServer to match argument changes","785fe3cd04560d81331c6a7cbac6b6a95e85118f","","api.github.com,git_clone","[u'[""oauthlib/oauth.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2014-10-03 13:28:44","Implicit authorization response mode test.","7879224c905f7f56f1fc0710765a6ce4d5edc0d0","","api.github.com,git_clone","[u'[""tests/oauth2/rfc6749/grant_types/test_implicit.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","pydanny","2012-03-13 18:46:17","Merge","78c4eb3c1c3b96fbbc3e8477a30fb003d5cff49f","","api.github.com,git_clone","[u'[""oauthlib/utils.py"", ""docs/client.rst"", ""oauthlib/signature.py"", ""tests/test_signatures.py"", ""docs/server.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","bjmc","2016-12-22 15:00:15","Update custom validator tests","790310a6e1e7e1ce434ef478507d9a1c9464e298","","api.github.com,git_clone","[u'[""tests/oauth2/rfc6749/grant_types/test_client_credentials.py"", ""tests/oauth2/rfc6749/grant_types/test_resource_owner_password.py"", ""tests/oauth2/rfc6749/grant_types/test_implicit.py"", ""tests/oauth2/rfc6749/grant_types/test_authorization_code.py"", ""tests/oauth2/rfc6749/grant_types/test_refresh_token.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","idan","2012-03-13 19:46:06","PEP8 Nazi Strikes Again. News at Eleven.","7912f511d5ce94795a9feb37c2bb7ba6ce3b8d54","","api.github.com,git_clone","[u'[""oauthlib/oauth.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-05-31 10:51:50","Merge pull request #169 from dasevilla/organize-docs

Organize documentation into directories","79214fe20e9c37b7ef64e6bea7354a9bd0ab2fd0","","api.github.com,git_clone","[u'[""docs/client.rst"", ""docs/legacyapplicationclient.rst"", ""docs/validator.rst"", ""docs/oauth_1_versus_oauth_2.rst"", ""docs/backendapplicationclient.rst"", ""docs/client2.rst"", ""docs/oauth2/server.rst"", ""docs/authcode.rst"", ""docs/endpoints.rst"", ""docs/password.rst"", ""docs/implicit.rst"", ""docs/oauth2_overview.rst"", ""docs/oauth2/overview.rst"", ""docs/preconfigured_servers.rst"", ""docs/oauth2/validator.rst"", ""docs/oauth2/clients/baseclient.rst"", ""docs/server.rst"", ""docs/baseclient.rst"", ""docs/oauth2/clients/backendapplicationclient.rst"", ""docs/oauth2/clients/legacyapplicationclient.rst"", ""docs/oauth2/grants/credentials.rst"", ""docs/oauth2/grants/password.rst"", ""docs/oauth1/client.rst"", ""docs/oauth1/oauth1.rst"", ""docs/oauth2/clients/mobileapplicationclient.rst"", ""docs/server2.rst"", ""docs/oauth1/server.rst"", ""docs/webapplicationclient.rst"", ""docs/credentials.rst"", ""docs/mobileapplicationclient.rst"", ""docs/oauth2/clients/client.rst"", ""docs/tokens.rst"", ""docs/oauth2/tokens.rst"", ""docs/oauth2/preconfigured_servers.rst"", ""docs/oauth2/security.rst"", ""docs/oauth2/clients/webapplicationclient.rst"", ""docs/oauth2/endpoints.rst"", ""docs/oauth2/grants/implicit.rst"", ""docs/oauth2/grants/authcode.rst"", ""docs/oauth2/oauth2.rst"", ""docs/security.rst"", ""docs/index.rst""]']","False","[]","[{u'raw': u'#169', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'169', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","lepture","2013-05-24 13:36:09","only install unittest2 on python 2.6 and 2.7","792ec98b20fb176e348bd059d42b9b663859aac6","","api.github.com,git_clone","[u'["".travis.yml"", "".travis_install.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2014-06-04 13:28:30","Add __repr__ for oauth 1 clients.","792efda9e8f9372c1db4981f7d3ec29b1fd9f602","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/__init__.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2015-08-16 12:11:48","Updated changelog and bumped to 1.0.3","79722b2aa0b191db4a345ce29095b70d92ded140","","api.github.com,git_clone","[u'[""CHANGELOG.rst"", ""oauthlib/__init__.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","tomchristie","2012-11-16 14:22:18","Fix link (had trailing underscore)","79824fd90dbb0e9a68d4d602263f8950f308ad15","","api.github.com,git_clone","[u'[""README.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","idan","2012-04-12 14:41:35","Rename sign_request to sign","7987f6de95614fe48090a8030bd63bbf28a7a521","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/__init__.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","lepture","2015-07-02 07:05:05","Hide user password in repr of Request","7996067921ddd5eb3ff889270a5b02ce14997b10","","api.github.com,git_clone","[u'[""oauthlib/common.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","dgouldin","2012-03-24 17:52:07","Merge pull request #11 from ib-lundgren/duplicate_keys

Allow empty strings and duplicate keys in query and body","79edcf572ea1c7f038adb4085124c958541e7cd1","","api.github.com,git_clone","[u'[""tests/test_signatures.py"", ""oauthlib/signature.py""]']","False","[]","[{u'raw': u'#11', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'11', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-09-25 11:55:47","Merge pull request #214 from masci/fix_client_authentication_required_call

Fix bug in client_authentication_required call","79ee3f7e6a8dd74c9745c0bc39c619488fa9f7d0","","api.github.com,git_clone","[u'[""tests/oauth2/rfc6749/grant_types/test_refresh_token.py"", ""oauthlib/common.py"", ""oauthlib/oauth2/rfc6749/grant_types/authorization_code.py"", ""tests/oauth2/rfc6749/grant_types/test_authorization_code.py"", ""AUTHORS"", ""tests/oauth2/rfc6749/grant_types/test_resource_owner_password.py""]']","False","[]","[{u'raw': u'#214', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'214', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","wiliamsouza","2013-02-27 23:59:38","Added generate_client_id function to common","7a0783d356504867f4a4868717f6e5e7d1b90a10","","api.github.com,git_clone","[u'[""tests/test_common.py"", ""oauthlib/common.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","masci","2014-01-19 22:58:01","added tests for content type checking","7a775552f546eae024027a3521aadaa01783f973","","api.github.com,git_clone","[u'[""tests/oauth2/rfc6749/grant_types/test_client_credentials.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","pydanny","2012-03-13 05:10:34","empty test for RSA","7ad93eae094f7108dbf01f6eb08d0e3c81c68f73","","api.github.com,git_clone","[u'[""tests/test_signatures.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","stephane","2013-05-23 14:28:33","Fix extracting of scope values from POST

Many inputs with same name are stored in a list.","7adc247d399cd3d90d6692a4f82cb170b2bdc012","","api.github.com,git_clone","[u'[""docs/server2.rst"", ""examples/skeleton_oauth2_web_application_server.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","flippmoke","2013-05-07 21:00:54","Added a new extension for oauth2 providers that integrates with flask.

Modified the existing scopes argument for django provider so that it now will
accept a function as well as a list object. This is done so that scopes can be dynamically
set.","7b00c4d7b0eeedceb30f67ad569569a7969c4da9","","api.github.com,git_clone","[u'[""oauthlib/oauth2/ext/flask.py"", ""AUTHORS""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2015-11-01 14:45:14","Merge pull request #398 from yohanboniface/patch-1

Code ident in server doc","7ba8c59124984d71123a5dda8cce3ed18cf4c96f","","api.github.com,git_clone","[u'[""docs/oauth2/server.rst""]']","False","[]","[{u'raw': u'#398', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'398', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2014-10-24 13:43:33","Convenience import of OAuth2Token","7c2beb8f49b29b39a6645b13a528d3e4b2a21e6f","","api.github.com,git_clone","[u'[""oauthlib/oauth2/__init__.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ondrowan","2013-02-13 16:43:59","Fixed wrong function reference in OAuth server docs","7c5b0ba793d7d524fe3b1a84f905ab4d317ccf09","","api.github.com,git_clone","[u'[""docs/server.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2015-07-19 10:26:28","Updated release date in changelog.
[skip-ci]","7ce4e54f600651db6bb0bd088c90d8cf1717ee8d","","api.github.com,git_clone","[u'[""CHANGELOG.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","cyrilchaponeverysens","2015-09-21 09:42:35","Add 'python' info to README

Updated readme to say that the library is for Python. I landed here just searching for generic *oauth* docs, and it took me like 30 seconds to realize that this library is a Python-specific implementation.","7d04c7d97cfa6d37274f246bafc4dbf752d5269e","","api.github.com,git_clone","[u'[""README.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","wrr","2013-11-05 15:34:47","is_within_original_scope method for refresh token grant (Issue #220)","7d4f5ce783206bce5eade09c45cca81c75b34cf1","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/grant_types/refresh_token.py"", ""tests/oauth2/rfc6749/test_request_validator.py"", ""tests/oauth2/rfc6749/grant_types/test_refresh_token.py"", ""oauthlib/oauth2/rfc6749/request_validator.py""]']","False","[]","[{u'raw': u'#220', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'220', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","parryjacob","2016-05-16 19:45:56","Cast body to a string to ensure that we can perform a regex substitution on it","7d6294b10cbe21bd7af67ce8b698b1c4ab18238c","","api.github.com,git_clone","[u'[""oauthlib/common.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-08-20 12:07:26","Merge pull request #204 from ocfuu/master

Fixed single typo in documentation","7d81b39d5df0206597a2baa107c4ce89e0a21a1b","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/request_validator.py""]']","False","[]","[{u'raw': u'#204', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'204', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-02-07 22:27:46","Fix #83","7dc262a95b57f429cd6179e8d5250b8462979e67","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/signature.py""]']","False","[]","[{u'raw': u'#83', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'83', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","TizianoPerrucci","2017-03-08 10:13:19","Fix base imports","7ecafcade8eaebc745f5b8aeec592b700cea04b2","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/clients/__init__.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","idan","2012-04-23 08:29:05","Merge branch 'master' into features/request_object

Conflicts:
	oauthlib/oauth1/rfc5849/__init__.py
	oauthlib/oauth1/rfc5849/parameters.py
	oauthlib/oauth1/rfc5849/signature.py","7f6b324167c0a3f9b9c81b8a0ab73611fe1cbcde","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/utils.py"", ""tests/oauth1/rfc5849/test_utils.py"", ""AUTHORS"", ""tests/oauth1/rfc5849/test_server.py"", ""oauthlib/oauth1/rfc5849/signature.py"", ""oauthlib/oauth1/rfc5849/__init__.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","pydanny","2012-03-13 04:59:08","Adding in the test_sign_hmac_sha1 method","7fe3e1952363ae6771338eaa841edac166620a45","","api.github.com,git_clone","[u'[""tests/test_signatures.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2016-11-23 10:18:36","Merge pull request #450 from joelstevenson/master

Normalize handling of request.scopes list","800808684dd3681d86b792ed5ed735237bc3dcd6","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/endpoints/token.py"", ""oauthlib/oauth2/rfc6749/tokens.py"", ""tests/oauth2/rfc6749/test_server.py"", ""oauthlib/oauth2/rfc6749/endpoints/authorization.py"", ""tests/oauth2/rfc6749/endpoints/test_scope_handling.py"", ""oauthlib/oauth2/rfc6749/grant_types/openid_connect.py""]']","False","[]","[{u'raw': u'#450', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'450', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","lepture","2013-05-31 09:15:56","use is_secure_transport to check uri","803736c30ed4a426d83daa21216c24163db5e7c6","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/parameters.py"", ""oauthlib/oauth2/rfc6749/utils.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-06-25 12:25:19","Verification methods","805112aefae3debc090191ee7d34afa2db953caf","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/signature.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-03-24 17:46:34","Merge branch 'master' of https://github.com/idangazit/oauthlib into duplicate_keys","80691afb3e404d23f25644849ce0c64de5e32db6","","api.github.com,git_clone","[u'[""tests/test_signatures.py"", ""oauthlib/oauth.py""]']","False","[u'https://github.com/idangazit/oauthlib']","[]","[]","[]"
"commit_messages","","idan","oauthlib","singingwolfboy","2014-10-05 13:21:55","Dispatch a blinker signal on scope change, instead of raising a warning

See https://github.com/idan/oauthlib/pull/265 for rationale.
In brief: raising any exception blows the stack, which is
inappropriate for a non-error state.","809553ccb71f5c046454e5ce2ac90ab0757729f0","","api.github.com,git_clone","[u'[""tests/oauth2/rfc6749/clients/test_backend_application.py"", ""oauthlib/oauth2/rfc6749/parameters.py"", ""tests/oauth2/rfc6749/clients/test_legacy_application.py"", ""oauthlib/oauth2/rfc6749/clients/backend_application.py"", ""oauthlib/oauth2/rfc6749/clients/mobile_application.py"", ""oauthlib/oauth2/rfc6749/clients/web_application.py"", ""tests/oauth2/rfc6749/test_parameters.py"", ""oauthlib/oauth2/rfc6749/clients/legacy_application.py"", ""tests/oauth2/rfc6749/clients/test_mobile_application.py"", ""oauthlib/signals.py"", ""tests/oauth2/rfc6749/clients/test_web_application.py"", ""AUTHORS"", "".travis.yml"", ""setup.py""]']","False","[u'https://github.com/idan/oauthlib/pull/265']","[{u'raw': u'https://github.com/idan/oauthlib/pull/265', u'refstyle': u'url', u'parts': [u'idan', u'oauthlib', u'265', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-07-09 17:11:58","0.5.0","809646f84cd2f0941773ce99acc95ea216ea1cb8","","api.github.com,git_clone","[u'[""setup.py"", ""README.rst"", ""docs/conf.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2014-09-01 13:53:28","Merge pull request #260 from aspiredu/urlencoded-at

Allow unescaped @ in urlencoded parameters","80ada0db6ddade8fe31c641c59a8dff929ef019c","","api.github.com,git_clone","[u'[""tests/test_common.py"", ""oauthlib/common.py""]']","False","[]","[{u'raw': u'#260', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'260', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","mvo5","2012-10-29 08:36:21","add some test coverage for the realm parameter","815bc0c1c4e68553386f81b109db95d28c94f991","","api.github.com,git_clone","[u'[""tests/oauth1/rfc5849/test_client.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2016-04-10 08:44:49","Added Python 3.4 and 3.5 to the build.","816de0a43da21f1eef0376e769cbb86572aa743f","","api.github.com,git_clone","[u'["".travis.yml"", ""tox.ini""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-05-29 13:07:14","Merge pull request #165 from lepture/coverall

coverall only cover the package, not the tests","8182baa58649743e0469a8a4f11c204da7e1dbd1","","api.github.com,git_clone","[u'["".travis.yml"", ""README.rst""]']","False","[]","[{u'raw': u'#165', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'165', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-05-31 11:27:34","Remove django+decorator bits of skeleton example.","81e5781760224900f2dbbf38ef6718ff59a0e344","","api.github.com,git_clone","[u'[""examples/skeleton_oauth2_web_application_server.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-11-11 22:46:32","Merge pull request #66 from lalinsky/mac-01

Add support for v01 MAC tokens","824987fcf6421eca7f0d7fb1c44005e995a2267f","","api.github.com,git_clone","[u'[""oauthlib/oauth2/draft25/__init__.py"", ""tests/oauth2/draft25/test_client.py"", ""oauthlib/oauth2/draft25/utils.py"", ""oauthlib/oauth2/draft25/tokens.py""]']","False","[]","[{u'raw': u'#66', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'66', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-07-02 21:27:48","More client tests","826c2742753be126dffff701eb0eda966b5849cf","","api.github.com,git_clone","[u'[""tests/oauth2/draft25/test_client.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","omerk@checkpoint.com","2017-09-17 11:23:57","Bump version.","82c77e3f716e9a2fd484e2e73fd666d2f9532a28","","api.github.com,git_clone","[u'[""CHANGELOG.rst"", ""oauthlib/__init__.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-09-12 10:44:43","Verification tests for all signature methods.","82fca5b2cb8fe647b565bbbe9dc5f36fb69f127d","","api.github.com,git_clone","[u'[""tests/oauth1/rfc5849/endpoints/test_base.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","kennethreitz","2013-04-16 22:42:40","Merge pull request #134 from loisaidasam/master

Trying to help out a bit, fixing a few misleading typos in the doc","83b353eafabcb8ad130278464128583028ebdbc9","","api.github.com,git_clone","[u'[""docs/server2.rst""]']","False","[]","[{u'raw': u'#134', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'134', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","fabfuel","2016-10-03 08:16:14","Ensure request.client_id, getting it optionally from request.client.client_id","83ed13701707b19420773f18a32aa8b688ae7a3c","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/grant_types/authorization_code.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","dgouldin","2012-04-21 04:43:41","Normalizing as much as possible to unicode, pulling in non-unicode functions from stdlib modules as unicode-safe variants in utils.","8402073613602a1f599602043176b00e097a1aa5","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/utils.py"", ""tests/oauth1/rfc5849/test_utils.py"", ""oauthlib/oauth1/rfc5849/parameters.py"", ""tests/oauth1/rfc5849/test_server.py"", ""oauthlib/oauth1/rfc5849/signature.py"", ""oauthlib/oauth1/rfc5849/__init__.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","skion","2017-09-13 22:18:07","Add test for nonce parameter preservation.","8437a24625aca5623b385aeba5e873f051871306","","api.github.com,git_clone","[u'[""tests/oauth2/rfc6749/endpoints/test_prompt_handling.py"", ""tests/oauth2/rfc6749/endpoints/test_openid_connect_params_handling.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2016-12-06 12:27:04","Update .travis.yml","8449a81cc4aec60b5a07c9bc3666bf3ee491278f","","api.github.com,git_clone","[u'["".travis.yml""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","squirly","2013-07-26 19:07:32","Fix for python3.","8470e680262a0ed84b7858d2184d310c7b958e46","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/endpoints/authorization.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","skion","2017-04-02 14:29:29","Add test for prompt=none exclusiveness.","84805f1929e4e83f24de2e8d7c47f2d0645ca52f","","api.github.com,git_clone","[u'[""tests/oauth2/rfc6749/endpoints/test_prompt_handling.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","pydanny","2012-03-13 00:13:15","Adding signature tests","84c58db585c2f12bfc7f00df871d620d87fd3d73","","api.github.com,git_clone","[u'[""tests/test_signatures.py"", ""docs/index.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","idan","2012-03-12 17:59:16","Add sublime-workspace to gitignore","85222377d7641eaefde81b1de215d1270009448e","","api.github.com,git_clone","[u'["".gitignore""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-02-11 23:25:30","Use urldecode instead of parse_qsl","857ad9c5ed778e00d42a5333863c10a6209bdd43","","api.github.com,git_clone","[u'[""tests/oauth1/rfc5849/test_signatures.py"", ""oauthlib/oauth1/rfc5849/signature.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","verbit","2014-08-04 01:49:03","enable convinient import for oauth1 errors","86173b4d4704cf67f16717350f5b95a808cf18ec","","api.github.com,git_clone","[u'[""oauthlib/oauth1/__init__.py"", ""oauthlib/oauth1/rfc5849/errors.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ibl@localhost","2014-10-16 09:03:38","First step towards supporting JWT bearer grants.

Initial support is only for clients and need more unit tests
as well as real service tests.

Server support to come later.","8624bfc87f0fa24548d01ee33de77fedd802d146","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/clients/__init__.py"", ""tests/oauth2/rfc6749/clients/test_service_application.py"", ""oauthlib/oauth2/rfc6749/clients/service_application.py"", ""oauthlib/oauth2/__init__.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","jturmel","2014-03-18 03:52:54","Use the to_unicode helper","864e6f66cebccbc93d5edeca2d5e1128f1b60181","","api.github.com,git_clone","[u'[""oauthlib/common.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","wrr","2013-11-12 10:32:15","Fix typo (Issue #224).","8671b4bf6bfb4c6e457d97a8d0b3ad7f638d75e1","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/request_validator.py""]']","False","[]","[{u'raw': u'#224', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'224', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","stephane","2013-05-06 11:52:22","Fix Sphinx warnings in oauth_1_versus_oauth_2 documentation","869356eb396409799ae34ff6243023aafc0150b3","","api.github.com,git_clone","[u'[""docs/oauth_1_versus_oauth_2.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","brunal","2015-03-11 10:29:12","Oauth1 signing: fix error message on invalid Content-Type header

Content-Type should be application/x-www-form-urlencoded when the
request to sign has a body. If it's not the case a ValueError was raised
saying Content-Type was missing, while it actually could just be wrongly
set (e.g. to application/json). Fix the error message to reflect the
real problem: expected & given Content-Type.","86986f35074fab7555c663bb168dc340e68bcc95","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/__init__.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","lepture","2013-05-24 13:27:46","remove unittest2, since it brokes on py3","86f31769adf3d4d5b896cf4dd561ab3737533d6c","","api.github.com,git_clone","[u'["".travis.yml""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","joelstevenson","2016-04-20 00:53:38","Fixup implicit flow authorization response and test","872b66c0057ae72c3be202ded54f3a3f5122f37e","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/grant_types/openid_connect.py"", ""oauthlib/oauth2/rfc6749/grant_types/authorization_code.py"", ""tests/oauth2/rfc6749/grant_types/test_openid_connect.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","g10f","2015-07-03 15:29:50","send no state in the access token response","8748c6e0e9a66e5b153dac528b313823c152bd19","","api.github.com,git_clone","[u'[""examples/skeleton_oauth2_web_application_server.py"", ""oauthlib/oauth2/rfc6749/grant_types/authorization_code.py"", ""oauthlib/oauth2/rfc6749/request_validator.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2015-11-30 10:19:09","Merge pull request #402 from lepture/request-token

Add request token for OAuth 1","87621472879b48592106aaf5adef6771e1cc9da9","","api.github.com,git_clone","[u'[""oauthlib/common.py""]']","False","[]","[{u'raw': u'#402', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'402', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-05-05 16:25:09","Merge pull request #143 from matthewlmcclure/idan/142

Fix defect in choice of authority for signature base string","87a6602c7abc0557519d72c8758afff7069985da","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/__init__.py"", ""tests/oauth1/rfc5849/test_client.py"", ""tests/oauth1/rfc5849/test_signatures.py"", ""oauthlib/oauth1/rfc5849/signature.py""]']","False","[]","[{u'raw': u'#143', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'143', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","dasevilla","2013-05-31 16:44:35","Update AUTHORS","87c9a49ec3ad4793c9ef89a5216f363bf56752e0","","api.github.com,git_clone","[u'[""AUTHORS""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","pydanny","2012-03-13 05:07:16","Adding in the test_sign_hmac_sha1 method","88e54b7921b9c3ab46fd339d7540e488c3263c62","","api.github.com,git_clone","[u'[""tests/test_signatures.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-02-11 23:26:05","Client.sign return value encoding.","88e8b1ae28cbaeb69bc76830a2f2ba3c9562c5c5","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/__init__.py"", ""tests/oauth1/rfc5849/test_client.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","dasevilla","2013-05-27 16:47:42","Use HttpLexer","8931f3ad93fa051ca81cf53dd1b1c8f7169c8142","","api.github.com,git_clone","[u'[""oauthlib/oauth2/draft25/__init__.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-07-08 22:24:44","Merge pull request #191 from masci/comma_safe_for_urls

Add comma to the set of safe characters in urls","8949286bf9ba266830d20de913019fa158491617","","api.github.com,git_clone","[u'[""tests/test_common.py"", ""oauthlib/common.py""]']","False","[]","[{u'raw': u'#191', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'191', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","idan","2012-04-11 09:47:11","Merge pull request #17 from ib-lundgren/oauth2_tokens

Bearer and MAC token support","89c685be55e5656385e36d670f2e6ab19ce09696","","api.github.com,git_clone","[u'[""tests/oauth2_draft25/test_tokens.py"", ""oauthlib/oauth2_draft25/tokens.py""]']","False","[]","[{u'raw': u'#17', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'17', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","djmitche","2015-02-27 19:58:30","Improve documentation for save_authorization_code et al.

This is based on a reading of the code and the RFC.","8a44ea0825a723da2bd8441ba46f903945d07299","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/request_validator.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-12-16 21:26:18","Added G+ community to README","8a5c7d2745dccf465e843b0330fcecfd1a23fec1","","api.github.com,git_clone","[u'[""README.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-05-31 21:48:47","Merge pull request #173 from dasevilla/patch-1

Update AUTHORS","8a7b279e44efacccab7eee6bb60143120c45eca1","","api.github.com,git_clone","[u'[""AUTHORS""]']","False","[]","[{u'raw': u'#173', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'173', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-02-05 22:11:32","Missed import in oauth 2 provider docs","8ab03a2fb7c5c1f081f38788b300d7fe72f45073","","api.github.com,git_clone","[u'[""docs/server2.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","dgouldin","2012-04-24 15:39:36","Improving in-line documentation of oauth1 rfc5849 signatures (section 3.4) for the purpose of annotated source.","8ac67937a76f22b204ab0772173ee70dc9335d7d","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/signature.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2016-11-24 15:54:12","Merge pull request #430 from richardasaurus/patch-1

Run tests against python 3.6 dev","8aed781d118baeb6b34d0546ca001b62b93e83a5","","api.github.com,git_clone","[u'[""tox.ini""]']","False","[]","[{u'raw': u'#430', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'430', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","weipin","2015-05-06 16:54:59","Add code to determine if client authentication is required for OAuth2 endpoint ""revocation""","8b0c466084e4f901f37ae310f3f19c4034a4c29b","","api.github.com,git_clone","[u'[""tests/oauth2/rfc6749/endpoints/test_revocation_endpoint.py"", ""oauthlib/oauth2/rfc6749/endpoints/revocation.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-09-17 12:58:16","Brief docs overview of the token revocation endpoint.","8b441dc66514873b70f1bff857c841f03da10dcd","","api.github.com,git_clone","[u'[""docs/oauth2/endpoints.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-06-18 20:32:29","Request validator tests.","8ba2b3a6c7b5ba94eae93187a0f4ac6dbe80d22f","","api.github.com,git_clone","[u'[""tests/oauth1/rfc5849/test_request_validator.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","idan","2012-04-11 10:04:39","Merge branch 'master' of github.com:idangazit/oauthlib","8c6275c846bee78a3c4c2998ea1e307b9665e3c2","","api.github.com,git_clone","[u'[""oauthlib/oauth2_draft25/utils.py"", ""tests/oauth2_draft25/test_utils.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-11-19 22:23:28","Unicode decoding crash'n'burn style, default off, #53, #68.","8c65b1eae1e0586f6fb36423d0d9f03ec9115c10","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/__init__.py"", ""tests/test_common.py"", ""oauthlib/common.py""]']","False","[]","[{u'raw': u'#53', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'53', u'']}, {u'raw': u'#68', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'68', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-02-18 17:51:45","Outline of upcoming oauth 2 tests.","8c6fd8d8b7ae7746eea3966db472763ef01c283f","","api.github.com,git_clone","[u'[""tests/oauth2/draft25/test_servers.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-03-25 15:44:30","Note on passing user in credentials.","8c8e8b9ea1363302b2f41a7b6dcd76536d0a593b","","api.github.com,git_clone","[u'[""docs/server2.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2015-07-04 14:19:10","Updated release notes.","8cdece757125de206ecdb9006d45ae69daf7acea","","api.github.com,git_clone","[u'[""CHANGELOG.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-02-04 23:17:51","0.3.6","8cfd533955b17ced400739018d375dacb4e1b9e3","","api.github.com,git_clone","[u'[""setup.py"", ""README.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","bjmc","2016-12-20 21:37:13","Do not split() request.prompt value if already a list","8d217d0b1f3ec3772e20c8847050278eccaa10b1","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/grant_types/openid_connect.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2016-04-11 09:49:02","Bumped version to 1.1.","8d35dc007fea413b37ec96e90a6380746ec39773","","api.github.com,git_clone","[u'[""CHANGELOG.rst"", ""oauthlib/__init__.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2014-05-27 12:34:47","Merge pull request #250 from swistakm/fix/oauth1-request-validator-docs-fixes

OAuth1.0 RequestValidator multiple docs fixes","8d8d8c62ee2adfbd8457726f25c35fe2d4d27aec","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/request_validator.py""]']","False","[]","[{u'raw': u'#250', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'250', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","garciasolero","2015-07-06 10:44:17","Fix management of rfc6749 errors","8dadaf0fde2b502df359632853fda00963dce3f5","","api.github.com,git_clone","[u'[""tests/oauth2/rfc6749/endpoints/test_extra_credentials.py"", ""tests/oauth2/rfc6749/test_parameters.py"", ""tests/oauth2/rfc6749/endpoints/test_error_responses.py"", ""oauthlib/oauth2/rfc6749/grant_types/authorization_code.py"", ""AUTHORS"", ""oauthlib/oauth2/rfc6749/grant_types/implicit.py"", ""oauthlib/oauth2/rfc6749/errors.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-02-02 22:05:10","OAuth2 provider nearing alpha (#45,#46,#47,#48,#75)","8ddf3ce4b1d9830404d6805c43aabe1da983918d","","api.github.com,git_clone","[u'[""oauthlib/oauth2/draft25/__init__.py"", ""tests/oauth2/draft25/test_server.py"", ""tests/oauth2/draft25/test_grant_types.py"", ""oauthlib/oauth2/draft25/utils.py"", ""oauthlib/oauth2/draft25/grant_types.py"", ""oauthlib/oauth2/ext/django.py"", ""oauthlib/oauth2/draft25/parameters.py"", ""oauthlib/oauth2/draft25/tokens.py""]']","False","[]","[{u'raw': u'#45', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'45', u'']}, {u'raw': u'#46', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'46', u'']}, {u'raw': u'#47', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'47', u'']}, {u'raw': u'#48', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'48', u'']}, {u'raw': u'#75', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'75', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","idan","2012-04-29 09:59:36","Merge pull request #24 from ib-lundgren/urldecode

Add spec-compliant urldecode","8de472f74a37d755378d4c16a7feaf45ca894f75","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/utils.py"", ""tests/oauth1/rfc5849/test_utils.py""]']","False","[]","[{u'raw': u'#24', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'24', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","senko","2012-11-13 10:10:31","oauth1 test_realm_validation: fix expected signature

This error was previously masked due to return value (False, <request>)
being always treated as True.","8e00fa7bf6ddcceffd46859da7421e4c683591f1","","api.github.com,git_clone","[u'[""tests/oauth1/rfc5849/test_server.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-09-01 13:16:30","Merge pull request #205 from lepture/fix-travis

Remove travis install scripts","8e4d757e9c041173686d1e55120ba77957f3e5f2","","api.github.com,git_clone","[u'["".travis.yml"", "".travis_install.py""]']","False","[]","[{u'raw': u'#205', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'205', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-07-09 16:52:00","Auth scheme lower and short header test.","8f055a33055e6902c1ec004386a740ac6bea6885","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/utils.py"", ""tests/oauth1/rfc5849/test_utils.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","idan","2012-04-12 20:07:32","Tagging 0.0.2","8f060a0c48f847b1c30e390f0d6f7f887ce87dd7","","api.github.com,git_clone","[u'[""setup.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","djpnewton","2014-10-09 02:08:01","fix add_params_to_uri() fragment bug

add_params_to_uri() ovewrites existing fragment when fragment parameter = true","8f57459fbbab1f317d5475f31f90b1a75016a2a8","","api.github.com,git_clone","[u'[""oauthlib/common.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","hoylen","2017-08-01 01:45:36","Extra logging if verification fails because of timestamp/nonce.","8f6f6c3fcd734119caba4539da70a9ba798f3cf7","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/endpoints/signature_only.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2014-07-06 17:20:36","Move save token to grant type and allow token modification.

request_validator.save_bearer_token was previously called from inside
token_handler.create_token but is now called from the respective
grant type after being created by token_handler.create_token.
This makes it easier to allow extensions grants to modify the token
via the newly introduced token modifier methods that will be invoked
prior to the save.

This is consistent with how auth code is created and saved plus it
removes the hidden dual purpose of create_token.","8f9c984202976e62d7e376338fddc4ef39be74e0","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/grant_types/implicit.py"", ""oauthlib/oauth2/rfc6749/grant_types/resource_owner_password_credentials.py"", ""oauthlib/oauth2/rfc6749/grant_types/authorization_code.py"", ""oauthlib/oauth2/rfc6749/grant_types/client_credentials.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","mvo5","2012-10-31 08:34:18","merged master, resolved conflicts","8faeb116ea0e3fe41675b9c9de9a175b53490948","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/parameters.py"", ""oauthlib/oauth1/rfc5849/__init__.py"", ""tests/unittest/__init__.py"", ""oauthlib/oauth2/draft25/parameters.py"", ""oauthlib/oauth2/draft25/tokens.py"", ""tox.ini"", ""oauthlib/oauth2/__init__.py"", ""oauthlib/oauth1/__init__.py"", ""tests/oauth1/rfc5849/test_parameters.py"", ""oauthlib/oauth2/draft25/utils.py"", ""oauthlib/oauth1/rfc5849/signature.py"", ""tests/oauth2/draft25/test_tokens.py"", ""setup.py"", ""tests/oauth1/rfc5849/test_server.py"", ""oauthlib/common.py"", ""oauthlib/oauth2/draft25/__init__.py"", ""tests/test_common.py"", ""tests/oauth2/draft25/test_server.py"", ""tests/oauth2/draft25/test_parameters.py"", ""tests/oauth2/draft25/test_client.py"", ""oauthlib/oauth2/draft25/exceptions.py"", ""oauthlib/oauth1/rfc5849/utils.py"", ""tests/oauth1/rfc5849/test_utils.py"", ""tests/oauth1/rfc5849/test_signatures.py"", ""tests/oauth2/draft25/test_utils.py"", ""README.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2014-09-12 12:40:08","Merge pull request #262 from ryanhiebert/oauth1-generic

Create Generic OAuth1 Endpoint","8fcceae9ef2d6e3c0cdf38b12ac71bc538dd6432","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/endpoints/__init__.py"", ""tests/oauth1/rfc5849/endpoints/test_signature_only.py"", ""oauthlib/oauth1/rfc5849/endpoints/signature_only.py"", ""oauthlib/oauth1/__init__.py"", ""docs/oauth1/endpoints/endpoints.rst"", ""oauthlib/oauth1/rfc5849/request_validator.py"", ""docs/oauth1/endpoints/signature_only.rst""]']","False","[]","[{u'raw': u'#262', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'262', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","idan","2012-04-24 07:54:42","Correct 'url-formencoded' to 'form-urlencoded'","908e51b6becf25e719a41eff1291ca39504411bf","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/__init__.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-05-29 15:06:30","Fix #138.","90b2d14cdad2e001b3ccd696fb8007e7b96e82d8","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/__init__.py""]']","False","[]","[{u'raw': u'#138', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'138', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-10-04 10:24:45","Merge branch 'master' of https://github.com/idan/oauthlib","90c70eefd39cdde705c1b741cdb5acdf35cf9d5a","","api.github.com,git_clone","[u'[""tests/oauth2/rfc6749/grant_types/test_refresh_token.py"", ""oauthlib/common.py"", ""oauthlib/oauth2/rfc6749/grant_types/authorization_code.py"", ""tests/oauth2/rfc6749/grant_types/test_authorization_code.py"", ""AUTHORS"", ""tests/oauth2/rfc6749/grant_types/test_resource_owner_password.py""]']","False","[u'https://github.com/idan/oauthlib']","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2014-10-03 13:28:10","Auth code authorization resp test.","90ca7103ccb49131367cfe87c9161a1641affb63","","api.github.com,git_clone","[u'[""tests/oauth2/rfc6749/grant_types/test_authorization_code.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-02-03 14:03:20","First draft request validator docs (#45,#46,#47,#48,#75)","90ddc3a61917abba16a5ca5f0b0010f1f201b8a8","","api.github.com,git_clone","[u'[""tests/oauth2/draft25/test_grant_types.py"", ""oauthlib/oauth2/draft25/tokens.py"", ""oauthlib/oauth2/draft25/grant_types.py""]']","False","[]","[{u'raw': u'#45', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'45', u'']}, {u'raw': u'#46', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'46', u'']}, {u'raw': u'#47', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'47', u'']}, {u'raw': u'#48', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'48', u'']}, {u'raw': u'#75', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'75', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2016-12-06 12:13:18","Update classifiers.","91152df142bdde134d84ed27963cda8e6b878416","","api.github.com,git_clone","[u'[""setup.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","skion","2017-02-14 23:47:03","Add missing OpenID Connect error codes.","91529519442795c3e21cb4fbf5dd2f331185d633","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/errors.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-07-09 17:10:03","Revert back to inline string for Licence. See #81.","9169c7d9a7b2651275adf64136b175cad787724e","","api.github.com,git_clone","[u'[""setup.py""]']","False","[]","[{u'raw': u'#81', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'81', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2015-05-23 17:38:02","Merge pull request #338 from Bachmann1234/patch-1

Typo fix","91762333806f1cea07598e2f3aaec405d4be8718","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/errors.py""]']","False","[]","[{u'raw': u'#338', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'338', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","swistakm","2014-05-22 08:48:09","docs: add missing method mentions in oauth1.rfc5849.request_validator.RequestValidator docstring","91b07ebd0369828da129f1626b6614b2579cba6c","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/request_validator.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","r4fek","2016-05-09 08:26:06","Fix #422: Query strings should be able to include colons","91cdbbd858e88b5008d1bc2ee2b4d7c8fedc3f9d","","api.github.com,git_clone","[u'[""oauthlib/common.py""]']","False","[]","[{u'raw': u'#422', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'422', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-06-09 13:00:08","Correct error responses on refresh token grant. Fix #177.","91e964cb74ff2c6b10e77430a21b4b4b906aee62","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/grant_types/refresh_token.py""]']","False","[]","[{u'raw': u'#177', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'177', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-02-04 22:59:30","Merge pull request #100 from ondrowan/patch-1

Fixed build status image/link in readme","91edc406df37d305af49e207e8003bb55d9a76ed","","api.github.com,git_clone","[u'[""README.rst""]']","False","[]","[{u'raw': u'#100', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'100', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","joelstevenson","2016-08-25 23:27:02","AUTHORS file","925b2591194b764d2973045d85c693020583aac8","","api.github.com,git_clone","[u'[""AUTHORS""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ajpaul510","2017-03-06 18:11:16","Fixed client.rst

Fixed grammar on line 7.","92a269aac7b5772e8b5860930f8edb3e0741b91c","","api.github.com,git_clone","[u'[""docs/oauth1/client.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","andreif","2013-02-07 09:11:59","Added extra blank line conforming to the standard.","92fbec1c1fee53bfd409e95c6294acb2a0938445","","api.github.com,git_clone","[u'[""docs/server2.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2015-07-19 13:28:39","Build all branches.","933711ecdb4f1235307dc5815eac1828d523f4e1","","api.github.com,git_clone","[u'["".travis.yml""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2014-10-03 13:32:36","Remove get_auth_code_scopes. Obsoleted by validate_auth_code","93548975c1f51ff4b346b6c7975dd9e57223a5e4","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/request_validator.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-04-02 17:14:25","Merge pull request #131 from johanmeiring/master

Additional validator inconsistency fixes","93654dcc583df0d7c3b32c922ab5b9fcb0289837","","api.github.com,git_clone","[u'[""oauthlib/oauth2/draft25/grant_types.py""]']","False","[]","[{u'raw': u'#131', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'131', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","masci@evonove.it","2013-09-20 23:13:20","fixed operator precedence in duplicate_params property","939b05f185958723f833dcbc707a066bf3359c7e","","api.github.com,git_clone","[u'[""oauthlib/common.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-03-26 09:49:51","On the difference between 2 & 3 parse_qsl","9495bfde357f9977891c551549fe4deec4f42a5d","","api.github.com,git_clone","[u'[""oauthlib/common.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","floppym","2012-11-18 04:22:50","Don't install the tests package or subpackages.","949c3c9ed6caabd69909400a16c6a93647fcc1eb","","api.github.com,git_clone","[u'[""setup.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","stephane","2013-05-13 14:51:12","Fix swapped values in example of Django choices","94b32953e4e47bb4cfda536f0e7b9bad0437119f","","api.github.com,git_clone","[u'[""docs/server2.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2014-10-03 13:31:41","Convenience (for testing) imports.","958e70fcc1dafe30bc6f571a142791784d8fbb3c","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/grant_types/__init__.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","mikix","2012-08-31 21:52:09","Support Python 3

These are mostly unicode string related changes and a few syntax ones.

https://github.com/idan/oauthlib/issues/55","95c24638a73e895fb42449b876266b8029b752bb","","api.github.com,git_clone","[u'[""tests/test_common.py"", ""oauthlib/oauth1/rfc5849/utils.py"", ""tests/oauth2/draft25/test_utils.py"", ""tests/oauth1/rfc5849/test_utils.py"", ""oauthlib/common.py"", ""oauthlib/oauth2/draft25/__init__.py"", ""oauthlib/oauth1/__init__.py"", ""oauthlib/oauth2/__init__.py"", ""oauthlib/oauth1/rfc5849/parameters.py"", ""tests/oauth1/rfc5849/test_signatures.py"", ""tests/oauth1/rfc5849/test_parameters.py"", ""oauthlib/oauth2/draft25/utils.py"", ""tests/oauth1/rfc5849/test_server.py"", ""tests/oauth2/draft25/test_parameters.py"", ""oauthlib/oauth1/rfc5849/signature.py"", ""oauthlib/oauth1/rfc5849/__init__.py"", ""tests/oauth2/draft25/test_client.py"", ""setup.py"", ""tests/oauth2/draft25/test_tokens.py"", ""oauthlib/oauth2/draft25/parameters.py"", ""oauthlib/oauth2/draft25/tokens.py""]']","False","[u'https://github.com/idan/oauthlib/issues/55']","[{u'raw': u'https://github.com/idan/oauthlib/issues/55', u'refstyle': u'url', u'parts': [u'idan', u'oauthlib', u'55', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","hoylen","2017-01-16 00:01:32","Documented PyJWT dependency for RSA-SHA1 signatures.","9628f3d24a2e9777bccf24115b123eea3e9eb74c","","api.github.com,git_clone","[u'[""docs/oauth1/client.rst"", ""docs/oauth1/server.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","kdazzle","2013-07-19 00:00:13","Update authorization.py - use the _create_request method and change request.oauth_token attribute to resource_owner_key

The Request() constructor doesn't give the request.oauth_token attribute that the create_authorization_response relies on. The _create_request() method doesn't either, but it gives something equivalent.","967b6c425a7b9572753bf451e1e4b5fe535c2566","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/endpoints/authorization.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2014-10-01 14:00:35","Small steps on the OpenID grant types.

Direct response if prompt is none.
Sketched out methods for implicit and hybrid.
New method for adding access tokens in hybrid auth step.","96946d64eb4ecb0b3615587fa30b03e7f3845cc6","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/grant_types/openid_connect.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2014-06-06 11:00:02","0.6.2","969d0994234454b05a7b310b8dd40e66e900eede","","api.github.com,git_clone","[u'[""README.rst"", ""oauthlib/__init__.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","singingwolfboy","2015-02-10 22:57:06","Check for rsa_key when it's actually needed","96caa4991fed3ff376ee15214607d05385ff9d7d","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/__init__.py"", ""tests/oauth1/rfc5849/test_client.py"", ""oauthlib/oauth1/rfc5849/signature.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2014-06-03 19:56:23","Merge pull request #247 from asteinlein/master

Use 401 status code for some OAuth 2 errors","96dc15143ef3baff66231711d33f4d5c6eb94f7b","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/grant_types/refresh_token.py"", ""tests/oauth2/rfc6749/grant_types/test_resource_owner_password.py"", ""tests/oauth2/rfc6749/grant_types/test_refresh_token.py"", ""oauthlib/oauth2/rfc6749/errors.py""]']","False","[]","[{u'raw': u'#247', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'247', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2014-10-24 13:28:53","Return OAuth2Tokens instead of dicts in endpoints.

These behave exactly the same as previous dicts but
have convenience methods such as ``token.scopes``.","97265b6f747c664bfaae260aa1bdbab012619f23","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/tokens.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2015-05-23 17:38:07","Merge pull request #339 from digithink/oauth2_revocation_fix

Add code to determine if client authentication is required for OAuth2…","97f4715527228a9857ac98cfc9b25337fe08985b","","api.github.com,git_clone","[u'[""tests/oauth2/rfc6749/endpoints/test_revocation_endpoint.py"", ""oauthlib/oauth2/rfc6749/endpoints/revocation.py""]']","False","[]","[{u'raw': u'#339', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'339', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2014-10-27 13:55:05","0.7.0","9838a002fc9b82c907d4ba495a34d0ce21386e44","","api.github.com,git_clone","[u'[""oauthlib/__init__.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ryanhiebert","2014-09-04 03:57:14","Create Signature Only OAuth1 Endpoint

In certain cases a provider may wish to verify the signature of an
oauth request without doing anything more with it. Learning Tools
Interoperability (LTI), for example, uses ""0-legged OAuth"" for it's
signature verification process.

http://www.imsglobal.org/lti/
http://andyfmiller.com/2013/02/10/does-lti-use-oauth/

This adds a new ``SignatureOnlyEndpoint`` that implements only the
client validation and signature verification, and leaves off the other
parts that would need to be validated.","988d08284989226577d30ae07550278dbf50d751","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/endpoints/__init__.py"", ""tests/oauth1/rfc5849/endpoints/test_signature_only.py"", ""oauthlib/oauth1/rfc5849/endpoints/signature_only.py"", ""oauthlib/oauth1/__init__.py"", ""docs/oauth1/endpoints/endpoints.rst"", ""oauthlib/oauth1/rfc5849/request_validator.py"", ""docs/oauth1/endpoints/signature_only.rst""]']","False","[u'http://andyfmiller.com/2013/02/10/does-lti-use-oauth/', u'http://www.imsglobal.org/lti/']","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-03-26 18:06:53","Merge pull request #124 from wiliamsouza/master

Add generate_client_id to common","9894ff820ea383c79fe798493237a78f612f2e1e","","api.github.com,git_clone","[u'[""tests/test_common.py"", ""oauthlib/common.py""]']","False","[]","[{u'raw': u'#124', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'124', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-07-04 20:32:05","Updated Server tests to match content type requirement","989606369bd8716c97aad7c94543344f4072e7d5","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/__init__.py"", ""tests/oauth1/rfc5849/test_server.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","myyang","2015-07-02 03:13:28","Use assertFormBodyEqual instead","9940cd2a1403341e97bda42a88ae2c0213027c4f","","api.github.com,git_clone","[u'[""tests/oauth2/rfc6749/clients/test_base.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","artooro","2015-01-13 19:44:31","Allow ! character in query string

My app broke because there was a ! character in the query string. This small change fixed it for me.","9963cd24f81c14b09474b20dcb3acabba5ed7036","","api.github.com,git_clone","[u'[""oauthlib/common.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-05-30 12:33:49","Begun documenting faq and features. Fix #119 and #117.","99681d2b80619ba0cd17cccd08a6c63b9024421f","","api.github.com,git_clone","[u'[""docs/faq.rst"", ""docs/feature_matrix.rst"", ""docs/index.rst""]']","False","[]","[{u'raw': u'#117', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'117', u'']}, {u'raw': u'#119', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'119', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-10-14 21:22:45","Merge pull request #217 from lepture/fix-json

JSON content type has no charset.","99d753d8be8ef831147c5f3ffa5651ace507f356","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/grant_types/refresh_token.py"", ""oauthlib/oauth2/rfc6749/parameters.py"", ""oauthlib/oauth2/rfc6749/grant_types/resource_owner_password_credentials.py"", ""docs/oauth2/endpoints/token.rst"", ""oauthlib/oauth2/rfc6749/grant_types/client_credentials.py"", ""oauthlib/oauth2/rfc6749/grant_types/authorization_code.py""]']","False","[]","[{u'raw': u'#217', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'217', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2014-10-23 18:29:04","Fix minor merge artifacts and python 3 tests.","9a1b29440bfd095c625b35399305532ac3a45b9c","","api.github.com,git_clone","[u'[""tests/oauth2/rfc6749/clients/test_backend_application.py"", ""oauthlib/oauth2/rfc6749/parameters.py"", ""tests/oauth2/rfc6749/clients/test_legacy_application.py"", ""oauthlib/oauth2/rfc6749/tokens.py"", ""tests/oauth2/rfc6749/test_parameters.py"", ""oauthlib/oauth2/rfc6749/utils.py"", ""tests/oauth2/rfc6749/clients/test_web_application.py"", ""tests/oauth2/rfc6749/clients/test_mobile_application.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2017-07-30 06:49:16","Merge pull request #478 from jdufresne/bdist

Rename [wheel] section to [bdist_wheel] as the former is legacy","9a72842af28b6c46524937b61cd009ce920ea77f","","api.github.com,git_clone","[u'[""setup.cfg""]']","False","[]","[{u'raw': u'#478', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'478', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2016-04-11 08:38:10","Fixed requirements for Python3.2/PyPy3.","9a8dc51f79ce31192c31a25424435035a648abf1","","api.github.com,git_clone","[u'[""tox.ini"", ""requirements-test32.txt""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","joelstevenson","2016-05-06 21:52:49","Reworking the handling of claims.  @bjmc was quite right to question the haste-y inclusion in the Resource endpoint.  It is an optional parameter to the Authorization Code endpoint and so needs to be stored with both the generated authorization code grant and any subsequent access token issued to that authorization code.","9a8f73d2dd088d5ea01313de2a1fe5a877994a79","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/endpoints/token.py"", ""tests/oauth2/rfc6749/endpoints/test_claims_handling.py"", ""oauthlib/oauth2/rfc6749/grant_types/authorization_code.py"", ""oauthlib/oauth2/rfc6749/request_validator.py"", ""oauthlib/oauth2/rfc6749/endpoints/resource.py""]']","False","[]","[]","[u'@bjmc']","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-03-24 18:00:05","Updated per dgouldins tip + pull","9ab832ce8a2694e08a2399d3d161bc3bedfb7a50","","api.github.com,git_clone","[u'[""tests/test_signatures.py"", ""oauthlib/oauth.py"", ""oauthlib/signature.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","idan","2012-03-13 00:22:42","Add test for prepare_request_uri_query","9b264d1efde3800bcc0258f805ab7affd081ffcb","","api.github.com,git_clone","[u'[""tests/test_parameters.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-03-26 17:29:26","Debug log attributes that often should be set.","9b5620a1c2e69c1efe765fce46d2276302edf618","","api.github.com,git_clone","[u'[""oauthlib/oauth2/draft25/grant_types.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-04-26 13:47:02","urldecode","9c2a6dadcf54142c378677ae38d6833e397ae21b","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/utils.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","idan","2012-04-29 10:55:09","Fix string formatting for py2.6, unbreak tests","9c66fc2a13ab0cb442ef1b340295e05c85b6b78a","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/utils.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-11-16 14:42:15","Merge pull request #72 from tomchristie/master

Fix link (Was displaying trailing underscore)","9c690b3904e68111bb39cf3e89e6914b09d5e6d2","","api.github.com,git_clone","[u'[""README.rst""]']","False","[]","[{u'raw': u'#72', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'72', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","Bachmann1234","2015-05-06 03:01:25","Typo fix

Howdy!

Saw this typo in the docs and thought id fix it.","9cd91da8baeafe74463bb8a63b9f717568a7bc0c","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/errors.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-03-25 11:12:52","Unauthorized client tests.","9d385d5794d54c6ae82f823e688a6f39739b72b4","","api.github.com,git_clone","[u'[""tests/oauth2/draft25/test_servers.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","Kroisse","2013-05-16 09:08:51","Fix some typo","9da6a06fd586dded554923493ded1340f2cdd22a","","api.github.com,git_clone","[u'[""examples/skeleton_oauth2_web_application_server.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","idan","2012-04-24 06:45:47","Add debug logging","9dc02da6e6043d91387b153526821130628210dc","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/__init__.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","skion","2015-03-05 13:45:05","Strip whitespace off of scope string.","9dc964c589925da534850f5e6658c91b3d638dcf","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/utils.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","idan","2012-03-12 22:41:17","Merge branch 'master' of github.com:idangazit/oauthlib","9e091d2500568d3c4b39135faacfb12463b14ae1","","api.github.com,git_clone","[u'[""oauthlib/signature.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","skion","2017-02-14 23:51:05","Fix typo in account_selection_required exception name.","9e4ac2ca22ecaf260b67ef6a93dd06b6eedb1da7","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/errors.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","joelstevenson","2016-04-29 22:32:04","Use a single if statement in ResourceEndpoint.verify_request() claims check","9e6de5cc1ebd3d257d8fe7931924736ca731b301","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/endpoints/resource.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-05-31 11:27:18","Outline example view setup for providers.","9eb671f9d2ebb37fded5f3d77d274fb1c38038ca","","api.github.com,git_clone","[u'[""docs/oauth2/server.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-01-29 20:15:54","0.3.5","9edd36f962cc2f28368a3db924fdef8e99a0950b","","api.github.com,git_clone","[u'[""setup.py"", ""README.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","masci@evonove.it","2013-09-21 14:35:41","added myself to the authors list","9f44b81a7ff4456bc9698f6187d0f128051364b6","","api.github.com,git_clone","[u'[""AUTHORS""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","stephane","2013-05-07 10:06:18","Missing space in documentation","9fb3d3841fa1d3278cc2f60573c96e7fedbecd78","","api.github.com,git_clone","[u'[""docs/server2.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2016-04-10 08:41:39","Upgrade PyPy in travis.","9ffb9eb998ad3e90f5ddbe522eecbe8ec78ab2ec","","api.github.com,git_clone","[u'["".travis.yml""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","jonas@gumstix.com","2014-06-09 17:21:42","Copy variables dict before scrubbing secrets.

This dict is the actual variables dict. Changing its members will directly
change the values of the current object. The __repr__ function overwrites both
secrets with stars.","a05075dc4f316a600cd1a2374f783ddb0aaf2a0e","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/__init__.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-04-26 13:51:38","Revert ""urldecode""

This reverts commit 9c2a6dadcf54142c378677ae38d6833e397ae21b.","a07d520defb04f0d35febb55470d331ef451da92","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/utils.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-06-29 12:00:35","Client and WebAppicationClient tests","a0b35de920fa6501b27fa877ed08a6f9473fb146","","api.github.com,git_clone","[u'[""tests/oauth2/draft25/test_client.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ocfuu@users.noreply.github.com","2013-08-20 07:42:59","Fixed single typo in documentation

privilegues -> privileges","a0b46daa7ce182fa46321e3576a02b80087788cf","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/request_validator.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-06-12 17:11:38","Soft dependency on PyCrypto","a0ba685a3e6ded2b7542b292996e04082de51101","","api.github.com,git_clone","[u'["".travis.yml"", ""docs/client.rst"", ""setup.py"", ""oauthlib/oauth1/rfc5849/signature.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2014-08-04 14:46:43","Merge pull request #259 from verbit/master

enable convinient import for oauth1 errors","a0e6349e641407f1e2dd701d69ee91c3beb5587d","","api.github.com,git_clone","[u'[""oauthlib/oauth1/__init__.py"", ""oauthlib/oauth1/rfc5849/errors.py""]']","False","[]","[{u'raw': u'#259', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'259', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","calebbrown","2012-04-19 03:00:18","Revert ""Make prepare_headers return non-unicode strings.""

This reverts commit 028ff8dced3c63365c580345a145a5e997c312d0.

Rather than converting to non-unicode strings the desire is to have
unicode everywhere.

So this is being removed in favour of improving the unicode support elsewhere.

In particular utils.unescape() and signature.collect_parameters()
need to have their unicode support improved.","a0f10d6455ee285d713dee34e99131cdc6ab0b95","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/parameters.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","dgouldin","2012-04-21 04:49:36","Removing now-unneeded utf8_str.","a11b0389902acbd0716e7e239ebd8efe0e2d506a","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/utils.py"", ""tests/oauth1/rfc5849/test_utils.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-01-15 20:48:53","Merge pull request #92 from metatoaster/oauth1_callback_verify

Test for callback verification for OAuth1 provider.","a12625ad9aa6d6a177d3d788f7014385f7a6d83d","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/__init__.py"", ""tests/oauth1/rfc5849/test_server.py""]']","False","[]","[{u'raw': u'#92', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'92', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2014-10-23 17:27:29","Merge branch 'scope-change-signal' of https://github.com/singingwolfboy/oauthlib into singingwolfboy-scope-change-signal

Conflicts:
	oauthlib/oauth2/rfc6749/clients/backend_application.py
	oauthlib/oauth2/rfc6749/clients/legacy_application.py
	oauthlib/oauth2/rfc6749/clients/web_application.py","a144769a9a44c85eb17774e7a513ffc5a92a354d","","api.github.com,git_clone","[u'[""tests/oauth2/rfc6749/clients/test_backend_application.py"", ""oauthlib/oauth2/rfc6749/parameters.py"", ""tests/oauth2/rfc6749/clients/test_legacy_application.py"", ""oauthlib/oauth2/rfc6749/clients/mobile_application.py"", ""tests/oauth2/rfc6749/test_parameters.py"", ""tests/oauth2/rfc6749/clients/test_mobile_application.py"", ""oauthlib/signals.py"", ""tests/oauth2/rfc6749/clients/test_web_application.py"", ""AUTHORS"", "".travis.yml"", ""setup.py""]']","False","[u'https://github.com/singingwolfboy/oauthlib']","[]","[]","[]"
"commit_messages","","idan","oauthlib","dgouldin","2012-05-02 05:33:36","Adding back 'safe' chars for escaping.","a14ed9f0ba3b6d602cbe5c4bba17bfd240cfbbf0","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/utils.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","bjmc","2016-12-20 11:15:44","Helper for implicit grant custom validators","a33c82e7be21429b5c376f2912a6a553cf87018b","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/grant_types/implicit.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2017-07-30 06:45:15","Merge pull request #465 from skion/fragment-hybrids

Hybrid response types should be fragment-encoded","a359e8fd9b6a4d7cceefeef3be294187b310b26e","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/grant_types/openid_connect.py"", ""tests/oauth2/rfc6749/grant_types/test_authorization_code.py"", ""tests/oauth2/rfc6749/grant_types/test_openid_connect.py""]']","False","[]","[{u'raw': u'#465', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'465', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","calebbrown","2012-04-19 02:56:50","Revert ""Add support to OAuth1 for including body in the base string based on""

This reverts commit ae386c2154f65054427f33419bf17b6feda563d5.

Will be replaced in favour of passing a 'content_type' parameter.","a3ae77f63b46bed830c171d22137cb5eb4ee9c3e","","api.github.com,git_clone","[u'[""tests/oauth1/rfc5849/test_server.py"", ""oauthlib/oauth1/rfc5849/signature.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2016-05-18 08:20:11","Merge pull request #425 from parryjacob/master

Cast body to a string for regex - fixes #424","a3ef5510d4d0e7bed627a5fdc2a078ed1021a446","","api.github.com,git_clone","[u'[""oauthlib/common.py""]']","False","[]","[{u'raw': u'#424', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'424', u'']}, {u'raw': u'#425', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'425', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","josephtate","2015-04-16 14:25:22","Add the broken scope to the ValueError exception for easier debugging, add test for failure case.","a41f4fb4d26995bcadfc26540ad84a84b0e10e0d","","api.github.com,git_clone","[u'[""tests/oauth2/rfc6749/test_utils.py"", ""oauthlib/oauth2/rfc6749/utils.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","dahlia","2013-05-24 13:46:25","Add token_expires_in opt to all-in-one endpoints

It still works as it has worked until use the option.","a428b2e64af8c2b48e6ad413b1f0c60a1e0708c9","","api.github.com,git_clone","[u'[""oauthlib/oauth2/draft25/__init__.py"", ""oauthlib/oauth2/draft25/tokens.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","bjmc","2016-11-18 15:39:04","Move custom validator registration onto GrantTypeBase","a43ed5d5b0a2ae1be67935a701b48ba83b4d9893","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/grant_types/refresh_token.py"", ""oauthlib/oauth2/rfc6749/grant_types/resource_owner_password_credentials.py"", ""oauthlib/oauth2/rfc6749/grant_types/client_credentials.py"", ""oauthlib/oauth2/rfc6749/grant_types/authorization_code.py"", ""oauthlib/oauth2/rfc6749/grant_types/base.py"", ""oauthlib/oauth2/rfc6749/grant_types/implicit.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2014-10-03 13:31:09","Raise OIDCNoPrompt exception upon authorization if requested.","a445778860405d117111e24a078f25a9c399c608","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/grant_types/openid_connect.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","idan","2012-03-13 00:23:18","Merge branch 'master' of github.com:idangazit/oauthlib","a4a954c9fc0970c90ed4dbacdb2a6dd5200e2543","","api.github.com,git_clone","[u'[""oauthlib/utils.py"", ""tests/test_signatures.py"", ""oauthlib/oauth.py"", ""docs/contributing.rst"", ""oauthlib/signature.py"", ""docs/index.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","andreif","2013-02-06 18:07:51","Fixed attribute initialization added by prev commit.","a4b6dfc1693879bfcc8f8d841327a89ad499197a","","api.github.com,git_clone","[u'[""oauthlib/oauth2/draft25/errors.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-11-01 20:45:30","In py26 version_info is a plain tuple - no minor attr","a4e5bb16e8af60646863e74b0ba9aa4cc34ed09a","","api.github.com,git_clone","[u'[""tests/unittest/__init__.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-03-24 17:04:38","Extracted out string constants","a504910b814c46d835cda372d5c3a8f4cdfd6ee1","","api.github.com,git_clone","[u'[""tests/test_signatures.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","idan","2012-03-12 21:44:31","Remove py2.6-style string formatting","a578bfcb62252a9717956d7fe0f79397e6af2b69","","api.github.com,git_clone","[u'[""oauthlib/parameters.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","kyle@gumstix.com","2013-07-22 20:24:26","Changed access_token.py - validate_access_token_request passes the resource owner key as an access token, which doesn't yet exist, instead of a request token","a5799fd8671e5a1c2922dcc434c886fc370b46c1","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/endpoints/access_token.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-06-12 17:33:24","Links for windows rsa users","a582d1ca3e66a1ea63b1be8e8102d9f891cb0737","","api.github.com,git_clone","[u'[""docs/client.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","matthewlmcclure","2013-05-03 03:14:43","Update, comment on, and test the implementation.","a5b85002f49c5029ce7a0d73fc8576003a39237b","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/__init__.py"", ""tests/oauth1/rfc5849/test_signatures.py"", ""oauthlib/oauth1/rfc5849/signature.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","idan","2011-11-19 23:06:01","Initial commit. OMG so many bugs.","a635e2afac970e3d5de0e4ce9c0ec24a7a5a1ae6","","api.github.com,git_clone","[u'[""oauthlib/__init__.py"", ""oauthlib/oauth.py"", ""LICENSE"", "".gitignore"", ""README.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2014-02-13 15:17:27","Merge pull request #233 from kjoconnor/fixing-typos

Fixing some typos","a66fe9800c7c7732491a213e1cacf7b82f2b1282","","api.github.com,git_clone","[u'[""docs/oauth1/client.rst"", ""docs/oauth2/endpoints/authorization.rst"", ""docs/oauth2/endpoints/endpoints.rst"", ""docs/faq.rst"", ""docs/oauth2/endpoints/token.rst"", ""docs/oauth1/security.rst"", ""docs/installation.rst"", ""docs/oauth1/server.rst"", ""docs/contributing.rst""]']","False","[]","[{u'raw': u'#233', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'233', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","joelstevenson","2016-08-18 22:41:40","Short description doc for AuthCodeGrantDispatcher","a6cc9a8caf54d800fcf4fcb31be08a87fd4bf973","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/grant_types/openid_connect.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2016-03-14 09:48:03","Merge pull request #407 from eofs/feature/rfc-3986-section-3.4

Allow `/` and `?` characters in query string (RFC 3986 section 3.4)","a7483b73dac3ba00e90ef58a72bdefd0bec27ad9","","api.github.com,git_clone","[u'[""tests/test_common.py"", ""oauthlib/common.py""]']","False","[]","[{u'raw': u'#407', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'407', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","r4fek","2016-03-30 12:43:42","Set issue_new_refresh_tokens in RefreshTokenGrant.__init__","a7cc9b7fdc40984d60ad523ab7c315230cbcdac4","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/grant_types/refresh_token.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","idan","2012-05-02 21:59:43","Add tooling for pycco","a812c913a65b4621676d22b9bdfbcc2220c0852c","","api.github.com,git_clone","[u'[""requirements.txt"", ""Makefile""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ondrowan","2013-02-14 13:42:11","Fixed verify_request_token_request in OAuth1 server.
* it now calls verify_request with require_callback=True
* added docstring about oob callback
* added test demonstrating use case","a81ca125536354a1007394c7525ec267392d9361","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/__init__.py"", ""tests/oauth1/rfc5849/test_server.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-06-20 13:53:42","Fix scope validation on refresh token grant.","a8fbacf462e0b93388a848ba4b59b9d4bec5a9a2","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/grant_types/refresh_token.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2014-11-13 12:39:05","Ensure correct validator methods are invoked in auth grant.","a907a90130b5947f6e5d13f7ca90cc86a83ed912","","api.github.com,git_clone","[u'[""tests/oauth2/rfc6749/grant_types/test_authorization_code.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","synasius","2013-05-29 12:29:50","Add request param on errors raise where request is available","a9299988ba65287d962e5d6d67eb27ea39af2991","","api.github.com,git_clone","[u'[""oauthlib/oauth2/draft25/grant_types.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","sean-dev@farley.org","2013-07-05 16:59:37","Validate authentication header prior to parsing

Before attempting to parse the authentication header as if it OAuth,
raise ValueError if the header does not even begin with ""OAuth "".  Also,
make the check case insensitive in accordance with RFC 5849 section
3.5.1.

References #186.","a950f0880fa77fd80020769a5ff3f7e52b7a8b89","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/utils.py""]']","False","[]","[{u'raw': u'#186', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'186', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","idan","2012-04-24 13:18:14","Prevent degenerate extraction of non-formencoded strings","a998e084ff98d44e615cb0fc5d2e3991135ad9c5","","api.github.com,git_clone","[u'[""oauthlib/common.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","warsaw","2013-01-04 16:58:42","Fix a typo in the code that converts arguments from bytes to unicodes.","a9deb08f529cff605b2fb8ab5106832ad06cb9d7","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/__init__.py"", ""tests/oauth1/rfc5849/test_client.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-05-24 15:33:23","Merge pull request #160 from bpc/configurable_expires_in

Make OAuth2 BearerToken’s expiration time configurable","aa002236029b085365d5816633d9827af3ca31ab","","api.github.com,git_clone","[u'[""oauthlib/oauth2/draft25/__init__.py"", ""tests/oauth2/draft25/test_grant_types.py"", ""tests/oauth2/draft25/test_server.py"", ""oauthlib/oauth2/draft25/tokens.py""]']","False","[]","[{u'raw': u'#160', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'160', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-03-24 17:16:18","Merge branch 'master' of https://github.com/idangazit/oauthlib into argument_changes","aa4196a2e48cb320247f4fb6fc5e3c1574bb2ab8","","api.github.com,git_clone","[u'[""tests/test_signatures.py""]']","False","[u'https://github.com/idangazit/oauthlib']","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2014-01-20 10:39:48","Merge pull request #230 from majidfn/patch-1

Just a Typo in the headers","ab0e6132b1bb9f069017c5a94729612ef043cb21","","api.github.com,git_clone","[u'[""docs/oauth1/client.rst""]']","False","[]","[{u'raw': u'#230', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'230', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","jturmel","2014-03-19 19:32:14","Require pycrypto and pyjwt","ab4fe12f1707fc070b0fffec17a4fc8005ef990a","","api.github.com,git_clone","[u'[""setup.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","whit537","2014-09-17 14:26:29","Failing test for URL-encoded access tokens

Facebook doesn't use JSON, see https://github.com/idan/oauthlib/issues/267.","abf6bd5e9c413ad7f538f86604c0d1c29494882e","","api.github.com,git_clone","[u'[""tests/oauth2/rfc6749/test_parameters.py""]']","False","[u'https://github.com/idan/oauthlib/issues/267.']","[{u'raw': u'https://github.com/idan/oauthlib/issues/267', u'refstyle': u'url', u'parts': [u'idan', u'oauthlib', u'267', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2015-08-16 12:06:23","Merge pull request #381 from jvanasco/feature-validator_log

adding validator_log to store what the endpoint computed","ac17bd97ce8eb418cfd1e28af7286bb04e14be13","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/endpoints/request_token.py"", ""oauthlib/common.py"", ""oauthlib/oauth1/rfc5849/endpoints/signature_only.py"", ""oauthlib/oauth1/rfc5849/endpoints/resource.py"", ""tests/oauth1/rfc5849/endpoints/test_resource.py"", ""oauthlib/oauth1/rfc5849/endpoints/access_token.py""]']","False","[]","[{u'raw': u'#381', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'381', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-11-17 11:45:26","OAuth2 provider endpoints","ac4e62ef9b4a045c4dcea72f80be32090726db66","","api.github.com,git_clone","[u'[""oauthlib/oauth2/draft25/__init__.py"", ""oauthlib/oauth2/__init__.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","shuisman","2014-12-09 12:53:01","Fix documentation

typo","aca6546d3fe73216df8db49ceafbc5c3126c1ab0","","api.github.com,git_clone","[u'[""docs/oauth2/endpoints/token.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-05-31 10:11:36","Remove code left after copy paste mistake.","ad7e58bc00e2e1b0807b70d0f26c54db5a44ec5a","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/request_validator.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","sean-dev@farley.org","2013-07-05 17:20:02","Use case-insensitive removal of scheme from header","adb64a0835aeb5e1cbf49952cd25a2510dae70bb","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/utils.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-05-31 13:52:25","Merge pull request #172 from lepture/debug-mode

another debug-mode. #170","adc5199fcb7bec8a76c7542c2fc555bc52544522","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/parameters.py"", ""oauthlib/oauth2/rfc6749/clients/base.py"", ""oauthlib/oauth2/rfc6749/utils.py""]']","False","[]","[{u'raw': u'#170', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'170', u'']}, {u'raw': u'#172', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'172', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2017-04-03 09:05:56","Merge pull request #466 from skion/prompt

Improve prompt parameter validation","ae0a71ae7e9e5b30cacea018f3331da9462a27b7","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/grant_types/openid_connect.py"", ""tests/oauth2/rfc6749/endpoints/test_prompt_handling.py""]']","False","[]","[{u'raw': u'#466', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'466', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","kennethreitz","2012-04-07 21:21:32","Travis CI","ae1ab49990e721625b44315a1a13b8b6bf79d999","","api.github.com,git_clone","[u'["".travis.yml""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","dmuller@guidebook.com","2014-09-29 20:58:39","create/don't create refresh_token based on self.refresh_token","ae21c1f92aed9f6d0e589cafe3dcdc86fe692d6b","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/grant_types/resource_owner_password_credentials.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-12-19 21:38:13","RefreshTokenGrant","ae2c5b98106720d4b78057780bdcbb167219a1a7","","api.github.com,git_clone","[u'[""oauthlib/oauth2/draft25/grant_types.py"", ""AUTHORS""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","calebbrown","2012-04-18 13:54:30","Add support to OAuth1 for including body in the base string based on
encoding.

Section 3.4.1.3.1. (Parameter Sources) in rfc5849 indicates that
multipart bodies are excluded from the base string when generating the
signature.","ae386c2154f65054427f33419bf17b6feda563d5","","api.github.com,git_clone","[u'[""tests/oauth1/rfc5849/test_server.py"", ""oauthlib/oauth1/rfc5849/signature.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-03-25 12:26:21","Server error catching. Unavailability toggling.","ae8b58e9ca65376a32b63df0186ed16c4ce96843","","api.github.com,git_clone","[u'[""oauthlib/oauth2/draft25/__init__.py"", ""tests/oauth2/draft25/test_servers.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-06-17 16:58:58","Merge pull request #180 from tomchristie/patch-2

Typo. `include` -> `includes`","af66fdcc0a46a898ebaf7b72288bf579845d73e5","","api.github.com,git_clone","[u'[""README.rst""]']","False","[]","[{u'raw': u'#180', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'180', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","flippmoke","2013-05-09 18:20:26","Fixed a small error with the flask extension.","b0b44762b1074af14db60da8b8db1ed2b4b48765","","api.github.com,git_clone","[u'[""oauthlib/oauth2/ext/flask.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","svetlyak40wt","2014-12-01 13:16:30","Make version number a headers in a changelog.","b18a1f24ece0976234000d10a31f084b1016a604","","api.github.com,git_clone","[u'[""CHANGELOG.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","swistakm","2014-05-22 09:52:58","docs: add more verbose docstring in oauth1 RequestValidator methods

- add link to Section 2.3 RFC 5849 that explains why there is a need for
  token invalidation and give a clue how it can be invalidated (refs #202)
- add example implementation of validate_realms
- explain why `verify_request_token` does not double functionality of
  `validate_request_token` (refs #185)","b1990d292e9d5ba979aa904b1ad9293d1c46cf3c","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/request_validator.py""]']","False","[]","[{u'raw': u'#185', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'185', u'']}, {u'raw': u'#202', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'202', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","kyle@gumstix.com","2013-07-19 21:51:21","Made sure all endpoints used the self._create_request() method and referred to request.resource_owner_key instead of request.oauth_token","b1a902c822c869da8a465e4fe472bd29075fc7a9","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/request_validator.py"", ""oauthlib/oauth1/rfc5849/endpoints/access_token.py"", ""oauthlib/oauth1/rfc5849/endpoints/authorization.py"", ""docs/oauth1/server.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-03-26 18:01:01","0.4.0","b1b829ccf26d78e95ac055bb76843e6b4e1cff75","","api.github.com,git_clone","[u'[""setup.py"", ""README.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","julienmeyer","2015-08-18 13:38:09","Add unit test for urldecode","b20951fc127fdd4dc37c315104798a758f0c671b","","api.github.com,git_clone","[u'[""tests/test_common.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-03-02 00:17:33","Fix decode,encode mixup.","b23769421219a6af46113572965ddda63c373679","","api.github.com,git_clone","[u'[""oauthlib/common.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","calebbrown","2012-04-19 03:07:05","Add comment indicating why we need ""safe='~'"" in the call to urllib.quote.","b373b48ab363fea2195d00f4e2a91cc77315f2a0","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/utils.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-11-18 18:51:52","Merge pull request #80 from floppym/master

Don't install the tests package or subpackages.","b3d9c8a1e5c618a0f16e8c1e485df4f19b085c9b","","api.github.com,git_clone","[u'[""setup.py"", ""MANIFEST.in""]']","False","[]","[{u'raw': u'#80', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'80', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","idan","2012-04-11 08:55:44","Merge branch 'master' of github.com:idangazit/oauthlib","b3def8903cbc303fa8fd7b8ac495c890e80f75b3","","api.github.com,git_clone","[u'[""tests/test_parameters.py"", ""oauthlib/oauth1/__init__.py"", ""Makefile"", ""oauthlib/oauth.py"", "".gitignore"", ""oauthlib/oauth1/rfc5849/__init__.py"", ""oauthlib/parameters.py"", ""oauthlib/oauth2/__init__.py"", ""oauthlib/oauth1/rfc5849/parameters.py"", ""tests/oauth1/rfc5849/test_parameters.py"", ""docs/server.rst"", ""oauthlib/oauth1/rfc5849/signature.py"", ""setup.py"", ""tests/oauth2/__init__.py"", ""tests/oauth2/draft25/__init__.py"", ""oauthlib/oauth2/draft25/__init__.py"", ""tests/test_signatures.py"", ""tests/test_utils.py"", ""oauthlib/signature.py"", ""tests/oauth1/__init__.py"", ""oauthlib/oauth1/rfc5849/utils.py"", ""tests/oauth1/rfc5849/test_utils.py"", ""oauthlib/utils.py"", ""tests/oauth1/rfc5849/test_signatures.py"", ""README.rst"", ""tests/oauth1/rfc5849/__init__.py"", "".travis.yml"", ""docs/index.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-04-26 10:56:55","paraphrase","b43faf7a3deae34c38e60a0af689fb91018c4101","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/utils.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2015-07-19 08:56:26","Merge pull request #316 from spronin/master

Providing `oauth_body_hash` for bodies on non-form-encoded requests","b45c3946bc8ea678dc5120b90eb484ee22ff7c21","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/__init__.py""]']","False","[]","[{u'raw': u'#316', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'316', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","idan","2012-04-11 13:54:12","Update project description and readme","b464ebd8c2bdbefdff26c516f86f2659dfd4319c","","api.github.com,git_clone","[u'[""setup.py"", ""README.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","stephane","2013-05-22 16:05:15","Fix documentation warnings","b498847d056637b405d349ea98681249aa007737","","api.github.com,git_clone","[u'[""docs/server.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","pydanny","2012-03-13 03:06:28","Adding in the body","b4d3b8fb69dea8218aa9f2d57d2f6730e60477f4","","api.github.com,git_clone","[u'[""tests/test_signatures.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","bjmc","2016-12-19 16:03:22","Docs for custom validator registration","b63590317fc353da5e39ec9eef9a1494eddb925e","","api.github.com,git_clone","[u'[""docs/oauth2/grants/password.rst"", ""docs/oauth2/grants/authcode.rst"", ""docs/oauth2/grants/grants.rst"", ""docs/oauth2/grants/implicit.rst"", ""oauthlib/oauth2/rfc6749/grant_types/base.py"", ""docs/oauth2/grants/credentials.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","dasevilla","2013-05-25 20:50:58","Add base OAuth2 Client to documentation","b650d785223409d6ba04e906eb8c22c9efb788bd","","api.github.com,git_clone","[u'[""docs/baseclient.rst"", ""docs/client2.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","pydanny","2012-03-12 22:41:54","Merge branch 'master' of github.com:idangazit/oauthlib","b6763cc141815be92b883dedabb8c2ddd965b4d5","","api.github.com,git_clone","[u'[""tests/__init__.py"", ""tests/parameters.py"", ""tests/unittest/__init__.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","jdufresne","2017-06-02 12:00:28","Rename [wheel] section to [bdist_wheel] as the former is legacy

See:

https://bitbucket.org/pypa/wheel/src/54ddbcc9cec25e1f4d111a142b8bfaa163130a61/wheel/bdist_wheel.py?fileviewer=file-view-default#bdist_wheel.py-119:125

http://pythonwheels.com/","b67e178e6fe9e916192d4ce30d4fba757c768c56","","api.github.com,git_clone","[u'[""setup.cfg""]']","False","[u'http://pythonwheels.com/', u'https://bitbucket.org/pypa/wheel/src/54ddbcc9cec25e1f4d111a142b8bfaa163130a61/wheel/bdist_wheel.py?fileviewer=file-view-default#bdist_wheel.py-119:125']","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-02-23 15:36:01","Convenince import, new names preview","b69c65271b29fccc39063b638fb929d2a50ace02","","api.github.com,git_clone","[u'[""oauthlib/oauth2/__init__.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-11-17 11:42:43","Form encoded fragment verification","b6a8701001d79454d4183c05eb4cbbcf4130d072","","api.github.com,git_clone","[u'[""tests/unittest/__init__.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-06-18 20:31:08","Request validator tests.","b6c7fe3b20a73192a75dd7fbc4b184d88366dbb4","","api.github.com,git_clone","[u'[""tests/oauth1/rfc5849/test_request_validator.py"", ""tests/oauth1/rfc5849/test_server.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2017-04-03 09:30:50","Merge pull request #461 from skion/rfc6750-errors

Add two error codes from RFC 6750","b6f65f9a06e9981c3306b8a085cd789ed2b56697","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/errors.py"", ""oauthlib/oauth2/rfc6749/endpoints/pre_configured.py""]']","False","[]","[{u'raw': u'#461', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'461', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-06-25 09:28:45","0.1.4","b70c19b4ae783507c929ee88f9b0cdcb101a9131","","api.github.com,git_clone","[u'[""setup.py"", ""README.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-06-29 11:57:39","add_params_to_qs now support dict queries","b765eb5ba4b8ce40fcbb6f76fbccb0285b0d87cd","","api.github.com,git_clone","[u'[""oauthlib/common.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-06-17 10:29:58","Merge pull request #179 from tomchristie/patch-1

Updated README with more prominent package note.  Closes #178.","b76cabf6248df6d82b904a08d74842395498aa85","","api.github.com,git_clone","[u'[""README.rst""]']","False","[]","[{u'raw': u'#178', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'178', u'']}, {u'raw': u'#179', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'179', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-03-24 17:11:45","Merge branch 'master' of https://github.com/idangazit/oauthlib into argument_changes","b7933f3572efaf5c4e4f50ff4cdaa14a931e4398","","api.github.com,git_clone","[u'[""tests/test_signatures.py"", "".gitignore""]']","False","[u'https://github.com/idangazit/oauthlib']","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-08-03 18:56:26","Merge pull request #203 from kdazzle/patch-1

Updated request_validator documentation to include credential-saving met...","b79af6537675a897026ed9fec06e6f2dc8203ddb","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/request_validator.py""]']","False","[]","[{u'raw': u'#203', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'203', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2014-09-25 13:33:04","Make jsonp support in revocation endpoint optional.

Also include the error in jsonp callback.","b85f89ac3379ff720acaeca2a79ea5ae6ebba5e9","","api.github.com,git_clone","[u'[""tests/oauth2/rfc6749/endpoints/test_revocation_endpoint.py"", ""oauthlib/oauth2/rfc6749/endpoints/revocation.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2015-07-01 11:29:21","Merge pull request #352 from idan/travis_deploy

Travis deploy to PyPI on github tag. #333, #346.","b878ba1d12aca8d123c4ad9b776b6afbe77cfc65","","api.github.com,git_clone","[u'["".travis.yml""]']","False","[]","[{u'raw': u'#333', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'333', u'']}, {u'raw': u'#346', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'346', u'']}, {u'raw': u'#352', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'352', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-11-18 17:58:30","Response/grant/token type routing","b89a7476916e4fd04c1a5c27dde614fbc5acecd5","","api.github.com,git_clone","[u'[""oauthlib/oauth2/draft25/__init__.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","grunskis","2013-03-04 14:20:07","make example code parsable to enable syntax highlighting, closes #125","b8fcf7c3a58f08439ef6b12414e062f6447aecab","","api.github.com,git_clone","[u'[""docs/client.rst"", ""docs/server.rst""]']","False","[]","[{u'raw': u'#125', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'125', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2015-07-03 09:00:52","Merge pull request #356 from lepture/performance-improve

A little performance improvement","b934ef52c31ec46db38393e632b42578114d6dbf","","api.github.com,git_clone","[u'[""oauthlib/common.py""]']","False","[]","[{u'raw': u'#356', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'356', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-01-15 20:53:55","Merge pull request #90 from tino/missing-validate_bearer_token

Add missing ``validate_bearer_token`` to ``RequestValidator`` placeholde...","b96a71203fa768fbff5074b4f03dbc444df05afd","","api.github.com,git_clone","[u'[""oauthlib/oauth2/draft25/grant_types.py""]']","False","[]","[{u'raw': u'#90', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'90', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-05-31 14:22:31","0.4.2","b9ef07ca18ec56ef8dfe24344c81ef1ba3a59e34","","api.github.com,git_clone","[u'[""setup.py"", ""README.rst"", ""docs/conf.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-05-30 16:05:27","Remove framework specific decorators. Fix #167.","ba39888bf4d0224bc0bb9281f037402afbc46e12","","api.github.com,git_clone","[u'[""docs/server2.rst"", ""docs/decorators.rst"", ""oauthlib/oauth2/ext/auditor.py"", ""oauthlib/oauth2/ext/flask.py"", ""oauthlib/oauth2/ext/django.py"", ""oauthlib/oauth2/ext/__init__.py""]']","False","[]","[{u'raw': u'#167', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'167', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","idan","2012-05-06 06:58:32","Merge pull request #36 from idangazit/features/python-rsa

Use python-rsa instead of pycrypto","bad28ca4dbfdc8eb0b7e1615e91a0381755a7e3e","","api.github.com,git_clone","[u'[""setup.py"", ""oauthlib/oauth1/rfc5849/signature.py""]']","False","[]","[{u'raw': u'#36', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'36', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2015-07-19 08:49:30","Merge pull request #328 from bootandy/patch-1

Error description in InvalidRequestError should be oauth1 not oauth2","baea1c8b4f882c7b3d145b28b0cd065ea10379de","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/endpoints/base.py""]']","False","[]","[{u'raw': u'#328', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'328', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2017-07-30 06:50:07","Merge pull request #472 from jdufresne/py36

Add Python 3.6 to Travis CI testing and trove classifiers","bbc9b046899099f2935fd4f1a978e32cdc537ea0","","api.github.com,git_clone","[u'["".travis.yml"", ""setup.py""]']","False","[]","[{u'raw': u'#472', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'472', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-04-06 09:51:47","Merge pull request #132 from johanmeiring/master

Further documentation corrections","bbe26bc46f6e2cf208050a476f6ad09f28bcc8e7","","api.github.com,git_clone","[u'[""oauthlib/oauth2/ext/django.py"", ""oauthlib/oauth2/draft25/grant_types.py""]']","False","[]","[{u'raw': u'#132', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'132', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","dgouldin","2012-03-31 23:39:32","Merge pull request #14 from ib-lundgren/test_tokengen

generate_token test was not running","bc0602cf30623729813d535083556ae0ed5a4517","","api.github.com,git_clone","[u'[""tests/test_utils.py""]']","False","[]","[{u'raw': u'#14', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'14', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","skion","2017-07-30 19:45:33","Pass through nonce in code flow.","bc0fd83fa7693db7d80ce19825470b3e210753c5","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/grant_types/openid_connect.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-03-18 09:52:58","Refactored body check","bd3691cde7124d059162753c35b06cfb41472fa4","","api.github.com,git_clone","[u'[""oauthlib/signature.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","joelstevenson","2016-04-21 00:26:43","Remove some comments.","bd3dcb88fb957bfa3e43409af8b59245e88d2163","","api.github.com,git_clone","[u'[""tox.ini""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-02-20 22:50:29","Fix #106","bd4cfe64560d240ffa031062bab9482c7f05091f","","api.github.com,git_clone","[u'[""README.rst""]']","False","[]","[{u'raw': u'#106', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'106', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-03-15 14:45:52","Strip HTTPS port","bd87217afa222cd799b5ee842a473be501ca3840","","api.github.com,git_clone","[u'[""oauthlib/signature.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-11-18 17:08:27","Params from uri","bd9c3ca9a14e19b7aa81fc3031194d722e3f900e","","api.github.com,git_clone","[u'[""oauthlib/oauth2/draft25/utils.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","idan","2012-05-01 09:26:37","Merge branch 'master' of github.com:idangazit/oauthlib","bdce5a2eb548a208e100318afbee951a17942fa8","","api.github.com,git_clone","[u'[""tox.ini""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2015-04-02 11:37:46","Merge pull request #302 from svetlyak40wt/improve-changelog

Improve changelog","be58b2b415342461bbdc026bca89a39a3a5effbc","","api.github.com,git_clone","[u'[""CHANGELOG.rst""]']","False","[]","[{u'raw': u'#302', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'302', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","richardasaurus","2016-07-08 14:00:33","Run tests against python 3.6","bed9ecce5171810aa1c59d16c31a27571e1f1965","","api.github.com,git_clone","[u'[""tox.ini""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-11-08 19:55:06","0.3.2","bee010a211d228764cd5b4207132c79a601e80a6","","api.github.com,git_clone","[u'[""setup.py"", ""README.rst"", ""AUTHORS""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-11-17 11:46:09","An initial batch of OAuth 2 provider tests","bef0fae821e2aa09caee777f0f47b7383d3c46a2","","api.github.com,git_clone","[u'[""tests/oauth2/draft25/test_grant_types.py"", ""tests/oauth2/draft25/test_server.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-01-29 20:14:19","Automatic urlencoding of input (#96).","bf0241bc62f46badd4a0e55f820c0b95cad29ad3","","api.github.com,git_clone","[u'[""tests/test_common.py"", ""oauthlib/common.py""]']","False","[]","[{u'raw': u'#96', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'96', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2015-07-19 10:21:55","Merge pull request #361 from idan/new-version-release-notes

Updated release notes","bf03c785e059ee0e3ab6a229773eae37f48ed877","","api.github.com,git_clone","[u'[""CHANGELOG.rst""]']","False","[]","[{u'raw': u'#361', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'361', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","dgouldin","2012-03-24 16:35:43","Merge pull request #4 from ib-lundgren/rsa_test

Added RSA Test","bf1f357410f18cd55071a65f40dd10ba1077a9e4","","api.github.com,git_clone","[u'[""tests/test_signatures.py""]']","False","[]","[{u'raw': u'#4', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'4', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","kippandrew","2016-12-07 04:55:39","Authenticate public clients before revocation","bf2f9dbff3e04addd16ad825e6dae30537677afc","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/endpoints/revocation.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","tomchristie","2012-11-13 13:11:53","Add link to readthedocs","bf7e0d21af2199eae5f445fa13a1d30d1a0bc494","","api.github.com,git_clone","[u'[""README.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2017-09-11 09:02:13","Merge pull request #468 from ThePrudents/fix-explicit-import

Changed all implicit imports * with explicit classes imports","c00a194e2986e75da4acf05ec413ab21cb6d46da","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/clients/__init__.py"", ""oauthlib/oauth1/__init__.py"", ""oauthlib/oauth2/__init__.py""]']","False","[]","[{u'raw': u'#468', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'468', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2014-10-03 13:32:36","Remove get_auth_code_scopes. Obsoleted by validate_auth_code","c03d208c42b2d18b19b9020e2aaff5b1ee9b0556","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/request_validator.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","pydanny","2012-03-13 03:28:02","Whitespace cleanup","c055f419781507190ecddca57eb6b4db9be652fc","","api.github.com,git_clone","[u'[""tests/test_signatures.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","idan","2012-04-24 13:18:28","Update testcases with valid outputs","c06dcfb665faa92a80a89054b82480636d40c7b1","","api.github.com,git_clone","[u'[""tests/oauth1/rfc5849/test_parameters.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-02-05 20:40:20","Note about upcoming changes to oauth1 provider","c07d7b90b041f062cd5ad2090b5cd1a755f240fd","","api.github.com,git_clone","[u'[""docs/server.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","masci@evonove.it","2013-09-22 13:57:16","fixed and extended tests for validate_token_request method","c0dc977de73573ca0c286b05da34b8e525467254","","api.github.com,git_clone","[u'[""tests/oauth2/rfc6749/grant_types/test_authorization_code.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","andreif","2013-02-06 13:17:43","Fixed typo and argument order in docs.","c0f1a9ec3df123eea7c24159f02c205bf0a3f3ea","","api.github.com,git_clone","[u'[""docs/server2.rst"", ""oauthlib/oauth2/draft25/errors.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","idan","2012-05-06 07:07:40","v0.1.3","c151c9cca13e1a9375a01fb1f6e7a0acdf8f115a","","api.github.com,git_clone","[u'[""setup.py"", ""README.rst"", ""tests/oauth1/rfc5849/test_signatures.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-10-23 19:48:13","Tox for 3.1,3.2,3.3","c1926d1a92098b2477b7993a4397f44947884175","","api.github.com,git_clone","[u'[""tox.ini""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","hirokiky","2015-09-29 04:04:59","Added a kwarg to set wether refresh token will be created or not","c1b24120bb627eb471dd99ea409c934fe942c836","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/grant_types/authorization_code.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","lepture","2017-10-18 14:57:51","Fix travis for PyPy

This is due to https://github.com/pyca/cryptography/pull/3970","c1eda9f1c92f7110ad41af5e48864bfb2ac37c7c","","api.github.com,git_clone","[u'["".travis.yml""]']","False","[u'https://github.com/pyca/cryptography/pull/3970']","[{u'raw': u'https://github.com/pyca/cryptography/pull/3970', u'refstyle': u'url', u'parts': [u'pyca', u'cryptography', u'3970', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","floppym","2012-11-18 18:37:57","Include tests in the source tarball","c2505585c05929035fde77ce05bbf45b5e04be89","","api.github.com,git_clone","[u'[""MANIFEST.in""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","kennethreitz","2012-04-07 22:02:40","clarify setup.py","c2820c4e0883f4639ea5974d7447acebb7874a7a","","api.github.com,git_clone","[u'[""setup.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","andreif","2013-02-06 11:39:05","Fixed typos in grant_types. Initialized attributes to avoid validation errors.","c287c87a102b95d4636b5ea3ebac2d1332513dfd","","api.github.com,git_clone","[u'[""oauthlib/oauth2/draft25/grant_types.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-03-07 22:03:21","OAuth 1 versus 2. Fix #118.","c35ae9439ec7725828c9973b4788338f3fb10c64","","api.github.com,git_clone","[u'[""docs/oauth_1_versus_oauth_2.rst"", ""docs/index.rst""]']","False","[]","[{u'raw': u'#118', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'118', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","masci@evonove.it","2013-09-20 23:05:31","fixed call to client_authentication_required","c38dab51aec039ac3a89778233c190776b5d7e8c","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/grant_types/authorization_code.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-01-21 23:16:58","Large OAuth 2 provider update.","c3a01e19c8ee34fdf1f2aebf367067b7dde0569c","","api.github.com,git_clone","[u'[""tox.ini"", ""oauthlib/common.py"", ""oauthlib/oauth2/draft25/__init__.py"", ""Makefile"", ""tests/oauth2/draft25/test_server.py"", ""tests/oauth2/draft25/test_grant_types.py"", ""oauthlib/oauth2/draft25/grant_types.py"", ""oauthlib/oauth2/ext/django/__init__.py"", ""oauthlib/oauth2/ext/__init__.py"", ""oauthlib/oauth2/draft25/tokens.py"", ""oauthlib/oauth2/draft25/errors.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","squirly","2013-07-26 18:13:21","The authorization endpoint now returns a 200 on ""oob"" oauth_callbacks.","c4255477329a48bc01a4402c11abdb4bc178c235","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/endpoints/authorization.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","whit537","2014-09-22 14:07:03","Add documentation of OAUTHLIB_STRICT_TOKEN_TYPE","c49028af26b89ebdc08a72d3cebbf553fa0ddef6","","api.github.com,git_clone","[u'[""docs/oauth2/tokens/tokens.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","squirly","2013-08-01 18:11:10","#199 Proposed API changes for endpoints.","c4a6c31ba9748947462e8e31e106215cca1d3cc9","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/endpoints/request_token.py"", ""docs/oauth1/server.rst"", ""tests/oauth1/rfc5849/endpoints/test_request_token.py"", ""tests/oauth1/rfc5849/endpoints/test_base.py"", ""oauthlib/oauth1/rfc5849/endpoints/authorization.py"", ""tests/oauth1/rfc5849/endpoints/test_authorization.py"", ""tests/oauth1/rfc5849/endpoints/test_access_token.py"", ""oauthlib/oauth1/rfc5849/endpoints/access_token.py""]']","False","[]","[{u'raw': u'#199', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'199', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-02-21 21:03:41","Request now use a CaseInsensitiveDict. Fix #121.","c4bead3a0fe4ea48c4cab5f1ea682ac8f2dcb5d4","","api.github.com,git_clone","[u'[""tests/oauth1/rfc5849/test_client.py"", ""tests/test_common.py"", ""oauthlib/common.py""]']","False","[]","[{u'raw': u'#121', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'121', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","wrr","2013-11-05 14:06:52","Fix test method name conflict.

Without the fix only a single test_invalid_scope method is run.","c4c5a480485a4bc39149c62ff1bc289e82542cda","","api.github.com,git_clone","[u'[""tests/oauth2/rfc6749/grant_types/test_refresh_token.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","russss","2013-01-15 09:31:53","Use the correct dummy tokens","c50ca676ef4d486bbb638106c4435333fabe34c6","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/__init__.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-06-20 10:09:13","Merge pull request #181 from idan/oauth1_provider_revamp

OAuth1 provider revamp. Fix #95.","c55625cd86abde4f25e6a2f49cf4bd62cf6a056c","","api.github.com,git_clone","[u'[""docs/oauth1/preconfigured_servers.rst"", ""tests/oauth1/rfc5849/endpoints/test_request_token.py"", ""oauthlib/oauth1/rfc5849/endpoints/resource.py"", ""oauthlib/oauth1/rfc5849/endpoints/authorization.py"", ""oauthlib/oauth1/rfc5849/__init__.py"", ""oauthlib/oauth1/rfc5849/request_validator.py"", ""tests/oauth1/rfc5849/endpoints/test_access_token.py"", ""tests/oauth1/rfc5849/test_request_validator.py"", ""oauthlib/oauth1/__init__.py"", ""docs/oauth1/security.rst"", ""tests/oauth1/rfc5849/endpoints/test_resource.py"", ""tests/oauth1/rfc5849/endpoints/test_base.py"", ""oauthlib/oauth1/rfc5849/endpoints/base.py"", ""oauthlib/oauth1/rfc5849/endpoints/access_token.py"", ""oauthlib/oauth1/rfc5849/endpoints/request_token.py"", ""docs/oauth1/server.rst"", ""tests/oauth1/rfc5849/endpoints/__init__.py"", ""oauthlib/oauth2/rfc6749/exceptions.py"", ""oauthlib/oauth1/rfc5849/endpoints/__init__.py"", ""oauthlib/oauth1/rfc5849/endpoints/pre_configured.py"", ""docs/oauth1/validator.rst"", ""oauthlib/oauth1/rfc5849/errors.py"", ""tests/oauth1/rfc5849/test_server.py"", ""tests/oauth1/rfc5849/endpoints/test_authorization.py"", ""docs/oauth1/endpoints.rst""]']","False","[]","[{u'raw': u'#181', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'181', u'']}, {u'raw': u'#95', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'95', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-11-17 12:57:16","Mock out generate_age","c5969278122901448824ce5f875e894a00dc587e","","api.github.com,git_clone","[u'[""tests/oauth2/draft25/test_client.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","richardasaurus","2016-07-08 14:06:53","Update tox.ini","c598b6ca27da7eaf743717421325a72d8b7a8380","","api.github.com,git_clone","[u'[""tox.ini""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-09-18 16:18:03","Merge pull request #208 from masci/is_auth_required_method

Ask validator if Client has to be authenticated","c5bcd193140a1a1493277383794742ccec3d2c60","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/grant_types/refresh_token.py"", ""oauthlib/oauth2/rfc6749/grant_types/resource_owner_password_credentials.py"", ""oauthlib/oauth2/rfc6749/grant_types/authorization_code.py"", ""tests/oauth2/rfc6749/test_request_validator.py"", ""oauthlib/oauth2/rfc6749/request_validator.py""]']","False","[]","[{u'raw': u'#208', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'208', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-06-29 12:00:12","New init params","c5ecaa4ca5998391b06c5adbe3c66dc010b49cd5","","api.github.com,git_clone","[u'[""oauthlib/oauth2/draft25/__init__.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2014-02-12 14:50:52","Merge pull request #232 from diox/fix-docstrings-return-values

Fix docstrings to reflect the actual returned value of validate_* methods","c68ff37b928be9ba5179596ec2792d2d13e46458","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/endpoints/request_token.py"", ""oauthlib/oauth1/rfc5849/endpoints/access_token.py""]']","False","[]","[{u'raw': u'#232', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'232', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","lepture","2017-10-18 14:40:32","Refactor OAuth2Error","c6b11373648af4b81367b0424b65b15ee8b58261","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/errors.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","lepture","2013-05-29 12:26:20","it should work this way","c6c300fa33d94f875527acf52d08c05f593a3146","","api.github.com,git_clone","[u'["".travis.yml""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","bjmc","2016-12-20 14:55:04","Per code review, _run_custom_validators() doesn't mutate request_info","c6d84da649789151a274e091df3f23e99e92dd0c","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/grant_types/implicit.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-02-18 17:50:11","OAuth 2 cope handling tests.","c725172137a097ca3077b93aed9b3776fe433fe3","","api.github.com,git_clone","[u'[""tests/oauth2/draft25/test_servers.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","RodneyRichardson","2014-10-07 16:22:05","Allow invalid token_type_hint.

Invalid token_type_hints should be ignored. This looks to have been
broken in 6ffcc4f2ae6b66e42c1f58b6de634fe969b473a0","c742c150b208e75ded8f59cfb525fe4228b07520","","api.github.com,git_clone","[u'[""tests/oauth2/rfc6749/endpoints/test_revocation_endpoint.py"", ""oauthlib/oauth2/rfc6749/endpoints/revocation.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2014-09-25 14:21:05","Client side creation of OAuth2 revocation requests.

Prepare the full request with url, headers and body. Also
support creating JSONP callbacks (included in URL query)
and the standard request utilizing request body.

Set default token type hint to access token for now. Will
consider changing to refresh_token if this is the more
common operation.","c78f698f6bf4f025a33ed9bb4f27b8d76bf41ebf","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/parameters.py"", ""oauthlib/oauth2/rfc6749/clients/base.py"", ""tests/oauth2/rfc6749/clients/test_base.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","lepture","2015-07-23 14:31:47","Merge pull request #362 from masci/token_type_hint_missing

Add token_type_hint to the list of default Request params","c7ddf2db7aba0193c070350900c39ac2e260a824","","api.github.com,git_clone","[u'[""tests/oauth2/rfc6749/endpoints/test_revocation_endpoint.py"", ""oauthlib/common.py""]']","False","[]","[{u'raw': u'#362', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'362', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-02-19 23:33:17","Raise error if body supplied in signing of GET and HEAD requests (#120).","c7fef5c569b3337eb4936b540048e7720dafb5d8","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/__init__.py"", ""tests/oauth1/rfc5849/test_client.py""]']","False","[]","[{u'raw': u'#120', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'120', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2015-07-01 11:26:50","Merge pull request #314 from singingwolfboy/require-rsa-key-when-being-used

Check for rsa_key when it's actually needed","c806879ce39fe3be8e21a780689b28cd1407b161","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/__init__.py"", ""tests/oauth1/rfc5849/test_client.py"", ""oauthlib/oauth1/rfc5849/signature.py""]']","False","[]","[{u'raw': u'#314', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'314', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2015-07-19 08:57:01","Merge pull request #305 from artooro/patch-1

Allow ! character in query string","c8111dd716a22f43fa05a103459a66aad7e8782d","","api.github.com,git_clone","[u'[""oauthlib/common.py""]']","False","[]","[{u'raw': u'#305', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'305', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","idan","2012-03-13 18:37:20","PEP8 cleanup, add missing import","c8526107a8b2356f61cac13f0520dd96d7705612","","api.github.com,git_clone","[u'[""oauthlib/utils.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","pydanny","2012-03-14 06:17:56","tiny doc tweaks","c86f971d33ce8e9de6ab0026e775f1df74a8c13e","","api.github.com,git_clone","[u'[""docs/server.rst"", ""docs/index.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","julienmeyer","2015-08-18 13:34:44","Add ( and ) in urlencoded safe characters","c87c76189627440c45d1ea0957e6eb3330a8c5fd","","api.github.com,git_clone","[u'[""oauthlib/common.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-12-09 22:30:41","Merge pull request #225 from wrr/is_within_original_scope_typo

Fix typo (Issue #224).","c89bcc737ec27b1f7520168a57f502537ad6c555","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/request_validator.py""]']","False","[]","[{u'raw': u'#224', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'224', u'']}, {u'raw': u'#225', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'225', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2014-10-23 17:46:17","Tidy up makefile and add contacts meta data.","c8a2e6d80ed20d02e4d66b0eb3d4bcc69f334419","","api.github.com,git_clone","[u'[""Makefile""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","idan","2012-05-02 22:02:47","v0.1.0","c8a63500581644a184df782b19e3a5b7dec32702","","api.github.com,git_clone","[u'[""setup.py"", ""README.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","masci@evonove.it","2013-07-08 22:00:37","add comma to the set of safe characters in urls","c8bf90d7027966e24ebfb40188b0856cd5d7deaf","","api.github.com,git_clone","[u'[""tests/test_common.py"", ""oauthlib/common.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","idan","2012-04-24 08:58:06","Signed requests with bodies are returned already formencoded","c8cb12879f600b1af3eefeece95e91d5bddc62c0","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/__init__.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","joelstevenson","2016-05-02 17:10:52","Check the response type against exact response_type registry formats in GrantTypeBase.add_token()","c9393ce3fb370af303afe741ce61ee1f73a17833","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/grant_types/base.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","stephane","2013-05-07 08:39:50","Wrap all paragraphs at 80 characters

Cosmetic but large patch.","c940f9f8b1c85fcc177dfc0c7a2705bc89506376","","api.github.com,git_clone","[u'[""docs/oauth2_overview.rst"", ""docs/server2.rst"", ""docs/client.rst"", ""docs/tokens.rst"", ""docs/server.rst"", ""docs/endpoints.rst"", ""docs/contributing.rst"", ""docs/index.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2014-07-15 15:55:05","Merge pull request #258 from mdxs/patch-1

Show support for Python 3.4","c9b5b1ec3bb217caf24bb1bdf882a33541ac660f","","api.github.com,git_clone","[u'[""setup.py""]']","False","[]","[{u'raw': u'#258', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'258', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","singingwolfboy","2014-10-16 23:18:26","Document environment variables","ca45f108dbbefaede131edab055501076323d09c","","api.github.com,git_clone","[u'[""docs/oauth2/clients/client.rst"", ""docs/oauth2/oauth2.rst"", ""docs/oauth2/security.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2014-10-23 17:41:26","Wrap OAuth2 tokens in a OAuth2Token class.

The OAuth2Token class allows for easy checking of scope
changes and might be extended with further convenience
methods in the future.

Additionally, the Warning raised on scope change will now
include a ``token`` parameter with a full OAuth 2 token
in case scope change is fine, which ideally it should be.

Users who don't want to catch a warning can instead
check the boolean token property ``token.scope_changed``. Note
that the warning must first be disabled by setting the
environment variable ``OAUTHLIB_RELAX_TOKEN_SCOPE``.","ca4811b3087f9d34754d3debf839e247593b8a39","","api.github.com,git_clone","[u'[""tests/oauth2/rfc6749/clients/test_backend_application.py"", ""oauthlib/oauth2/rfc6749/parameters.py"", ""tests/oauth2/rfc6749/clients/test_legacy_application.py"", ""oauthlib/oauth2/rfc6749/tokens.py"", ""tests/oauth2/rfc6749/clients/test_service_application.py"", ""tests/oauth2/rfc6749/clients/test_web_application.py"", ""tests/oauth2/rfc6749/clients/test_mobile_application.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-02-18 19:31:54","Fix travis tox to only run once, remove 3.1 from tox.ini","ca4c2c94050527a829bdc3b2e886ddf01d536e17","","api.github.com,git_clone","[u'["".travis.yml"", ""tox.ini""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-10-23 19:48:43","0.3.1","ca5033d9cb40b71eea16a780bb830c4af9f03b05","","api.github.com,git_clone","[u'[""README.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","jbkkd","2014-11-26 12:33:53","Revocation endpoint should return empty string, not Python 'None'","ca848a242257507074d272cb72c77a4b078cbc0b","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/endpoints/revocation.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","mvo5","2012-10-31 08:25:36","use  ""from future import unicode_literals"" instead of u""""","cb1598ba6ff147a55ab8a0e7ff7eaf90c7885a35","","api.github.com,git_clone","[u'[""tests/oauth1/rfc5849/test_client.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","calebbrown","2012-04-18 13:13:27","Pass through the request method to the client when generating signature.","cb1997081a873e59cf4f2e55d19246cb244a2a60","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/__init__.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2015-07-19 10:31:14","Added PyPy3 to the build, moved to the new infrastructure and cache pip dependencies.","cb231322a106942b4bb7dd96e80f56ffc707e3b4","","api.github.com,git_clone","[u'["".travis.yml"", ""tox.ini""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-02-21 23:20:50","User association tests.","cb24bf85b0b0346e48a653a2d49e6a454ccad509","","api.github.com,git_clone","[u'[""oauthlib/oauth2/draft25/__init__.py"", ""tests/oauth2/draft25/test_servers.py"", ""oauthlib/oauth2/draft25/grant_types.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-09-12 18:20:08","Signature method and type tests.","cb66da562cf877eba8d7ea553bcba4a63dd5dabe","","api.github.com,git_clone","[u'[""tests/oauth1/rfc5849/test_client.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2016-12-06 12:10:57","Drop obsolete Python versions.","cb69a9b3e2ce944fa17f14b232a5d285fcac42d5","","api.github.com,git_clone","[u'[""tox.ini""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2015-07-20 07:49:24","Updated travis password for PyPI.","cb74fd7fd2b2d4c899b5c001539912cf1c852858","","api.github.com,git_clone","[u'["".travis.yml""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-03-31 09:01:07","Bearer and MAC token support","cb7587f7674db5d00df3a6134ad815fa03e2e7e6","","api.github.com,git_clone","[u'[""tests/oauth2_draft25/test_tokens.py"", ""oauthlib/oauth2_draft25/tokens.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2015-10-25 11:16:10","Merge pull request #396 from hirokiky/feature-auth-without-refreshtoken

Make refresh token as optional on Authentication code grant.","cb93e78e14663cf78827512928c3ffccdf9d34ed","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/grant_types/authorization_code.py"", ""tests/oauth2/rfc6749/grant_types/test_authorization_code.py""]']","False","[]","[{u'raw': u'#396', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'396', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-03-25 12:55:10","Invalid scope tests.","cc0cc5c53e4693fe398056818be9a0c2dfa0c425","","api.github.com,git_clone","[u'[""tests/oauth2/draft25/test_servers.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2015-12-27 11:57:47","Merge pull request #405 from xiaohanyu/patch-1

Fix typo in README.rst","cc3b3abfcd3a2509031b9f8bf92e8bfe6367a9aa","","api.github.com,git_clone","[u'[""README.rst""]']","False","[]","[{u'raw': u'#405', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'405', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","garciasolero","2015-07-06 10:44:17","Fix management of rfc6749 errors","cc8eae16cf91c800a512dda595313f0570b85643","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/request_validator.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2014-09-25 09:33:48","Merge pull request #271 from idan/autopep8

Auto pep8 changes throughout the code base.","ccc34c8c2cee067812ba4f93e44c8a6379b6e9d4","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/grant_types/refresh_token.py"", ""oauthlib/oauth2/rfc6749/endpoints/base.py"", ""oauthlib/oauth2/rfc6749/clients/backend_application.py"", ""oauthlib/oauth2/rfc6749/utils.py"", ""oauthlib/oauth1/rfc5849/endpoints/resource.py"", ""oauthlib/oauth1/rfc5849/endpoints/authorization.py"", ""oauthlib/uri_validate.py"", ""oauthlib/oauth1/rfc5849/__init__.py"", ""oauthlib/oauth1/rfc5849/request_validator.py"", ""oauthlib/oauth2/rfc6749/errors.py"", ""oauthlib/oauth2/rfc6749/__init__.py"", ""oauthlib/oauth2/rfc6749/grant_types/resource_owner_password_credentials.py"", ""oauthlib/oauth2/rfc6749/clients/mobile_application.py"", ""oauthlib/oauth1/rfc5849/parameters.py"", ""oauthlib/oauth2/rfc6749/grant_types/authorization_code.py"", ""oauthlib/oauth2/rfc6749/endpoints/authorization.py"", ""oauthlib/oauth1/rfc5849/signature.py"", ""oauthlib/oauth2/rfc6749/clients/base.py"", ""oauthlib/oauth2/rfc6749/endpoints/revocation.py"", ""oauthlib/oauth1/rfc5849/endpoints/base.py"", ""oauthlib/oauth1/rfc5849/endpoints/access_token.py"", ""oauthlib/oauth1/rfc5849/endpoints/request_token.py"", ""oauthlib/common.py"", ""oauthlib/oauth2/rfc6749/grant_types/base.py"", ""oauthlib/oauth2/rfc6749/clients/legacy_application.py"", ""oauthlib/oauth2/rfc6749/grant_types/client_credentials.py"", ""oauthlib/oauth2/rfc6749/grant_types/implicit.py"", ""oauthlib/oauth2/rfc6749/endpoints/token.py"", ""oauthlib/__init__.py"", ""oauthlib/oauth1/rfc5849/endpoints/pre_configured.py"", ""oauthlib/oauth2/rfc6749/clients/web_application.py"", ""oauthlib/oauth1/rfc5849/endpoints/signature_only.py"", ""oauthlib/oauth2/rfc6749/endpoints/resource.py"", ""oauthlib/oauth2/rfc6749/request_validator.py"", ""oauthlib/oauth2/rfc6749/parameters.py"", ""oauthlib/oauth2/rfc6749/endpoints/pre_configured.py""]']","False","[]","[{u'raw': u'#271', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'271', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","idan","2012-04-15 06:16:42","Merge branch 'master' of github.com:idangazit/oauthlib","cd12e007d14786899af299505a6d86037d50a53c","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/parameters.py"", ""tests/oauth1/rfc5849/test_parameters.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-05-28 14:59:14","Merge pull request #161 from dasevilla/base-client-docs

Document Base OAuth 2 Client","cd14e3db53a1c04e7b61f175845bd1bbe40c79b6","","api.github.com,git_clone","[u'[""docs/baseclient.rst"", ""oauthlib/oauth2/draft25/__init__.py"", ""docs/client2.rst""]']","False","[]","[{u'raw': u'#161', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'161', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2017-03-31 08:59:53","Merge pull request #467 from ajpaul510/master

Fixed client.rst","cd19a1af2a9639fef65d706c99b877b723ffbdb3","","api.github.com,git_clone","[u'[""docs/oauth1/client.rst""]']","False","[]","[{u'raw': u'#467', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'467', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","idan","2012-04-12 20:07:07","PEP8 cleanup","cd576c7191eb81945e417c73e2d459ba76c1c5f8","","api.github.com,git_clone","[u'[""setup.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-05-30 09:02:51","Rename draft to rfc. Fix #75.","cd6da5ab2522e283d2fd7f89c74d77cab83b5eb8","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/tokens.py"", ""oauthlib/oauth2/rfc6749/utils.py"", ""tests/oauth2/rfc6749/test_server.py"", ""oauthlib/oauth2/draft25/grant_types.py"", ""oauthlib/oauth2/draft25/parameters.py"", ""oauthlib/oauth2/rfc6749/errors.py"", ""tests/oauth2/rfc6749/test_grant_types.py"", ""oauthlib/oauth2/rfc6749/__init__.py"", ""oauthlib/oauth2/__init__.py"", ""tests/oauth2/rfc6749/test_parameters.py"", ""oauthlib/oauth2/rfc6749/grant_types.py"", ""oauthlib/oauth2/draft25/utils.py"", ""oauthlib/oauth2/draft25/tokens.py"", ""tests/oauth2/draft25/test_tokens.py"", ""tests/oauth2/draft25/__init__.py"", ""tests/oauth2/draft25/test_servers.py"", ""tests/oauth2/rfc6749/test_servers.py"", ""tests/oauth2/rfc6749/test_client.py"", ""tests/oauth2/rfc6749/test_utils.py"", ""oauthlib/oauth2/rfc6749/parameters.py"", ""oauthlib/oauth2/draft25/__init__.py"", ""tests/oauth2/draft25/test_server.py"", ""tests/oauth2/draft25/test_grant_types.py"", ""tests/oauth2/draft25/test_parameters.py"", ""oauthlib/oauth2/rfc6749/exceptions.py"", ""tests/oauth2/draft25/test_client.py"", ""oauthlib/oauth2/draft25/exceptions.py"", ""tests/oauth2/draft25/test_utils.py"", ""tests/oauth2/rfc6749/__init__.py"", ""tests/oauth2/rfc6749/test_tokens.py"", ""oauthlib/oauth2/draft25/errors.py""]']","False","[]","[{u'raw': u'#75', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'75', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-04-26 13:34:25","refactor regex","cd8d0ab8b43cb12f4de96767eae694842e6fbceb","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/utils.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","squirly","2013-08-01 23:58:57","OAuth1 endpoint documentation cleanup.","cddd41f82acbbbedd856733d2a73ec14f292d5a7","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/endpoints/request_token.py"", ""oauthlib/oauth1/rfc5849/endpoints/authorization.py"", ""oauthlib/oauth1/rfc5849/endpoints/access_token.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-03-15 22:16:34","Changed some arguments to optional per spec","cdf86d96eb6f6011f5743ea553e7c549deb0df73","","api.github.com,git_clone","[u'[""oauthlib/oauth.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","mistermocha","2016-10-21 21:34:25","scrubbing rsa_key from __repr__","ce756e750141b28ac55ea46219b7b3bacc73a2c1","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/__init__.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-06-20 09:58:07","Endpoint source documentation.","ce861400b97e884b6b9e326d4708e30d045fe2f2","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/endpoints/request_token.py"", ""tests/oauth1/rfc5849/endpoints/test_request_token.py"", ""oauthlib/oauth1/rfc5849/endpoints/resource.py"", ""oauthlib/oauth1/rfc5849/endpoints/authorization.py"", ""tests/oauth1/rfc5849/endpoints/test_authorization.py"", ""docs/oauth1/endpoints.rst"", ""tests/oauth1/rfc5849/endpoints/test_access_token.py"", ""oauthlib/oauth1/rfc5849/endpoints/access_token.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","bjmc","2016-12-22 16:39:50","Updated docs for custom validators","cf414259b2b03664cf51e12532035e2a4ef130f3","","api.github.com,git_clone","[u'[""docs/oauth2/grants/custom_validators.rst"", ""docs/oauth2/grants/grants.rst"", ""oauthlib/oauth2/rfc6749/grant_types/base.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-03-31 08:46:01","generate_token test was not running","cf8d28ce21c71cebda6f82a6d58dc7c3f1d742cf","","api.github.com,git_clone","[u'[""tests/test_utils.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-02-04 23:13:49","Revert default urlencoding","cf97e3102cf46cdc3bb33c175cdd17b1a86cb63a","","api.github.com,git_clone","[u'[""tests/test_common.py"", ""oauthlib/common.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2014-10-01 13:58:00","Support for extra token validators and code modifiers.","cfb2682c07c79d7b636b0f44d4633a3e531e0512","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/grant_types/authorization_code.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ViktorHaag","2017-11-14 15:44:44","Add support for HMAC-SHA256 (builds on PR#388) (#498)

* Add support for HMAC-SHA256

* Add explicit declaration of HMAC-SHA1 and point HMAC at it

To avoid confusion, HMAC constant name should explicitly state which SHA variant is used, but for backwards compatibility, SIGNATURE_HMAC is still needed

* add support for HMAC-SHA256 including tests and comments

* constructor tests verify client built with correct signer method","cfb82feb03fcd60b3b66ac09bf1b478cd5f11b7d","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/__init__.py"", ""tests/oauth1/rfc5849/test_client.py"", ""oauthlib/oauth1/__init__.py"", ""oauthlib/oauth1/rfc5849/signature.py""]']","False","[]","[{u'raw': u'#498', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'498', u'']}, {u'raw': u'PR#388', u'refstyle': u'o#d', u'parts': [u'PR', u'oauthlib', u'388', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","mikix","2012-08-31 22:04:18","Fix forgotten import in setup.py","d06f0174e275723b8b68b26d98140cb997daf2c9","","api.github.com,git_clone","[u'[""setup.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","bjmc","2016-12-22 13:27:55","Refactor custom validators registration","d0a59bd8a4fbb44f2ad0218becfbccf49d91cb4d","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/grant_types/refresh_token.py"", ""oauthlib/oauth2/rfc6749/grant_types/resource_owner_password_credentials.py"", ""oauthlib/oauth2/rfc6749/grant_types/client_credentials.py"", ""oauthlib/oauth2/rfc6749/grant_types/authorization_code.py"", ""oauthlib/oauth2/rfc6749/grant_types/base.py"", ""oauthlib/oauth2/rfc6749/grant_types/openid_connect.py"", ""oauthlib/oauth2/rfc6749/grant_types/implicit.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","stephane","2013-05-06 12:27:17","Replace 3 minus signs by an equal","d11ebfb8fc6290feb799fb2798f2d541fa95e67e","","api.github.com,git_clone","[u'[""docs/preconfigured_servers.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-09-12 10:52:32","Remove obsolete urlencode from oauth 1 utils.","d128ab21bac98b12790bf566b5d482591e1ce169","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/utils.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","myyang","2015-06-29 15:00:55","Fix redirect_url typo and add test cases for function.

* Fix redirect_url typo in prepare_authorization_request()
* Exception testing in test_base.py
* Functionality testing in test_web_application.py","d13ec31886b35dfec28231da05e1d8b545dc26a2","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/clients/base.py"", ""tests/oauth2/rfc6749/clients/test_base.py"", ""tests/oauth2/rfc6749/clients/test_web_application.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","dgouldin","2012-04-24 16:07:42","Changing signatures.construct_base_string to more closely follow the spec documentation.","d17fa0ef84b769bf48faab57cb00456e4e1a7e53","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/signature.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-11-01 20:46:38","Cleaning up mistaken merge from way back, will merge right branch next time...","d19bfa61d11afb32654dca471991eccf0a24f78d","","api.github.com,git_clone","[u'[""tests/oauth2/draft25/test_server.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2016-08-28 07:31:02","Small fix for #416

Tuples are initialized faster on CPython.","d1a19cfe1a8d066341b42a8f41de481e8458fd07","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/grant_types/authorization_code.py""]']","False","[]","[{u'raw': u'#416', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'416', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","lepture","2013-11-04 03:24:51","Add maintainer info and get version from oauthlib module.","d1ad84e978192a8d73faf15ef6963c5cffba60bc","","api.github.com,git_clone","[u'[""setup.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","swsnider","2012-11-07 17:36:23","fix problem with verification of initial OAuth requests which lack a resource_owner token","d1cb48b4be073b446981550e9cf66b8187fda68f","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/__init__.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","dasevilla","2013-05-25 20:51:44","Fix formatting in OAuth 2 Client docs","d1e2b1df73eaeebafaab0b03262e3e1375f81749","","api.github.com,git_clone","[u'[""oauthlib/oauth2/draft25/__init__.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-03-16 18:18:05","Section 3.(2|4|5) changes","d2357291dfe04bd640de7376fc60dafe584373be","","api.github.com,git_clone","[u'[""oauthlib/oauth.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","whit537","2014-09-17 15:02:13","Failing test for expires as alias for expires_in","d2937b275f23d7cb9c555c61ceb69fbebeace2ae","","api.github.com,git_clone","[u'[""tests/oauth2/rfc6749/test_parameters.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2014-10-16 08:52:38","Merge pull request #280 from djpnewton/patch-1

fix add_params_to_uri() fragment bug","d2c61a4e80f8defc00ea5675236a83f9884d752d","","api.github.com,git_clone","[u'[""oauthlib/common.py""]']","False","[]","[{u'raw': u'#280', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'280', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2016-12-23 07:07:49","Merge pull request #449 from bjmc/improve_validator_registration

Improve validator registration","d2c7be6c38c9cc2dd3f5ba0dffaf38be42fcb418","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/grant_types/refresh_token.py"", ""docs/oauth2/grants/password.rst"", ""oauthlib/oauth2/rfc6749/grant_types/resource_owner_password_credentials.py"", ""tests/oauth2/rfc6749/grant_types/test_refresh_token.py"", ""oauthlib/oauth2/rfc6749/grant_types/implicit.py"", ""AUTHORS"", ""oauthlib/oauth2/rfc6749/grant_types/base.py"", ""oauthlib/oauth2/rfc6749/grant_types/client_credentials.py"", ""tests/oauth2/rfc6749/grant_types/test_resource_owner_password.py"", ""docs/oauth2/grants/grants.rst"", ""tests/oauth2/rfc6749/grant_types/test_client_credentials.py"", ""docs/oauth2/grants/implicit.rst"", ""tests/oauth2/rfc6749/grant_types/test_implicit.py"", ""tests/oauth2/rfc6749/grant_types/test_authorization_code.py"", ""docs/oauth2/grants/authcode.rst"", ""docs/oauth2/grants/custom_validators.rst"", ""docs/oauth2/grants/credentials.rst"", ""oauthlib/oauth2/rfc6749/grant_types/openid_connect.py"", ""oauthlib/oauth2/rfc6749/grant_types/authorization_code.py""]']","False","[]","[{u'raw': u'#449', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'449', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2016-04-10 08:21:22","Use slots for token bearer.","d2e39378991bf762ec4ba6c33da011bbca395851","","api.github.com,git_clone","[u'[""requirements.txt"", ""oauthlib/oauth2/rfc6749/tokens.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","swsnider","2012-11-09 08:12:39","Correct typo that set the default value of with_realm. This was caught by the test also added in this commit","d30cbfa0a528d6b69de530cc259fa44b0ad653be","","api.github.com,git_clone","[u'[""tests/oauth1/rfc5849/test_signatures.py"", ""oauthlib/oauth1/rfc5849/signature.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","bjmc","2016-12-20 20:01:49","Adds failing test","d37f361aa0efd7565ac3eebb31cb38f25be70abc","","api.github.com,git_clone","[u'[""tests/oauth2/rfc6749/endpoints/test_prompt_handling.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2014-10-03 13:28:10","Auth code authorization resp test.","d38502160d0f455575bec354a2e303221086bfac","","api.github.com,git_clone","[u'[""tests/oauth2/rfc6749/grant_types/test_authorization_code.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","dgouldin","2012-03-24 17:28:42","Merge pull request #8 from ib-lundgren/argument_changes

Changed secrets and resource owner key to optional","d3e2dfbc13c9295ba5669d7828bf47db1be017df","","api.github.com,git_clone","[u'[""oauthlib/oauth.py""]']","False","[]","[{u'raw': u'#8', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'8', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-11-22 23:11:22","A batch of small fixes and cleanups.","d421d34541e2b2b35413f941c1c1e60a1e679ae5","","api.github.com,git_clone","[u'[""oauthlib/common.py"", ""oauthlib/oauth2/draft25/__init__.py"", ""tests/oauth2/draft25/test_server.py"", ""tests/oauth2/draft25/test_grant_types.py"", ""oauthlib/oauth2/draft25/grant_types.py"", ""oauthlib/oauth2/draft25/tokens.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2014-10-03 13:31:41","Convenience (for testing) imports.","d42e8154b1a970ea921d0368bd4711d79ec44759","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/grant_types/__init__.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-03-25 11:18:03","Access denied test.","d43a584e5cb15b66d070e2d5601cd9fa1157c08b","","api.github.com,git_clone","[u'[""tests/oauth2/draft25/test_servers.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","andreif","2013-02-06 12:42:28","Added missing argument for auth endpoint. Fixed typo in docstring.","d46e37f1de5b716a2f12c23635cd60b383ac20ac","","api.github.com,git_clone","[u'[""oauthlib/oauth2/draft25/__init__.py"", ""oauthlib/oauth2/draft25/tokens.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-05-07 20:16:17","Merge pull request #147 from Kroisse/fix-test

Check data with extra parameters by the appropriate asserts","d47df02105a9454c0b603d1865fa82b22d001286","","api.github.com,git_clone","[u'[""tests/oauth2/draft25/test_client.py""]']","False","[]","[{u'raw': u'#147', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'147', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","adamchainz","2016-05-31 07:52:57","Convert readthedocs link for their .org -> .io migration for hosted projects (#427)

As per [their blog post of the 27th April](https://blog.readthedocs.com/securing-subdomains/) ‘Securing subdomains’:

> Starting today, Read the Docs will start hosting projects from subdomains on the domain readthedocs.io, instead of on readthedocs.org. This change addresses some security concerns around site cookies while hosting user generated data on the same domain as our dashboard.

Test Plan: Manually visited all the links I’ve modified.","d489d9023f569e327c315aad7f70622732153158","","api.github.com,git_clone","[u'[""examples/skeleton_oauth2_web_application_server.py"", ""docs/contributing.rst"", ""README.rst""]']","False","[u'https://blog.readthedocs.com/securing-subdomains/']","[{u'raw': u'#427', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'427', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2014-07-06 17:27:10","Initial sketch of OpenID Connect grant extensions.

Only drafted some of the parameters introduced and little validation has
been implemented so far. The id_token creation is also on the TODO list
but a lot of it is created by @intelie in his fork already.","d48c291a34263893b1d4f45036f7b9aaaa63bccd","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/grant_types/openid_connect.py""]']","False","[]","[]","[u'@intelie']","[]"
"commit_messages","","idan","oauthlib","thedrow","2016-12-06 12:11:17","Remove requirements for Python 3.2.","d4bde78921059fc29a0cfd9c9af69494a9eec587","","api.github.com,git_clone","[u'[""requirements-test32.txt""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2016-08-28 07:28:42","Merge pull request #416 from joelstevenson/openid_connect

Openid connect","d5315c19ccc3fdd4ba70b1c94a727e8573f3ad78","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/grant_types/refresh_token.py"", ""tests/oauth2/rfc6749/grant_types/test_refresh_token.py"", ""oauthlib/oauth2/rfc6749/tokens.py"", ""tests/oauth2/rfc6749/test_server.py"", ""docs/oauth2/oidc/id_tokens.rst"", ""tests/oauth2/rfc6749/grant_types/test_client_credentials.py"", ""tests/oauth2/rfc6749/grant_types/test_resource_owner_password.py"", ""oauthlib/oauth2/rfc6749/errors.py"", ""oauthlib/oauth2/rfc6749/grant_types/resource_owner_password_credentials.py"", ""oauthlib/oauth2/rfc6749/grant_types/authorization_code.py"", ""oauthlib/oauth2/rfc6749/endpoints/authorization.py"", ""tests/oauth2/rfc6749/grant_types/test_authorization_code.py"", ""tests/oauth2/rfc6749/grant_types/test_openid_connect.py"", ""oauthlib/oauth2/rfc6749/grant_types/base.py"", ""oauthlib/common.py"", ""oauthlib/oauth2/rfc6749/grant_types/client_credentials.py"", ""docs/oauth2/oidc.rst"", ""docs/oauth2/oidc/validator.rst"", ""oauthlib/oauth2/rfc6749/grant_types/implicit.py"", ""oauthlib/oauth2/rfc6749/endpoints/token.py"", ""docs/feature_matrix.rst"", ""tests/oauth2/rfc6749/grant_types/test_implicit.py"", ""oauthlib/oauth2/rfc6749/grant_types/__init__.py"", ""oauthlib/oauth2/rfc6749/endpoints/pre_configured.py"", ""oauthlib/oauth2/rfc6749/request_validator.py"", ""AUTHORS"", ""oauthlib/oauth2/rfc6749/grant_types/openid_connect.py"", ""tests/oauth2/rfc6749/endpoints/test_claims_handling.py"", ""docs/index.rst""]']","False","[]","[{u'raw': u'#416', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'416', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-06-20 13:51:41","Remove code from copy/paste mistake.","d63df53bdf861088a06b7fbad1a2c65d107af843","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/grant_types/client_credentials.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2014-10-03 13:28:44","Implicit authorization response mode test.","d66e937b30004e54ef0680103e3fc9abb3e8d87f","","api.github.com,git_clone","[u'[""tests/oauth2/rfc6749/grant_types/test_implicit.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","kennethreitz","2012-04-07 22:11:05","Makefile","d67989ac1068d31d808d4021eeecb12ae9451824","","api.github.com,git_clone","[u'[""Makefile""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-02-05 20:34:54","Extending client docs with signature types and methods","d69c61e568d4e0892017c2ce42650e76aa3d442f","","api.github.com,git_clone","[u'[""docs/client.rst"", ""docs/index.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-03-16 19:08:56","Allow empty strings in body","d703a2047c9ab6f1c4e8154782f5d503d9701550","","api.github.com,git_clone","[u'[""oauthlib/signature.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","dgouldin","2012-03-13 00:15:31","Ripping unneded functions from oauth module, adding a client class for request signing, moving auth header parsing into utils, fixing various small bugs.","d7189ab6f47d9e3077151c6ec1aef3ee818ecdaf","","api.github.com,git_clone","[u'[""oauthlib/utils.py"", ""oauthlib/oauth.py"", ""oauthlib/signature.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","pydanny","2012-03-13 01:23:13","Testing normalize_base_string_uri","d73e7d7830c7f74628fe764c3e9688584631705e","","api.github.com,git_clone","[u'[""tests/test_signatures.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","kennethreitz","2012-04-09 03:47:15","travis icon","d78a27f4cc409e0705fce08c90e70677d8022316","","api.github.com,git_clone","[u'[""README.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","tomchristie","2013-06-17 09:29:40","Updated README with more prominent package note.  Closes #178.","d78cef802b52be3fa07800a88af33c5bba3707ca","","api.github.com,git_clone","[u'[""README.rst""]']","False","[]","[{u'raw': u'#178', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'178', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","idan","2012-04-12 14:41:01","Improve docstring of escape()","d78f585a6beab69c31ddebb86048d1a357f4bdd8","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/utils.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-05-28 14:58:18","Merge pull request #163 from lepture/code-style

clean whitespace, fix blank lines according to pep8","d7c49e4b4b958556c2a8228368eb1f030144f830","","api.github.com,git_clone","[u'[""oauthlib/oauth2/draft25/__init__.py"", ""oauthlib/oauth2/draft25/utils.py"", ""oauthlib/oauth2/draft25/exceptions.py"", ""oauthlib/oauth2/ext/flask.py""]']","False","[]","[{u'raw': u'#163', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'163', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","idan","2012-03-12 18:45:48","Move utility methods into utils.py","d7fcb99e79bec37b71e36646507175bf06c28653","","api.github.com,git_clone","[u'[""oauthlib/utils.py"", ""oauthlib/oauth.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2016-04-07 15:47:23","Merge pull request #410 from r4fek/master

Set issue_new_refresh_tokens in RefreshTokenGrant.__init__","d88c94d5484cc38e92e2e41c548915b4c5df1277","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/grant_types/refresh_token.py""]']","False","[]","[{u'raw': u'#410', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'410', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2015-08-10 08:25:29","Merge pull request #368 from lepture/request-client-secret

Add client_secret for Request","d8a920a4ca7d599478f3d656f9ac84ee19f8cea3","","api.github.com,git_clone","[u'[""oauthlib/common.py""]']","False","[]","[{u'raw': u'#368', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'368', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","pydanny","2012-03-13 21:42:23","Adding a test on generating tokens","d8b81dd724a8d748526e73833e35b9cf0ecc8344","","api.github.com,git_clone","[u'[""tests/test_utils.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","lepture","2015-07-02 07:10:26","Don't encode body twice","d8d7de6ac0d8f6988f876229d773a4a3042f988e","","api.github.com,git_clone","[u'[""oauthlib/common.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2014-07-06 17:20:36","Move save token to grant type and allow token modification.

request_validator.save_bearer_token was previously called from inside
token_handler.create_token but is now called from the respective
grant type after being created by token_handler.create_token.
This makes it easier to allow extensions grants to modify the token
via the newly introduced token modifier methods that will be invoked
prior to the save.

This is consistent with how auth code is created and saved plus it
removes the hidden dual purpose of create_token.","d8fd9714b2c8c3179f6f6b04299a97bccce3c357","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/grant_types/implicit.py"", ""oauthlib/oauth2/rfc6749/grant_types/resource_owner_password_credentials.py"", ""oauthlib/oauth2/rfc6749/grant_types/authorization_code.py"", ""oauthlib/oauth2/rfc6749/grant_types/client_credentials.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","lalinsky","2012-11-10 19:32:44","Make it possible to pass extra parameters to prepare_refresh_body","d91e3c6f7a971b39f89698c32f33d518ef5e2db8","","api.github.com,git_clone","[u'[""oauthlib/oauth2/draft25/__init__.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-03-26 17:59:15","Merge pull request #128 from johanmeiring/master

Fixes code/documentation inconsistencies","d9486747b7f7bfe416fefdca325f740bcd9bafb3","","api.github.com,git_clone","[u'[""oauthlib/oauth2/ext/django.py"", ""oauthlib/oauth2/draft25/grant_types.py""]']","False","[]","[{u'raw': u'#128', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'128', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-02-20 21:29:21","Tidying up comments (#120).","d95ac2781af9b0c3f5348898093fd4a81c20b88b","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/__init__.py""]']","False","[]","[{u'raw': u'#120', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'120', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","calebbrown","2012-04-18 10:53:36","Fix some some broken constants and vars in the OAuth1 Server.","d98d067bd807cbe5a1d3067f57397909e387618b","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/__init__.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-11-08 22:32:14","OAuth 1 Server verify now return request too","d99ee9a8bcb8abf95a74c2fc39f78e072f43dd48","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/__init__.py"", ""tests/oauth1/rfc5849/test_server.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","idan","2012-04-12 14:43:11","Rough documentation of Client usage aspects","d9beec31f4308598c1c79038e842f221e7a80d7b","","api.github.com,git_clone","[u'[""docs/client.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","tomchristie","2012-11-16 14:00:43","Tweak readme","d9c53e719a1e74865659adb1fcc87935cded6639","","api.github.com,git_clone","[u'[""README.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-02-18 18:21:12","Merge pull request #115 from ondrowan/testing_stuff

Changes to testing stuff","d9cc719f0f652535a38f9fdd2cc09fcace4a6412","","api.github.com,git_clone","[u'["".travis.yml"", ""README.rst"", ""tox.ini""]']","False","[]","[{u'raw': u'#115', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'115', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","dgouldin","2012-03-13 04:35:35","Fixing a couple of bugs in RSA signing.","d9ff221a9165eb645f64fa03893cc9b59599469f","","api.github.com,git_clone","[u'[""oauthlib/oauth.py"", ""oauthlib/signature.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-09-17 12:57:30","Draft 11 Token Revocation Endpoint.","da775de8eea28299fa2ff74f625773d7a250a421","","api.github.com,git_clone","[u'[""tests/oauth2/rfc6749/endpoints/test_revocation_endpoint.py"", ""oauthlib/oauth2/__init__.py"", ""oauthlib/oauth2/rfc6749/endpoints/__init__.py"", ""oauthlib/oauth2/rfc6749/endpoints/pre_configured.py"", ""oauthlib/oauth2/rfc6749/request_validator.py"", ""oauthlib/oauth2/rfc6749/endpoints/revocation.py"", ""oauthlib/oauth2/rfc6749/errors.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2015-04-02 11:28:09","Merge pull request #331 from brunal/master

Oauth1 signing: fix error message on invalid Content-Type header","dab8f8b409959135721d6f0d9b94459bbd472290","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/__init__.py""]']","False","[]","[{u'raw': u'#331', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'331', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","joelstevenson","2016-04-26 18:15:10","Remove some comments related to new code for OIDC feature.","dae2c64b66c530e50c0a15bdd6cab072c733af85","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/grant_types/refresh_token.py"", ""oauthlib/oauth2/rfc6749/grant_types/resource_owner_password_credentials.py"", ""oauthlib/oauth2/rfc6749/grant_types/authorization_code.py"", ""oauthlib/oauth2/rfc6749/grant_types/client_credentials.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","pydanny","2012-03-13 03:13:10","Fixing tests to match how the OAuth header works.","db080371893e0b5d94c01983340e1fc12bfc9e38","","api.github.com,git_clone","[u'[""tests/test_signatures.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","djmitche","2015-02-27 20:18:51","Fix documentation for token_generator signature","db12b04e666927786ca8c6459ce1063d6c0d7ec3","","api.github.com,git_clone","[u'[""docs/oauth2/preconfigured_servers.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2015-08-10 08:30:37","Updated changelog and bumped version to 1.0.2.","db40f9989545fc170960f692bedd3c8ba2cf0642","","api.github.com,git_clone","[u'[""CHANGELOG.rst"", ""oauthlib/__init__.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","lepture","2015-07-02 07:04:37","Add tests when Request body has password","db602c837436790cf4a98744fa66f4dd20de7f79","","api.github.com,git_clone","[u'[""tests/test_common.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-06-28 12:32:32","OAuth 2 parameter handlers","db895be0dc532e410c302409a0a8c091f12a2aaa","","api.github.com,git_clone","[u'[""oauthlib/oauth2/draft25/parameters.py"", ""tests/oauth2/draft25/test_parameters.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","kdazzle","2013-08-02 18:52:34","Updated request_validator documentation to include credential-saving methods

There are methods in request_validator that must be implemented and that aren't listed in the class's documentation. Also fixed a couple of minor documentation typos.","dbba898287ac423d84e018842193d13791f7c62f","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/request_validator.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","andreif","2013-02-07 09:06:26","Fixed typos in the docs.","dbd9a96b5d58f41420fd6921e0556ed146c8b690","","api.github.com,git_clone","[u'[""docs/server2.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","georgewhewell","2015-01-27 17:56:51","move test requirements to requirements-test.txt. use tox for tests on .travis.yml","dc2204572a29762ff1cce7e565406be6c4843200","","api.github.com,git_clone","[u'["".travis.yml"", ""requirements.txt"", ""requirements-test.txt"", ""tox.ini""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","idan","2012-05-01 19:49:28","Remove unused import","dc59824a012b4ad594d732d4e97c33df83db92a4","","api.github.com,git_clone","[u'[""tests/oauth1/rfc5849/test_server.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","orenmazor","2017-06-14 10:48:47","return a more descriptive error when a redirect url is provided and it is wrong","dc8aa1f60b93c120d9594c00b250cb0d95edc7b2","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/grant_types/authorization_code.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","kennethreitz","2012-08-14 10:53:20","Merge pull request #51 from tikitu/master

Fixed Idan's github name in docs/contributing.rst","dcbc028f2af02cb1a9c54faedf0defca9841c048","","api.github.com,git_clone","[u'[""docs/contributing.rst""]']","False","[]","[{u'raw': u'#51', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'51', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2016-06-01 12:58:49","Updated changelog.","dcbc85ea333d16b6a267f9c95b48d17029f6c01d","","api.github.com,git_clone","[u'[""CHANGELOG.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","kennethreitz","2012-03-15 22:39:40","Merge pull request #9 from ib-lundgren/Viiiiim

Ignore Vim .swp files","dcce552eaa41207d6f4c9185f5524cc065b6dc51","","api.github.com,git_clone","[u'["".gitignore""]']","False","[]","[{u'raw': u'#9', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'9', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","lepture","2015-07-06 03:35:39","Merge pull request #300 from jbkkd/master

Revocation endpoint should return empty string, not Python 'None'","dd26c4fcdeb8b66c34ad72c7a10638c967f82a2d","","api.github.com,git_clone","[u'[""tests/oauth2/rfc6749/endpoints/test_revocation_endpoint.py"", ""oauthlib/oauth2/rfc6749/endpoints/revocation.py""]']","False","[]","[{u'raw': u'#300', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'300', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","jbkkd","2014-11-26 12:36:48","Updated revocation test","dd86c4b4b05fc9574452056a1983172e66d5bf86","","api.github.com,git_clone","[u'[""tests/oauth2/rfc6749/endpoints/test_revocation_endpoint.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","myyang","2015-07-01 15:11:41","Fix and remove missing attribute: _client

* Fix and remove missing attribute: _client in prepare_refresh_token_request()
* Add testcase for prepare_refresh_token_request()","de586cd17cce1363ee611fea30a47aee908f861b","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/clients/base.py"", ""tests/oauth2/rfc6749/clients/test_base.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2014-06-10 10:35:42","0.6.3","de773eefcb3c1afe54a0c12d5bf9bd214ceaf404","","api.github.com,git_clone","[u'[""README.rst"", ""oauthlib/__init__.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-02-06 19:18:38","Merge pull request #102 from ondrowan/typos_in_docs

Fixed typos in docstring of OAuth server","de870cc2a3f39fddf302f7cf0966e1a10dee58e9","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/__init__.py""]']","False","[]","[{u'raw': u'#102', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'102', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-06-18 20:33:25","Updated documentation for OAuth 1 provider. #95","ded77d72addaa46d718d84643616c8bba5fab43d","","api.github.com,git_clone","[u'[""docs/oauth1/endpoints.rst"", ""docs/oauth1/validator.rst"", ""docs/oauth1/preconfigured_servers.rst"", ""docs/oauth1/security.rst"", ""docs/oauth1/server.rst""]']","False","[]","[{u'raw': u'#95', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'95', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ibl@localhost","2014-10-16 09:00:49","Move identical token resposne parsing into base.","deed5616ae93dcd8c0d57ce2ea1c5fca252a7fde","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/clients/web_application.py"", ""oauthlib/oauth2/rfc6749/clients/base.py"", ""oauthlib/oauth2/rfc6749/clients/legacy_application.py"", ""oauthlib/oauth2/rfc6749/clients/backend_application.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","dgouldin","2012-03-14 04:20:05","Passing body to _contribute_parameters and prepare_form_encoded_body, normalizing utils import between modules, cleaning up parameters module 'prepare' functions a bit.","def8c87c7e41b9d83acf672387feb31cb37285e6","","api.github.com,git_clone","[u'[""oauthlib/parameters.py"", ""oauthlib/oauth.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","lepture","2013-08-29 05:40:30","Remove travis install scripts","df1eec992a9c83dec32ea7da9dbf979abee8c308","","api.github.com,git_clone","[u'["".travis.yml"", "".travis_install.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","dgouldin","2012-04-07 22:26:09","Restructuring to provide parity between code/tests, oauth1/oauth2.","dfc6c2f92e6d6e058f8200ef33ed5856984c4a84","","api.github.com,git_clone","[u'[""tests/test_parameters.py"", ""oauthlib/oauth1/__init__.py"", ""oauthlib/oauth.py"", ""oauthlib/oauth1/rfc5849/__init__.py"", ""oauthlib/parameters.py"", ""oauthlib/oauth2/__init__.py"", ""oauthlib/oauth1/rfc5849/parameters.py"", ""tests/oauth1/rfc5849/test_parameters.py"", ""oauthlib/oauth1/rfc5849/signature.py"", ""tests/oauth2/__init__.py"", ""tests/oauth2/draft25/__init__.py"", ""oauthlib/oauth2/draft25/__init__.py"", ""tests/test_signatures.py"", ""tests/oauth2_draft25/__init__.py"", ""tests/test_utils.py"", ""oauthlib/oauth2_draft25/__init__.py"", ""oauthlib/signature.py"", ""tests/oauth1/__init__.py"", ""oauthlib/oauth1/rfc5849/utils.py"", ""tests/oauth1/rfc5849/test_utils.py"", ""oauthlib/utils.py"", ""tests/oauth1/rfc5849/test_signatures.py"", ""tests/oauth1/rfc5849/__init__.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","masci@evonove.it","2013-09-16 22:25:10","added client_authentication_required() method to the validator","dff8e6d170f8028c9169bde1d208c1cccbea5aae","","api.github.com,git_clone","[u'[""tests/oauth2/rfc6749/test_request_validator.py"", ""oauthlib/oauth2/rfc6749/request_validator.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-06-25 12:24:24","Safe string equals","e0087a0297c152829a7b651e1174382349bb9866","","api.github.com,git_clone","[u'[""oauthlib/common.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","Kroisse","2013-05-07 18:54:49","Check data with extra parameters by the right way

Length-checking asserts are replaced to the appropriate assert methods,
assertURLEqual() and assertFormBodyEqual(), introduced in
e2db7dd548dc286001e1fc9f43caef1501d2c926.","e02afa5c5ea05ccc3f851ca48e3c734a919203a3","","api.github.com,git_clone","[u'[""tests/oauth2/draft25/test_client.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","dgouldin","2012-05-02 05:21:21","Modifying oauth1 rfc5849's utils to wrap stdlib functions in encode/decode rather than reimplementing them.","e0bfede0cb91b36f78061043c72111a0dad40670","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/utils.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2014-10-03 13:30:19","Response mode support.","e0ed5d8ac3174dd7adf023baaaeb35aaefa0081c","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/grant_types/implicit.py"", ""oauthlib/oauth2/rfc6749/grant_types/authorization_code.py"", ""oauthlib/oauth2/rfc6749/grant_types/base.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-02-21 20:04:32","Client sign with empty and None body test","e11756cf9bc3f1b6a668c2218cede7e99750459c","","api.github.com,git_clone","[u'[""tests/oauth1/rfc5849/test_client.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2015-07-06 12:04:37","Merge pull request #358 from garciasolero/develop

Fix management of rfc6749 errors","e1191fa3a61b6c347e10dd35b166f2412a17e709","","api.github.com,git_clone","[u'[""tests/oauth2/rfc6749/endpoints/test_extra_credentials.py"", ""tests/oauth2/rfc6749/test_parameters.py"", ""tests/oauth2/rfc6749/endpoints/test_error_responses.py"", ""oauthlib/oauth2/rfc6749/grant_types/authorization_code.py"", ""AUTHORS"", ""oauthlib/oauth2/rfc6749/grant_types/implicit.py"", ""oauthlib/oauth2/rfc6749/errors.py""]']","False","[]","[{u'raw': u'#358', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'358', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","skion","2017-02-23 16:42:09","Improve prompt parameter validation.

- Strip leading and trailng spaces.
- Disallow prompt=none with other values as per spec.
- Pass to credentials as a set.","e11e1400d91be39c247298286ad84a5c516e3988","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/grant_types/openid_connect.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","weipin","2015-05-06 16:54:59","Add code to determine if client authentication is required for OAuth2 endpoint ""revocation""","e161d8412224b980b67c21fcc268edf675c6a7da","","api.github.com,git_clone","[u'[""tests/oauth2/rfc6749/endpoints/test_revocation_endpoint.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","kdazzle","2015-05-09 19:46:51","#340 - provide default values for some params in common.Request","e1af87fd6f520576f3547ce69224779a40ebd85a","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/grant_types/resource_owner_password_credentials.py"", ""oauthlib/oauth2/rfc6749/grant_types/authorization_code.py"", ""oauthlib/oauth2/rfc6749/grant_types/base.py"", ""oauthlib/oauth2/rfc6749/grant_types/client_credentials.py"", ""oauthlib/common.py""]']","False","[]","[{u'raw': u'#340', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'340', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2015-04-02 11:38:56","Merge pull request #303 from shuisman/patch-1

Fix documentation","e1eee129c074d0de411122d6e1f34a3533952615","","api.github.com,git_clone","[u'[""docs/oauth2/endpoints/token.rst""]']","False","[]","[{u'raw': u'#303', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'303', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2016-05-16 16:40:57","Merge pull request #423 from r4fek/master

Fix #422: Query strings should be able to include colons","e1fb8a41c591d75bee8bbb9216d2b14ac41de54b","","api.github.com,git_clone","[u'[""oauthlib/common.py""]']","False","[]","[{u'raw': u'#422', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'422', u'']}, {u'raw': u'#423', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'423', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-11-08 19:47:39","Fix issue #62","e2db7dd548dc286001e1fc9f43caef1501d2c926","","api.github.com,git_clone","[u'[""tests/oauth2/draft25/test_client.py"", ""tests/unittest/__init__.py"", ""tests/oauth2/draft25/test_parameters.py"", ""tests/test_common.py""]']","False","[]","[{u'raw': u'#62', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'62', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-11-17 11:44:16","OAuth2 grant types","e2de93db8a9f57879561a5cb4265d34be730618c","","api.github.com,git_clone","[u'[""oauthlib/oauth2/draft25/grant_types.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2014-10-03 13:32:56","OpenID Connect core tests.","e3290bfaf9393278aa3d6ebb47e39c952e532002","","api.github.com,git_clone","[u'[""tests/oauth2/rfc6749/grant_types/test_openid_connect.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","jturmel","2014-03-18 17:33:44","Change how arbitrary claims are set on crypto token","e3482d8b3db132bed364e5d25db3553c04ef6522","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/tokens.py"", ""tests/oauth2/rfc6749/test_server.py"", ""oauthlib/common.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","jdufresne","2017-04-16 20:57:30","Replace all uses of assertEquals with assertEqual

assertEquals is deprecated in favor of assertEqual.

When running tests, fixes warnings of the form:

  DeprecationWarning: Please use assertEqual instead.

For more information, see:

https://docs.python.org/3/library/unittest.html#deprecated-aliases","e3626c4f0e09728f336acc32c5a1f61c4fed9418","","api.github.com,git_clone","[u'[""tests/oauth1/rfc5849/test_client.py"", ""tests/oauth1/rfc5849/test_signatures.py""]']","False","[u'https://docs.python.org/3/library/unittest.html#deprecated-aliases']","[]","[]","[]"
"commit_messages","","idan","oauthlib","ondrowan","2013-02-14 14:20:34","Fixed misplaced coding string in docs","e3b93c2d71cca7926ebe93071ef91d03109ee07c","","api.github.com,git_clone","[u'[""docs/server2.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","jturmel","2014-03-17 20:53:27","Add crypto token capability

* Add a method to generate crypto tokens for use as Bearer tokens
* Add a method to verify an incoming crypto token and unpack the header and
  claims
* Uses the PyJWT library

This is not JWT token support, merely a way to generate Bearer tokens that
won't have to be stored in a database but can self-validate and store
additional information that you see fit.","e41bee876c32d11070cb6f4686e41fd78b2c5168","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/tokens.py"", ""requirements.txt"", ""oauthlib/common.py"", ""tests/oauth2/rfc6749/test_server.py"", ""setup.py"", "".travis.yml""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","pydanny","2012-03-13 02:28:24","uri_query test","e4412ff713a393c7c1cea71b2c0158b366498fdd","","api.github.com,git_clone","[u'[""tests/test_signatures.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2016-04-11 09:38:16","Add myself to the authors file.","e4690650b63c5e1fb3e5dfb63319b51498bcc119","","api.github.com,git_clone","[u'[""AUTHORS""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2014-10-23 18:37:28","s/lepture/evonove/","e4a27e70d9855d42112016c62afbb1c82fd35fd6","","api.github.com,git_clone","[u'[""Makefile""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","idan","2012-04-12 20:06:41","Add MANIFEST.in","e4f9ff791696ab8c7279b71be2c945c86df8f0c3","","api.github.com,git_clone","[u'[""MANIFEST.in""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","calebbrown","2012-04-18 11:40:38","urllib.unqoute doesn't take 'safe' as an arg. Add a test and fix.","e569fc16ed65a2bfe50061a58f21579025eff3c3","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/utils.py"", ""tests/oauth1/rfc5849/test_utils.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","wiliamsouza","2017-10-01 06:07:11","OpenID connect improvements  (#484)

* Change create_token_response to only save access_token when it's present in request.response_type

* Remove unused import, fix indentation and improve comment

* Fix AuthorizationEndpoint response_type for OpenID Connect hybrid flow

* Add new ImplicitTokenGrantDispatcher

Changes AuthorizationEndpoint response_type `'token'`, `'id_token'` and
`'id_token token'` to work with OpenID Connect and OAuth2 implicit flow
in a transparent way

* Add new AuthTokenGrantDispatcher

Change AuthorizationEndpoint grant_types `'authorization_code'` to work with
OpenID Connect and OAuth2 authorization flow in a transparent way

* Change tests to include required client_id and redirect_uri

* Remove AuthorizationEndpoint grant_types `'openid'`

Now OpenID Connect and OAuth2 authorization flow can use `authorization_code`
in a transparent way

* Add sone blank lines and fix indentation

* Change AuthorizationEndpoint grant type id_token and id_token token to use openid_connect_implicit direct

* Change default empty value to None and  fix a typo

* Add assert called to AuthTokenGrantDispatcher tests

* Add request to get_authorization_code_scopes","e575cca3e5d18b1e7051c64f435f2cdea71a29ab","","api.github.com,git_clone","[u'[""tests/oauth2/rfc6749/grant_types/test_openid_connect.py"", ""tests/oauth2/rfc6749/endpoints/test_scope_handling.py"", ""oauthlib/oauth2/rfc6749/grant_types/__init__.py"", ""oauthlib/oauth2/rfc6749/endpoints/pre_configured.py"", ""oauthlib/oauth2/rfc6749/request_validator.py"", ""oauthlib/oauth2/rfc6749/grant_types/openid_connect.py"", ""oauthlib/oauth2/rfc6749/grant_types/implicit.py"", ""tests/oauth2/rfc6749/test_server.py"", ""tests/oauth2/rfc6749/endpoints/test_claims_handling.py""]']","False","[]","[{u'raw': u'#484', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'484', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","kjoconnor","2014-02-12 21:01:08","Fixing some typos","e590d27c2d48a02afe90688aab783d2fe587f62e","","api.github.com,git_clone","[u'[""docs/oauth1/client.rst"", ""docs/oauth2/endpoints/authorization.rst"", ""docs/oauth2/endpoints/endpoints.rst"", ""docs/faq.rst"", ""docs/oauth2/endpoints/token.rst"", ""docs/oauth1/security.rst"", ""docs/installation.rst"", ""docs/oauth1/server.rst"", ""docs/contributing.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","eofs","2016-03-11 09:15:38","Tests for `/` and `?` characters in query.","e59f04bf577f0faa3e5fe2de177d65d094592b55","","api.github.com,git_clone","[u'[""tests/test_common.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","joelstevenson","2016-08-25 23:25:39","Test for membership should be ""not in"".
Commenting.","e5b57dd0167857dd4282de51bd5ac58aaf73213b","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/grant_types/implicit.py"", ""oauthlib/oauth2/rfc6749/endpoints/revocation.py"", ""oauthlib/oauth2/rfc6749/grant_types/base.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-11-01 09:16:28","Merge pull request #219 from edevil/CorrectInterface

Correct interface","e606b9025da9c866c0c7fd0164243c3698ce1d0c","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/request_validator.py""]']","False","[]","[{u'raw': u'#219', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'219', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2014-07-06 17:24:54","Move save_bearer_token to the grant types.","e63492b00ef585ed13af5f28f0bebe5b342d54a8","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/tokens.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","x746e","2014-04-15 10:17:11","Fixed a typo.","e658be77687ec7bb0b5a230f16c8595893c822ae","","api.github.com,git_clone","[u'[""tests/oauth1/rfc5849/test_utils.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","russss","2013-01-15 17:42:50","Fix dummy token tests","e6aabab064fd2240bfc844be14d1af8c422c19a8","","api.github.com,git_clone","[u'[""tests/oauth1/rfc5849/test_server.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2017-03-31 09:05:13","Merge pull request #464 from cknave/case-insensitive-dict-update

Update proxy keys on CaseInsensitiveDict.update()","e6c6ddb8fd25032d51a07623d549f310ded68fc8","","api.github.com,git_clone","[u'[""tests/test_common.py"", ""oauthlib/common.py""]']","False","[]","[{u'raw': u'#464', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'464', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-04-26 10:53:06","Decode urlencoded properly","e6ea39fef208873100ad225d4b3ec4c225aa4201","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/utils.py"", ""tests/oauth1/rfc5849/test_utils.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-06-21 11:22:38","Allow realm to be passed in URI and Body. Fix #139.","e720baf5b38fe722dfa19b76d0ebbb4d5fbb20ec","","api.github.com,git_clone","[u'[""tests/oauth1/rfc5849/endpoints/test_request_token.py"", ""oauthlib/oauth1/rfc5849/endpoints/base.py""]']","False","[]","[{u'raw': u'#139', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'139', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-05-21 18:07:15","first go at server docs","e72ba57db094acb4b1fa206b0c3a082a0dac8d80","","api.github.com,git_clone","[u'[""docs/server.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","andy-shea","2013-03-28 04:34:19","Fixed string import clash","e750e6c9b1dc4c3f5eb7594e726b02bfc808aa7e","","api.github.com,git_clone","[u'[""oauthlib/oauth2/draft25/__init__.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","idan","2012-04-11 10:01:23","PEP8 cleanup of OAuth2 bits","e7b1816a253bf1a59b08a3d60ea36514ad2199dd","","api.github.com,git_clone","[u'[""tests/oauth2/draft25/test_tokens.py"", ""oauthlib/oauth2/draft25/tokens.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ryanhiebert","2014-08-24 21:55:42","Allow unescaped @ in urlencoded parameters

At least Internet Explorer does not url encode the @ symbol, such as
when in an email address, in it's form uploading from HTML. Since the @
symbol doesn't have any special meaning in the querystring of a URL, not
encoding it shouldn't present any problems. Thus, we should add @ to the
list of allowed characters in form urlencoded data.","e833e0cb5fa8bd789db8ef60e8cea199af9ea0e7","","api.github.com,git_clone","[u'[""tests/test_common.py"", ""oauthlib/common.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","yohanboniface","2015-10-26 18:12:36","Code ident in server doc","e84bd3e859bbc34bcad6591da9faf1cfb16a954f","","api.github.com,git_clone","[u'[""docs/oauth2/server.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-03-15 10:36:40","Updated HMAC test","e89e18c784758988c858a87f5c19fb2bb6bbd771","","api.github.com,git_clone","[u'[""tests/test_signatures.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","pydanny","2012-03-13 21:00:44","Adding timestamp test","e8d469f20fa84994ed67f6628e97e8962a8044a9","","api.github.com,git_clone","[u'[""tests/test_utils.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2017-03-31 09:06:55","Merge pull request #463 from skion/fragment-errors

Redirect errors according to OIDC's response_mode.","e8d8e0a81ced977c3e476c1f54f0856117ef3b74","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/grant_types/authorization_code.py"", ""oauthlib/oauth2/rfc6749/errors.py""]']","False","[]","[{u'raw': u'#463', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'463', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","masci@evonove.it","2013-09-22 09:27:30","broke up method into different tests, fixed import style","e94439bf0f327d2b434ae479a296323e38bc2435","","api.github.com,git_clone","[u'[""tests/oauth2/rfc6749/grant_types/test_resource_owner_password.py"", ""tests/oauth2/rfc6749/grant_types/test_refresh_token.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","bjmc","2016-04-25 17:22:43","Tests for new sanitization","e99a15b0bfa1d620623f3a6dc639880503617141","","api.github.com,git_clone","[u'[""tests/test_common.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2016-05-01 07:33:28","Updated changelog.

[skip-ci]","e9cbd38ee8a3db8a3a5c55b54e70a3daa6727cc1","","api.github.com,git_clone","[u'[""CHANGELOG.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","idan","2012-04-30 10:04:22","Merge pull request #27 from ib-lundgren/tox

Use tox for testing with py26, py27","e9f9d2a3142a6883474e238bc7b91815955e3e7e","","api.github.com,git_clone","[u'[""tox.ini""]']","False","[]","[{u'raw': u'#27', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'27', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","jdufresne","2017-04-16 20:47:52","Add Python 3.6 to Travis CI testing and trove classifiers","ea0e1c121fbad0afd5812c820d042ecc8235441d","","api.github.com,git_clone","[u'["".travis.yml"", ""setup.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","al-the-x","2014-03-25 21:52:35","Enforcing a common interface for `sign_*()` methods...

In order to support adding custom signature methods, the current signature methods -- HMAC-SHA1, RSA-SHA1, and PLAINTEXT -- need to be implemented with a common interface. In a previous attempt, I tried changing those functions directly, but there are too many dependencies on their current signatures. By shimming them instead with these thin wrappers, I can provide the common interface I need without breaking everything else in the library.","ea106971af90556e5c682e0a367314111f7f0162","","api.github.com,git_clone","[u'[""tests/oauth1/rfc5849/test_signatures.py"", ""oauthlib/oauth1/rfc5849/signature.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-02-03 17:48:42","Merge pull request #98 from ondrowan/missing_crypto

Added missing pycrypto library to requirements.txt","ea3b1a3dce7db20f56f9db055050f45f8051c3d1","","api.github.com,git_clone","[u'[""requirements.txt""]']","False","[]","[{u'raw': u'#98', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'98', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","stephane","2013-05-06 12:35:16","Fix indentation problem in list of steps","ea46de4a09b07ba9d2a53b66bcfea614c821edde","","api.github.com,git_clone","[u'[""oauthlib/oauth2/draft25/grant_types.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","idan","2012-03-12 23:19:40","Update test_parameters.py","eaf41442c6b91922bc26bcf4138842db1dd98781","","api.github.com,git_clone","[u'[""tests/test_parameters.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","calebbrown","2012-04-18 14:03:50","Allow empty secrets when generating the OAuth1 HMAC SHA1 Signature.

Previously the secrets would be 'None' and would cause utils.escape
to throw an except.","eb0858a1627f8d58456020d20c74c75830c67c11","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/signature.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","idan","2012-03-14 00:23:51","Rename class to reflect spec version it implements","eb21a83e624ff32195ec81cedec9e45b9b9d00e1","","api.github.com,git_clone","[u'[""oauthlib/oauth.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2015-07-04 14:00:44","Merge pull request #342 from g10f/master

send no state in the access token response","eb4241a2090dc3b7df9de2b168e989670ce612b3","","api.github.com,git_clone","[u'[""examples/skeleton_oauth2_web_application_server.py"", ""oauthlib/oauth2/rfc6749/grant_types/authorization_code.py"", ""oauthlib/oauth2/rfc6749/request_validator.py""]']","False","[]","[{u'raw': u'#342', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'342', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","g10f","2015-07-03 15:29:50","send no state in the access token response","ebff03ddca6339d6e48d54917915d12075d3fd40","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/request_validator.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-09-12 10:43:27","Fix scheme check for python 2.6.

urlparse.urlparse is buggy in python 2.6 and gives the netloc value to
scheme if no scheme is preset. Thus we check for both scheme and netloc.","ec2e33f982ea0a8a73ba8b6a27093acad9b60f78","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/signature.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2014-10-01 14:00:35","Small steps on the OpenID grant types.

Direct response if prompt is none.
Sketched out methods for implicit and hybrid.
New method for adding access tokens in hybrid auth step.","ec3f231adcf474185cf09fdc79655b8d0311e68e","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/grant_types/openid_connect.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2016-04-11 08:39:37","Upgrade test depenedencies.","ec9cd7749c1a175618218f15a8ab2670152f8f46","","api.github.com,git_clone","[u'[""requirements-test.txt"", ""requirements-test32.txt""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ondrowan","2013-02-06 10:44:14","Fixed typos in docstring of OAuth server.","ed49cc13299995203a4083efa970ef5165eee7eb","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/__init__.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-02-14 21:16:22","Merge pull request #113 from ondrowan/docs_header_fix

Removed misplaced -*- coding: utf8 -*- string","ed7f436d3e7c091b79c8fc903b69450d33ddba4a","","api.github.com,git_clone","[u'[""docs/server2.rst"", ""requirements.txt""]']","False","[]","[{u'raw': u'#113', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'113', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ondrowan","2013-02-14 14:18:53","Added sphinx to requirements","eda02121dbf4c4b3affdf355523df7b596484dff","","api.github.com,git_clone","[u'[""requirements.txt""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2014-09-24 13:52:53","Change logging namespace to a tiered one.

Rather than have all logging under oauthlib we now have it
per file using __name__. Users who wish to enable or disable
all logging can still do so by enabling or disabling the
oauthlib logging namespace.","edab385f951e38d65a25003f193793b63037bdec","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/endpoints/token.py"", ""oauthlib/oauth1/rfc5849/endpoints/request_token.py"", ""oauthlib/oauth2/rfc6749/grant_types/resource_owner_password_credentials.py"", ""oauthlib/oauth2/rfc6749/endpoints/base.py"", ""oauthlib/__init__.py"", ""oauthlib/common.py"", ""oauthlib/oauth1/rfc5849/endpoints/signature_only.py"", ""oauthlib/oauth2/rfc6749/grant_types/refresh_token.py"", ""oauthlib/oauth2/rfc6749/grant_types/client_credentials.py"", ""oauthlib/oauth1/rfc5849/endpoints/resource.py"", ""oauthlib/oauth2/rfc6749/grant_types/authorization_code.py"", ""oauthlib/oauth2/rfc6749/endpoints/authorization.py"", ""oauthlib/oauth2/rfc6749/__init__.py"", ""oauthlib/oauth2/rfc6749/request_validator.py"", ""oauthlib/oauth2/rfc6749/grant_types/base.py"", ""oauthlib/oauth1/rfc5849/__init__.py"", ""oauthlib/oauth2/rfc6749/grant_types/implicit.py"", ""oauthlib/oauth2/rfc6749/endpoints/revocation.py"", ""oauthlib/oauth2/rfc6749/endpoints/resource.py"", ""oauthlib/oauth1/rfc5849/endpoints/access_token.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-11-08 22:58:56","0.3.3","ee45e51bf48347f102d51cf3256cd6a2f2db9525","","api.github.com,git_clone","[u'[""setup.py"", ""README.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-03-26 17:30:17","OAuth 2 Provider Auditor outline.","eebdab96001c8198658b728334e2df197b9b7d95","","api.github.com,git_clone","[u'[""oauthlib/oauth2/ext/auditor.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-12-16 21:26:58","Incremental updates to providers","eee4b60db33d3965156c704f04e4a4316bb5a3c3","","api.github.com,git_clone","[u'[""oauthlib/oauth2/draft25/__init__.py"", ""tests/oauth2/draft25/test_server.py"", ""tests/oauth2/draft25/test_grant_types.py"", ""oauthlib/oauth2/draft25/grant_types.py"", ""oauthlib/oauth1/rfc5849/__init__.py"", ""oauthlib/oauth2/draft25/tokens.py"", ""oauthlib/oauth2/draft25/errors.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","idan","2012-05-03 05:37:22","Add line to changelog for 0.1.1/0.1.2","ef2d1f4518e9d701ab0dfcce1221c701e145af3d","","api.github.com,git_clone","[u'[""README.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","mvo5","2012-09-24 12:46:02","add support for ""realm"" in the client","ef638d88f0e8ceb64eaf2d2004201f2d0dfaced0","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/__init__.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-07-09 19:52:14","Fixing some tight coupling issues","f001fa1c4b461e22558d15b65b0be54dbfc0ad64","","api.github.com,git_clone","[u'[""oauthlib/oauth2/draft25/__init__.py"", ""tests/oauth2/draft25/test_client.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-02-20 22:18:21","Harden client check. Fix #114.","f02e5dffcab398b0f525d71e61ec4d90f9d80b81","","api.github.com,git_clone","[u'[""tests/oauth2/draft25/test_grant_types.py"", ""tests/oauth2/draft25/test_servers.py"", ""oauthlib/oauth2/draft25/grant_types.py""]']","False","[]","[{u'raw': u'#114', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'114', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2016-12-06 13:23:36","Merge pull request #452 from idan/drop-old-python-versions

Remove support for Python 2.6 and 3.2-3.3","f0bbc526065ff88eaa431163d8d7c1f72694221b","","api.github.com,git_clone","[u'["".travis.yml"", ""setup.py"", ""CHANGELOG.rst"", ""tox.ini"", ""requirements-test32.txt""]']","False","[]","[{u'raw': u'#452', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'452', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","lepture","2015-07-06 04:20:45","Fix tests for #300 merged","f0f3427e90dc5b3f539bb1aee25587d7ae1db6c6","","api.github.com,git_clone","[u'[""tests/oauth2/rfc6749/endpoints/test_revocation_endpoint.py""]']","False","[]","[{u'raw': u'#300', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'300', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-10-25 19:51:07","Forgot trailing underscore on links.","f0f47aa2dcd5812a8e45295531f3d74bfb609313","","api.github.com,git_clone","[u'[""README.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","joelstevenson","2016-11-21 20:43:13","Normalize handling of request.scopes list

Use the scope_to_list() util to initalize the request.scopes list from
the request.scope request parameter in two place where it was instead
being set to None.

- AuthorizationEndpoint.validate_authorization_request()
- TokenEndpoint.create_token_response()

In both cases the Request should be properly populated before it is
passed to the client's validator.

In the case of the TokenEndpoint - there are OAuth2 workflows that
allow an optional scope parameter so we should have been doing this
for them anyway.

Since scope_to_list() may return None, also update the openid_connect
code to behave properly when this is the case.

Fixes #436","f1a8fc40e117511c790bc63d00a19a90058e1ce1","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/endpoints/token.py"", ""oauthlib/oauth2/rfc6749/tokens.py"", ""tests/oauth2/rfc6749/test_server.py"", ""oauthlib/oauth2/rfc6749/endpoints/authorization.py"", ""tests/oauth2/rfc6749/endpoints/test_scope_handling.py"", ""oauthlib/oauth2/rfc6749/grant_types/openid_connect.py""]']","False","[]","[{u'raw': u'#436', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'436', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-11-10 22:55:02","Merge pull request #224 from wrr/is_within_original_scope

is_within_original_scope method for refresh token grant (Issue #220)","f1ba05b04482b1e1ed91b0a88a471ac753f67e55","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/grant_types/refresh_token.py"", ""tests/oauth2/rfc6749/test_request_validator.py"", ""tests/oauth2/rfc6749/grant_types/test_refresh_token.py"", ""oauthlib/oauth2/rfc6749/request_validator.py""]']","False","[]","[{u'raw': u'#220', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'220', u'']}, {u'raw': u'#224', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'224', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","myyang","2015-07-02 02:50:00","Fix string format compatibility","f2402efa2a29631a3f67df9157fdf9d746861406","","api.github.com,git_clone","[u'[""tests/oauth2/rfc6749/clients/test_base.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","garcianavalon","2014-10-27 09:00:18","updated token endpoint documentation to reflect current behavior,the token contains a string with the scopes separated by spaces","f2b165cead46060cf1f60e89dc0e893136a5e2af","","api.github.com,git_clone","[u'[""docs/oauth2/endpoints/token.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","johanmeiring","2013-04-03 08:57:08","Corrects two additional documentation inconsistencies","f2d2eadc6ff07fd9d8fc83d144ccc1e82b5480c2","","api.github.com,git_clone","[u'[""oauthlib/oauth2/draft25/grant_types.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","hoylen","2017-01-20 05:47:56","Extra logging for verifying signatures.","f30123a4705730e686bc9ae9284f3cb22d63ff84","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/__init__.py"", ""oauthlib/oauth1/rfc5849/signature.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-05-21 08:10:05","Merge pull request #151 from stephane/docs-django-choices

Fix swapped values in example of Django choices","f3a3874555ef6495bc01457a675e35d1d5fd8f27","","api.github.com,git_clone","[u'[""docs/server2.rst""]']","False","[]","[{u'raw': u'#151', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'151', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","x746e","2014-04-15 13:11:34","Removed mention of django-oauth-toolkit from oauth1 server docs.

django-oauth-tools doesn't seem to support oauth1.","f46f5063567a8152a6fbb851a0f809f83157ba19","","api.github.com,git_clone","[u'[""docs/oauth1/server.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ondrowan","2013-02-04 15:37:24","Fixed build status image/link in readme","f4acfe6bf8cfbcec736176dae7cd180b8b52c97f","","api.github.com,git_clone","[u'[""README.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","jturmel","2014-04-13 01:44:23","Updated AUTHORS with Josh Turmel

* Coincides with signed token change that was accepted recently","f4c5e8b00615bf51e94225f9a54936845dae2e19","","api.github.com,git_clone","[u'[""AUTHORS""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-11-17 12:54:11","new test dependency, mock.","f4d0d00559a50f84fdd55d7a32a223e956957d53","","api.github.com,git_clone","[u'["".travis.yml"", ""setup.py"", ""tox.ini""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2014-09-22 13:00:27","Merge pull request #266 from singingwolfboy/flask-dance-in-readme

Add links to Flask-Dance","f4e0df9bf7e080d9cce750cab73a3254abd4b7ea","","api.github.com,git_clone","[u'[""README.rst""]']","False","[]","[{u'raw': u'#266', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'266', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-03-19 07:58:32","FatalClientError tests","f4f33c7a833b88a95ec8fe56132933f2db97a939","","api.github.com,git_clone","[u'[""tests/oauth2/draft25/test_servers.py"", ""oauthlib/oauth2/draft25/errors.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","squirly","2013-08-01 22:29:58","#200 First attempt at API cleanup to match OAuth1.","f538ea8f87947d7c1543a8c0fcea5b0242a12ab6","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/grant_types/refresh_token.py"", ""oauthlib/oauth2/rfc6749/__init__.py"", ""oauthlib/oauth2/rfc6749/grant_types/resource_owner_password_credentials.py"", ""oauthlib/oauth2/rfc6749/endpoints/base.py"", ""tests/oauth2/rfc6749/test_servers.py"", ""oauthlib/oauth2/rfc6749/grant_types/client_credentials.py"", ""tests/oauth2/rfc6749/test_grant_types.py"", ""docs/oauth2/endpoints.rst"", ""oauthlib/oauth2/rfc6749/grant_types/authorization_code.py"", ""tests/oauth2/rfc6749/test_server.py"", ""docs/oauth2/server.rst"", ""oauthlib/oauth2/rfc6749/grant_types/implicit.py""]']","False","[]","[{u'raw': u'#200', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'200', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","idan","2012-04-23 11:37:30","Document that collect_parameters expects headers as a dict","f53f8b2372b9941ba07fc917045a58f4d292415b","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/signature.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","dgouldin","2012-04-14 21:43:45","Updating oauth1 parameters.prepare_headers in order to apply more of the spec language to documentation.","f5936e48d1966ffbee51e8e277bf4eab050b71f9","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/parameters.py"", ""tests/oauth1/rfc5849/test_parameters.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2014-05-28 13:20:04","Set default encoding type to UTF-8 for to_unicode.","f59b02389ec2daa84b75606120057bf5ae8f131a","","api.github.com,git_clone","[u'[""oauthlib/common.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-03-26 11:50:08","OAuth 2 skeleton provider","f5f87c30bee2b43b9e3c32a9e24c75df2217bbb7","","api.github.com,git_clone","[u'[""docs/server2.rst"", ""oauthlib/oauth2/ext/django.py"", ""examples/skeleton_oauth2_web_application_server.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","pydanny","2012-03-13 02:49:49","adding in authentication headers test on collect_parameters","f60d82a170beb1682f96a2df51be5de9e7db05c0","","api.github.com,git_clone","[u'[""tests/test_signatures.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","stephane","2013-05-22 15:05:02","The argument request is missing in validate_code() in examples","f6304e22ae3f8e4a3f9431a6e4455c90b4e2de0a","","api.github.com,git_clone","[u'[""examples/skeleton_oauth2_web_application_server.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-06-18 20:28:44","OAuth 1 error definitions.","f6386cd202de43b1881d81a2595565c171ec823e","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/errors.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-05-06 18:56:52","Merge pull request #145 from stephane/docs-warning

Fix Sphinx warnings in oauth_1_versus_oauth_2 documentation","f65ff954045aea0ef68f8016fdd652ef655a4861","","api.github.com,git_clone","[u'[""docs/oauth_1_versus_oauth_2.rst""]']","False","[]","[{u'raw': u'#145', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'145', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-02-07 22:28:59","Merge branch 'master' of https://github.com/idan/oauthlib","f6671c5850fb491b20c244369a16538d8b4f3676","","api.github.com,git_clone","[u'[""docs/server2.rst"", ""oauthlib/oauth2/ext/django.py""]']","False","[u'https://github.com/idan/oauthlib']","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-10-10 20:53:29","Merge pull request #216 from ButchershopCreative/master

Set headers on client credentials access token response","f66c1e33eedc71e2ff75ea924cd4cbdbf10d4086","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/grant_types/client_credentials.py""]']","False","[]","[{u'raw': u'#216', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'216', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2015-10-25 11:08:30","Merge pull request #394 from cyrilchaponeverysens/patch-1

Add 'python' info to README","f7166ce83d85fd6f34eaa8856c5cacb8cb6db464","","api.github.com,git_clone","[u'[""README.rst""]']","False","[]","[{u'raw': u'#394', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'394', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","calebbrown","2012-04-18 13:51:18","Make sure the OAuth1 client doens't drop headers when signing requests.","f744f6ca1f81e6d48044f7416472f39dbd6e573c","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/__init__.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","idan","2012-04-11 10:06:41","Move OAuth2 utils to their proper home","f76ada5e8223999e6fdcaa1cdb5055e3fb6ce750","","api.github.com,git_clone","[u'[""oauthlib/oauth2_draft25/utils.py"", ""oauthlib/oauth2/draft25/utils.py"", ""tests/oauth2_draft25/test_utils.py"", ""tests/oauth2/draft25/test_utils.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-07-26 18:12:56","0.5.1","f794cf31971274766378faf140d60e5ec3807286","","api.github.com,git_clone","[u'[""setup.py"", ""README.rst"", ""docs/conf.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-03-25 10:59:45","Duplicate parameter checks & tests.","f8505ef5201f1c3133e4947109d156defabebee6","","api.github.com,git_clone","[u'[""oauthlib/oauth2/draft25/grant_types.py"", ""tests/oauth2/draft25/test_servers.py"", ""oauthlib/common.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","lepture","2015-07-02 07:29:08","Fix when body is None","f88408da8b4d222195caca46d10264d90a2bd167","","api.github.com,git_clone","[u'[""oauthlib/common.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2014-09-12 10:14:23","Merge pull request #263 from singingwolfboy/scope-change-warning-info

Make scope change warning more informative","f8eaaaad57e8e3430cb45304f1e749f3ae6f8620","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/parameters.py""]']","False","[]","[{u'raw': u'#263', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'263', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","johanmeiring","2013-04-04 06:31:03","Changes iteritems to items for Py3 compatibility","f90a3bdb79bef5a39322c4d04c1055683ddcc15d","","api.github.com,git_clone","[u'[""oauthlib/oauth2/ext/django.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-11-17 11:41:20","URI validator","f927f52864dd6971492fadd90e2176de4d9ac4c1","","api.github.com,git_clone","[u'[""oauthlib/uri_validate.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","pydanny","2012-03-12 16:37:39","Adding the docs folder","f92bf31c025f5ce3e926f01b8489264b1a96ec1b","","api.github.com,git_clone","[u'[""docs/make.bat"", ""docs/Makefile"", ""docs/conf.py"", ""docs/index.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-02-26 23:00:24","Merge pull request #123 from seatme/master

Fix for improper namespace logging in oauth1 package","f9a20798d035ab60083e99c4f2540cb2d4ef9a34","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/__init__.py""]']","False","[]","[{u'raw': u'#123', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'123', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","greyli","2017-11-14 15:38:33","Check access token in self.token dict (#500)

* Check access token in self.token dict

* fix typo","fa0b63cfaced831d8b916c5a125128f582acf044","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/clients/base.py""]']","False","[]","[{u'raw': u'#500', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'500', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","dasevilla","2013-05-31 02:47:35","Organize documentation into directories","fa0dbbb3b127eec9dbc86208d8fbde1d903f13ea","","api.github.com,git_clone","[u'[""docs/client.rst"", ""docs/legacyapplicationclient.rst"", ""docs/validator.rst"", ""docs/oauth_1_versus_oauth_2.rst"", ""docs/backendapplicationclient.rst"", ""docs/client2.rst"", ""docs/oauth2/server.rst"", ""docs/authcode.rst"", ""docs/endpoints.rst"", ""docs/password.rst"", ""docs/implicit.rst"", ""docs/oauth2_overview.rst"", ""docs/oauth2/overview.rst"", ""docs/preconfigured_servers.rst"", ""docs/oauth2/validator.rst"", ""docs/oauth2/clients/baseclient.rst"", ""docs/server.rst"", ""docs/baseclient.rst"", ""docs/oauth2/clients/backendapplicationclient.rst"", ""docs/oauth2/clients/legacyapplicationclient.rst"", ""docs/oauth2/grants/credentials.rst"", ""docs/oauth2/grants/password.rst"", ""docs/oauth1/client.rst"", ""docs/oauth1/oauth1.rst"", ""docs/oauth2/clients/mobileapplicationclient.rst"", ""docs/server2.rst"", ""docs/oauth1/server.rst"", ""docs/webapplicationclient.rst"", ""docs/credentials.rst"", ""docs/mobileapplicationclient.rst"", ""docs/oauth2/clients/client.rst"", ""docs/tokens.rst"", ""docs/oauth2/tokens.rst"", ""docs/oauth2/preconfigured_servers.rst"", ""docs/oauth2/security.rst"", ""docs/oauth2/clients/webapplicationclient.rst"", ""docs/oauth2/endpoints.rst"", ""docs/oauth2/grants/implicit.rst"", ""docs/oauth2/grants/authcode.rst"", ""docs/oauth2/oauth2.rst"", ""docs/security.rst"", ""docs/index.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","kennethreitz","2012-11-16 01:56:19","Merge pull request #70 from tomchristie/master

Add link to readthedocs documentation.","fa1553381e23ff518c9c14029b31a04a040e7f49","","api.github.com,git_clone","[u'[""README.rst"", ""AUTHORS""]']","False","[]","[{u'raw': u'#70', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'70', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-03-25 18:39:04","Unicode experimentation, #127","faa5dfddf1ed1e5a53e42710ab86ca0d94e46a5f","","api.github.com,git_clone","[u'[""tests/oauth1/rfc5849/test_client.py"", ""oauthlib/common.py""]']","False","[]","[{u'raw': u'#127', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'127', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-06-27 17:26:05","Exclude body if not urlencoded","fad6f859f3f4df691df7bea308d4aba50a78ffec","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/__init__.py"", ""tests/oauth1/rfc5849/test_server.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","josephtate","2015-02-27 07:06:37","Fix handling of optional scope params in response when the scope doesn't change. Fixes #306","fb04a84e331e6b0a8fd51ed38cd09445af232b31","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/tokens.py""]']","False","[]","[{u'raw': u'#306', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'306', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","idan","2012-03-13 19:45:31","Added AUTHORS","fb331fc7868e66d86a65cb98196fdcd60282534e","","api.github.com,git_clone","[u'[""AUTHORS""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","lepture","2017-10-18 15:27:41","Version bump 2.0.5","fb7ec207b17e0cacf52f9f3c2643c4b9036d827c","","api.github.com,git_clone","[u'[""CHANGELOG.rst"", ""oauthlib/__init__.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","kdazzle","2015-05-24 23:42:20","#340 - add default param values to common.Request","fb8dcb41adef9617d11550102d9872e055a3ce8d","","api.github.com,git_clone","[u'[""oauthlib/common.py""]']","False","[]","[{u'raw': u'#340', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'340', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-07-04 00:58:59","Merge pull request #189 from lepture/realms

Realms vs realm","fbd7d0b24086d99484375ea02a56a8181dbf436d","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/endpoints/request_token.py"", ""tests/oauth1/rfc5849/test_request_validator.py"", ""tests/oauth1/rfc5849/endpoints/test_request_token.py"", ""tests/oauth1/rfc5849/endpoints/test_resource.py"", ""oauthlib/oauth1/rfc5849/request_validator.py"", ""oauthlib/oauth1/rfc5849/endpoints/resource.py"", ""oauthlib/oauth1/rfc5849/endpoints/access_token.py""]']","False","[]","[{u'raw': u'#189', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'189', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-03-25 12:38:12","Invalid grant tests.","fbe85b6f66e9f5e64c12049ed34d177fe4b463f0","","api.github.com,git_clone","[u'[""tests/oauth2/draft25/test_servers.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2013-02-04 23:15:49","0.3.6","fbf0c0e6669a31b51c42ea0b93af9938192167b6","","api.github.com,git_clone","[u'[""setup.py"", ""README.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","stephane","2013-05-22 16:05:28","Missing required arguments in authorize()","fc2cd9a64580d00d49d309296f8691ed0c817ace","","api.github.com,git_clone","[u'[""docs/server2.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","josephtate","2015-04-14 16:30:44","Support newer PyJWT (1.0.0). remove PyCrypto completely for cryptography and PyJWT helpers. Reformat some test certificates to be easier to maintain. Update documentation to match use of cryptography instead of PyCrypto","fc2d1218e015adcf65ba01965884430c47895cd0","","api.github.com,git_clone","[u'[""CHANGELOG.rst"", ""docs/oauth1/client.rst"", ""oauthlib/oauth2/rfc6749/clients/service_application.py"", ""oauthlib/common.py"", ""docs/faq.rst"", ""requirements.txt"", ""oauthlib/oauth2/rfc6749/utils.py"", ""docs/feature_matrix.rst"", ""tests/oauth1/rfc5849/test_signatures.py"", ""tests/oauth2/rfc6749/test_server.py"", ""tests/oauth2/rfc6749/test_utils.py"", ""tests/oauth2/rfc6749/clients/test_service_application.py"", ""oauthlib/oauth1/rfc5849/signature.py"", ""setup.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2014-11-13 12:39:34","0.7.2","fd239fca84644896b1971cf24bc6213d065adb86","","api.github.com,git_clone","[u'[""CHANGELOG.rst"", ""oauthlib/__init__.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","tuannh99","2014-05-29 16:48:01","Accept 'Content-Type: application/x-www-form-urlencoded;charset=utf8' also","fd3e25b267f0e3cc239c2bc6dee77dfaf957d09a","","api.github.com,git_clone","[u'[""oauthlib/oauth1/rfc5849/endpoints/base.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2012-04-07 10:15:50","New method get_signature_type_and_params","fd45119491908a63a4dc81b45beb416bc2669710","","api.github.com,git_clone","[u'[""oauthlib/oauth.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2015-04-02 11:18:36","Merge pull request #329 from skion/master

Strip whitespace off of scope string.","fdc39c4d6e2cab8da5d8cb9e59823b9534885543","","api.github.com,git_clone","[u'[""tests/oauth2/rfc6749/test_utils.py"", ""oauthlib/oauth2/rfc6749/utils.py""]']","False","[]","[{u'raw': u'#329', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'329', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","joelstevenson","2016-04-19 21:59:31","More wiring to get OpenID Connect code fully integrated.","fde41caa25203f456a4650ae1e5501725622cbb7","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/endpoints/token.py"", ""oauthlib/common.py"", ""oauthlib/oauth2/rfc6749/grant_types/authorization_code.py"", ""oauthlib/oauth2/rfc6749/request_validator.py"", ""oauthlib/oauth2/rfc6749/grant_types/openid_connect.py"", ""oauthlib/oauth2/rfc6749/endpoints/pre_configured.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2014-10-23 17:47:57","Docs updates recovered from a broken git repo.

Draft release process doc to try force myself into more
structured releases in the future.

A few initial notes on how to report errors.

Added a few common exceptions to the FAQ.

Removed supported versions from feature matrix. They are all
available in setup.py metadata.

Move JWT tokens to grant types where it (confusingly) belongs.","fe546f426edc95add019ca8847198f4d1eca24d6","","api.github.com,git_clone","[u'[""docs/error_reporting.rst"", ""docs/faq.rst"", ""docs/release_process.rst"", ""docs/feature_matrix.rst"", ""docs/oauth2/grants/jwt.rst"", ""docs/oauth2/grants/grants.rst"", ""docs/oauth2/tokens/tokens.rst"", ""docs/oauth2/tokens/jwt.rst"", ""docs/index.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","stephane","2013-05-07 08:45:35","Simplification of a sentence","fe58ce9ab43d56160c0447e7f48c87cd94e1ac3a","","api.github.com,git_clone","[u'[""docs/server2.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","thedrow","2015-07-25 07:25:37","Updated changelog for 1.0.1.","fecf37b624c14c89a3ee15bb205b51b05575fc2e","","api.github.com,git_clone","[u'[""CHANGELOG.rst""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2014-07-07 10:28:53","Remove password print from debug logs. Fix #256.","fef1f7987cc6298e744b7d4290e3fc9a9701831b","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/grant_types/resource_owner_password_credentials.py""]']","False","[]","[{u'raw': u'#256', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'256', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","bjmc","2016-12-19 15:53:55","Adds Brendan McCollam to AUTHORS","ff0e40884f07fde16b542b883a3c5703092d6b86","","api.github.com,git_clone","[u'[""AUTHORS""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","ib-lundgren","2014-10-23 17:46:58","Fetch docs version from oauthlib.__version__","ff4c9399172d19434c6cdd46932f4195a71742fb","","api.github.com,git_clone","[u'[""docs/conf.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","MitterdorferMathias","2017-09-22 07:49:09","if `in_uri` is called and `response_mode` is not initialized an exception is raised (used by Flask_OAuthlib)","ff5088ad2f028dfad0ac9f1ed848802939a0c0e4","","api.github.com,git_clone","[u'[""oauthlib/oauth2/rfc6749/errors.py""]']","False","[]","[]","[]","[]"
"commit_messages","","idan","oauthlib","lepture","2015-07-03 06:54:22","Merge pull request #355 from lepture/hide-password

Hide password in logs","ff712701d78a1b19db786ad02cd5da06c592e033","","api.github.com,git_clone","[u'[""tests/test_common.py"", ""oauthlib/common.py""]']","False","[]","[{u'raw': u'#355', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'355', u'']}]","[]","[]"
"commit_messages","","idan","oauthlib","idan","2012-03-12 21:19:58","Add filter_params decorator","ff77939684479f951c9da3720a3d67cdedc5951e","","api.github.com,git_clone","[u'[""oauthlib/utils.py""]']","False","[]","[]","[]","[]"
"pull_request_commit","1","idan","oauthlib","ib@ib-laptop.bredband2.se","2012-01-16 22:18:44","Fixed a few bugs in oauth.py, added 100% test coverage","fcd0d5af0334b6d8409a3129fce78c7dc297b383","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","2","idan","oauthlib","ib@ib-laptop.bredband2.se","2012-01-16 22:18:44","Fixed a few bugs in oauth.py, added 100% test coverage","fcd0d5af0334b6d8409a3129fce78c7dc297b383","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","2","idan","oauthlib","ib@ib-laptop.bredband2.se","2012-01-16 22:25:21","Removed accidentially included coverage file","20fe2d7aee53652dc85839fdf8eca9da1d62c14e","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","2","idan","oauthlib","ib@ib-laptop.bredband2.se","2012-01-17 11:51:31","Added sign plain and rsa support","7138da4e339e70b93731d693b9a57c81ee1e06ed","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","2","idan","oauthlib","ib@ib-laptop.bredband2.se","2012-01-17 14:29:09","Updated rsa","e2f7191de7bd1c7bb13dd8fa7684ae54a955121d","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","2","idan","oauthlib","ib@ib-laptop.bredband2.se","2012-01-17 15:03:50","Added generated private key + comments","02cc6538113b7737933c5305e4573d86c7b171a5","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","2","idan","oauthlib","ib@ib-laptop.bredband2.se","2012-01-17 15:31:53","Moved tests to basedir","ae151e4e4e0704b69d86e9ae5ce27ab215c7cfa0","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","2","idan","oauthlib","ib@ib-laptop.bredband2.se","2012-01-17 15:34:25","Fixed import in verify_spec","b1c1b3b2625ac995e5f9f363a1dbe239d1aee434","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","2","idan","oauthlib","ib@ib-laptop.bredband2.se","2012-01-17 21:21:14","Confirmed RSA-SHA1 working","97321cd7148023aab84d4a713dbe11a033e6e57b","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","2","idan","oauthlib","ib@ib-laptop.bredband2.se","2012-01-18 16:58:49","Changed realm to optional as per 3.5.1.","18faf011afb6fbce8c4d6e2bdf49295aa537d6fe","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","2","idan","oauthlib","ib@ib-laptop.bredband2.se","2012-01-19 17:21:35","Added order_parameters which orders them according to 3.5.(1/2/3)","741ab3b2be9a54fe2a357b5c625f4759c8a2adc4","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","2","idan","oauthlib","ib@ib-laptop.bredband2.se","2012-01-19 22:28:39","Added support for Form-Encoded Body 3.5.2 and Request URI Query 3.5.3","8f3a5da3caf811c4dd55127ce5bd3dd16fd82da7","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","2","idan","oauthlib","ib@ib-laptop.bredband2.se","2012-01-20 03:36:00","Fixed a few bugs, added a twitter test","6d9ab49e91d301899be958f1f9be6e5b0062dbad","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","2","idan","oauthlib","ib@ib-laptop.bredband2.se","2012-01-20 04:02:42","Auth header now only includes oauth headers. Fixed a misunderstanding of ordering.","f3d10d4ef7b21eac11e02a2dee021b86f3f55f3a","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","2","idan","oauthlib","ib@ib-laptop.(none)","2012-01-20 15:27:56","Small refactoring","59b593fcee74f53ad7f8b98d548698a07704c795","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","2","idan","oauthlib","ib@ib-laptop.(none)","2012-02-01 20:11:28","A first try at documenting","1aa43afe8ba3c21b3470fce086f54b76a9928610","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","2","idan","oauthlib","ib@ib-laptop.(none)","2012-02-02 19:08:02","More doc changes","abefe2bbcea6ab0df23765916c52145c0c3836bf","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","2","idan","oauthlib","ib@ib-laptop.bredband2.se","2012-02-10 22:48:21","Added convenience class OAuth","787a1a5c9c09f836fd1c377915465dc3f79719e2","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","2","idan","oauthlib","ib@ib-laptop.bredband2.se","2012-02-10 23:12:07","Updated README to use new OAuth class","ca383e4c314a48665c30604590387f76d600e21d","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","2","idan","oauthlib","ib@ib-laptop.bredband2.se","2012-02-12 20:09:40","Added verification methods for server use","98552350f1c57e28999d26c5b09ae32bf499d6d0","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","2","idan","oauthlib","ib@ib-laptop.(none)","2012-02-13 13:54:12","More tests and some rsa bugfixes","559427ce4258dcc996ec1fafc8b8b65b43406c4e","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","2","idan","oauthlib","ib@ib-laptop.(none)","2012-02-13 14:09:43","Fixed plaintext bug + more tests","73aca216e5af63a640639783e1076559c8614ff4","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","2","idan","oauthlib","ib@ib-laptop.(none)","2012-02-13 14:26:34","Added tests for invalid input","a9e440fd641cc4173d28e381aa682669364a8cbe","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","2","idan","oauthlib","ib@ib-laptop.(none)","2012-02-16 16:39:41","New flask example application","d8fb2b65514cb72c6699f16e2219ce0d87ded7e9","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","2","idan","oauthlib","ib@ib-laptop.(none)","2012-02-17 12:02:53","Small cleanup","621f041d4c167ebfbefc97bdce47fb7d6f6bb49a","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","3","idan","oauthlib","ghickman","2012-03-13 04:11:07","Add basic setup.py","f5946ed1053146661e4415fff73579f7a06c2ca9","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","3","idan","oauthlib","ghickman","2012-03-13 04:11:33","Merge branch 'master' of git://github.com/idangazit/oauthlib","84184ede1f30f31325334e1328d44b8523b5acce","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","4","idan","oauthlib","ib-lundgren","2012-03-14 23:15:38","Added RSA Test","3f5339e4a4a7400e4f9cd86f0a167d05282db999","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","5","idan","oauthlib","ib-lundgren","2012-03-15 10:36:40","Updated HMAC test","e89e18c784758988c858a87f5c19fb2bb6bbd771","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","5","idan","oauthlib","ib-lundgren","2012-03-24 17:04:38","Extracted out string constants","a504910b814c46d835cda372d5c3a8f4cdfd6ee1","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","5","idan","oauthlib","ib-lundgren","2012-03-24 17:05:12","Merge branch 'master' of https://github.com/idangazit/oauthlib into hmac_test","3f84a28055620ab656304ebd6e75ff71c02b9c95","","api.github.com","","False","[u'https://github.com/idangazit/oauthlib']","[]","[]","[]"
"pull_request_commit","5","idan","oauthlib","ib-lundgren","2012-03-24 17:07:48","Added control hmac key","6069b12a36a6dcc5e77db594dd842743e786a0e4","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","6","idan","oauthlib","ib-lundgren","2012-03-15 14:45:52","Strip HTTPS port","bd87217afa222cd799b5ee842a473be501ca3840","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","6","idan","oauthlib","ib-lundgren","2012-03-15 17:30:16","Filter port based on scheme as suggested by dgouldin","0361b5dda0707f9ce36b55315004ffb86b09ab23","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","8","idan","oauthlib","ib-lundgren","2012-03-15 22:16:34","Changed some arguments to optional per spec","cdf86d96eb6f6011f5743ea553e7c549deb0df73","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","8","idan","oauthlib","ib-lundgren","2012-03-16 10:24:00","Changed OAuthServer to match argument changes","785fe3cd04560d81331c6a7cbac6b6a95e85118f","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","8","idan","oauthlib","ib-lundgren","2012-03-24 17:11:45","Merge branch 'master' of https://github.com/idangazit/oauthlib into argument_changes","b7933f3572efaf5c4e4f50ff4cdaa14a931e4398","","api.github.com","","False","[u'https://github.com/idangazit/oauthlib']","[]","[]","[]"
"pull_request_commit","8","idan","oauthlib","ib-lundgren","2012-03-24 17:14:39","Removed oauth_token from required params","72557abea0956324ea34c9edf5e93cde283eab51","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","8","idan","oauthlib","ib-lundgren","2012-03-24 17:16:18","Merge branch 'master' of https://github.com/idangazit/oauthlib into argument_changes","aa4196a2e48cb320247f4fb6fc5e3c1574bb2ab8","","api.github.com","","False","[u'https://github.com/idangazit/oauthlib']","[]","[]","[]"
"pull_request_commit","8","idan","oauthlib","ib-lundgren","2012-03-24 17:27:23","signature -> request_signature","1f4697bd02cd37eed49c425f776c122afd350e03","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","9","idan","oauthlib","ib-lundgren","2012-03-15 22:37:56","Ignore Vim .swp files","5f76b1485649278d690c1ab35a5237ad33b128c2","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","10","idan","oauthlib","ib-lundgren","2012-03-16 18:18:05","Section 3.(2|4|5) changes","d2357291dfe04bd640de7376fc60dafe584373be","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","10","idan","oauthlib","ib-lundgren","2012-03-24 17:36:02","merge prep","354c07006f885b0ff468f44efebe1c4d8df646ec","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","10","idan","oauthlib","ib-lundgren","2012-03-24 17:37:09","more merge prep","04f38ecee9c40dc80a7fe15934800ee5067f9b0f","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","10","idan","oauthlib","ib-lundgren","2012-04-07 10:15:50","New method get_signature_type_and_params","fd45119491908a63a4dc81b45beb416bc2669710","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","11","idan","oauthlib","ib-lundgren","2012-03-16 18:57:28","Allow empty strings and duplicate keys in query","26205a0a72fe5dcb95db18bb2bb90af701eacfb5","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","11","idan","oauthlib","ib-lundgren","2012-03-16 19:08:56","Allow empty strings in body","d703a2047c9ab6f1c4e8154782f5d503d9701550","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","11","idan","oauthlib","ib-lundgren","2012-03-24 17:46:34","Merge branch 'master' of https://github.com/idangazit/oauthlib into duplicate_keys","80691afb3e404d23f25644849ce0c64de5e32db6","","api.github.com","","False","[u'https://github.com/idangazit/oauthlib']","[]","[]","[]"
"pull_request_commit","11","idan","oauthlib","ib-lundgren","2012-03-24 17:47:35","added keywords","6f95a037af0901d49ff3174d33672105b7ef3a08","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","12","idan","oauthlib","ib-lundgren","2012-03-16 22:37:44","Allow body=dict/list in sign_request","6059f9b483d9ca0a1f53a1edfc08b75347bc84e0","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","12","idan","oauthlib","ib-lundgren","2012-03-18 09:52:58","Refactored body check","bd3691cde7124d059162753c35b06cfb41472fa4","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","12","idan","oauthlib","ib-lundgren","2012-03-24 18:00:05","Updated per dgouldins tip + pull","9ab832ce8a2694e08a2399d3d161bc3bedfb7a50","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","13","idan","oauthlib","ib-lundgren","2012-03-16 23:03:01","Added flask twitter example","b8f66ade7a728c37beefba8543bf05fdccd7f673","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","14","idan","oauthlib","ib-lundgren","2012-03-31 08:46:01","generate_token test was not running","cf8d28ce21c71cebda6f82a6d58dc7c3f1d742cf","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","15","idan","oauthlib","ib-lundgren","2012-03-31 08:51:24","OAuth 2 draft 25 initial","1f0a93f4ed8afedd3ea7c4e6510f23d5ebddd4e7","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","16","idan","oauthlib","ib-lundgren","2012-03-31 08:59:22","Utility methods for OAuth2","0144e370874e8525b955eb007a90c205e5df7559","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","17","idan","oauthlib","ib-lundgren","2012-03-31 09:01:07","Bearer and MAC token support","cb7587f7674db5d00df3a6134ad815fa03e2e7e6","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","18","idan","oauthlib","ib-lundgren","2012-03-31 09:03:17","OAuth 2 parameter handlers","6f05096efb7d423e8e529a3efd3854b2f4a030ab","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","20","idan","oauthlib","calebbrown","2012-04-18 10:53:36","Fix some some broken constants and vars in the OAuth1 Server.","d98d067bd807cbe5a1d3067f57397909e387618b","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","20","idan","oauthlib","calebbrown","2012-04-18 11:38:41","Extract the signature method for the signature method, not the
signature.","7118970bb198b1bd34c43e0073da54df3d09d749","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","20","idan","oauthlib","calebbrown","2012-04-18 11:40:38","urllib.unqoute doesn't take 'safe' as an arg. Add a test and fix.","e569fc16ed65a2bfe50061a58f21579025eff3c3","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","20","idan","oauthlib","calebbrown","2012-04-18 11:51:58","Fix a bug in oauth1.signature.collect_parameters preventing unescaping.","1f292e6923aa9419d28e3700e22102dffd447886","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","20","idan","oauthlib","calebbrown","2012-04-18 13:13:27","Pass through the request method to the client when generating signature.","cb1997081a873e59cf4f2e55d19246cb244a2a60","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","20","idan","oauthlib","calebbrown","2012-04-18 13:14:17","Make prepare_headers return non-unicode strings.

Because there is an assumption that headers are encoding in ASCII,
and because all the parameters are passed through utils.escape anyway
we shouldn't use unicode strings when building the header.

When it was returning unicode strings the base string used to generate
the signature was being double encoded.","028ff8dced3c63365c580345a145a5e997c312d0","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","20","idan","oauthlib","calebbrown","2012-04-18 13:17:25","Update the tests. Strengthen the unescape and escape tests and add more
server tests.","361d306d11efedaa63b281d2e87b25f54ef91b38","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","20","idan","oauthlib","calebbrown","2012-04-18 13:51:18","Make sure the OAuth1 client doens't drop headers when signing requests.","f744f6ca1f81e6d48044f7416472f39dbd6e573c","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","20","idan","oauthlib","calebbrown","2012-04-18 13:54:30","Add support to OAuth1 for including body in the base string based on
encoding.

Section 3.4.1.3.1. (Parameter Sources) in rfc5849 indicates that
multipart bodies are excluded from the base string when generating the
signature.","ae386c2154f65054427f33419bf17b6feda563d5","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","20","idan","oauthlib","calebbrown","2012-04-18 14:03:50","Allow empty secrets when generating the OAuth1 HMAC SHA1 Signature.

Previously the secrets would be 'None' and would cause utils.escape
to throw an except.","eb0858a1627f8d58456020d20c74c75830c67c11","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","20","idan","oauthlib","calebbrown","2012-04-19 02:56:50","Revert ""Add support to OAuth1 for including body in the base string based on""

This reverts commit ae386c2154f65054427f33419bf17b6feda563d5.

Will be replaced in favour of passing a 'content_type' parameter.","a3ae77f63b46bed830c171d22137cb5eb4ee9c3e","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","20","idan","oauthlib","calebbrown","2012-04-19 03:00:18","Revert ""Make prepare_headers return non-unicode strings.""

This reverts commit 028ff8dced3c63365c580345a145a5e997c312d0.

Rather than converting to non-unicode strings the desire is to have
unicode everywhere.

So this is being removed in favour of improving the unicode support elsewhere.

In particular utils.unescape() and signature.collect_parameters()
need to have their unicode support improved.","a0f10d6455ee285d713dee34e99131cdc6ab0b95","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","20","idan","oauthlib","calebbrown","2012-04-19 03:07:05","Add comment indicating why we need ""safe='~'"" in the call to urllib.quote.","b373b48ab363fea2195d00f4e2a91cc77315f2a0","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","20","idan","oauthlib","calebbrown","2012-04-19 03:08:02","Add self to AUTHORS","6d56d09ac887130a1cc2c1f0d3cce30fc70b629b","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","21","idan","oauthlib","calebbrown","2012-04-18 10:53:36","Fix some some broken constants and vars in the OAuth1 Server.","d98d067bd807cbe5a1d3067f57397909e387618b","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","21","idan","oauthlib","calebbrown","2012-04-18 11:38:41","Extract the signature method for the signature method, not the
signature.","7118970bb198b1bd34c43e0073da54df3d09d749","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","21","idan","oauthlib","calebbrown","2012-04-18 11:40:38","urllib.unqoute doesn't take 'safe' as an arg. Add a test and fix.","e569fc16ed65a2bfe50061a58f21579025eff3c3","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","21","idan","oauthlib","calebbrown","2012-04-18 11:51:58","Fix a bug in oauth1.signature.collect_parameters preventing unescaping.","1f292e6923aa9419d28e3700e22102dffd447886","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","21","idan","oauthlib","calebbrown","2012-04-18 13:13:27","Pass through the request method to the client when generating signature.","cb1997081a873e59cf4f2e55d19246cb244a2a60","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","21","idan","oauthlib","calebbrown","2012-04-18 13:14:17","Make prepare_headers return non-unicode strings.

Because there is an assumption that headers are encoding in ASCII,
and because all the parameters are passed through utils.escape anyway
we shouldn't use unicode strings when building the header.

When it was returning unicode strings the base string used to generate
the signature was being double encoded.","028ff8dced3c63365c580345a145a5e997c312d0","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","21","idan","oauthlib","calebbrown","2012-04-18 13:17:25","Update the tests. Strengthen the unescape and escape tests and add more
server tests.","361d306d11efedaa63b281d2e87b25f54ef91b38","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","21","idan","oauthlib","calebbrown","2012-04-18 13:51:18","Make sure the OAuth1 client doens't drop headers when signing requests.","f744f6ca1f81e6d48044f7416472f39dbd6e573c","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","21","idan","oauthlib","calebbrown","2012-04-18 13:54:30","Add support to OAuth1 for including body in the base string based on
encoding.

Section 3.4.1.3.1. (Parameter Sources) in rfc5849 indicates that
multipart bodies are excluded from the base string when generating the
signature.","ae386c2154f65054427f33419bf17b6feda563d5","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","21","idan","oauthlib","calebbrown","2012-04-18 14:03:50","Allow empty secrets when generating the OAuth1 HMAC SHA1 Signature.

Previously the secrets would be 'None' and would cause utils.escape
to throw an except.","eb0858a1627f8d58456020d20c74c75830c67c11","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","21","idan","oauthlib","calebbrown","2012-04-19 02:56:50","Revert ""Add support to OAuth1 for including body in the base string based on""

This reverts commit ae386c2154f65054427f33419bf17b6feda563d5.

Will be replaced in favour of passing a 'content_type' parameter.","a3ae77f63b46bed830c171d22137cb5eb4ee9c3e","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","21","idan","oauthlib","calebbrown","2012-04-19 03:00:18","Revert ""Make prepare_headers return non-unicode strings.""

This reverts commit 028ff8dced3c63365c580345a145a5e997c312d0.

Rather than converting to non-unicode strings the desire is to have
unicode everywhere.

So this is being removed in favour of improving the unicode support elsewhere.

In particular utils.unescape() and signature.collect_parameters()
need to have their unicode support improved.","a0f10d6455ee285d713dee34e99131cdc6ab0b95","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","21","idan","oauthlib","calebbrown","2012-04-19 03:07:05","Add comment indicating why we need ""safe='~'"" in the call to urllib.quote.","b373b48ab363fea2195d00f4e2a91cc77315f2a0","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","21","idan","oauthlib","calebbrown","2012-04-19 03:08:02","Add self to AUTHORS","6d56d09ac887130a1cc2c1f0d3cce30fc70b629b","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","21","idan","oauthlib","calebbrown","2012-04-19 03:41:52","Clean up internal char encoding handling in rfc5849.signature.collect_parameters

 1. Change `utils.unescape()` to support unescaping both unicode and str
    types. So if a param is in unicode it can still be escaped.
 2. Change `signature.collect_parameters()` so that the call to
    `unescape()` was no longer restricted to the value being just 'str'.

This solves the problem where the output of
`parameters.prepare_headers()` being in unicode was feed into
`signature.collect_parameters()` and failing to be unescaped.","486c338b24454146d42eb5d3501859e76f0ad3d3","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","21","idan","oauthlib","calebbrown","2012-04-19 03:49:21","Remove the hack in tests that converted the headers from unicode to str.","2a2594986c61115ebe1ec5f1ddeec3812294642b","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","22","idan","oauthlib","calebbrown","2012-04-18 10:53:36","Fix some some broken constants and vars in the OAuth1 Server.","d98d067bd807cbe5a1d3067f57397909e387618b","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","22","idan","oauthlib","calebbrown","2012-04-18 11:38:41","Extract the signature method for the signature method, not the
signature.","7118970bb198b1bd34c43e0073da54df3d09d749","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","22","idan","oauthlib","calebbrown","2012-04-18 11:40:38","urllib.unqoute doesn't take 'safe' as an arg. Add a test and fix.","e569fc16ed65a2bfe50061a58f21579025eff3c3","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","22","idan","oauthlib","calebbrown","2012-04-18 11:51:58","Fix a bug in oauth1.signature.collect_parameters preventing unescaping.","1f292e6923aa9419d28e3700e22102dffd447886","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","22","idan","oauthlib","calebbrown","2012-04-18 13:13:27","Pass through the request method to the client when generating signature.","cb1997081a873e59cf4f2e55d19246cb244a2a60","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","22","idan","oauthlib","calebbrown","2012-04-18 13:14:17","Make prepare_headers return non-unicode strings.

Because there is an assumption that headers are encoding in ASCII,
and because all the parameters are passed through utils.escape anyway
we shouldn't use unicode strings when building the header.

When it was returning unicode strings the base string used to generate
the signature was being double encoded.","028ff8dced3c63365c580345a145a5e997c312d0","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","22","idan","oauthlib","calebbrown","2012-04-18 13:17:25","Update the tests. Strengthen the unescape and escape tests and add more
server tests.","361d306d11efedaa63b281d2e87b25f54ef91b38","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","22","idan","oauthlib","calebbrown","2012-04-18 13:51:18","Make sure the OAuth1 client doens't drop headers when signing requests.","f744f6ca1f81e6d48044f7416472f39dbd6e573c","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","22","idan","oauthlib","calebbrown","2012-04-18 13:54:30","Add support to OAuth1 for including body in the base string based on
encoding.

Section 3.4.1.3.1. (Parameter Sources) in rfc5849 indicates that
multipart bodies are excluded from the base string when generating the
signature.","ae386c2154f65054427f33419bf17b6feda563d5","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","22","idan","oauthlib","calebbrown","2012-04-18 14:03:50","Allow empty secrets when generating the OAuth1 HMAC SHA1 Signature.

Previously the secrets would be 'None' and would cause utils.escape
to throw an except.","eb0858a1627f8d58456020d20c74c75830c67c11","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","22","idan","oauthlib","calebbrown","2012-04-19 02:56:50","Revert ""Add support to OAuth1 for including body in the base string based on""

This reverts commit ae386c2154f65054427f33419bf17b6feda563d5.

Will be replaced in favour of passing a 'content_type' parameter.","a3ae77f63b46bed830c171d22137cb5eb4ee9c3e","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","22","idan","oauthlib","calebbrown","2012-04-19 03:00:18","Revert ""Make prepare_headers return non-unicode strings.""

This reverts commit 028ff8dced3c63365c580345a145a5e997c312d0.

Rather than converting to non-unicode strings the desire is to have
unicode everywhere.

So this is being removed in favour of improving the unicode support elsewhere.

In particular utils.unescape() and signature.collect_parameters()
need to have their unicode support improved.","a0f10d6455ee285d713dee34e99131cdc6ab0b95","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","22","idan","oauthlib","calebbrown","2012-04-19 03:07:05","Add comment indicating why we need ""safe='~'"" in the call to urllib.quote.","b373b48ab363fea2195d00f4e2a91cc77315f2a0","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","22","idan","oauthlib","calebbrown","2012-04-19 03:08:02","Add self to AUTHORS","6d56d09ac887130a1cc2c1f0d3cce30fc70b629b","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","22","idan","oauthlib","calebbrown","2012-04-19 04:54:54","Add support for only including body in sigs if it has the correct content-type

Add the ability to specify a content_type when generating signatures or
checking the validity of a request.

The default is set to u'application/x-www-form-urlencoded' which will
attempt to parse any body content passed in.

If it is set to anything else the body won't be included in the
generation of the signature.

This brings it into line with Section 3.4.1.3.1. (Parameter Sources) in
rfc5849.","97e66774fa27a014d5b4b0d5c4d57939474b5bfe","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","23","idan","oauthlib","calebbrown","2012-04-24 23:15:20","Fix the failing tests.

 * Order of values returned from client.sign() were changed
 * Call to Client.get_oauth_signature() in
   Server.check_request_signature() needs to take a Request()","41576dbcd659dc09a042191d41f460f138b96102","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","24","idan","oauthlib","ib-lundgren","2012-04-26 10:53:06","Decode urlencoded properly","e6ea39fef208873100ad225d4b3ec4c225aa4201","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","24","idan","oauthlib","ib-lundgren","2012-04-26 10:56:55","paraphrase","b43faf7a3deae34c38e60a0af689fb91018c4101","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","24","idan","oauthlib","ib-lundgren","2012-04-26 11:13:09","Regex fix","3ac2b61395f4e9489aa4ee8cc46ef68ef9ac9082","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","24","idan","oauthlib","ib-lundgren","2012-04-26 13:34:25","refactor regex","cd8d0ab8b43cb12f4de96767eae694842e6fbceb","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","24","idan","oauthlib","ib-lundgren","2012-04-26 13:47:02","urldecode","9c2a6dadcf54142c378677ae38d6833e397ae21b","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","24","idan","oauthlib","ib-lundgren","2012-04-26 13:51:38","Revert ""urldecode""

This reverts commit 9c2a6dadcf54142c378677ae38d6833e397ae21b.","a07d520defb04f0d35febb55470d331ef451da92","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","24","idan","oauthlib","ib-lundgren","2012-04-26 13:53:23","Moved import to top","0b0705bf18b6451e8d1db3804c42f6ace1c3150c","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","27","idan","oauthlib","ib-lundgren","2012-04-30 00:53:08","Toxification step 1 #25","136ac665894e4d00ecb7481b8cfc704074a303d4","","api.github.com","","False","[]","[{u'raw': u'#25', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'25', u'']}]","[]","[]"
"pull_request_commit","31","idan","oauthlib","dstufft","2012-05-01 13:27:47","Simplify the quote and unquote function","0761483f88fdd41f1b51f43bf69d91bd703df37e","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","33","idan","oauthlib","dstufft","2012-05-03 05:47:58","Make Build not dependent on oft failing requirements","1b972011ad1abf16d9829d9d24762cdcd409d231","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","35","idan","oauthlib","eriol","2012-05-04 23:29:47","Provided tests as a package so tests/__init__.py and
test/test_common.py won't be missing. Right now tests shipped in
sdist are broken because of the missing files.","5eacf802ed21e12fdf983223fb9d1546a366f8e6","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","36","idan","oauthlib","idan","2012-05-06 06:54:44","Use python-rsa instead of pycrypto

Switched because pycrypto has binary bits which require compilation, making
usage of oauthlib on windows more painful than necessary.","5917e4c5fd67256acd0b838bd29065b3b632312c","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","37","idan","oauthlib","ib-lundgren","2012-05-14 10:26:24","safe_compare for strings","c1b11fc6e001436145a11111d8d05a9ea39cbb50","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","37","idan","oauthlib","ib-lundgren","2012-05-14 10:27:03","hardened server","1d3f39866b5c6565a7ccbad2b25db2bd09d11393","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","37","idan","oauthlib","ib-lundgren","2012-05-14 10:27:37","New and updated server tests","bb036532d43dd8cea81955e5e67aaf3a73f85d17","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","37","idan","oauthlib","ib-lundgren","2012-05-14 10:28:11","Verification methods with pycrypto","bc143a14871fb8ded1ca59b3cc15c582e9c409c3","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","37","idan","oauthlib","ib-lundgren","2012-05-18 22:09:29","Validate callbacks","8b3785d009336bc18a88be3114f376800e5ac4e7","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","37","idan","oauthlib","ib-lundgren","2012-05-18 22:12:28","Requirements fix","de41905da949a8fc72413607d13ca3daead3a19a","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","37","idan","oauthlib","ib-lundgren","2012-05-18 22:20:59","Py2.6 .format fix","1228458caf9e2d1e96a823878296c26be6600f43","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","39","idan","oauthlib","ib-lundgren","2012-05-21 18:07:15","first go at server docs","e72ba57db094acb4b1fa206b0c3a082a0dac8d80","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","39","idan","oauthlib","ib-lundgren","2012-06-25 12:19:07","updates to tokens and realm","6fcf91723dd2efc3f8279b52b8f1a0ad47b216c9","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","41","idan","oauthlib","marienz","2012-06-06 21:08:12","Use assertItemsEqual to test lists of headers and parameters.

This is cleaner, and makes the tests not depend on dictionary
order (which may change, and is different in pypy).","02ff18492bd147aaaea6b57b7c698536433561fd","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","41","idan","oauthlib","marienz","2012-06-06 21:16:06","Use more specific assert methods in the tests where possible.

This should make no difference as long as the tests pass, but produce
better messages if they fail.","605e04637c0d03d1ea1709ee1650567d14f2c554","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","42","idan","oauthlib","ib-lundgren","2012-06-12 17:11:38","Soft dependency on PyCrypto","a0ba685a3e6ded2b7542b292996e04082de51101","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","42","idan","oauthlib","ib-lundgren","2012-06-12 17:33:24","Links for windows rsa users","a582d1ca3e66a1ea63b1be8e8102d9f891cb0737","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","43","idan","oauthlib","gulopine","2012-06-15 04:29:56","Add a basic OAuth2 client","165b4ded43d9962dfaa9e6d5acdd2718d56a2516","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","51","idan","oauthlib","tikitu","2012-08-14 10:48:15","Fix Idan's github name in docs/contributing.rst

idangazit -> idan","4d74b697df3c54bce315e1d404b3f7ad4123be99","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","53","idan","oauthlib","ayanamist","2012-08-27 10:55:00","Check the type before quote and unquote.","6bfd90fe8a590f1ba7082e86bcdd8d6ef1a856c1","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","53","idan","oauthlib","ayanamist","2012-08-27 10:56:42","Use logger instead of direct call of logging.","963c789628983bb9d465b9fbb23266245ed80d0e","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","53","idan","oauthlib","ayanamist","2012-08-28 07:29:44","Unicode the object first.","61a416bc05d99a0a243461838619925bf88e11d2","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","56","idan","oauthlib","mikix","2012-08-31 21:52:09","Support Python 3

These are mostly unicode string related changes and a few syntax ones.

https://github.com/idan/oauthlib/issues/55","95c24638a73e895fb42449b876266b8029b752bb","","api.github.com","","False","[u'https://github.com/idan/oauthlib/issues/55']","[{u'raw': u'https://github.com/idan/oauthlib/issues/55', u'refstyle': u'url', u'parts': [u'idan', u'oauthlib', u'55', u'']}]","[]","[]"
"pull_request_commit","56","idan","oauthlib","mikix","2012-08-31 22:04:18","Fix forgotten import in setup.py","d06f0174e275723b8b68b26d98140cb997daf2c9","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","56","idan","oauthlib","mikix","2012-09-03 15:13:35","fix some byte/unicode arguments for Python 2.6's benefit","56a5c730609b9d8ac4ec4303448ae79c7443216e","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","60","idan","oauthlib","mvo5","2012-09-24 12:46:02","add support for ""realm"" in the client","ef638d88f0e8ceb64eaf2d2004201f2d0dfaced0","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","60","idan","oauthlib","mvo5","2012-09-24 12:50:56","add the ""realm"" at the right place","619c8db9ac78f5e6b4a59f3b344df968969988bd","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","60","idan","oauthlib","mvo5","2012-10-29 08:14:52","address some of the review points from Ib","30ea4234a5917a9afebeb4669091b5e871a775b8","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","60","idan","oauthlib","mvo5","2012-10-29 08:36:21","add some test coverage for the realm parameter","815bc0c1c4e68553386f81b109db95d28c94f991","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","60","idan","oauthlib","mvo5","2012-10-29 08:40:39","add additional tiny test","00afba917616cc1187c2a06c86def64d9fc480f6","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","60","idan","oauthlib","mvo5","2012-10-31 08:25:36","use  ""from future import unicode_literals"" instead of u""""","cb1598ba6ff147a55ab8a0e7ff7eaf90c7885a35","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","60","idan","oauthlib","mvo5","2012-10-31 08:34:18","merged master, resolved conflicts","8faeb116ea0e3fe41675b9c9de9a175b53490948","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","61","idan","oauthlib","mvantellingen","2012-10-03 09:49:42","Fix errors in the oauth2 server tests","bd21c06ff8e605d7867ed2c23fdb6474d0847a6c","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","61","idan","oauthlib","mvantellingen","2012-10-03 10:10:28","Implement Server.redirect_uri for oauth2.","1bc2614f61c9e4962fcfe4b397a2b7aa4702c4fd","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","61","idan","oauthlib","mvantellingen","2012-10-03 10:19:15","Some minor refactoring of the last commit","f51b3115f4c07b76be44d517ae141da0e2c14ec4","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","61","idan","oauthlib","mvantellingen","2012-10-03 10:50:03","Move oauth2 AuthorizationServer to its own module","d2f10d8fca5ccf1cc76f0c9619880818ff08db25","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","63","idan","oauthlib","warsaw","2012-10-29 09:49:41","Fix issue 62 by sorting kwargs in some cases, and extract_params() tests
output in other cases.","1bc400f297f7235630a6a01e3755a831f7b7d00b","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","64","idan","oauthlib","swsnider","2012-11-07 17:36:23","fix problem with verification of initial OAuth requests which lack a resource_owner token","d1cb48b4be073b446981550e9cf66b8187fda68f","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","65","idan","oauthlib","swsnider","2012-11-09 08:00:27","change returned request object so that it contains the realm paramter if one was passed in.","2d9a1cf4e72872dd5d574d6c712f9b8720bb4ffc","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","65","idan","oauthlib","swsnider","2012-11-09 08:04:00","clarify that only the Authorization: header can contain the realm parameter.","4eb0c575b62e43e368671e1e52122afdfd80df10","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","65","idan","oauthlib","swsnider","2012-11-09 08:12:39","Correct typo that set the default value of with_realm. This was caught by the test also added in this commit","d30cbfa0a528d6b69de530cc259fa44b0ad653be","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","65","idan","oauthlib","swsnider","2012-11-09 17:04:25","adding myself to AUTHORS as suggested by idan.","76bc671637e65a87a81b7f95f256adec2e4fdfc4","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","66","idan","oauthlib","lalinsky","2012-11-10 14:17:06","Add support for v01 MAC tokens","680459a1b9e42fab645138a587a218a77a8234d7","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","67","idan","oauthlib","lalinsky","2012-11-10 19:32:44","Make it possible to pass extra parameters to prepare_refresh_body","d91e3c6f7a971b39f89698c32f33d518ef5e2db8","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","69","idan","oauthlib","senko","2012-11-13 10:03:40","test that oauth1 Server.verify_request has consistent return value type","698eaffb8a434e251141759c63bfaa6ac37debf6","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","69","idan","oauthlib","senko","2012-11-13 10:04:46","oauth1.rfc5849.Server.verify_request(): have a consistent return value type","351586178d6bf5a95a34a2344f1d14426947d206","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","69","idan","oauthlib","senko","2012-11-13 10:10:31","oauth1 test_realm_validation: fix expected signature

This error was previously masked due to return value (False, <request>)
being always treated as True.","8e00fa7bf6ddcceffd46859da7421e4c683591f1","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","70","idan","oauthlib","tomchristie","2012-11-13 13:11:53","Add link to readthedocs","bf7e0d21af2199eae5f445fa13a1d30d1a0bc494","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","70","idan","oauthlib","tomchristie","2012-11-13 13:12:36","Include self in authors","466600ce8fe53a433883ee6fd2f29026cb0c48a4","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","71","idan","oauthlib","tomchristie","2012-11-16 14:00:43","Tweak readme","d9c53e719a1e74865659adb1fcc87935cded6639","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","72","idan","oauthlib","tomchristie","2012-11-16 14:22:18","Fix link (had trailing underscore)","79824fd90dbb0e9a68d4d602263f8950f308ad15","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","80","idan","oauthlib","floppym","2012-11-18 04:22:50","Don't install the tests package or subpackages.","949c3c9ed6caabd69909400a16c6a93647fcc1eb","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","80","idan","oauthlib","floppym","2012-11-18 18:37:57","Include tests in the source tarball","c2505585c05929035fde77ce05bbf45b5e04be89","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","81","idan","oauthlib","dafyddcrosby","2012-11-20 17:12:30","Fix broken setup.py bdist_rpm","5c72ca703a76c37276c16253f3694e21cd4c5123","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","82","idan","oauthlib","Chez","2012-11-28 09:21:07","added RefreshTokenGrant to grant_types.py.","e7bfbd06fb2cd4908f788d5571b63d5689c0618f","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","82","idan","oauthlib","Chez","2012-11-28 17:08:57","changed RefreshTokenGrant error for failing validate_refresh_token to InvalidRequestError as per the Oauth2 spec 5.2","829f793edd216777e233131ab1b4625c8130002d","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","82","idan","oauthlib","Chez","2012-12-01 08:43:07","added validate_redirect_uri method call to RefreshTokenGrant in grant_types.py","15be5b69386732aa20f0afb19d8024168faf05b3","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","82","idan","oauthlib","Chez","2012-12-01 08:50:20","ammeded comment for validate_redirect_uri","9ecbb081917f503fbefa47671f5261d90da8b6bd","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","82","idan","oauthlib","Chez","2012-12-02 09:25:39","moved redirect token check to validate_token_request in AuthorizationCodeGrant.","8d17f0612420b9740f619a4fe550c7dff5957c94","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","82","idan","oauthlib","Chez","2012-12-03 08:02:49","fixed sleepy mistake for checking redirect uri","6ca6d6b41076a104c088dbc2e4a130a4255b3601","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","82","idan","oauthlib","Chez","2012-12-07 07:00:54","changed self.request to request in create_token_response","a6aa8463bfe5ff0d977e994d212e9a2bec1db871","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","82","idan","oauthlib","Chez","2012-12-12 21:45:16","changed request.scopes to singlular which seems to be the normal tense for scope parameter.","85456b65c7ce7d60dfbe958c2a4cd35129fe9955","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","84","idan","oauthlib","arleincho","2012-12-12 15:40:49",". Se cambio el nombre del directorio de testcase ""unittest por unittestcase"" por conflicto con el paquete unittest.","e2f95e1172b017d833c485d44b9665d4ba4ce62b","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","84","idan","oauthlib","arleincho","2012-12-12 15:41:59",". Se cambio el nombre del directorio de testcase ""unittest por unittestcase"" por conflicto con el paquete unittest.
. En las pruebas se adiciona una para TokenEndpointTest
. Se quita la referencia de ""self""  en el metodo create_token_response de TokenEndpoint para recuperar el query_params
. Se cambia la validacion el TokenEndpoint para obtener ""grant_type"" ya que estaba invertida la comparacion entre ""body_params y query_params""
.El body_params en TokenEndpoint se deja  en {} si no se tiene nungun valor","0debea7f027fc193bd754a904d0f00308550893d","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","84","idan","oauthlib","arleincho","2012-12-12 15:47:42",". Se cambio el nombre del directorio de testcase ""unittest por unittestcase"" por conflicto con el paquete unittest.
. En las pruebas se adiciona una para TokenEndpointTest
. Se quita la referencia de ""self""  en el metodo create_token_response de TokenEndpoint para recuperar el query_params
. Se cambia la validacion el TokenEndpoint para obtener ""grant_type"" ya que estaba invertida la comparacion entre ""body_params y query_params""
.El body_params en TokenEndpoint se deja  en {} si no se tiene nungun valor","20f352274aba56533bb4475b84b6aceb953d75d5","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","87","idan","oauthlib","warsaw","2013-01-04 16:58:42","Fix a typo in the code that converts arguments from bytes to unicodes.","a9deb08f529cff605b2fb8ab5106832ad06cb9d7","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","87","idan","oauthlib","warsaw","2013-01-04 17:08:03","Fix issue #86 by adding `nonce` and `timestamp` arguments to Client
constructor.  In get_oauth_params(), use the explicitly provided nonce and
timestamp if given, otherwise generate them.","6d562597e5c1c23743331b9682a5eb9a1c36afbc","","api.github.com","","False","[]","[{u'raw': u'#86', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'86', u'']}]","[]","[]"
"pull_request_commit","90","idan","oauthlib","tino","2013-01-05 13:48:01","Add missing ``validate_bearer_token`` to ``RequestValidator`` placeholder class","26e50668348fa19d6d8a7aa9cc57d4fee66d630b","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","92","idan","oauthlib","metatoaster","2013-01-11 14:43:01","Test for callback verification

  - Not all requests will need the oauth_callback attribute.
  - For requests that need it (i.e. requests for Temporary Credentials)
    they must be checked.","6817f4fb527bd423b16ce16d91ad4af30538f6b5","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","92","idan","oauthlib","metatoaster","2013-01-11 15:11:27","Fix a mess to formatting made in parent.","4d64a2c6ea6ae80e43130186a4266f90175b4590","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","93","idan","oauthlib","russss","2013-01-15 09:31:53","Use the correct dummy tokens","c50ca676ef4d486bbb638106c4435333fabe34c6","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","93","idan","oauthlib","russss","2013-01-15 17:42:50","Fix dummy token tests","e6aabab064fd2240bfc844be14d1af8c422c19a8","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","98","idan","oauthlib","ondrowan","2013-02-01 10:37:57","Added missing crypto library to requirements.txt","276672252b2e287f09b023728e10e98ad4cd39a2","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","98","idan","oauthlib","ondrowan","2013-02-03 17:41:37","Added mock and nose to requirements.txt","3c5c90d5a1773fd3ebe6520d18284d7635227f1d","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","99","idan","oauthlib","ondrowan","2013-02-01 11:03:20","Added requirements_dev.txt

* added missing mock for people that don't want to run tox for every
change
* added nose","1bd68e40f18d666bb90babf34a1cf6d500aeb3ab","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","100","idan","oauthlib","ondrowan","2013-02-04 15:37:24","Fixed build status image/link in readme","f4acfe6bf8cfbcec736176dae7cd180b8b52c97f","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","102","idan","oauthlib","ondrowan","2013-02-06 10:44:14","Fixed typos in docstring of OAuth server.","ed49cc13299995203a4083efa970ef5165eee7eb","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","103","idan","oauthlib","andreif","2013-02-06 11:39:05","Fixed typos in grant_types. Initialized attributes to avoid validation errors.","c287c87a102b95d4636b5ea3ebac2d1332513dfd","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","103","idan","oauthlib","andreif","2013-02-06 12:42:28","Added missing argument for auth endpoint. Fixed typo in docstring.","d46e37f1de5b716a2f12c23635cd60b383ac20ac","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","103","idan","oauthlib","andreif","2013-02-06 13:17:43","Fixed typo and argument order in docs.","c0f1a9ec3df123eea7c24159f02c205bf0a3f3ea","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","103","idan","oauthlib","andreif","2013-02-06 18:07:51","Fixed attribute initialization added by prev commit.","a4b6dfc1693879bfcc8f8d841327a89ad499197a","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","105","idan","oauthlib","andreif","2013-02-06 23:09:40","Use absolute import in Django extension fixing self-import.","7409cd817a5011b3acd348f2be16130d2e59e380","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","105","idan","oauthlib","andreif","2013-02-07 09:06:26","Fixed typos in the docs.","dbd9a96b5d58f41420fd6921e0556ed146c8b690","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","105","idan","oauthlib","andreif","2013-02-07 09:11:59","Added extra blank line conforming to the standard.","92fbec1c1fee53bfd409e95c6294acb2a0938445","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","108","idan","oauthlib","ondrowan","2013-02-13 16:43:59","Fixed wrong function reference in OAuth server docs","7c5b0ba793d7d524fe3b1a84f905ab4d317ccf09","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","112","idan","oauthlib","ondrowan","2013-02-14 13:42:11","Fixed verify_request_token_request in OAuth1 server.
* it now calls verify_request with require_callback=True
* added docstring about oob callback
* added test demonstrating use case","a81ca125536354a1007394c7525ec267392d9361","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","112","idan","oauthlib","ondrowan","2013-02-14 22:36:07","Added my little self to AUTHORS","0215a772a8d725244a2cf09b49b237eb3fc418da","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","113","idan","oauthlib","ondrowan","2013-02-14 14:18:53","Added sphinx to requirements","eda02121dbf4c4b3affdf355523df7b596484dff","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","113","idan","oauthlib","ondrowan","2013-02-14 14:20:34","Fixed misplaced coding string in docs","e3b93c2d71cca7926ebe93071ef91d03109ee07c","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","115","idan","oauthlib","ondrowan","2013-02-14 23:19:44","Changes to testing stuff
* simplified tox config
* added python 3 to travis config","2f0871bcc53ba9875c415eddc3b7f1878d2e8806","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","123","idan","oauthlib","doigoid","2013-02-22 19:02:38","Log into the oauthlib namespace, not the root one","3f817cd6463a79ff89ae536e7af5b741a74d9f10","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","124","idan","oauthlib","wiliamsouza","2013-02-27 23:59:38","Added generate_client_id function to common","7a0783d356504867f4a4868717f6e5e7d1b90a10","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","126","idan","oauthlib","grunskis","2013-03-04 14:19:19","generate documentation from source files, part of #125","73435ef9fbe1094c504d8920882b48d8372a2916","","api.github.com","","False","[]","[{u'raw': u'#125', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'125', u'']}]","[]","[]"
"pull_request_commit","126","idan","oauthlib","grunskis","2013-03-04 14:20:07","make example code parsable to enable syntax highlighting, closes #125","b8fcf7c3a58f08439ef6b12414e062f6447aecab","","api.github.com","","False","[]","[{u'raw': u'#125', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'125', u'']}]","[]","[]"
"pull_request_commit","127","idan","oauthlib","ayanamist","2013-03-23 17:46:33","Avoid escape string twice.","0402e92a4fff7c706da2542456fae099e14a81af","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","128","idan","oauthlib","johanmeiring","2013-03-26 14:18:30","Fixes inconsistencies between docs and code","146cccff5131dc3a6f7de95faa286c4cb4ef2385","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","129","idan","oauthlib","andy-shea","2013-03-28 01:39:22","Changed token type validation to be case-insensitive.","725b5f5fb8d398d388b76eed13c9e0c3519d5139","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","129","idan","oauthlib","andy-shea","2013-03-28 04:34:19","Fixed string import clash","e750e6c9b1dc4c3f5eb7594e726b02bfc808aa7e","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","131","idan","oauthlib","johanmeiring","2013-04-02 17:05:05","Fixes further validator inconsistencies","1a900daf2e9a1ebb9852d5ab3669fdb4c0b16d2b","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","132","idan","oauthlib","johanmeiring","2013-04-03 08:57:08","Corrects two additional documentation inconsistencies","f2d2eadc6ff07fd9d8fc83d144ccc1e82b5480c2","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","132","idan","oauthlib","johanmeiring","2013-04-03 12:47:17","Fixes decorators that were throwing errors","76e8bc7eff107000849f7428e469c70801680e3f","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","132","idan","oauthlib","johanmeiring","2013-04-04 06:31:03","Changes iteritems to items for Py3 compatibility","f90a3bdb79bef5a39322c4d04c1055683ddcc15d","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","134","idan","oauthlib","loisaidasam","2013-04-16 22:13:08","fixing a few typos in the doc...","73d82b3d0361d6a17bffc19a30142ec321465c63","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","137","idan","oauthlib","taestone","2013-04-18 08:05:22","add def resource_response with decorate","07eecf938bdedbb0be93773ac482ea2672c5031d","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","140","idan","oauthlib","david@artsman.com","2013-04-26 17:45:49","Move the removal of oauth_signature and realm arguments into normalize parameters, as specified by RFC5849, section 3.4.1.3.","05f5f23389e802248c33e09b0bca6924f21fac0f","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","141","idan","oauthlib","rmasters","2013-04-28 15:03:53","Django example should use get_user_model(), rather than User as of 1.5

Django 1.5 allows apps to change the default user model - so
get_user_model() should be called rather than using User directly.","10888c6be7328f83e9d4fbe5eeae23fcebdae681","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","143","idan","oauthlib","matthewlmcclure","2013-05-02 03:40:53","Fix defect in choice of authority for signature base string

The spec <http://tools.ietf.org/html/rfc5849#section-3.4.1.2> indicates
that:

    The host and port values MUST match the content of the HTTP
    request ""Host"" header field.

Fixes https://github.com/idan/oauthlib/issues/142","0a1e428802838ea8a965f90edac144dd1f8d719a","","api.github.com","","False","[u'http://tools.ietf.org/html/rfc5849#section-3.4.1.2', u'https://github.com/idan/oauthlib/issues/142']","[{u'raw': u'https://github.com/idan/oauthlib/issues/142', u'refstyle': u'url', u'parts': [u'idan', u'oauthlib', u'142', u'']}]","[]","[]"
"pull_request_commit","143","idan","oauthlib","matthewlmcclure","2013-05-03 03:14:43","Update, comment on, and test the implementation.","a5b85002f49c5029ce7a0d73fc8576003a39237b","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","143","idan","oauthlib","matthewlmcclure","2013-05-03 04:18:26","Make normalize_base_string_uri handle scheme and path more conformantly

* only accept absolute URIs including a scheme
* use the root path if the input path is empty","4a7130d9c0c5097b2b218bafcde4667ca559111f","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","144","idan","oauthlib","matthewlmcclure","2013-05-02 21:00:07","Fix a copy-paste-o in a link to RFC 3986","536425b37b0e7360ab83d53df8ed54f7254a3a25","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","145","idan","oauthlib","stephane","2013-05-06 11:52:22","Fix Sphinx warnings in oauth_1_versus_oauth_2 documentation","869356eb396409799ae34ff6243023aafc0150b3","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","146","idan","oauthlib","stephane","2013-05-06 12:27:17","Replace 3 minus signs by an equal","d11ebfb8fc6290feb799fb2798f2d541fa95e67e","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","146","idan","oauthlib","stephane","2013-05-06 12:32:25","Fix wrong offsets in ASCII art","152457dc0c606021ca85a154fcdc8a8c33b63073","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","146","idan","oauthlib","stephane","2013-05-06 12:35:16","Fix indentation problem in list of steps","ea46de4a09b07ba9d2a53b66bcfea614c821edde","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","147","idan","oauthlib","Kroisse","2013-05-07 18:54:49","Check data with extra parameters by the right way

Length-checking asserts are replaced to the appropriate assert methods,
assertURLEqual() and assertFormBodyEqual(), introduced in
e2db7dd548dc286001e1fc9f43caef1501d2c926.","e02afa5c5ea05ccc3f851ca48e3c734a919203a3","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","148","idan","oauthlib","flippmoke","2013-05-07 21:00:54","Added a new extension for oauth2 providers that integrates with flask.

Modified the existing scopes argument for django provider so that it now will
accept a function as well as a list object. This is done so that scopes can be dynamically
set.","7b00c4d7b0eeedceb30f67ad569569a7969c4da9","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","148","idan","oauthlib","flippmoke","2013-05-07 21:06:29","Small modification so that the dynamnic scopes now will pass the requests object in django.","43887add3a7bdccfdc5af9bde43559101cd3ed02","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","148","idan","oauthlib","flippmoke","2013-05-07 21:26:23","Updated the documentation for dynamic scopes.","273d5139a880a90dc6afd658199339af8e031e6d","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","148","idan","oauthlib","flippmoke","2013-05-09 18:20:26","Fixed a small error with the flask extension.","b0b44762b1074af14db60da8b8db1ed2b4b48765","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","148","idan","oauthlib","flippmoke","2013-05-16 15:56:41","Removed the use of the flask g object from the extension, the properties can now be pulled from the OAuth2ProviderDecorator","4735da3da8542270c5f17e6ec9f7160408172f28","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","149","idan","oauthlib","stephane","2013-05-07 08:39:50","Wrap all paragraphs at 80 characters

Cosmetic but large patch.","c940f9f8b1c85fcc177dfc0c7a2705bc89506376","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","149","idan","oauthlib","stephane","2013-05-07 08:45:35","Simplification of a sentence","fe58ce9ab43d56160c0447e7f48c87cd94e1ac3a","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","149","idan","oauthlib","stephane","2013-05-07 10:06:18","Missing space in documentation","9fb3d3841fa1d3278cc2f60573c96e7fedbecd78","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","150","idan","oauthlib","Kroisse","2013-05-16 09:08:51","Fix some typo","9da6a06fd586dded554923493ded1340f2cdd22a","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","151","idan","oauthlib","stephane","2013-05-13 14:51:12","Fix swapped values in example of Django choices","94b32953e4e47bb4cfda536f0e7b9bad0437119f","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","154","idan","oauthlib","stephane","2013-05-22 15:05:02","The argument request is missing in validate_code() in examples","081ebf55c959c614fec1ff44d4be51ec49bc72c0","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","156","idan","oauthlib","stephane","2013-05-13 14:51:12","Fix swapped values in example of Django choices","2f1b979c7f732b902ec4b3f0d2551ebec9958cfa","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","156","idan","oauthlib","stephane","2013-05-22 15:05:02","The argument request is missing in validate_code() in examples","94a25fb31d21096603695e0a68c75aa5a726f117","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","156","idan","oauthlib","stephane","2013-05-22 16:05:15","Fix documentation warnings","3fd2352a7c212190328d6532d0f99be8c9dbc6ad","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","156","idan","oauthlib","stephane","2013-05-22 16:05:28","Missing required arguments in authorize()","4ac3b4b37f7f46e7941e3738029383635dbdfcce","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","156","idan","oauthlib","stephane","2013-05-23 13:28:45","Wrap and trailing whitespaces in README.rst","83e2bf59db56f1fc5ce25c8fad615e7bc7369323","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","156","idan","oauthlib","stephane","2013-05-23 14:28:33","Fix extracting of scope values from POST

Many inputs with same name are stored in a list.","b15ed5089c957a4d17d3833214b00df6cd3ca251","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","157","idan","oauthlib","stephane","2013-05-22 15:05:02","The argument request is missing in validate_code() in examples","f6304e22ae3f8e4a3f9431a6e4455c90b4e2de0a","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","157","idan","oauthlib","stephane","2013-05-22 16:05:15","Fix documentation warnings","b498847d056637b405d349ea98681249aa007737","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","157","idan","oauthlib","stephane","2013-05-22 16:05:28","Missing required arguments in authorize()","fc2cd9a64580d00d49d309296f8691ed0c817ace","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","157","idan","oauthlib","stephane","2013-05-23 13:28:45","Wrap and trailing whitespaces in README.rst","2361afa930088ada30197d1817e0d14a8b8d05fc","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","157","idan","oauthlib","stephane","2013-05-23 14:28:33","Fix extracting of scope values from POST

Many inputs with same name are stored in a list.","7adc247d399cd3d90d6692a4f82cb170b2bdc012","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","158","idan","oauthlib","lepture","2013-05-24 13:19:29","add more python version in travis and tox. #73","6c0c76c98e740b62b9dd55cf14a263a35b9f1909","","api.github.com","","False","[]","[{u'raw': u'#73', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'73', u'']}]","[]","[]"
"pull_request_commit","158","idan","oauthlib","lepture","2013-05-24 13:27:46","remove unittest2, since it brokes on py3","86f31769adf3d4d5b896cf4dd561ab3737533d6c","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","158","idan","oauthlib","lepture","2013-05-24 13:36:09","only install unittest2 on python 2.6 and 2.7","792ec98b20fb176e348bd059d42b9b663859aac6","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","158","idan","oauthlib","lepture","2013-05-24 13:43:43","add coveralls","122d1a6c4b6e34f3cec447ec8b2577a3f627cdfd","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","160","idan","oauthlib","dahlia","2013-05-24 13:28:32","Add optional expires_in parameter to BearerToken

The expires_in is still 3600 by default.","14fffb8dc1c6a3fabf35bc74c3032abcae402a67","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","160","idan","oauthlib","dahlia","2013-05-24 13:46:25","Add token_expires_in opt to all-in-one endpoints

It still works as it has worked until use the option.","a428b2e64af8c2b48e6ad413b1f0c60a1e0708c9","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","161","idan","oauthlib","dasevilla","2013-05-25 20:50:58","Add base OAuth2 Client to documentation","b650d785223409d6ba04e906eb8c22c9efb788bd","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","161","idan","oauthlib","dasevilla","2013-05-25 20:51:44","Fix formatting in OAuth 2 Client docs","d1e2b1df73eaeebafaab0b03262e3e1375f81749","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","161","idan","oauthlib","dasevilla","2013-05-27 16:47:42","Use HttpLexer","8931f3ad93fa051ca81cf53dd1b1c8f7169c8142","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","163","idan","oauthlib","lepture","2013-05-28 09:07:51","clean whitespace, fix blank lines according to pep8","52d26568d1221baab3a4d759819d43f3cd10f9b1","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","164","idan","oauthlib","synasius","2013-05-28 21:18:22","RedirectClientError base class that add redirect_uri on init","b981ee7b4a45b5613fe35ed811c3ba8a415827aa","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","164","idan","oauthlib","synasius","2013-05-28 21:19:03","Add new redirect_uri on error raise where needed","83f18d7dd7d6000217834b73313a0c623aef4a00","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","164","idan","oauthlib","synasius","2013-05-29 11:00:39","Fixed docstrings","746d5949b649af88a5d3ac250141e60a5403caa1","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","165","idan","oauthlib","lepture","2013-05-29 12:18:56","coverall only cover the package, not the tests","77a4bf2fb595e79bb24d8173c69b8886e852fe33","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","165","idan","oauthlib","lepture","2013-05-29 12:26:20","it should work this way","c6c300fa33d94f875527acf52d08c05f593a3146","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","165","idan","oauthlib","lepture","2013-05-29 12:33:22","add badge for coveralls, and fix travis badge","0b15326c8314691c198a016f4566f4c0ccaf8994","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","166","idan","oauthlib","synasius","2013-05-29 12:05:57","Add request parameters to error object","4cdceb0bb6a36fb1387c400db6dd24b442535c3c","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","166","idan","oauthlib","synasius","2013-05-29 11:00:39","Fixed docstrings","20eb31952ecf858cf7ee395fc7749419f919f3c2","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","166","idan","oauthlib","synasius","2013-05-29 12:29:50","Add request param on errors raise where request is available","a9299988ba65287d962e5d6d67eb27ea39af2991","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","169","idan","oauthlib","dasevilla","2013-05-31 02:47:35","Organize documentation into directories","fa0dbbb3b127eec9dbc86208d8fbde1d903f13ea","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","170","idan","oauthlib","lepture","2013-05-31 03:18:31","debug support for prepare_grant_uri","55679cadef0c784317bc571b3a2d593ad6a3687a","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","170","idan","oauthlib","lepture","2013-05-31 03:18:57","add myself in authors","692d3d348f5ab85cc202062e0065e3143e4e62f2","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","170","idan","oauthlib","lepture","2013-05-31 09:15:56","use is_secure_transport to check uri","803736c30ed4a426d83daa21216c24163db5e7c6","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","170","idan","oauthlib","lepture","2013-05-31 09:22:54","add test case for is_secure_transport","00f5de52a8fb944c968213501ccdf1bbc9e751d0","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","171","idan","oauthlib","lepture","2013-05-31 09:11:00","docstring fix","529fe69f995c8e5ba98e89dce624f2c1def9737a","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","172","idan","oauthlib","lepture","2013-05-31 11:59:09","another debug-mode. #170","13d78662ee023b201d4c954c51b2e3071aa7026e","","api.github.com","","False","[]","[{u'raw': u'#170', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'170', u'']}]","[]","[]"
"pull_request_commit","172","idan","oauthlib","lepture","2013-05-31 13:48:17","move uri.lower() to is_secure_transport","39e43961b98f79a55948db0710c8e2403408d12a","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","173","idan","oauthlib","dasevilla","2013-05-31 16:44:35","Update AUTHORS","87c9a49ec3ad4793c9ef89a5216f363bf56752e0","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","179","idan","oauthlib","tomchristie","2013-06-17 09:29:40","Updated README with more prominent package note.  Closes #178.","d78cef802b52be3fa07800a88af33c5bba3707ca","","api.github.com","","False","[]","[{u'raw': u'#178', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'178', u'']}]","[]","[]"
"pull_request_commit","180","idan","oauthlib","tomchristie","2013-06-17 13:43:33","Typo. `include` -> `includes`","6c3c6d86cd8d45911e7a5317bd33ce15c69f3e25","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","181","idan","oauthlib","ib-lundgren","2013-06-18 20:21:59","Remove old OAuth 1 provider and make way for the new one. #95.","2261e99ae65fafd03aed337bf100faa6942108e3","","api.github.com","","False","[]","[{u'raw': u'#95', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'95', u'']}]","[]","[]"
"pull_request_commit","181","idan","oauthlib","ib-lundgren","2013-06-18 20:23:05","Base endpoint for parameter checking and signature verification. #95","4d627ce3e0f1ebe346052b8dcae92d04a42af105","","api.github.com","","False","[]","[{u'raw': u'#95', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'95', u'']}]","[]","[]"
"pull_request_commit","181","idan","oauthlib","ib-lundgren","2013-06-18 20:23:33","Request token endpoint. #95","012deaf43189fb94a5b7a392ccfb6c15acb03d1e","","api.github.com","","False","[]","[{u'raw': u'#95', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'95', u'']}]","[]","[]"
"pull_request_commit","181","idan","oauthlib","ib-lundgren","2013-06-18 20:23:57","Authorization endpoint. #95","6a634e0fe9abf14058e56749ecfa27db1c6b1732","","api.github.com","","False","[]","[{u'raw': u'#95', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'95', u'']}]","[]","[]"
"pull_request_commit","181","idan","oauthlib","ib-lundgren","2013-06-18 20:27:47","Access token endpoint. #95","73a618068c70dc7698960f55c2ed5fc70074fde9","","api.github.com","","False","[]","[{u'raw': u'#95', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'95', u'']}]","[]","[]"
"pull_request_commit","181","idan","oauthlib","ib-lundgren","2013-06-18 20:28:15","Resource token endpoint. #95","1a972155fe1e678f44e08e7a355e87160d789160","","api.github.com","","False","[]","[{u'raw': u'#95', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'95', u'']}]","[]","[]"
"pull_request_commit","181","idan","oauthlib","ib-lundgren","2013-06-18 20:28:44","OAuth 1 error definitions.","f6386cd202de43b1881d81a2595565c171ec823e","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","181","idan","oauthlib","ib-lundgren","2013-06-18 20:29:36","Preconfigured all in one endpoint - WebApplicationServer. #95","2327c50b5f73d2e769ddcb9d2f98d3657db013f8","","api.github.com","","False","[]","[{u'raw': u'#95', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'95', u'']}]","[]","[]"
"pull_request_commit","181","idan","oauthlib","ib-lundgren","2013-06-18 20:30:13","Refactor old Server into a base request validator. #95","1c900c97d6f713244430856404b7ca7163f9c682","","api.github.com","","False","[]","[{u'raw': u'#95', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'95', u'']}]","[]","[]"
"pull_request_commit","181","idan","oauthlib","ib-lundgren","2013-06-18 20:31:08","Request validator tests.","b6c7fe3b20a73192a75dd7fbc4b184d88366dbb4","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","181","idan","oauthlib","ib-lundgren","2013-06-18 20:31:34","Convenience imports for the new OAuth 1 provider.","1571f0bbb3a22bdc70172246ac0a54793b538464","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","181","idan","oauthlib","ib-lundgren","2013-06-18 20:32:29","Request validator tests.","8ba2b3a6c7b5ba94eae93187a0f4ac6dbe80d22f","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","181","idan","oauthlib","ib-lundgren","2013-06-18 20:33:25","Updated documentation for OAuth 1 provider. #95","ded77d72addaa46d718d84643616c8bba5fab43d","","api.github.com","","False","[]","[{u'raw': u'#95', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'95', u'']}]","[]","[]"
"pull_request_commit","181","idan","oauthlib","ib-lundgren","2013-06-20 09:58:07","Endpoint source documentation.","ce861400b97e884b6b9e326d4708e30d045fe2f2","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","183","idan","oauthlib","clintecker","2013-06-20 20:20:06","validate scopes","16b456d4ae0aa06755af2482e8cf8bbe361d909e","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","183","idan","oauthlib","clintecker","2013-06-20 22:06:01","get scopes in a better way","fcf61775934e60fda9f60a9c456eacf2d6024f38","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","184","idan","oauthlib","clintecker","2013-06-21 14:57:48","changing server example to reflect changes to request validator in 035d46c73ab7feb4719e4642dafc9bb21aa8bd2c","2f42009a5e6a4893c4272b397b1456a225e74d5f","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","186","idan","oauthlib","sean-dev@farley.org","2013-06-28 14:56:30","Improve resilience to bad authorization headers

Catch IndexError when calling parse_keqv_list in
parse_authorization_header.  parse_keqv_list could raise an IndexError
exception if the header has an incomplete key=value pair.  Some examples
of this are a broken OAuth header (e.g., OAuth oauth_nonce=) and client
code that attempts to use IWA for authentication (i.e., Negotiate
b2F1dGhsaWI=).  IWA uses Base64 which may end with an ""="".

Add unit tests for bad authorization headers raising ValueError.","349d9f398afd58cc993f207c4035b85e2bf86b26","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","186","idan","oauthlib","sean-dev@farley.org","2013-07-05 16:59:37","Validate authentication header prior to parsing

Before attempting to parse the authentication header as if it OAuth,
raise ValueError if the header does not even begin with ""OAuth "".  Also,
make the check case insensitive in accordance with RFC 5849 section
3.5.1.

References #186.","a950f0880fa77fd80020769a5ff3f7e52b7a8b89","","api.github.com","","False","[]","[{u'raw': u'#186', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'186', u'']}]","[]","[]"
"pull_request_commit","186","idan","oauthlib","sean-dev@farley.org","2013-07-05 17:20:02","Use case-insensitive removal of scheme from header","adb64a0835aeb5e1cbf49952cd25a2510dae70bb","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","187","idan","oauthlib","Ryan-K","2013-07-03 02:36:39","Check to ensure that the requested realm is actually the required realm","1daed280c95352b50094f706b48db352db9e89a1","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","188","idan","oauthlib","lepture","2013-07-03 06:17:45","fix keyword error for required_realm","b4129293240fe22fd8e9453c59d802c3744bf508","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","189","idan","oauthlib","lepture","2013-07-03 07:08:18","use realms as the list container, realm as the string container","73ed8f4dd3c496ce06bf691627f48988c2e62b3e","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","189","idan","oauthlib","lepture","2013-07-03 07:15:17","fix test cases for realms","0b0662708d4b27df01e78d076f7f7a482c3c5289","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","191","idan","oauthlib","masci@evonove.it","2013-07-08 22:00:37","add comma to the set of safe characters in urls","c8bf90d7027966e24ebfb40188b0856cd5d7deaf","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","193","idan","oauthlib","lepture","2013-07-09 15:38:32","style fix for setup.py. add classifiers","4502cd9fce0575b02424e58958eb424315acac15","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","195","idan","oauthlib","masci@evonove.it","2013-07-12 08:56:28","fix scopes normalization in validate_scopes method","d6b3c2e28dd71749d07b0e6a06055eeca5e59364","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","196","idan","oauthlib","kdazzle","2013-07-16 22:27:31","Updated the decorator example of server.rst to match the Request object","dd63eeca35a522a5b894b95ace0bd88c98fec254","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","197","idan","oauthlib","kdazzle","2013-07-19 00:00:13","Update authorization.py - use the _create_request method and change request.oauth_token attribute to resource_owner_key

The Request() constructor doesn't give the request.oauth_token attribute that the create_authorization_response relies on. The _create_request() method doesn't either, but it gives something equivalent.","967b6c425a7b9572753bf451e1e4b5fe535c2566","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","197","idan","oauthlib","kyle@gumstix.com","2013-07-19 21:51:21","Made sure all endpoints used the self._create_request() method and referred to request.resource_owner_key instead of request.oauth_token","b1a902c822c869da8a465e4fe472bd29075fc7a9","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","197","idan","oauthlib","kyle@gumstix.com","2013-07-22 20:24:26","Changed access_token.py - validate_access_token_request passes the resource owner key as an access token, which doesn't yet exist, instead of a request token","a5799fd8671e5a1c2922dcc434c886fc370b46c1","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","197","idan","oauthlib","kyle@gumstix.com","2013-07-23 16:28:34","Changed exception message in authorization.py; changed a validation parameter in resource.py from request_token to access_token; updated authors","29406ee09b7d1f9d4c4967492dbce9cb22bcc1cf","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","198","idan","oauthlib","kumy","2013-07-24 13:51:05","Add star to the set of safe characters in urls","1b40aa17f9ff3db1df05b97725a8d4043b0b261e","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","199","idan","oauthlib","squirly","2013-07-26 18:13:21","The authorization endpoint now returns a 200 on ""oob"" oauth_callbacks.","c4255477329a48bc01a4402c11abdb4bc178c235","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","199","idan","oauthlib","squirly","2013-07-26 18:35:55","Updated flask server example.","513ec6afbb6ab663fd1c9578f4a64fc734d7cb68","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","199","idan","oauthlib","squirly","2013-07-26 18:59:50","Added tests.","06a93d1e87ed950138c07ba036554d0d0ddfb87f","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","199","idan","oauthlib","squirly","2013-07-26 19:07:32","Fix for python3.","8470e680262a0ed84b7858d2184d310c7b958e46","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","199","idan","oauthlib","squirly","2013-08-01 00:02:56","Fixed flask server example.","6efc8c04e46d5a731962e2fae9b9599097c5a2d4","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","199","idan","oauthlib","squirly","2013-08-01 18:11:10","#199 Proposed API changes for endpoints.","c4a6c31ba9748947462e8e31e106215cca1d3cc9","","api.github.com","","False","[]","[{u'raw': u'#199', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'199', u'']}]","[]","[]"
"pull_request_commit","199","idan","oauthlib","squirly","2013-08-01 19:32:53","Fixed error in example, added myself to authors.","59483c6dfbd260a4f18815edebc0bd3e4f58152d","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","199","idan","oauthlib","squirly","2013-08-01 23:58:57","OAuth1 endpoint documentation cleanup.","cddd41f82acbbbedd856733d2a73ec14f292d5a7","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","199","idan","oauthlib","squirly","2013-08-02 00:05:38","Document possibility and handling  of oob callback in get_redirect_uri.","517e01f5db428fe4c3e56119faad1760a8841c9f","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","201","idan","oauthlib","squirly","2013-08-01 22:29:58","#200 First attempt at API cleanup to match OAuth1.","f538ea8f87947d7c1543a8c0fcea5b0242a12ab6","","api.github.com","","False","[]","[{u'raw': u'#200', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'200', u'']}]","[]","[]"
"pull_request_commit","202","idan","oauthlib","squirly","2013-08-02 18:38:01","Updated documentation to help users follow RFC5849-2.1. Temporary credentials should not be reused.","1462d7d6c41acd8c5f38558e2e12412eba2efd60","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","203","idan","oauthlib","kdazzle","2013-08-02 18:52:34","Updated request_validator documentation to include credential-saving methods

There are methods in request_validator that must be implemented and that aren't listed in the class's documentation. Also fixed a couple of minor documentation typos.","dbba898287ac423d84e018842193d13791f7c62f","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","204","idan","oauthlib","ocfuu@users.noreply.github.com","2013-08-20 07:42:59","Fixed single typo in documentation

privilegues -> privileges","a0b46daa7ce182fa46321e3576a02b80087788cf","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","205","idan","oauthlib","lepture","2013-08-29 05:40:30","Remove travis install scripts","df1eec992a9c83dec32ea7da9dbf979abee8c308","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","206","idan","oauthlib","lepture","2013-09-16 08:22:00","The ability to vary expires_in per request.","27b480ba552adb256d5ee1338da981bb3a60dc62","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","208","idan","oauthlib","masci@evonove.it","2013-09-16 22:25:10","added client_authentication_required() method to the validator","dff8e6d170f8028c9169bde1d208c1cccbea5aae","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","208","idan","oauthlib","masci@evonove.it","2013-09-16 22:31:25","ask validator if client has to be authenticated","07326c9baad1dcc631157f8edfa508066aee6d23","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","208","idan","oauthlib","masci@evonove.it","2013-09-18 13:31:41","client authentication needed by default","4ea5db5724bf71d84d27f4c68f177129bac1c637","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","214","idan","oauthlib","masci@evonove.it","2013-09-20 23:05:31","fixed call to client_authentication_required","c38dab51aec039ac3a89778233c190776b5d7e8c","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","214","idan","oauthlib","masci@evonove.it","2013-09-20 23:06:02","added test involving client_authentication_required method","012fbbebcdafa28340ecaf5addb5c1b9da30057b","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","214","idan","oauthlib","masci@evonove.it","2013-09-20 23:13:20","fixed operator precedence in duplicate_params property","939b05f185958723f833dcbc707a066bf3359c7e","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","214","idan","oauthlib","masci@evonove.it","2013-09-21 14:35:41","added myself to the authors list","9f44b81a7ff4456bc9698f6187d0f128051364b6","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","214","idan","oauthlib","masci@evonove.it","2013-09-22 09:27:30","broke up method into different tests, fixed import style","e94439bf0f327d2b434ae479a296323e38bc2435","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","214","idan","oauthlib","masci@evonove.it","2013-09-22 13:57:16","fixed and extended tests for validate_token_request method","c0dc977de73573ca0c286b05da34b8e525467254","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","216","idan","oauthlib","aleksandr@butchershopcreative.com","2013-10-10 16:21:02","Set headers on client credentials access token response","5a85227295dbd7e23138acd921cc058206bb062c","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","217","idan","oauthlib","lepture","2013-10-12 13:28:07","JSON content type has no charset.","23d6cb819dae4f2f7a1b23769a7eec5679a7c311","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","217","idan","oauthlib","lepture","2013-10-12 13:34:52","Fix all application/json mimetypes.","274b899af69082656c8ba5f755d25f264b88eb01","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","218","idan","oauthlib","edevil","2013-10-28 17:52:51","Include the request object in the returned dict, it can be used to cache information that will be used later.","5b135340a51396124cb51cd246b0a0e598852bb0","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","219","idan","oauthlib","edevil","2013-10-29 16:43:54","Correct interface of RequestValidator.confirm_redirect_uri() to make it consistent with the call in AuthorizationCodeGrant.validate_token_request().","3023c2b9bc17c556348a8602b7e82c52da1ee36d","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","222","idan","oauthlib","lepture","2013-11-04 03:24:15","Add meta info in oauthlib module","1846ebff5c71a8c3bb0c9cccd29460f656f5a21b","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","222","idan","oauthlib","lepture","2013-11-04 03:24:51","Add maintainer info and get version from oauthlib module.","d1ad84e978192a8d73faf15ef6963c5cffba60bc","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","223","idan","oauthlib","wrr","2013-11-05 14:06:52","Fix test method name conflict.

Without the fix only a single test_invalid_scope method is run.","c4c5a480485a4bc39149c62ff1bc289e82542cda","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","224","idan","oauthlib","wrr","2013-11-05 15:34:47","is_within_original_scope method for refresh token grant (Issue #220)","7d4f5ce783206bce5eade09c45cca81c75b34cf1","","api.github.com","","False","[]","[{u'raw': u'#220', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'220', u'']}]","[]","[]"
"pull_request_commit","225","idan","oauthlib","wrr","2013-11-12 10:32:15","Fix typo (Issue #224).","8671b4bf6bfb4c6e457d97a8d0b3ad7f638d75e1","","api.github.com","","False","[]","[{u'raw': u'#224', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'224', u'']}]","[]","[]"
"pull_request_commit","229","idan","oauthlib","TkTech","2013-12-10 19:06:17","sign_rsa_sha1 no longer requires pycrypto (tests pass)","ffd0505db80b0a671b013ab4bd84780591c065ad","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","229","idan","oauthlib","TkTech","2013-12-10 19:58:02","Swap pycrypto for tlslite in setup.py","0def5967c3eb5f51fbb159742ea95e19f5330b2d","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","229","idan","oauthlib","TkTech","2013-12-10 20:00:18","Add tlslite to .travis.yml (Whoops!)","87578ec71620be359fb1bdb7fbed8659d1ce3087","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","230","idan","oauthlib","majidfn","2013-12-23 20:21:41","Just a Typo in the headers

Instead of the Content-Type it was mentioned Authorization.","1ae5fd02be7683c2121a37ee120b44fbe9aa86d0","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","231","idan","oauthlib","masci","2014-01-19 22:58:01","added tests for content type checking","7a775552f546eae024027a3521aadaa01783f973","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","231","idan","oauthlib","masci","2014-01-19 22:58:24","return application/json content type in case of error","200055490ad0dae5f5618df0f090cbaa08d844c9","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","232","idan","oauthlib","diox","2014-02-11 16:56:00","Fix docstrings to reflect the actual returned value of validate_* methods","5bb609ee0118fadb9fad484ace924761f9e1a30c","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","233","idan","oauthlib","kjoconnor","2014-02-12 21:01:08","Fixing some typos","e590d27c2d48a02afe90688aab783d2fe587f62e","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","236","idan","oauthlib","jturmel","2014-03-17 20:53:27","Add crypto token capability

* Add a method to generate crypto tokens for use as Bearer tokens
* Add a method to verify an incoming crypto token and unpack the header and
  claims
* Uses the JWT library

This is not JWT token support, merely a way to generate Bearer tokens that
won't have to be stored in a database but can self-validate and store
additional information that you see fit.","f4d89697bd4d021ac9255e2c7ee6d4befa10c829","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","236","idan","oauthlib","jturmel","2014-03-17 20:59:59","Fixing requirements in setup.py","1894e0d2151480ed00e83125e04d33b3542c13bc","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","236","idan","oauthlib","jturmel","2014-03-17 21:05:30","Add python-jwt to .travis.yml","ce28b69bd650e75373eff80e25d00ea527258e94","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","236","idan","oauthlib","jturmel","2014-03-17 21:32:15","Switch to PyJWT which is Python 3 compliant","d18ec996903662c636a76aa5cf71d4b4386cb66e","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","237","idan","oauthlib","jturmel","2014-03-17 20:53:27","Add crypto token capability

* Add a method to generate crypto tokens for use as Bearer tokens
* Add a method to verify an incoming crypto token and unpack the header and
  claims
* Uses the PyJWT library

This is not JWT token support, merely a way to generate Bearer tokens that
won't have to be stored in a database but can self-validate and store
additional information that you see fit.","e41bee876c32d11070cb6f4686e41fd78b2c5168","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","237","idan","oauthlib","jturmel","2014-03-18 03:52:54","Use the to_unicode helper","864e6f66cebccbc93d5edeca2d5e1128f1b60181","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","237","idan","oauthlib","jturmel","2014-03-18 17:33:44","Change how arbitrary claims are set on crypto token","e3482d8b3db132bed364e5d25db3553c04ef6522","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","237","idan","oauthlib","jturmel","2014-03-19 19:32:14","Require pycrypto and pyjwt","ab4fe12f1707fc070b0fffec17a4fc8005ef990a","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","237","idan","oauthlib","jturmel","2014-03-23 04:05:53","Move setup.py requirements

* Moved requires for cryptotoken changes so that you don't have to install
  the dependencies if you aren't going to use cryptotokens","14f687b7355df142ea76145dea53bcbe7d012fdc","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","237","idan","oauthlib","jturmel","2014-03-30 04:33:26","Changes per PR comments

* Rename methods from crypto to signed
* Since generating a signed token to be used as a refresh token could be a bit
  overkill in terms of length/storage, allow setting of refresh token generator
  separately, or it defaults to whatever the other token generator was set to
* Simplify tests per PR comments","5d0fc1182f6d9826764cc43ade99bc5e5a81c711","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","237","idan","oauthlib","jturmel","2014-03-30 21:49:38","Add pyjwt to tox.ini","00790328f3c6e28f49d193411d344703ad376ce7","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","239","idan","oauthlib","al-the-x","2014-03-25 21:52:35","Enforcing a common interface for `sign_*()` methods...

In order to support adding custom signature methods, the current signature methods -- HMAC-SHA1, RSA-SHA1, and PLAINTEXT -- need to be implemented with a common interface. In a previous attempt, I tried changing those functions directly, but there are too many dependencies on their current signatures. By shimming them instead with these thin wrappers, I can provide the common interface I need without breaking everything else in the library.","ea106971af90556e5c682e0a367314111f7f0162","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","239","idan","oauthlib","al-the-x","2014-03-25 21:55:20","Allowing custom signature methods to be registered and used...

The ""PIZZA"" signature method signs all requests with the string ""PIZZA"" as a trivial example of a custom signing method.","1fa7cf1823faa477b88e6b62e80a4e13dbd48809","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","240","idan","oauthlib","asteinlein","2014-03-27 14:23:03","Support for scopes being arbitrary objects

Improves list_to_scope() and scope_to_list() to deal with objects, by
calling str()/unicode() on elements in the lists instead of assuming
they are string/unicode objects.","3d8db358c6d1fdfd21ebb1f074205c7e3e5c267c","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","243","idan","oauthlib","jturmel","2014-04-13 01:44:23","Updated AUTHORS with Josh Turmel

* Coincides with signed token change that was accepted recently","f4c5e8b00615bf51e94225f9a54936845dae2e19","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","244","idan","oauthlib","x746e","2014-04-15 10:17:11","Fixed a typo.","e658be77687ec7bb0b5a230f16c8595893c822ae","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","244","idan","oauthlib","x746e","2014-04-15 10:17:45","Unshadowed a test.

There were two test methods named `test_create_authorization_response`
in `tests.oauth1.rfc5849.endpoints.test_authorization.ResourceEndpointTest`,
so second one was shadowing the first.

Also renamed the test case.","235a1909b990c1e7bc82846a6efccde67b638c53","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","245","idan","oauthlib","x746e","2014-04-15 11:27:59","Move docstrings above `from __future__` imports.

Docstrings are considered as such by python only if they are the first
statement in the file/block.  Even if they are preceded by a
`from __future__` import they are interpreted as just a string.","0bd355c057d99e2df57483519e49198c086c38c1","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","246","idan","oauthlib","x746e","2014-04-15 13:11:34","Removed mention of django-oauth-toolkit from oauth1 server docs.

django-oauth-tools doesn't seem to support oauth1.","f46f5063567a8152a6fbb851a0f809f83157ba19","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","247","idan","oauthlib","asteinlein","2014-04-30 16:51:43","Use 401 status code for some OAuth 2 errors","615b8136f3488319222a43ca55d40854d6cd8fd1","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","249","idan","oauthlib","dasevilla","2014-05-09 19:02:37","Use a more specific env variable for insecure transports","196450140fcff0692eb9c31e85f79df017ff2316","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","249","idan","oauthlib","dasevilla","2014-05-16 00:22:07","Use OAUTHLIB_INSECURE_TRANSPORT","4ef9e33d85ef85998ea2a4d211569056058524cf","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","250","idan","oauthlib","swistakm","2014-05-22 08:48:09","docs: add missing method mentions in oauth1.rfc5849.request_validator.RequestValidator docstring","91b07ebd0369828da129f1626b6614b2579cba6c","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","250","idan","oauthlib","swistakm","2014-05-22 08:51:56","docs: add missing method usage info in oauth1 RequestValidator.get_realms() docstring","63d24136625d430a91778c521d5d5a90ba612fed","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","250","idan","oauthlib","swistakm","2014-05-22 09:52:58","docs: add more verbose docstring in oauth1 RequestValidator methods

- add link to Section 2.3 RFC 5849 that explains why there is a need for
  token invalidation and give a clue how it can be invalidated (refs #202)
- add example implementation of validate_realms
- explain why `verify_request_token` does not double functionality of
  `validate_request_token` (refs #185)","b1990d292e9d5ba979aa904b1ad9293d1c46cf3c","","api.github.com","","False","[]","[{u'raw': u'#185', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'185', u'']}, {u'raw': u'#202', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'202', u'']}]","[]","[]"
"pull_request_commit","251","idan","oauthlib","tuannh99","2014-05-29 16:48:01","Accept 'Content-Type: application/x-www-form-urlencoded;charset=utf8' also","fd3e25b267f0e3cc239c2bc6dee77dfaf957d09a","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","252","idan","oauthlib","jonas@gumstix.com","2014-06-09 17:21:42","Copy variables dict before scrubbing secrets.

This dict is the actual variables dict. Changing its members will directly
change the values of the current object. The __repr__ function overwrites both
secrets with stars.","a05075dc4f316a600cd1a2374f783ddb0aaf2a0e","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","255","idan","oauthlib","frewsxcv","2014-06-20 16:29:34","Enable automated testing with Python 3.4","2a0a2884e8dbc4ac75ff6584b5fba87369c67f31","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","258","idan","oauthlib","mdxs","2014-07-10 14:44:51","Show support for Python 3.4","62604da4e5d728bf2ccc4e9e470f70a3aa180a88","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","259","idan","oauthlib","verbit","2014-08-04 01:49:03","enable convinient import for oauth1 errors","86173b4d4704cf67f16717350f5b95a808cf18ec","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","260","idan","oauthlib","ryanhiebert","2014-08-24 21:55:42","Allow unescaped @ in urlencoded parameters

At least Internet Explorer does not url encode the @ symbol, such as
when in an email address, in it's form uploading from HTML. Since the @
symbol doesn't have any special meaning in the querystring of a URL, not
encoding it shouldn't present any problems. Thus, we should add @ to the
list of allowed characters in form urlencoded data.","e833e0cb5fa8bd789db8ef60e8cea199af9ea0e7","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","262","idan","oauthlib","ryanhiebert","2014-09-04 03:57:14","Create Signature Only OAuth1 Endpoint

In certain cases a provider may wish to verify the signature of an
oauth request without doing anything more with it. Learning Tools
Interoperability (LTI), for example, uses ""0-legged OAuth"" for it's
signature verification process.

http://www.imsglobal.org/lti/
http://andyfmiller.com/2013/02/10/does-lti-use-oauth/

This adds a new ``SignatureOnlyEndpoint`` that implements only the
client validation and signature verification, and leaves off the other
parts that would need to be validated.","988d08284989226577d30ae07550278dbf50d751","","api.github.com","","False","[u'http://andyfmiller.com/2013/02/10/does-lti-use-oauth/', u'http://www.imsglobal.org/lti/']","[]","[]","[]"
"pull_request_commit","263","idan","oauthlib","singingwolfboy","2014-09-12 02:49:31","Make scope change warning more informative","55d89cdcfd311add19d15aad975c949c1f3d8cf7","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","265","idan","oauthlib","singingwolfboy","2014-09-15 23:15:19","Turn off raising warnings via parameter

Because warnings.catch_warnings() is not thread-safe.
https://docs.python.org/3/library/warnings.html#warnings.catch_warnings","2323609dc88ff4ea3add9d6e377b7aaf579a3ec0","","api.github.com","","False","[u'https://docs.python.org/3/library/warnings.html#warnings.catch_warnings']","[]","[]","[]"
"pull_request_commit","266","idan","oauthlib","singingwolfboy","2014-09-16 02:23:51","Add links to Flask-Dance","4aa81a592e92c4b33add235db308b28adfa4b9fe","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","268","idan","oauthlib","whit537","2014-09-17 14:26:29","Failing test for URL-encoded access tokens

Facebook doesn't use JSON, see https://github.com/idan/oauthlib/issues/267.","abf6bd5e9c413ad7f538f86604c0d1c29494882e","","api.github.com","","False","[u'https://github.com/idan/oauthlib/issues/267.']","[{u'raw': u'https://github.com/idan/oauthlib/issues/267', u'refstyle': u'url', u'parts': [u'idan', u'oauthlib', u'267', u'']}]","[]","[]"
"pull_request_commit","268","idan","oauthlib","whit537","2014-09-17 14:33:55","Implement URL-encoding fallback for access tokens","0a21ddfcdd0bfc108d7225d3074d58141259f519","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","268","idan","oauthlib","whit537","2014-09-17 15:02:13","Failing test for expires as alias for expires_in","d2937b275f23d7cb9c555c61ceb69fbebeace2ae","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","268","idan","oauthlib","whit537","2014-09-17 15:10:03","Support expires as an alias for expires_in","0d87ea236379023aa646a91df21e52c1c674dd6a","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","268","idan","oauthlib","whit537","2014-09-17 16:07:17","Failing test for token_type relaxation","3afd5cd84ee21312b0081850f7f4895c95bb121d","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","268","idan","oauthlib","whit537","2014-09-17 16:19:39","Relax token_type checking","0544857516745f4ba6c9829702253e17c9f77458","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","268","idan","oauthlib","whit537","2014-09-22 14:07:03","Add documentation of OAUTHLIB_STRICT_TOKEN_TYPE","c49028af26b89ebdc08a72d3cebbf553fa0ddef6","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","269","idan","oauthlib","singingwolfboy","2014-09-18 14:57:46","Set OAUTHLIB_IGNORE_SCOPE_CHANGE envvar to disable raising a warning for scope change","3c8261bec13e15b3845f7dd1e87e46b329329d6f","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","270","idan","oauthlib","singingwolfboy","2014-09-18 14:57:46","Use warnings.warn() to warn for scope change

This does not raise an exception and disrupt the call stack","155cbdef3226462a6bc434e180e736b6918b947e","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","271","idan","oauthlib","ib-lundgren","2014-09-24 16:32:39","Auto pep8 changes throughout the code base.","2d7dab66b589159712f96bd0086f45ae3c32216d","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","273","idan","oauthlib","garciasolero","2014-09-28 10:36:30","Fix management of rfc6749 errors","5835f16de105f77f4c168d75dc9b43afdb12eeba","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","273","idan","oauthlib","garciasolero","2014-09-28 10:36:57","Update AUTHORS with Fabio","33bc56237ce13ccd40100dd2380aaa4740d82ad5","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","273","idan","oauthlib","garciasolero","2014-09-29 11:10:54","Fix missing responseType error","1f44b5c061762805439ebd9762ad7cd0c526c13b","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","273","idan","oauthlib","garciasolero","2014-09-29 14:13:50","Remove invalid_client_id error","826865faab424d0d2d65996945b0adfcab455254","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","273","idan","oauthlib","garciasolero","2014-11-14 07:48:27","Merge branch 'master' of https://github.com/idan/oauthlib into develop

Conflicts:
	AUTHORS
	oauthlib/oauth2/rfc6749/grant_types/authorization_code.py
	oauthlib/oauth2/rfc6749/grant_types/implicit.py","37d8855af4208998e62284826ee1251384f83531","","api.github.com","","False","[u'https://github.com/idan/oauthlib']","[]","[]","[]"
"pull_request_commit","273","idan","oauthlib","garciasolero","2015-07-06 08:12:31","Merge branch 'master' of https://github.com/idan/oauthlib into develop

Conflicts:
	oauthlib/oauth2/rfc6749/grant_types/authorization_code.py
	oauthlib/oauth2/rfc6749/grant_types/implicit.py","3babc2598e7e6df99b3017d8272d48c1798d4bbe","","api.github.com","","False","[u'https://github.com/idan/oauthlib']","[]","[]","[]"
"pull_request_commit","273","idan","oauthlib","garciasolero","2014-09-28 10:36:30","Fix management of rfc6749 errors","def33630661d80f30d3db5c9a32ac540d744e0d6","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","273","idan","oauthlib","garciasolero","2015-07-06 09:08:49","Merge branch 'develop' of https://github.com/garciasolero/oauthlib into develop","3d63b570d9ef132142dd3590e76d625b05fcb50c","","api.github.com","","False","[u'https://github.com/garciasolero/oauthlib']","[]","[]","[]"
"pull_request_commit","273","idan","oauthlib","garciasolero","2014-09-28 10:36:30","Fix management of rfc6749 errors","87578dbc1982aaea269357e84494b4c4c2052a7c","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","273","idan","oauthlib","garciasolero","2015-07-06 10:18:27","Merge branch 'develop' of https://github.com/garciasolero/oauthlib into develop","005939247569ac445aded5ae2f589bbdad85a203","","api.github.com","","False","[u'https://github.com/garciasolero/oauthlib']","[]","[]","[]"
"pull_request_commit","275","idan","oauthlib","dmuller@guidebook.com","2014-09-29 20:57:50","Add refresh_token keyword arg","3ed13c7e3ce2b9d8e5e66776ceb6487c88303f7a","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","275","idan","oauthlib","dmuller@guidebook.com","2014-09-29 20:58:39","create/don't create refresh_token based on self.refresh_token","ae21c1f92aed9f6d0e589cafe3dcdc86fe692d6b","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","275","idan","oauthlib","dmuller@guidebook.com","2014-09-29 21:08:48","Test ResourceOwnerPasswordCredentialsGrant generates no refresh token","6dee915acf998c5fbc18d7a342dc9ca570127dfa","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","275","idan","oauthlib","dmuller@guidebook.com","2014-09-29 21:27:39","Add docstring for ResourceOwnerPasswordCredentialsGrant __init__","2e4e232ade206962b7979e7c0299d7ff0cd4ad41","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","276","idan","oauthlib","singingwolfboy","2014-10-05 13:21:55","Dispatch a blinker signal on scope change, instead of raising a warning

See https://github.com/idan/oauthlib/pull/265 for rationale.
In brief: raising any exception blows the stack, which is
inappropriate for a non-error state.","809553ccb71f5c046454e5ce2ac90ab0757729f0","","api.github.com","","False","[u'https://github.com/idan/oauthlib/pull/265']","[{u'raw': u'https://github.com/idan/oauthlib/pull/265', u'refstyle': u'url', u'parts': [u'idan', u'oauthlib', u'265', u'']}]","[]","[]"
"pull_request_commit","278","idan","oauthlib","RodneyRichardson","2014-10-07 14:13:40","Pick up state from request, if not specified.","1a7227df037ba7c36548997a7948b6f12ee7c591","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","278","idan","oauthlib","RodneyRichardson","2014-10-07 14:26:12","Remove redundant ""state=request.state"" parameters","54a4632171d054ba2e1ad7538c74d626432d0dbe","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","279","idan","oauthlib","RodneyRichardson","2014-10-07 16:22:05","Allow invalid token_type_hint.

Invalid token_type_hints should be ignored. This looks to have been
broken in 6ffcc4f2ae6b66e42c1f58b6de634fe969b473a0","c742c150b208e75ded8f59cfb525fe4228b07520","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","280","idan","oauthlib","djpnewton","2014-10-09 02:08:01","fix add_params_to_uri() fragment bug

add_params_to_uri() ovewrites existing fragment when fragment parameter = true","8f57459fbbab1f317d5475f31f90b1a75016a2a8","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","282","idan","oauthlib","singingwolfboy","2014-10-16 23:18:26","Document environment variables","ca45f108dbbefaede131edab055501076323d09c","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","285","idan","oauthlib","garcianavalon","2014-10-27 09:00:18","updated token endpoint documentation to reflect current behavior,the token contains a string with the scopes separated by spaces","f2b165cead46060cf1f60e89dc0e893136a5e2af","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","297","idan","oauthlib","JamSquad","2014-11-14 17:49:04","Put try, except around OAuth2Token __init__

Put try, except around OAuth2Token.__init__ so NoneType scopes don't raise errors.","88322fe095901558d334d6f4e43a794032e15465","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","298","idan","oauthlib","techtonik","2014-11-17 19:07:57","Fix docs - python-rsa is not used","4ffd675db432f8d1f25c9e8112195f62b51caa93","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","300","idan","oauthlib","jbkkd","2014-11-26 12:33:53","Revocation endpoint should return empty string, not Python 'None'","ca848a242257507074d272cb72c77a4b078cbc0b","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","300","idan","oauthlib","jbkkd","2014-11-26 12:36:48","Updated revocation test","dd86c4b4b05fc9574452056a1983172e66d5bf86","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","302","idan","oauthlib","svetlyak40wt","2014-12-01 13:16:30","Make version number a headers in a changelog.","b18a1f24ece0976234000d10a31f084b1016a604","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","302","idan","oauthlib","svetlyak40wt","2014-12-01 13:21:49","Add release dates to versions where it is possible. They are recovered from commit messages.","6b991666e46490cdf15990753930bd2a8148f3e3","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","303","idan","oauthlib","shuisman","2014-12-09 12:53:01","Fix documentation

typo","aca6546d3fe73216df8db49ceafbc5c3126c1ab0","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","305","idan","oauthlib","artooro","2015-01-13 19:44:31","Allow ! character in query string

My app broke because there was a ! character in the query string. This small change fixed it for me.","9963cd24f81c14b09474b20dcb3acabba5ed7036","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","307","idan","oauthlib","flamusdiu","2015-01-18 23:32:01","Fixes https://github.com/idan/oauthlib/issues/306","fd06bf69677e5f52cbbc300d26888ddc7b55b11a","","api.github.com","","False","[u'https://github.com/idan/oauthlib/issues/306']","[{u'raw': u'https://github.com/idan/oauthlib/issues/306', u'refstyle': u'url', u'parts': [u'idan', u'oauthlib', u'306', u'']}]","[]","[]"
"pull_request_commit","307","idan","oauthlib","flamusdiu","2015-01-18 23:35:05","Fixed carriage return","2abb23038ac25da6012d3153afb67f38d4349f13","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","307","idan","oauthlib","flamusdiu","2015-01-20 03:20:40","Changed scope_to_list() to return empty list.

Possible partial fix for https://github.com/idan/oauthlib/issues/297","dd82588c3269bd56b7ba33e768fed4dfabd6f319","","api.github.com","","False","[u'https://github.com/idan/oauthlib/issues/297']","[{u'raw': u'https://github.com/idan/oauthlib/issues/297', u'refstyle': u'url', u'parts': [u'idan', u'oauthlib', u'297', u'']}]","[]","[]"
"pull_request_commit","307","idan","oauthlib","flamusdiu","2015-01-20 03:23:28","Make sure scope is not None 

Instead of the try statement, with the fix I added to util.py, you only need a if/else. Here's another way to fix https://github.com/idan/oauthlib/issues/296 and https://github.com/idan/oauthlib/issues/306","0d6bc6cb7c98f2624b2249a246ffdd552b4a9227","","api.github.com","","False","[u'https://github.com/idan/oauthlib/issues/296', u'https://github.com/idan/oauthlib/issues/306']","[{u'raw': u'https://github.com/idan/oauthlib/issues/296', u'refstyle': u'url', u'parts': [u'idan', u'oauthlib', u'296', u'']}, {u'raw': u'https://github.com/idan/oauthlib/issues/306', u'refstyle': u'url', u'parts': [u'idan', u'oauthlib', u'306', u'']}]","[]","[]"
"pull_request_commit","307","idan","oauthlib","flamusdiu","2015-02-04 15:20:46","Merge pull request #2 from georgewhewell/lock-requirements

Lock requirements","6d5bceb394821b63cf901c379adc77482817b5e9","","api.github.com","","False","[]","[{u'raw': u'#2', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'2', u'']}]","[]","[]"
"pull_request_commit","309","idan","oauthlib","georgewhewell","2015-01-27 12:38:29","jwt.encode expects key as PEM-formatted string","3cc47e6a25a9eef679f53c368f7d350b7ac4d790","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","310","idan","oauthlib","georgewhewell","2015-01-27 17:32:06","Lock requirements to specific versions. Use requirements.txt for tox deps.","09e4af26a387b3fce03f3cb1a38c6cff6a6c1af3","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","310","idan","oauthlib","georgewhewell","2015-01-27 17:56:51","move test requirements to requirements-test.txt. use tox for tests on .travis.yml","dc2204572a29762ff1cce7e565406be6c4843200","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","314","idan","oauthlib","singingwolfboy","2015-02-10 22:57:06","Check for rsa_key when it's actually needed","96caa4991fed3ff376ee15214607d05385ff9d7d","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","315","idan","oauthlib","singingwolfboy","2015-02-10 23:49:31","WIP: switch from PyCrypto to cryptography library","265a957577bd49104d746e3f10d00772c6279425","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","316","idan","oauthlib","wannabehero","2015-02-14 08:37:05","Providing `oauth_body_hash` for bodies on non-form-encoded requests","51675237c410b413a11091926436420493c52866","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","321","idan","oauthlib","djmitche","2015-02-26 23:08:35","update docs for save_authorization_code","4e389681322fcb00ddbfe63871bad779fc8bb79f","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","321","idan","oauthlib","djmitche","2015-02-27 19:58:30","Improve documentation for save_authorization_code et al.

This is based on a reading of the code and the RFC.","2f94fe412d55d76bb1bcc1786d4f96e414a8821a","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","322","idan","oauthlib","josephtate","2015-04-14 16:30:44","Support newer PyJWT (1.0.0). remove PyCrypto completely for cryptography and PyJWT helpers. Reformat some test certificates to be easier to maintain. Update documentation to match use of cryptography instead of PyCrypto","fc2d1218e015adcf65ba01965884430c47895cd0","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","323","idan","oauthlib","josephtate","2015-02-27 07:06:02","add failing test","281e2773b18051b0091a62780c0387a98c99660a","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","323","idan","oauthlib","josephtate","2015-02-27 07:06:37","Fix handling of optional scope params in response when the scope doesn't change. Fixes #306","fb04a84e331e6b0a8fd51ed38cd09445af232b31","","api.github.com","","False","[]","[{u'raw': u'#306', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'306', u'']}]","[]","[]"
"pull_request_commit","324","idan","oauthlib","JonnyFunFun","2015-02-27 13:59:54","OAuth2 client base fixes","d429dfd823307a2886ab8955c5f88ec4f611f0ad","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","324","idan","oauthlib","JonnyFunFun","2015-02-27 14:24:00","Adding cryptography requirement for build","47b72ed5098b54e73de18d2a76aebf30585f9efb","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","325","idan","oauthlib","djmitche","2015-02-27 20:18:51","Fix documentation for token_generator signature","db12b04e666927786ca8c6459ce1063d6c0d7ec3","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","326","idan","oauthlib","CoolGoose","2015-03-01 10:09:01","fix method params and clarify oauth_protected","4f913c6a6568c815e207435f1f12c72bdb1d7547","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","328","idan","oauthlib","bootandy","2015-03-03 21:10:17","InvalidRequestError is oauth1 not oauth2","0d2a7755a7ce0b1c981bd79de20e6aec0018856b","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","329","idan","oauthlib","skion","2015-03-05 13:45:05","Strip whitespace off of scope string.","9dc964c589925da534850f5e6658c91b3d638dcf","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","329","idan","oauthlib","skion","2015-03-05 14:23:15","Test trimming of whitespace.","3e7b6178e2db14043e1bfe0beba8ab971f42cfc5","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","331","idan","oauthlib","brunal","2015-03-11 10:29:12","Oauth1 signing: fix error message on invalid Content-Type header

Content-Type should be application/x-www-form-urlencoded when the
request to sign has a body. If it's not the case a ValueError was raised
saying Content-Type was missing, while it actually could just be wrongly
set (e.g. to application/json). Fix the error message to reflect the
real problem: expected & given Content-Type.","86986f35074fab7555c663bb168dc340e68bcc95","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","332","idan","oauthlib","tilgovi","2015-03-17 13:56:35","Add link to pyramid-oauthlib

Disclosure: I am the author of pyramid-oauthlib","2235b9732929acc2212ae55b9ac7eaeed161941c","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","334","idan","oauthlib","wiliamsouza","2015-03-17 20:09:48","Freeze pyjwt version to 0.3.2 this is the last version using PyCrypto","3020240e403deb97c9dc8041705ac62532da86af","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","335","idan","oauthlib","st4lk","2015-03-26 18:09:22","precise oauth1 client workflow","4cc868b45ef7291dba89162551754c0be8a2baf9","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","336","idan","oauthlib","josephtate","2015-04-13 16:20:27","Allow tuples for list_to_scope and scope_to_list in addition to sets and lists.  Treat sets the same as lists/tuples instead of recursing, add tests for sets.","1be2f1cde1ee003d33f5445bb60642801ff7102b","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","336","idan","oauthlib","josephtate","2015-04-16 14:25:22","Add the broken scope to the ValueError exception for easier debugging, add test for failure case.","a41f4fb4d26995bcadfc26540ad84a84b0e10e0d","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","337","idan","oauthlib","leon.ribinik@convertro.com","2015-04-20 12:41:17","fixing self.redirect_ui to self.redirect_url since self.redirect_uri doesn't exist","95f012023a0a6919eeac31903992d8b9df087484","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","338","idan","oauthlib","Bachmann1234","2015-05-06 03:01:25","Typo fix

Howdy!

Saw this typo in the docs and thought id fix it.","9cd91da8baeafe74463bb8a63b9f717568a7bc0c","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","339","idan","oauthlib","weipin","2015-05-06 16:54:59","Add code to determine if client authentication is required for OAuth2 endpoint ""revocation""","8b0c466084e4f901f37ae310f3f19c4034a4c29b","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","341","idan","oauthlib","kdazzle","2015-05-09 19:18:12","#340 - raise AttributeError from common.Request.__getattr__+ add tests","539558a02edbadb8d6ef690fb0beb2510a5eeb17","","api.github.com","","False","[]","[{u'raw': u'#340', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'340', u'']}]","[]","[]"
"pull_request_commit","341","idan","oauthlib","kdazzle","2015-05-09 19:46:51","#340 - provide default values for some params in common.Request","e1af87fd6f520576f3547ce69224779a40ebd85a","","api.github.com","","False","[]","[{u'raw': u'#340', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'340', u'']}]","[]","[]"
"pull_request_commit","341","idan","oauthlib","kdazzle","2015-05-24 23:29:23","Merge remote-tracking branch 'upstream/master' into request-getattr","7168c03ce6307f21e632dfbbfc62e1a89e6282a3","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","341","idan","oauthlib","kdazzle","2015-05-24 23:42:20","#340 - add default param values to common.Request","fb8dcb41adef9617d11550102d9872e055a3ce8d","","api.github.com","","False","[]","[{u'raw': u'#340', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'340', u'']}]","[]","[]"
"pull_request_commit","342","idan","oauthlib","g10f","2015-07-03 15:29:50","send no state in the access token response","8748c6e0e9a66e5b153dac528b313823c152bd19","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","343","idan","oauthlib","incredibleguy88@gmail.com","2015-05-19 12:29:59","Fixed indentation

Fixed indentation for Request Validator example","5df345756917d970275e2b211065e35ad309c280","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","347","idan","oauthlib","foxx","2015-06-19 13:29:45","Fixed code block indenting","ce2bf017137dfb64b328c55101417dcae7938b4d","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","349","idan","oauthlib","foxx","2015-06-19 15:09:03","more code indent issues","226e783e20b09f0e9314d4ad2b9a36410e3be529","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","350","idan","oauthlib","cheif","2015-06-26 13:48:33","Handle empty/non-parsable query strings","6a4351461304508203ca9eb522cfa055e8831020","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","351","idan","oauthlib","myyang","2015-06-29 15:00:55","Fix redirect_url typo and add test cases for function.

* Fix redirect_url typo in prepare_authorization_request()
* Exception testing in test_base.py
* Functionality testing in test_web_application.py","d13ec31886b35dfec28231da05e1d8b545dc26a2","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","352","idan","oauthlib","ib-lundgren","2015-07-01 10:36:51","Travis deploy to PyPI on github tag. #333, #346.","4149010e856fcd03ae7833d66953c130898122cc","","api.github.com","","False","[]","[{u'raw': u'#333', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'333', u'']}, {u'raw': u'#346', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'346', u'']}]","[]","[]"
"pull_request_commit","353","idan","oauthlib","myyang","2015-07-01 15:11:41","Fix and remove missing attribute: _client

* Fix and remove missing attribute: _client in prepare_refresh_token_request()
* Add testcase for prepare_refresh_token_request()","8b10c3375669ceae3dc26f23faf024542e2bcbae","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","354","idan","oauthlib","myyang","2015-07-01 15:11:41","Fix and remove missing attribute: _client

* Fix and remove missing attribute: _client in prepare_refresh_token_request()
* Add testcase for prepare_refresh_token_request()","de586cd17cce1363ee611fea30a47aee908f861b","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","354","idan","oauthlib","myyang","2015-07-02 02:50:00","Fix string format compatibility","f2402efa2a29631a3f67df9157fdf9d746861406","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","354","idan","oauthlib","myyang","2015-07-02 03:13:28","Use assertFormBodyEqual instead","9940cd2a1403341e97bda42a88ae2c0213027c4f","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","355","idan","oauthlib","lepture","2015-07-02 07:04:37","Add tests when Request body has password","db602c837436790cf4a98744fa66f4dd20de7f79","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","355","idan","oauthlib","lepture","2015-07-02 07:05:05","Hide user password in repr of Request","7996067921ddd5eb3ff889270a5b02ce14997b10","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","355","idan","oauthlib","lepture","2015-07-02 07:29:08","Fix when body is None","f88408da8b4d222195caca46d10264d90a2bd167","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","356","idan","oauthlib","lepture","2015-07-02 07:10:26","Don't encode body twice","d8d7de6ac0d8f6988f876229d773a4a3042f988e","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","356","idan","oauthlib","lepture","2015-07-02 07:14:07","Improve regex performance for invalid_hex","42d973d7854a694dea290251e21025b0b90440f4","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","357","idan","oauthlib","thedrow","2015-07-04 14:19:10","Updated release notes.","8cdece757125de206ecdb9006d45ae69daf7acea","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","358","idan","oauthlib","garciasolero","2015-07-06 10:44:17","Fix management of rfc6749 errors","8dadaf0fde2b502df359632853fda00963dce3f5","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","360","idan","oauthlib","djmitche","2015-02-26 23:08:35","update docs for save_authorization_code","3bc7d571bf890a4befda3bbbe6d78ba3ea38c515","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","360","idan","oauthlib","djmitche","2015-02-27 19:58:30","Improve documentation for save_authorization_code et al.

This is based on a reading of the code and the RFC.","8a44ea0825a723da2bd8441ba46f903945d07299","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","360","idan","oauthlib","weipin","2015-05-06 16:54:59","Add code to determine if client authentication is required for OAuth2 endpoint ""revocation""","e161d8412224b980b67c21fcc268edf675c6a7da","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","360","idan","oauthlib","g10f","2015-07-03 15:29:50","send no state in the access token response","ebff03ddca6339d6e48d54917915d12075d3fd40","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","360","idan","oauthlib","garciasolero","2015-07-06 10:44:17","Fix management of rfc6749 errors","cc8eae16cf91c800a512dda595313f0570b85643","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","361","idan","oauthlib","thedrow","2015-07-04 14:19:10","Updated release notes.","276c27c8a418c7c399e710cafa43b42efbb9d22e","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","362","idan","oauthlib","masci","2015-07-20 09:38:10","add token_type_hint to the list of default Request params","1ee0003814a5f89090f59802cbcccdb1e9f0938d","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","366","idan","oauthlib","abarto","2015-07-23 12:47:04","Use safer attribute access of request's fields on revocation","1abb1350e9ed17ad9d5beceea2bd1e0809de4971","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","368","idan","oauthlib","lepture","2015-07-28 05:46:00","Add client_secret for Request","69645ff5d8b918aaefca0a8d0caaef23d5fe3662","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","371","idan","oauthlib","mitgr81","2015-08-04 14:53:10","Python3 fix: encodes request body before hashing

In python 3 hashlib works on bytestrings, so we need to encode arguments
to most, if not all, hashing functions.","5c81414cbb242f921939500a1c27eec8256a015f","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","372","idan","oauthlib","lepture","2015-08-05 01:27:59","Add / to safe url encoded characters. Google will return code contains /","5de6d4dbe23009148b62efa4c1b77d7a5a14ca3f","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","372","idan","oauthlib","lepture","2015-08-05 01:29:43","Add test case for urldecode that contains /","e0631f14a003d2633152749834fa2169a978df44","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","376","idan","oauthlib","jvanasco","2015-08-11 19:35:50","fixed docsting on `invalidate_request_token`","372b686b8a24aae94101e56a9c042813ef23971e","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","381","idan","oauthlib","jvanasco","2015-08-12 16:37:21","adding validator_log to store what the endpoint computed","58a2a735ac329f890c5dd4a042b35ee544084db0","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","385","idan","oauthlib","julienmeyer","2015-08-18 13:34:44","Add ( and ) in urlencoded safe characters","c87c76189627440c45d1ea0957e6eb3330a8c5fd","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","385","idan","oauthlib","julienmeyer","2015-08-18 13:38:09","Add unit test for urldecode","b20951fc127fdd4dc37c315104798a758f0c671b","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","387","idan","oauthlib","astrodsg","2015-08-29 16:32:52","added capability to pass kwargs to the grant_type_handler, specifically to add the ability to turn on/off refresh token generation for a google-like 'offline'/'online' functionality","8ce9dd403515e20b82078f45958c3d8410448a1c","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","388","idan","oauthlib","mick88","2015-08-31 13:44:13","Add support for HMAC-SHA256","9d8b4329cc223982ac72b987789178064f858db5","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","388","idan","oauthlib","mick88","2015-08-31 13:59:38","Add explicit declaration of HMAC-SHA1 and point HMAC at it

To avoid confusion, HMAC constant name should explicitly state which SHA variant is used, but for backwards compatibility, SIGNATURE_HMAC is still needed","ab1b728a50b86a786247559fb423d01260dd438c","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","391","idan","oauthlib","vrehak","2015-09-04 13:46:56","Fix for null scope","3e0a4400088c1cb4b6f0e524355755ead2f88704","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","394","idan","oauthlib","cyrilchaponeverysens","2015-09-21 09:42:35","Add 'python' info to README

Updated readme to say that the library is for Python. I landed here just searching for generic *oauth* docs, and it took me like 30 seconds to realize that this library is a Python-specific implementation.","7d04c7d97cfa6d37274f246bafc4dbf752d5269e","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","396","idan","oauthlib","hirokiky","2015-09-29 02:35:39","Added tests auth grant without refresh token","37bea19049497c820891c2ccbcce9c4b9dc0d7b9","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","396","idan","oauthlib","hirokiky","2015-09-29 04:04:59","Added a kwarg to set wether refresh token will be created or not","c1b24120bb627eb471dd99ea409c934fe942c836","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","398","idan","oauthlib","yohanboniface","2015-10-26 18:12:36","Code ident in server doc","e84bd3e859bbc34bcad6591da9faf1cfb16a954f","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","400","idan","oauthlib","arnicvs","2015-11-03 11:58:19","Fixed OAuth2Token() breaking when scope is passed in params but has value None.","3e314218e1f691f91eecf7dfadb82d47fad8c185","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","402","idan","oauthlib","lepture","2015-11-13 01:20:05","Add request token for OAuth 1","192f0f963cfaf90668aca983db04dce11d639b47","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","405","idan","oauthlib","xiaohanyu","2015-12-18 04:40:50","Fix typo in README.rst","0cb3857cb5a193489d20a40b480bb142fc8e12ec","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","407","idan","oauthlib","eofs","2016-03-11 09:15:02","Allow `/` and `?` characters per RFC 3986 section 3.4 specification.

Fixes #404","028720698e17a61b975acced53fad31e569fe41c","","api.github.com","","False","[]","[{u'raw': u'#404', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'404', u'']}]","[]","[]"
"pull_request_commit","407","idan","oauthlib","eofs","2016-03-11 09:15:38","Tests for `/` and `?` characters in query.","e59f04bf577f0faa3e5fe2de177d65d094592b55","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","410","idan","oauthlib","r4fek","2016-03-30 12:43:42","Set issue_new_refresh_tokens in RefreshTokenGrant.__init__","a7cc9b7fdc40984d60ad523ab7c315230cbcdac4","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","411","idan","oauthlib","thedrow","2016-04-10 08:21:22","Use slots for token bearer.","d2e39378991bf762ec4ba6c33da011bbca395851","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","411","idan","oauthlib","thedrow","2016-04-10 08:41:39","Upgrade PyPy in travis.","9ffb9eb998ad3e90f5ddbe522eecbe8ec78ab2ec","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","411","idan","oauthlib","thedrow","2016-04-10 08:44:49","Added Python 3.4 and 3.5 to the build.","816de0a43da21f1eef0376e769cbb86572aa743f","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","411","idan","oauthlib","thedrow","2016-04-10 08:45:59","Fix pypy upgrade script.","59986721afff63040966a8858c64950a0a485cd7","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","411","idan","oauthlib","thedrow","2016-04-10 08:51:36","Fix the build for python 3.2.","6c0d7cf441e6aba214162826f0dd59a2d7585273","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","411","idan","oauthlib","thedrow","2016-04-11 08:38:10","Fixed requirements for Python3.2/PyPy3.","9a8dc51f79ce31192c31a25424435035a648abf1","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","411","idan","oauthlib","thedrow","2016-04-11 08:39:37","Upgrade test depenedencies.","ec9cd7749c1a175618218f15a8ab2670152f8f46","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","411","idan","oauthlib","thedrow","2016-04-11 08:44:40","Coverage should be pinned for Python 3.2.","0ccdb98ebcfd42a74c8898b7999a7b0ba2979b1f","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","413","idan","oauthlib","tbartelmess","2016-04-13 19:15:37","access -> accessed","22a5747998c3e359ac5186426045a1696e228f8c","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","416","idan","oauthlib","ib-lundgren","2014-07-06 17:20:36","Move save token to grant type and allow token modification.

request_validator.save_bearer_token was previously called from inside
token_handler.create_token but is now called from the respective
grant type after being created by token_handler.create_token.
This makes it easier to allow extensions grants to modify the token
via the newly introduced token modifier methods that will be invoked
prior to the save.

This is consistent with how auth code is created and saved plus it
removes the hidden dual purpose of create_token.","8f9c984202976e62d7e376338fddc4ef39be74e0","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","416","idan","oauthlib","ib-lundgren","2014-07-06 17:24:54","Move save_bearer_token to the grant types.","e63492b00ef585ed13af5f28f0bebe5b342d54a8","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","416","idan","oauthlib","ib-lundgren","2014-07-06 17:25:24","Add the first few OpenID connect error classes.","67369baee81dfbfb6d89dd8404da8c91f14ba209","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","416","idan","oauthlib","ib-lundgren","2014-07-06 17:26:19","A few initial OpenID Connect validation methods for silent logins and user matching","09b79fec5943a4ca0ff635b7525c00c07cae40af","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","416","idan","oauthlib","ib-lundgren","2014-07-06 17:26:49","Add token modifier and save to refresh token grant as well.","3d0ebb6ac6d482218f6f58ea76ec69bec925b109","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","416","idan","oauthlib","ib-lundgren","2014-07-06 17:27:10","Initial sketch of OpenID Connect grant extensions.

Only drafted some of the parameters introduced and little validation has
been implemented so far. The id_token creation is also on the TODO list
but a lot of it is created by @intelie in his fork already.","d48c291a34263893b1d4f45036f7b9aaaa63bccd","","api.github.com","","False","[]","[]","[u'@intelie']","[]"
"pull_request_commit","416","idan","oauthlib","ib-lundgren","2014-10-01 13:58:00","Support for extra token validators and code modifiers.","cfb2682c07c79d7b636b0f44d4633a3e531e0512","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","416","idan","oauthlib","ib-lundgren","2014-10-01 13:58:19","New validator method get_auth_code_scopes.","1ce0a4fe77413633c1b6d701aae0c94c220b4713","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","416","idan","oauthlib","ib-lundgren","2014-10-01 14:00:35","Small steps on the OpenID grant types.

Direct response if prompt is none.
Sketched out methods for implicit and hybrid.
New method for adding access tokens in hybrid auth step.","96946d64eb4ecb0b3615587fa30b03e7f3845cc6","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","416","idan","oauthlib","ib-lundgren","2014-10-03 13:28:10","Auth code authorization resp test.","d38502160d0f455575bec354a2e303221086bfac","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","416","idan","oauthlib","ib-lundgren","2014-10-03 13:28:44","Implicit authorization response mode test.","7879224c905f7f56f1fc0710765a6ce4d5edc0d0","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","416","idan","oauthlib","ib-lundgren","2014-10-03 13:30:19","Response mode support.","077b4a0516e6975d0ef732262fb8f313f7371094","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","416","idan","oauthlib","ib-lundgren","2014-10-03 13:31:09","Raise OIDCNoPrompt exception upon authorization if requested.","a445778860405d117111e24a078f25a9c399c608","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","416","idan","oauthlib","ib-lundgren","2014-10-03 13:31:41","Convenience (for testing) imports.","958e70fcc1dafe30bc6f571a142791784d8fbb3c","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","416","idan","oauthlib","ib-lundgren","2014-10-03 13:32:36","Remove get_auth_code_scopes. Obsoleted by validate_auth_code","c03d208c42b2d18b19b9020e2aaff5b1ee9b0556","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","416","idan","oauthlib","ib-lundgren","2014-10-03 13:32:56","OpenID Connect core tests.","e3290bfaf9393278aa3d6ebb47e39c952e532002","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","416","idan","oauthlib","ib-lundgren","2014-07-06 17:20:36","Move save token to grant type and allow token modification.

request_validator.save_bearer_token was previously called from inside
token_handler.create_token but is now called from the respective
grant type after being created by token_handler.create_token.
This makes it easier to allow extensions grants to modify the token
via the newly introduced token modifier methods that will be invoked
prior to the save.

This is consistent with how auth code is created and saved plus it
removes the hidden dual purpose of create_token.","d8fd9714b2c8c3179f6f6b04299a97bccce3c357","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","416","idan","oauthlib","ib-lundgren","2014-07-06 17:25:24","Add the first few OpenID connect error classes.","6290435070bd7b27c3e7c52c0cb22fb454ad452f","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","416","idan","oauthlib","ib-lundgren","2014-07-06 17:26:19","A few initial OpenID Connect validation methods for silent logins and user matching","1b4bc8a9bac3be2aab6c33b7d56f4cbd6370404b","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","416","idan","oauthlib","ib-lundgren","2014-07-06 17:26:49","Add token modifier and save to refresh token grant as well.","16566e35a535edf99b1d2dd5fcf4386b85c4a414","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","416","idan","oauthlib","ib-lundgren","2014-07-06 17:27:10","Initial sketch of OpenID Connect grant extensions.

Only drafted some of the parameters introduced and little validation has
been implemented so far. The id_token creation is also on the TODO list
but a lot of it is created by @intelie in his fork already.","21cbb8f711cb7ba71ef0c5706ff37c595d2d7cbd","","api.github.com","","False","[]","[]","[u'@intelie']","[]"
"pull_request_commit","416","idan","oauthlib","ib-lundgren","2014-10-01 13:58:00","Support for extra token validators and code modifiers.","4da15da8e4ac49b42f7d5ab2c9b42de2f2d194c6","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","416","idan","oauthlib","ib-lundgren","2014-10-01 13:58:19","New validator method get_auth_code_scopes.","4fec68d3e587db718fafd2554ef6094893b93431","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","416","idan","oauthlib","ib-lundgren","2014-10-01 14:00:35","Small steps on the OpenID grant types.

Direct response if prompt is none.
Sketched out methods for implicit and hybrid.
New method for adding access tokens in hybrid auth step.","ec3f231adcf474185cf09fdc79655b8d0311e68e","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","416","idan","oauthlib","ib-lundgren","2014-10-03 13:28:10","Auth code authorization resp test.","90ca7103ccb49131367cfe87c9161a1641affb63","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","416","idan","oauthlib","ib-lundgren","2014-10-03 13:28:44","Implicit authorization response mode test.","d66e937b30004e54ef0680103e3fc9abb3e8d87f","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","416","idan","oauthlib","ib-lundgren","2014-10-03 13:30:19","Response mode support.","e0ed5d8ac3174dd7adf023baaaeb35aaefa0081c","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","416","idan","oauthlib","ib-lundgren","2014-10-03 13:31:09","Raise OIDCNoPrompt exception upon authorization if requested.","0348a5731c6324641d0c56abd51107e343d1e94d","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","416","idan","oauthlib","ib-lundgren","2014-10-03 13:31:41","Convenience (for testing) imports.","d42e8154b1a970ea921d0368bd4711d79ec44759","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","416","idan","oauthlib","ib-lundgren","2014-10-03 13:32:36","Remove get_auth_code_scopes. Obsoleted by validate_auth_code","93548975c1f51ff4b346b6c7975dd9e57223a5e4","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","416","idan","oauthlib","ib-lundgren","2014-10-03 13:32:56","OpenID Connect core tests.","77c7774589e7e2348947ba3fb6a070795bba1819","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","416","idan","oauthlib","joelstevenson","2016-04-16 00:43:46","First pass attempt at updating openid_connect branch","29597b9df3046611f037059cf392e48090bc796f","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","416","idan","oauthlib","joelstevenson","2016-04-16 00:46:13","Merge branch 'openid_connect' of https://github.com/joelstevenson/oauthlib into openid_connect","4c160d739a322964b873ca60f90df5384e337c44","","api.github.com","","False","[u'https://github.com/joelstevenson/oauthlib']","[]","[]","[]"
"pull_request_commit","416","idan","oauthlib","joelstevenson","2016-04-19 21:59:31","More wiring to get OpenID Connect code fully integrated.","fde41caa25203f456a4650ae1e5501725622cbb7","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","416","idan","oauthlib","joelstevenson","2016-04-20 00:53:38","Fixup implicit flow authorization response and test","872b66c0057ae72c3be202ded54f3a3f5122f37e","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","416","idan","oauthlib","joelstevenson","2016-04-21 00:26:43","Remove some comments.","bd3dcb88fb957bfa3e43409af8b59245e88d2163","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","416","idan","oauthlib","joelstevenson","2016-04-25 23:49:25","Handle multi-valued response_types as specified in http://openid.net/specs/oauth-v2-multiple-response-types-1_0.html#Combinations
Handle new 'none' response_type
Implicit flow won't generate a token unless it is asked for (skipped for ""id_token"" response_type","21f39752241c56ca4538d09e225f4653b9446d9e","","api.github.com","","False","[u'http://openid.net/specs/oauth-v2-multiple-response-types-1_0.html#Combinations']","[]","[]","[]"
"pull_request_commit","416","idan","oauthlib","joelstevenson","2016-04-26 00:24:50","Iterate correctly over response_types dict without using six","69decb87e64d0f6b61283f3c1910bd6672a1da3f","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","416","idan","oauthlib","joelstevenson","2016-04-26 18:15:10","Remove some comments related to new code for OIDC feature.","dae2c64b66c530e50c0a15bdd6cab072c733af85","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","416","idan","oauthlib","joelstevenson","2016-04-26 18:15:54","Merge branch 'openid_connect' of https://github.com/joelstevenson/oauthlib into openid_connect","0fee646124b4af3cdf16189c64ac64777bc1c919","","api.github.com","","False","[u'https://github.com/joelstevenson/oauthlib']","[]","[]","[]"
"pull_request_commit","416","idan","oauthlib","joelstevenson","2016-04-29 16:29:22","Prevent save_token() from being called twice within create_token_response().  We call save_token() after any token modifiers have run so we can tell the token_handler's create_token() method not to save the token and do that explicitly ourselves.","2f7fd6cde2e10a9980ad4ef2e438d6b93769e613","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","416","idan","oauthlib","joelstevenson","2016-04-29 19:55:19","Parse request.claims in ResourceEndpoint.verify_request() when the token's scope includes openid and there are claims submitted in the request.","5546a120153899d8d712a048f664dcb55bb4b791","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","416","idan","oauthlib","joelstevenson","2016-04-29 22:32:04","Use a single if statement in ResourceEndpoint.verify_request() claims check","9e6de5cc1ebd3d257d8fe7931924736ca731b301","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","416","idan","oauthlib","joelstevenson","2016-05-02 17:10:52","Check the response type against exact response_type registry formats in GrantTypeBase.add_token()","c9393ce3fb370af303afe741ce61ee1f73a17833","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","416","idan","oauthlib","joelstevenson","2016-05-02 18:21:11","Pairing with the previous commit, revert the change related to response_type in AuthorizationEndpoint so that they must appear in the order specified in the spec.  Just keeps the code clean and simple this way.","071ecaf8221fdc8cc2793238f067c78a26e2763d","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","416","idan","oauthlib","joelstevenson","2016-05-02 18:24:38","Minor cleanup","1a186cec18a503ee2f26026138a5614fb582e46f","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","416","idan","oauthlib","joelstevenson","2016-05-06 21:52:49","Reworking the handling of claims.  @bjmc was quite right to question the haste-y inclusion in the Resource endpoint.  It is an optional parameter to the Authorization Code endpoint and so needs to be stored with both the generated authorization code grant and any subsequent access token issued to that authorization code.","9a8f73d2dd088d5ea01313de2a1fe5a877994a79","","api.github.com","","False","[]","[]","[u'@bjmc']","[]"
"pull_request_commit","416","idan","oauthlib","joelstevenson","2016-08-18 22:29:01","Move the claims handling into OpenIDConnectBase._inflate_claims() and a new AuthCodeGrantDispatcher to route requests to either the default AuthorizationCodeGrant or OpenIDConnectAuthCode depending on scope when the request's response_type is a simple (ambiguous) 'code'.
Include basic docs about OpenID Connect auth flow support","447465547cc9a14350d024ed25b374614c475eec","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","416","idan","oauthlib","joelstevenson","2016-08-18 22:41:40","Short description doc for AuthCodeGrantDispatcher","a6cc9a8caf54d800fcf4fcb31be08a87fd4bf973","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","416","idan","oauthlib","joelstevenson","2016-08-25 23:25:39","Test for membership should be ""not in"".
Commenting.","e5b57dd0167857dd4282de51bd5ac58aaf73213b","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","416","idan","oauthlib","joelstevenson","2016-08-25 23:27:02","AUTHORS file","925b2591194b764d2973045d85c693020583aac8","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","416","idan","oauthlib","joelstevenson","2016-08-26 23:39:52","Test for membership should be ""not in"", here too.","06c0bd8e2deb7c9c2e4c5d7874bc94c90e334d4d","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","417","idan","oauthlib","bjmc","2016-04-25 17:11:04","Better sanitizing for common.Request.__repr__","28f5b265f782d07e6052f2e2be49d4b0e7208188","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","417","idan","oauthlib","bjmc","2016-04-25 17:22:43","Tests for new sanitization","e99a15b0bfa1d620623f3a6dc639880503617141","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","423","idan","oauthlib","r4fek","2016-05-09 08:26:06","Fix #422: Query strings should be able to include colons","91cdbbd858e88b5008d1bc2ee2b4d7c8fedc3f9d","","api.github.com","","False","[]","[{u'raw': u'#422', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'422', u'']}]","[]","[]"
"pull_request_commit","425","idan","oauthlib","parryjacob","2016-05-16 19:45:56","Cast body to a string to ensure that we can perform a regex substitution on it","7d6294b10cbe21bd7af67ce8b698b1c4ab18238c","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","427","idan","oauthlib","adamchainz","2016-05-29 19:55:01","Convert readthedocs link for their .org -> .io migration for hosted projects

As per [their blog post of the 27th April](https://blog.readthedocs.com/securing-subdomains/) ‘Securing subdomains’:

> Starting today, Read the Docs will start hosting projects from subdomains on the domain readthedocs.io, instead of on readthedocs.org. This change addresses some security concerns around site cookies while hosting user generated data on the same domain as our dashboard.

Test Plan: Manually visited all the links I’ve modified.","6c6519251ec5acea6dc99bcf1b95d8f02ff0353e","","api.github.com","","False","[u'https://blog.readthedocs.com/securing-subdomains/']","[]","[]","[]"
"pull_request_commit","429","idan","oauthlib","zykov38n@gmail.com","2016-07-07 13:56:22","Fix typo in docstring.","6a498c7952df6aa5e41aab8a64e1cfbe057e650b","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","430","idan","oauthlib","richardasaurus","2016-07-08 14:00:33","Run tests against python 3.6","bed9ecce5171810aa1c59d16c31a27571e1f1965","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","430","idan","oauthlib","richardasaurus","2016-07-08 14:04:27","Update tox.ini","6eca23db3492411f139ba405195d8b19e5052418","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","430","idan","oauthlib","richardasaurus","2016-07-08 14:06:53","Update tox.ini","c598b6ca27da7eaf743717421325a72d8b7a8380","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","437","idan","oauthlib","jandd","2016-09-17 09:38:50","Fix TypeError in openid_connect

This commit fixes the ""TypeError: argument of type 'NoneType' is not
iterable"" that was caused by calling the openid_connect
validate_authorization method with a request where request.scopes was
set to None.","d8ba5858a024efebc3e918ad6b9134d11a1c2120","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","440","idan","oauthlib","fabfuel","2016-10-03 08:16:14","Ensure request.client_id, getting it optionally from request.client.client_id","83ed13701707b19420773f18a32aa8b688ae7a3c","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","440","idan","oauthlib","fabfuel","2016-10-03 08:38:38","Ensure request.client_id after checking request.client.client_id","335d9e8b427163bc64c18cb7ad54e609fcd84b23","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","441","idan","oauthlib","david@bab.la","2016-10-17 09:12:16","Updating request.scopes to a list to fix the NoneType is not iterable error.","02fff506210cf729ac5ae64751c772542385beb7","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","442","idan","oauthlib","mistermocha","2016-10-21 21:34:25","scrubbing rsa_key from __repr__","ce756e750141b28ac55ea46219b7b3bacc73a2c1","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","449","idan","oauthlib","bjmc","2016-11-18 15:39:04","Move custom validator registration onto GrantTypeBase","a43ed5d5b0a2ae1be67935a701b48ba83b4d9893","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","449","idan","oauthlib","bjmc","2016-11-21 14:19:30","OIDC grants are proxies","28cf20b3ad64b568bff8507ea68a231651bd132e","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","449","idan","oauthlib","bjmc","2016-11-21 14:47:59","Adds tests for custom grant validators","41f853f9d56bfb403b40f00054a56242e1be52ed","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","449","idan","oauthlib","bjmc","2016-12-19 15:53:55","Adds Brendan McCollam to AUTHORS","ff0e40884f07fde16b542b883a3c5703092d6b86","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","449","idan","oauthlib","bjmc","2016-12-19 16:03:22","Docs for custom validator registration","b63590317fc353da5e39ec9eef9a1494eddb925e","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","449","idan","oauthlib","bjmc","2016-12-20 11:15:44","Helper for implicit grant custom validators","a33c82e7be21429b5c376f2912a6a553cf87018b","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","449","idan","oauthlib","bjmc","2016-12-20 14:55:04","Per code review, _run_custom_validators() doesn't mutate request_info","c6d84da649789151a274e091df3f23e99e92dd0c","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","449","idan","oauthlib","bjmc","2016-12-22 13:27:55","Refactor custom validators registration","d0a59bd8a4fbb44f2ad0218becfbccf49d91cb4d","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","449","idan","oauthlib","bjmc","2016-12-22 15:00:15","Update custom validator tests","790310a6e1e7e1ce434ef478507d9a1c9464e298","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","449","idan","oauthlib","bjmc","2016-12-22 16:39:50","Updated docs for custom validators","cf414259b2b03664cf51e12532035e2a4ef130f3","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","450","idan","oauthlib","joelstevenson","2016-11-21 20:43:13","Normalize handling of request.scopes list

Use the scope_to_list() util to initalize the request.scopes list from
the request.scope request parameter in two place where it was instead
being set to None.

- AuthorizationEndpoint.validate_authorization_request()
- TokenEndpoint.create_token_response()

In both cases the Request should be properly populated before it is
passed to the client's validator.

In the case of the TokenEndpoint - there are OAuth2 workflows that
allow an optional scope parameter so we should have been doing this
for them anyway.

Since scope_to_list() may return None, also update the openid_connect
code to behave properly when this is the case.

Fixes #436","f1a8fc40e117511c790bc63d00a19a90058e1ce1","","api.github.com","","False","[]","[{u'raw': u'#436', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'436', u'']}]","[]","[]"
"pull_request_commit","450","idan","oauthlib","joelstevenson","2016-11-22 16:38:25","Fix a typo","7843972fa4334709149f0247cce643491784504a","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","452","idan","oauthlib","thedrow","2016-12-06 12:09:46","Remove support for Python 2.6 and 3.2-3.3. Fixes #432.","373c3eed55bf4125d2442c791265c967820511a5","","api.github.com","","False","[]","[{u'raw': u'#432', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'432', u'']}]","[]","[]"
"pull_request_commit","452","idan","oauthlib","thedrow","2016-12-06 12:10:57","Drop obsolete Python versions.","cb69a9b3e2ce944fa17f14b232a5d285fcac42d5","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","452","idan","oauthlib","thedrow","2016-12-06 12:11:17","Remove requirements for Python 3.2.","d4bde78921059fc29a0cfd9c9af69494a9eec587","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","452","idan","oauthlib","thedrow","2016-12-06 12:13:18","Update classifiers.","91152df142bdde134d84ed27963cda8e6b878416","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","452","idan","oauthlib","thedrow","2016-12-06 12:17:20","Update CHANGELOG.rst","69302c8c5c91a2398863484e480bc57fad83d459","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","452","idan","oauthlib","thedrow","2016-12-06 12:27:04","Update .travis.yml","8449a81cc4aec60b5a07c9bc3666bf3ee491278f","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","453","idan","oauthlib","kippandrew","2016-12-07 04:55:39","Authenticate public clients before revocation","bf2f9dbff3e04addd16ad825e6dae30537677afc","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","453","idan","oauthlib","kippandrew","2016-12-07 04:57:00","Fix tests","619db8c1e0cee28182011e9802efddaf1bd5e237","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","453","idan","oauthlib","kippandrew","2016-12-07 05:30:59","Python 3 fixes","4297a7e3db43b5bf293537964e0f51332dcb181f","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","455","idan","oauthlib","bjmc","2016-12-20 20:01:49","Adds failing test","d37f361aa0efd7565ac3eebb31cb38f25be70abc","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","455","idan","oauthlib","bjmc","2016-12-20 21:37:13","Do not split() request.prompt value if already a list","8d217d0b1f3ec3772e20c8847050278eccaa10b1","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","456","idan","oauthlib","steve.huwig@unizin.org","2017-01-05 15:07:22","Add log statements to except clauses","47f38135620f9ee515df265bf4ec3877b3ef6500","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","456","idan","oauthlib","steve.huwig@unizin.org","2017-01-09 14:32:29","Use a more grep-able variable name","66260fab4a9bd81ba9e74323147bad3f25ddcd56","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","458","idan","oauthlib","hoylen","2017-01-16 00:01:32","Documented PyJWT dependency for RSA-SHA1 signatures.","9628f3d24a2e9777bccf24115b123eea3e9eb74c","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","458","idan","oauthlib","hoylen","2017-01-16 04:48:00","Extra logging for verification failures.","3865fa8ec208fb927615530854348d414a3cc1a4","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","458","idan","oauthlib","hoylen","2017-01-18 04:06:28","Include function names for NotImplementedError exceptions.","5c05aa0fe0d9277acf557eb243c8164c8695a391","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","458","idan","oauthlib","hoylen","2017-01-20 05:47:56","Extra logging for verifying signatures.","f30123a4705730e686bc9ae9284f3cb22d63ff84","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","458","idan","oauthlib","hoylen","2017-01-26 00:55:42","Only log signature base string when verification fails.","0c7c8fb2e0e331d7e1460f2c6476a425abf395eb","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","458","idan","oauthlib","hoylen","2017-08-01 01:45:36","Extra logging if verification fails because of timestamp/nonce.","8f6f6c3fcd734119caba4539da70a9ba798f3cf7","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","458","idan","oauthlib","hoylen","2017-08-01 05:26:04","Fixed default get_default_realms to raise NotImplementedError.","46230575731178b69956debfd40371d26bbd3bf3","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","459","idan","oauthlib","jdufresne","2017-02-07 02:17:53","Add universal wheel support

See http://pythonwheels.com/

Python wheels provide faster installation for pure Python packages. To upload a
wheel to PyPI use the command:

python setup.py sdist bdist_wheel upload","06c7c58bac102838c46a5bef47e3d1758f7095c0","","api.github.com","","False","[u'http://pythonwheels.com/']","[]","[]","[]"
"pull_request_commit","461","idan","oauthlib","skion","2017-02-13 23:08:38","Add two error codes from RFC 6750.","652560b2a4dff97607d04a204d119af17ecd50e9","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","462","idan","oauthlib","skion","2017-02-14 23:47:03","Add missing OpenID Connect error codes.","91529519442795c3e21cb4fbf5dd2f331185d633","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","462","idan","oauthlib","skion","2017-02-14 23:51:05","Fix typo in account_selection_required exception name.","9e4ac2ca22ecaf260b67ef6a93dd06b6eedb1da7","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","463","idan","oauthlib","skion","2017-02-21 21:34:07","Redirect errors according to response_mode.","739c67342f71c94d10b0f2af869202a9391ae3f4","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","464","idan","oauthlib","kevinv@aweber.com","2017-02-23 20:26:36","Update proxy keys on CaseInsensitiveDict.update()","10308ccdf1d6fc92cfed8a3b25779e7cbb73f9b0","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","465","idan","oauthlib","skion","2017-02-23 21:34:15","Hybrid response types should be fragment-encoded.","75c83e4d9aec4ed2699c5427e030202a4e8a9264","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","465","idan","oauthlib","skion","2017-07-29 22:22:49","Fix tests for hybrid fragments.","35fee2b8f21372d02a2e460a07e19a2abe5f2169","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","466","idan","oauthlib","skion","2017-02-23 16:42:09","Improve prompt parameter validation.

- Strip leading and trailng spaces.
- Disallow prompt=none with other values as per spec.
- Pass to credentials as a set.","e11e1400d91be39c247298286ad84a5c516e3988","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","466","idan","oauthlib","skion","2017-04-02 14:29:29","Add test for prompt=none exclusiveness.","84805f1929e4e83f24de2e8d7c47f2d0645ca52f","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","467","idan","oauthlib","ajpaul510","2017-03-06 18:11:16","Fixed client.rst

Fixed grammar on line 7.","92a269aac7b5772e8b5860930f8edb3e0741b91c","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","468","idan","oauthlib","TizianoPerrucci","2017-03-08 09:53:19","Changed all implicit imports * with explicit classes imports","2b6cdfe4cdc62f521d401bf225fcc77739149174","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","468","idan","oauthlib","TizianoPerrucci","2017-03-08 10:13:19","Fix base imports","7ecafcade8eaebc745f5b8aeec592b700cea04b2","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","469","idan","oauthlib","orenmazor","2017-03-29 16:36:41","missing deps","b1697259b494a28afc3f4c27fcd5863d9ef77cc8","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","469","idan","oauthlib","orenmazor","2017-03-29 17:12:11","add # to the pchar list","c1fd094fd013d0447fb10a3b668552d992bb1da1","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","469","idan","oauthlib","orenmazor","2017-03-29 17:47:12","Revert ""missing deps""

This reverts commit b1697259b494a28afc3f4c27fcd5863d9ef77cc8.","09b2bdf3bc6d72034082c4bcc0ef83d1d38f8a68","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","469","idan","oauthlib","orenmazor","2017-03-29 17:49:38","split the tests up a bit","52f197eae760d87791f1fdc85d558da1f4554635","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","471","idan","oauthlib","ajpaul510","2017-04-07 06:22:26","Update AUTHORS","96f08fcfc30420df5d6db89c2131f8c3d48f2745","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","472","idan","oauthlib","jdufresne","2017-04-16 20:47:52","Add Python 3.6 to Travis CI testing and trove classifiers","ea0e1c121fbad0afd5812c820d042ecc8235441d","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","473","idan","oauthlib","jdufresne","2017-04-16 20:57:30","Replace all uses of assertEquals with assertEqual

assertEquals is deprecated in favor of assertEqual.

When running tests, fixes warnings of the form:

  DeprecationWarning: Please use assertEqual instead.

For more information, see:

https://docs.python.org/3/library/unittest.html#deprecated-aliases","e3626c4f0e09728f336acc32c5a1f61c4fed9418","","api.github.com","","False","[u'https://docs.python.org/3/library/unittest.html#deprecated-aliases']","[]","[]","[]"
"pull_request_commit","474","idan","oauthlib","jdufresne","2017-04-16 21:14:22","Fix BytesWarning issued when using a string placeholder for bytes object

When running tests, fixes warnings of the form:

.../oauthlib/oauthlib/oauth1/rfc5849/utils.py:56: BytesWarning: str() on a bytes instance","40952892042c85d08107c009f77790b823fcad3c","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","475","idan","oauthlib","akira-dev","2017-04-26 15:20:35","remove check on empty scopes","17593fdeb4f3528a146da9a434e18fcc9f973e1d","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","477","idan","oauthlib","zengoma","2017-05-21 06:15:15","added ""{}[]"" to urlencoded always_safe

This fixed an issue when trying to pass filter parameters while using flask-oauthlib with https://github.com/miLibris/flask-rest-jsonapi","98a648978ebd3a51a0c7c5a3b7b3efdd44ab4a9a","","api.github.com","","False","[u'https://github.com/miLibris/flask-rest-jsonapi']","[]","[]","[]"
"pull_request_commit","478","idan","oauthlib","jdufresne","2017-06-02 12:00:28","Rename [wheel] section to [bdist_wheel] as the former is legacy

See:

https://bitbucket.org/pypa/wheel/src/54ddbcc9cec25e1f4d111a142b8bfaa163130a61/wheel/bdist_wheel.py?fileviewer=file-view-default#bdist_wheel.py-119:125

http://pythonwheels.com/","b67e178e6fe9e916192d4ce30d4fba757c768c56","","api.github.com","","False","[u'http://pythonwheels.com/', u'https://bitbucket.org/pypa/wheel/src/54ddbcc9cec25e1f4d111a142b8bfaa163130a61/wheel/bdist_wheel.py?fileviewer=file-view-default#bdist_wheel.py-119:125']","[]","[]","[]"
"pull_request_commit","479","idan","oauthlib","brettcannon","2017-06-13 17:20:44","Use SVG badges in README

They look nicer than the PNG versions.","14c4673eb933be7e49254fad77af0c96add7c231","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","480","idan","oauthlib","orenmazor","2017-06-14 10:48:47","return a more descriptive error when a redirect url is provided and it is wrong","dc8aa1f60b93c120d9594c00b250cb0d95edc7b2","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","480","idan","oauthlib","orenmazor","2017-06-14 16:19:22","switch to sending the MismatchingRedirectURIError instead","2bcb8754980d7eb54ba12a34ead1694baa12340b","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","480","idan","oauthlib","orenmazor","2017-06-14 16:22:27","adjust the test for the new exception","3dc0f8e2048c9dd4d2eb5ca1b0b2eaefd47b09d6","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","481","idan","oauthlib","skion","2017-07-30 19:45:33","Pass through nonce in code flow.","bc0fd83fa7693db7d80ce19825470b3e210753c5","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","481","idan","oauthlib","skion","2017-09-12 21:26:19","Add nonce to docstring.","32319c82375e1d892c8bab258ce57686793e00df","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","481","idan","oauthlib","skion","2017-09-13 22:18:07","Add test for nonce parameter preservation.","8437a24625aca5623b385aeba5e873f051871306","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","484","idan","oauthlib","wiliamsouza","2017-09-04 00:42:12","Change create_token_response to only save access_token when it's present in request.response_type","d42cf77515276bfb6b0500eb565270c4ea1cf411","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","484","idan","oauthlib","wiliamsouza","2017-09-04 00:44:00","Remove unused import, fix indentation and improve comment","685d85ca978b9a91f89e1d00fb7755bb46ff57c6","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","484","idan","oauthlib","wiliamsouza","2017-09-04 00:53:56","Fix AuthorizationEndpoint response_type for OpenID Connect hybrid flow","cacade56da996a19af14b8c48339ed3a558052e2","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","484","idan","oauthlib","wiliamsouza","2017-09-04 01:01:54","Add new ImplicitTokenGrantDispatcher

Changes AuthorizationEndpoint response_type `'token'`, `'id_token'` and
`'id_token token'` to work with OpenID Connect and OAuth2 implicit flow
in a transparent way","a112e151c280ef2d724f603ef17d2a1fd512f103","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","484","idan","oauthlib","wiliamsouza","2017-09-04 01:12:36","Add new AuthTokenGrantDispatcher

Change AuthorizationEndpoint grant_types `'authorization_code'` to work with
OpenID Connect and OAuth2 authorization flow in a transparent way","a4579b596de109ae1937da345b5395e4d8008497","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","484","idan","oauthlib","wiliamsouza","2017-09-04 01:15:13","Change tests to include required client_id and redirect_uri","61939722cf7f79aebb36fa80c60d88e3abf2963d","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","484","idan","oauthlib","wiliamsouza","2017-09-04 01:18:15","Remove AuthorizationEndpoint grant_types `'openid'`

Now OpenID Connect and OAuth2 authorization flow can use `authorization_code`
in a transparent way","14aee436baff777e4460fe5fa8a0907898ba0fca","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","484","idan","oauthlib","wiliamsouza","2017-09-04 01:20:31","Add sone blank lines and fix indentation","9fb35bbc71acf2d8d212c3a6a2de169a06123f34","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","484","idan","oauthlib","wiliamsouza","2017-09-19 22:26:58","Change AuthorizationEndpoint grant type id_token and id_token token to use openid_connect_implicit direct","421dee3ac40d88e41b613827107813198e704683","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","484","idan","oauthlib","wiliamsouza","2017-09-19 22:30:46","Change default empty value to None and  fix a typo","3a273599c604c2fc70dcd1f0a9cf2d9e3cc0d492","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","484","idan","oauthlib","wiliamsouza","2017-09-19 22:57:46","Add assert called to AuthTokenGrantDispatcher tests","76c08b71810b6b264ac95978e5ef1b529048ae53","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","484","idan","oauthlib","wiliamsouza","2017-09-28 00:48:05","Add request to get_authorization_code_scopes","5c4b2a35de001c572c4017abb89dc19dd4a653c7","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","486","idan","oauthlib","skion","2017-09-12 21:50:44","Fix AccountSelectionRequired typo.","61e19140b3310aade36ffd251dcf4c35b41cd36b","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","487","idan","oauthlib","MitterdorferMathias","2017-09-22 07:49:09","if `in_uri` is called and `response_mode` is not initialized an exception is raised (used by Flask_OAuthlib)","ff5088ad2f028dfad0ac9f1ed848802939a0c0e4","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","488","idan","oauthlib","wiliamsouza","2017-10-03 02:29:03","Add JWT token with it the server knows how to validate this new type of token in resource requests","336d847d6ab9afcac8f2ed740a41fbcb30ffe29c","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","488","idan","oauthlib","wiliamsouza","2017-10-03 02:31:32","Change find_token_type sorted function to reverse result and choose the valued estimated token handler","ae32bd164b561ec51aadbb89037a63a7b3c386ea","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","488","idan","oauthlib","wiliamsouza","2017-10-03 02:32:08","Add validate_id_token method to RequestValidator","c3cd8f0e9eabef0e0fb5388240bde8541b9225de","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","488","idan","oauthlib","Peter-Slump","2017-12-02 22:34:29","Added unittest for JWTToken model","5c5a02463cb7e6a86385f5c1659029f6e54a9a64","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","488","idan","oauthlib","Peter-Slump","2017-12-14 19:20:08","Updated version of Mock","d165d96b95ff30aefb03c9549f8ae073fd95a28e","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","488","idan","oauthlib","wiliamsouza","2017-12-15 16:36:04","Merge pull request #1 from Peter-Slump/openid-connect-jwt

Added unittest for JWTToken model","82a91cd9f6376b392e352d961a7b67513881e4b6","","api.github.com","","False","[]","[{u'raw': u'#1', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'1', u'']}]","[]","[]"
"pull_request_commit","491","idan","oauthlib","MattBlack85","2017-10-20 09:31:19","Check that the Bearer header is properly format","b567e8deb3a993556ff5ec084fafd1bf3822984c","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","494","idan","oauthlib","jdufresne","2017-10-24 03:00:53","Include license file in the generated wheel package

The wheel package format supports including the license file. This is
done using the [metadata] section in the setup.cfg file. For additional
information on this feature, see:

https://wheel.readthedocs.io/en/stable/index.html#including-the-license-in-the-generated-wheel-file","9085ad411a1dd00e343bff130a8726991358e5a7","","api.github.com","","False","[u'https://wheel.readthedocs.io/en/stable/index.html#including-the-license-in-the-generated-wheel-file']","[]","[]","[]"
"pull_request_commit","496","idan","oauthlib","jdufresne","2017-10-27 13:01:56","When deploying a release to PyPI, include the wheel distribution

For Travis CI documentation on including a bdist_wheel distribution,
see:

https://docs.travis-ci.com/user/deployment/pypi/#Uploading-different-distributions

Fixes #493","3e4d4c04be4f132521b64f2c17a7c8824bfe3c3b","","api.github.com","","False","[u'https://docs.travis-ci.com/user/deployment/pypi/#Uploading-different-distributions']","[{u'raw': u'#493', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'493', u'']}]","[]","[]"
"pull_request_commit","498","idan","oauthlib","mick88","2015-08-31 13:44:13","Add support for HMAC-SHA256","9d8b4329cc223982ac72b987789178064f858db5","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","498","idan","oauthlib","mick88","2015-08-31 13:59:38","Add explicit declaration of HMAC-SHA1 and point HMAC at it

To avoid confusion, HMAC constant name should explicitly state which SHA variant is used, but for backwards compatibility, SIGNATURE_HMAC is still needed","ab1b728a50b86a786247559fb423d01260dd438c","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","498","idan","oauthlib","mick88","2015-08-31 14:09:04","Merge branch 'hmac-sha256'","6edc359c8fab227eff8d2b34521bff7409d48e55","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","498","idan","oauthlib","ViktorHaag","2017-10-26 15:20:46","Merge branch 'master' of https://github.com/idan/oauthlib","d27af15e098ed29cca5c234cf99fd447658999cb","","api.github.com","","False","[u'https://github.com/idan/oauthlib']","[]","[]","[]"
"pull_request_commit","498","idan","oauthlib","ViktorHaag","2017-10-27 15:58:05","add support for HMAC-SHA256 including tests and comments","b9c647087377b5dd2411fc9f7e72ebbb0a82fd86","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","498","idan","oauthlib","ViktorHaag","2017-10-27 15:58:55","Merge branch 'master' of https://github.com/idan/oauthlib","c5f8e91b62dab6a213c671aebf4e384f64b43970","","api.github.com","","False","[u'https://github.com/idan/oauthlib']","[]","[]","[]"
"pull_request_commit","498","idan","oauthlib","ViktorHaag","2017-10-27 15:59:11","Merge branch 'master' into hmac-sha256","b457f88aad6c1b01021369cc8b8b357ab13e3917","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","498","idan","oauthlib","ViktorHaag","2017-10-27 17:11:27","constructor tests verify client built with correct signer method","be7d482a5d5696ea8aa468dc8f31a0188bc74033","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","499","idan","oauthlib","greyli","2017-11-04 05:59:41","add missing NotImplementedError","3daaa509d03ad9b0839982f7c66da7273b05fcdb","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","500","idan","oauthlib","greyli","2017-11-04 06:12:27","Check access token in self.token dict","360967b45d73fdea3e5ed5821bc47d9fa413fc0e","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","500","idan","oauthlib","greyli","2017-11-04 06:22:08","fix typo","0aa384bf0aecab83445d065d2f29bb4c343d5d0a","","api.github.com","","False","[]","[]","[]","[]"
"pull_request_commit","504","idan","oauthlib","spack971","2017-11-23 20:36:38","Add request argument to confirm_redirect_uri (#504)","a5bc23ebfa756f292c19743d12cb075b8ebec3a8","","api.github.com","","False","[]","[{u'raw': u'#504', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'504', u'']}]","[]","[]"
"pull_request_commit","505","idan","oauthlib","antoine.bertin@sgcib.com","2017-11-28 13:04:03","Fix cliend_id in web request body

Previously, cliend_id was always included in the request body
in the Authorization Code flow and the client_id parameter
was ignored in contradiction with the docs.
Fixes #495","b2353fd7301ca571aeac17820b60a37352318b98","","api.github.com","","False","[]","[{u'raw': u'#495', u'refstyle': u'#d', u'parts': [u'idan', u'oauthlib', u'495', u'']}]","[]","[]"
