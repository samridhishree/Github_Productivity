"rectype","issueid","project_owner","project_name","actor","time","text","action","title"
"issue_title","1556","nilearn","nilearn","emdupre","2017-11-16 21:01:48","In response to #1140, updates examples to use pandas instead of numpy when handling csv files. Also patches `space_net.py` to check if input is classifier when converting to numeric, otherwise stimuli labels passed from pandas introduce errors. ","start issue","Pandas examples"
"issue_closed","1556","nilearn","nilearn","GaelVaroquaux","2017-11-17 20:44:04","","closed issue","Pandas examples"
"pull_request_title","1556","nilearn","nilearn","emdupre","2017-11-16 21:01:48","In response to #1140, updates examples to use pandas instead of numpy when handling csv files. Also patches `space_net.py` to check if input is classifier when converting to numeric, otherwise stimuli labels passed from pandas introduce errors. ","f6e9fe56718944e8e1ff0fa886638f1fb3205a4a","Pandas examples"
"pull_request_merged","1556","nilearn","nilearn","GaelVaroquaux","2017-11-17 20:44:04","Pandas examples","e34697bc22ee0061bbb548c89246cd814f23153a","Pull request merge from emdupre/nilearn:pandas-examples to nilearn/nilearn:master"
"issue_comment","1556","nilearn","nilearn","emdupre","2017-11-17 16:17:49","I hadn't seen that @GaelVaroquaux opened a new PR on this, but I made commits addressing the doc build failure and moving numpy imports to relevant cells. I can close this, though, if you'd rather move ahead with #1562!","",""
"issue_comment","1556","nilearn","nilearn","emdupre","2017-11-17 16:37:06","Pushed the bug fix you implemented, and 829c572 should address the review comments on the other PR","",""
"issue_comment","1556","nilearn","nilearn","codecov[bot]","2017-11-16 21:50:27","# [Codecov](https://codecov.io/gh/nilearn/nilearn/pull/1556?src=pr&el=h1) Report
> Merging [#1556](https://codecov.io/gh/nilearn/nilearn/pull/1556?src=pr&el=desc) into [master](https://codecov.io/gh/nilearn/nilearn/commit/ca6cf18c007dc96aa9ccc7799162d035bab2fc37?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/nilearn/nilearn/pull/1556/graphs/tree.svg?width=650&height=150&src=pr&token=KpYArSdyXv)](https://codecov.io/gh/nilearn/nilearn/pull/1556?src=pr&el=tree)

```diff
@@           Coverage Diff           @@
##           master    #1556   +/-   ##
=======================================
  Coverage   94.28%   94.28%           
=======================================
  Files         122      122           
  Lines       14980    14980           
=======================================
  Hits        14124    14124           
  Misses        856      856
```


| [Impacted Files](https://codecov.io/gh/nilearn/nilearn/pull/1556?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [nilearn/decoding/space\_net.py](https://codecov.io/gh/nilearn/nilearn/pull/1556?src=pr&el=tree#diff-bmlsZWFybi9kZWNvZGluZy9zcGFjZV9uZXQucHk=) | `94.69% <ø> (ø)` | :arrow_up: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/nilearn/nilearn/pull/1556?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/nilearn/nilearn/pull/1556?src=pr&el=footer). Last update [ca6cf18...d444daf](https://codecov.io/gh/nilearn/nilearn/pull/1556?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
","",""
"issue_comment","1556","nilearn","nilearn","codecov[bot]","2017-11-16 21:50:27","# [Codecov](https://codecov.io/gh/nilearn/nilearn/pull/1556?src=pr&el=h1) Report
> Merging [#1556](https://codecov.io/gh/nilearn/nilearn/pull/1556?src=pr&el=desc) into [master](https://codecov.io/gh/nilearn/nilearn/commit/9f8da9055d6285df6319fcae4c634f3bca9797be?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/nilearn/nilearn/pull/1556/graphs/tree.svg?width=650&height=150&src=pr&token=KpYArSdyXv)](https://codecov.io/gh/nilearn/nilearn/pull/1556?src=pr&el=tree)

```diff
@@           Coverage Diff           @@
##           master    #1556   +/-   ##
=======================================
  Coverage   94.23%   94.23%           
=======================================
  Files         122      122           
  Lines       14992    14992           
=======================================
  Hits        14127    14127           
  Misses        865      865
```


| [Impacted Files](https://codecov.io/gh/nilearn/nilearn/pull/1556?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [nilearn/decoding/space\_net.py](https://codecov.io/gh/nilearn/nilearn/pull/1556?src=pr&el=tree#diff-bmlsZWFybi9kZWNvZGluZy9zcGFjZV9uZXQucHk=) | `94.69% <ø> (ø)` | :arrow_up: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/nilearn/nilearn/pull/1556?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/nilearn/nilearn/pull/1556?src=pr&el=footer). Last update [9f8da90...f6e9fe5](https://codecov.io/gh/nilearn/nilearn/pull/1556?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
","",""
"pull_request_commit_comment","1556","nilearn","nilearn","GaelVaroquaux","2017-11-16 21:07:27","Do we still need numpy in this example?","f6e9fe56718944e8e1ff0fa886638f1fb3205a4a","(None, '', u'examples/02_decoding/plot_haxby_anova_svm.py')"
"pull_request_commit_comment","1556","nilearn","nilearn","GaelVaroquaux","2017-11-16 21:11:46","Should it be ""sep"" rather than ""delimiter""?","f6e9fe56718944e8e1ff0fa886638f1fb3205a4a","(None, '', u'examples/02_decoding/plot_haxby_grid_search.py')"
"pull_request_commit_comment","1556","nilearn","nilearn","GaelVaroquaux","2017-11-16 21:15:07","Strange: you use "".values"" in one of the indexing to ""conditions"" but not the other.","f6e9fe56718944e8e1ff0fa886638f1fb3205a4a","(None, '', u'examples/plot_decoding_tutorial.py')"
"pull_request_commit_comment","1556","nilearn","nilearn","GaelVaroquaux","2017-11-16 21:16:16","Can we replace the above by ""haxby_labels.unique()""?","f6e9fe56718944e8e1ff0fa886638f1fb3205a4a","(None, '', u'examples/04_manipulating_images/plot_roi_extraction.py')"
"pull_request_commit_comment","1556","nilearn","nilearn","GaelVaroquaux","2017-11-16 21:18:54","Would ""(haxby_labels == 'house').sum()"" give the same result?","f6e9fe56718944e8e1ff0fa886638f1fb3205a4a","(None, '', u'examples/04_manipulating_images/plot_roi_extraction.py')"
"pull_request_commit_comment","1556","nilearn","nilearn","emdupre","2017-11-16 21:50:49","It's removed, and in `plot_haxby_space_net.py`!","f6e9fe56718944e8e1ff0fa886638f1fb3205a4a","(None, '', u'examples/02_decoding/plot_haxby_anova_svm.py')"
"pull_request_commit_comment","1556","nilearn","nilearn","emdupre","2017-11-16 21:51:04","Patched this for consistency, thanks!","f6e9fe56718944e8e1ff0fa886638f1fb3205a4a","(None, '', u'examples/02_decoding/plot_haxby_grid_search.py')"
"pull_request_commit_comment","1556","nilearn","nilearn","emdupre","2017-11-16 21:53:30","This gives a different result, actually, so I'm keeping with the same code for now!","f6e9fe56718944e8e1ff0fa886638f1fb3205a4a","(None, '', u'examples/04_manipulating_images/plot_roi_extraction.py')"
"pull_request_commit_comment","1556","nilearn","nilearn","bthirion","2017-11-16 22:29:31","sep="" "" ","f6e9fe56718944e8e1ff0fa886638f1fb3205a4a","(None, '', u'examples/05_advanced/plot_haxby_mass_univariate.py')"
"pull_request_commit_comment","1556","nilearn","nilearn","bthirion","2017-11-16 22:30:51","Seems unrelated, but correct.","f6e9fe56718944e8e1ff0fa886638f1fb3205a4a","(5, '', u'nilearn/decoding/space_net.py')"
"pull_request_commit_comment","1556","nilearn","nilearn","emdupre","2017-11-16 23:55:16","Thanks for catching that!","f6e9fe56718944e8e1ff0fa886638f1fb3205a4a","(None, '', u'examples/05_advanced/plot_haxby_mass_univariate.py')"
"pull_request_commit_comment","1556","nilearn","nilearn","GaelVaroquaux","2017-11-17 20:27:03","It's actually not unrelated: the changes that we did implied that we were passing in non numerical values for y, and hence the code started failing where it shoudn't :).","f6e9fe56718944e8e1ff0fa886638f1fb3205a4a","(5, '', u'nilearn/decoding/space_net.py')"
"pull_request_commit","1556","nilearn","nilearn","emdupre","2017-11-16 16:46:37","Use pandas for behavioral data in examples","987a4a93f98eec5f69c34d62ab92b6e63d5c07bb",""
"pull_request_commit","1556","nilearn","nilearn","emdupre","2017-11-16 20:53:59","Increase readability of behavioral data","48a4af7f2e248d4fe2c2853a3ec7457564da93bc",""
"pull_request_commit","1556","nilearn","nilearn","emdupre","2017-11-16 20:56:32","Update check_X_y to check if classifier","74198407c6962334bd29b57c51fa8e7b73b63b0b",""
"pull_request_commit","1556","nilearn","nilearn","emdupre","2017-11-16 21:35:12","Remove unnecessary imports","3f79b3e10c8808ba036a509982e7bfcaf2b0d271",""
"pull_request_commit","1556","nilearn","nilearn","emdupre","2017-11-16 21:46:24","Update pd.read_csv args

Updates pd.read_csv calls to use the preferred ""sep"" instead of
""delimiter.""","a387bf1fbca41edb7dc8ac30eb7008ee2d3463ae",""
"pull_request_commit","1556","nilearn","nilearn","emdupre","2017-11-16 21:49:01","Patches for pd dtypes in example

Patches condition renaming to work with pandas datatype (over old numpy),
converts numpy unique to pandas unique to chip away at numpy dependency.","8a08fbd66d59cd754e51df75c7c0cd9edcb7cc70",""
"pull_request_commit","1556","nilearn","nilearn","emdupre","2017-11-17 16:05:27","Update documentation to include pandas","1c4cba519531eaf11a9571e065ed8f17c0955dda",""
"pull_request_commit","1556","nilearn","nilearn","emdupre","2017-11-17 16:16:07","Move np imports to relevant cells","829c572ed129b96d97932932962743a4af6aec2b",""
"pull_request_commit","1556","nilearn","nilearn","emdupre","2017-11-17 16:28:27","BUG: @GaelVaroquaux fix for latest pandas","f6e9fe56718944e8e1ff0fa886638f1fb3205a4a",""
