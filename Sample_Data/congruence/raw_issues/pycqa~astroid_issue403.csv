"rectype","issueid","project_owner","project_name","actor","time","text","action","title"
"issue_title","403","pycqa","astroid","rogalski","2017-02-08 21:05:08","Needed for PyCQA/pylint#1320","start issue","Fix typing.NamedTuple being not callable"
"issue_closed","403","pycqa","astroid","rogalski","2017-02-19 20:04:34","","closed issue","Fix typing.NamedTuple being not callable"
"pull_request_title","403","pycqa","astroid","rogalski","2017-02-08 21:05:08","Needed for PyCQA/pylint#1320","7d3741e4324527b4c06e1bb4db63e65153ca1ed3","Fix typing.NamedTuple being not callable"
"issue_comment","403","pycqa","astroid","coveralls","2017-02-08 21:09:34","
[![Coverage Status](https://coveralls.io/builds/10062001/badge)](https://coveralls.io/builds/10062001)

Coverage remained the same at 89.304% when pulling **9f7a91baff9113188784f7ed952e831761f5c69d on rogalski:fix-namedtuple-not-callable** into **9ee1f58ba91a52148829a781f3bfcff6f659139e on PyCQA:master**.
","",""
"issue_comment","403","pycqa","astroid","coveralls","2017-02-08 21:09:34","
[![Coverage Status](https://coveralls.io/builds/10062001/badge)](https://coveralls.io/builds/10062001)

Coverage remained the same at 89.304% when pulling **9f7a91baff9113188784f7ed952e831761f5c69d on rogalski:fix-namedtuple-not-callable** into **9ee1f58ba91a52148829a781f3bfcff6f659139e on PyCQA:master**.
","",""
"issue_comment","403","pycqa","astroid","coveralls","2017-02-08 21:09:34","
[![Coverage Status](https://coveralls.io/builds/10062001/badge)](https://coveralls.io/builds/10062001)

Coverage remained the same at 89.304% when pulling **9f7a91baff9113188784f7ed952e831761f5c69d on rogalski:fix-namedtuple-not-callable** into **9ee1f58ba91a52148829a781f3bfcff6f659139e on PyCQA:master**.
","",""
"issue_comment","403","pycqa","astroid","coveralls","2017-02-08 21:09:34","
[![Coverage Status](https://coveralls.io/builds/10062001/badge)](https://coveralls.io/builds/10062001)

Coverage remained the same at 89.304% when pulling **9f7a91baff9113188784f7ed952e831761f5c69d on rogalski:fix-namedtuple-not-callable** into **9ee1f58ba91a52148829a781f3bfcff6f659139e on PyCQA:master**.
","",""
"issue_comment","403","pycqa","astroid","coveralls","2017-02-08 21:23:33","
[![Coverage Status](https://coveralls.io/builds/10062225/badge)](https://coveralls.io/builds/10062225)

Coverage remained the same at 89.304% when pulling **6c03951713cb891982de7ab152235dd9e5eae7e5 on rogalski:fix-namedtuple-not-callable** into **9ee1f58ba91a52148829a781f3bfcff6f659139e on PyCQA:master**.
","",""
"issue_comment","403","pycqa","astroid","coveralls","2017-02-08 21:23:34","
[![Coverage Status](https://coveralls.io/builds/10062225/badge)](https://coveralls.io/builds/10062225)

Coverage remained the same at 89.304% when pulling **6c03951713cb891982de7ab152235dd9e5eae7e5 on rogalski:fix-namedtuple-not-callable** into **9ee1f58ba91a52148829a781f3bfcff6f659139e on PyCQA:master**.
","",""
"issue_comment","403","pycqa","astroid","coveralls","2017-02-08 21:23:34","
[![Coverage Status](https://coveralls.io/builds/10062225/badge)](https://coveralls.io/builds/10062225)

Coverage remained the same at 89.304% when pulling **6c03951713cb891982de7ab152235dd9e5eae7e5 on rogalski:fix-namedtuple-not-callable** into **9ee1f58ba91a52148829a781f3bfcff6f659139e on PyCQA:master**.
","",""
"issue_comment","403","pycqa","astroid","coveralls","2017-02-08 21:29:38","
[![Coverage Status](https://coveralls.io/builds/10062348/badge)](https://coveralls.io/builds/10062348)

Coverage increased (+0.01%) to 89.318% when pulling **79e66536b786287adf4c0efce6823cc00039f9da on rogalski:fix-namedtuple-not-callable** into **9ee1f58ba91a52148829a781f3bfcff6f659139e on PyCQA:master**.
","",""
"issue_comment","403","pycqa","astroid","coveralls","2017-02-08 21:29:38","
[![Coverage Status](https://coveralls.io/builds/10062348/badge)](https://coveralls.io/builds/10062348)

Coverage increased (+0.01%) to 89.318% when pulling **79e66536b786287adf4c0efce6823cc00039f9da on rogalski:fix-namedtuple-not-callable** into **9ee1f58ba91a52148829a781f3bfcff6f659139e on PyCQA:master**.
","",""
"issue_comment","403","pycqa","astroid","coveralls","2017-02-08 21:34:22","
[![Coverage Status](https://coveralls.io/builds/10062437/badge)](https://coveralls.io/builds/10062437)

Coverage increased (+0.01%) to 89.318% when pulling **37280b4906b137dfbd8f2be4d8fce611181fa662 on rogalski:fix-namedtuple-not-callable** into **9ee1f58ba91a52148829a781f3bfcff6f659139e on PyCQA:master**.
","",""
"issue_comment","403","pycqa","astroid","coveralls","2017-02-08 21:34:22","
[![Coverage Status](https://coveralls.io/builds/10062437/badge)](https://coveralls.io/builds/10062437)

Coverage increased (+0.01%) to 89.318% when pulling **37280b4906b137dfbd8f2be4d8fce611181fa662 on rogalski:fix-namedtuple-not-callable** into **9ee1f58ba91a52148829a781f3bfcff6f659139e on PyCQA:master**.
","",""
"issue_comment","403","pycqa","astroid","coveralls","2017-02-08 21:34:22","
[![Coverage Status](https://coveralls.io/builds/10062437/badge)](https://coveralls.io/builds/10062437)

Coverage increased (+0.01%) to 89.318% when pulling **37280b4906b137dfbd8f2be4d8fce611181fa662 on rogalski:fix-namedtuple-not-callable** into **9ee1f58ba91a52148829a781f3bfcff6f659139e on PyCQA:master**.
","",""
"issue_comment","403","pycqa","astroid","coveralls","2017-02-08 21:34:22","
[![Coverage Status](https://coveralls.io/builds/10062437/badge)](https://coveralls.io/builds/10062437)

Coverage increased (+0.01%) to 89.318% when pulling **37280b4906b137dfbd8f2be4d8fce611181fa662 on rogalski:fix-namedtuple-not-callable** into **9ee1f58ba91a52148829a781f3bfcff6f659139e on PyCQA:master**.
","",""
"issue_comment","403","pycqa","astroid","coveralls","2017-02-08 21:34:22","
[![Coverage Status](https://coveralls.io/builds/10062437/badge)](https://coveralls.io/builds/10062437)

Coverage increased (+0.01%) to 89.318% when pulling **37280b4906b137dfbd8f2be4d8fce611181fa662 on rogalski:fix-namedtuple-not-callable** into **9ee1f58ba91a52148829a781f3bfcff6f659139e on PyCQA:master**.
","",""
"issue_comment","403","pycqa","astroid","rogalski","2017-02-19 20:04:32","I'll close it - it's much better solved by #390","",""
"pull_request_commit_comment","403","pycqa","astroid","rogalski","2017-02-08 21:26:35","I don't like this early exit, but on the other hand `typing` is known to be actively developed, so I don't see much value in chasing issues related to older version of library code...","7d3741e4324527b4c06e1bb4db63e65153ca1ed3","(None, '', u'astroid/tests/unittest_inference.py')"
"pull_request_commit_comment","403","pycqa","astroid","PCManticore","2017-02-09 08:48:36","What is the reason for this change? ","7d3741e4324527b4c06e1bb4db63e65153ca1ed3","(5, '', u'astroid/bases.py')"
"pull_request_commit_comment","403","pycqa","astroid","PCManticore","2017-02-09 08:50:44","I don't like it either. Does this happen with older versions of ``typing``? We should, probably, pin it to a version that doesn't give us too much trouble.","7d3741e4324527b4c06e1bb4db63e65153ca1ed3","(None, '', u'astroid/tests/unittest_inference.py')"
"pull_request_commit_comment","403","pycqa","astroid","rogalski","2017-02-09 22:06:30","typing.NamedTuple was inferred as not callable when class_context was False","7d3741e4324527b4c06e1bb4db63e65153ca1ed3","(5, '', u'astroid/bases.py')"
"pull_request_commit_comment","403","pycqa","astroid","PCManticore","2017-02-13 22:45:03","Yeah, but I'm asking from a protocol perspective. ``class_context`` is False, since the lookup is done on the instance, thus it should not go through the metaclass lookup and so on. What I'm asking is why typing.NamedTuple is special. Is it an instance or a class? If it is an Instance, how come it has a ``__call__`` defined in the metaclass (I presume), that it can access in this place? Where does its ``__call__`` come from? ","7d3741e4324527b4c06e1bb4db63e65153ca1ed3","(5, '', u'astroid/bases.py')"
"pull_request_commit","403","pycqa","astroid","rogalski","2017-02-08 21:04:29","Fix typing.NamedTuple being not callable","9f7a91baff9113188784f7ed952e831761f5c69d",""
"pull_request_commit","403","pycqa","astroid","rogalski","2017-02-08 21:17:01","Rewrite a test to check if asserted behaviour is what interpreter does","6c03951713cb891982de7ab152235dd9e5eae7e5",""
"pull_request_commit","403","pycqa","astroid","rogalski","2017-02-08 21:24:20","UT: If one of inferred is Uninferable, skip check for being callable","79e66536b786287adf4c0efce6823cc00039f9da",""
"pull_request_commit","403","pycqa","astroid","rogalski","2017-02-08 21:29:20","Fix pylon warning","37280b4906b137dfbd8f2be4d8fce611181fa662",""
"pull_request_commit","403","pycqa","astroid","rogalski","2017-02-09 22:26:24","Merge branch 'master' into fix-namedtuple-not-callable","b9d4879ca962838bb5803e0408f0367234a789d3",""
"pull_request_commit","403","pycqa","astroid","rogalski","2017-02-09 22:27:55","run tests for named tuple being callable only in python 3.6+","7d3741e4324527b4c06e1bb4db63e65153ca1ed3",""
