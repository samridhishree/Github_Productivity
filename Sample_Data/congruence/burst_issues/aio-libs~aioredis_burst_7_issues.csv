,rectype,issueid,project_owner,project_name,actor,time,text,action,title
0,issue_title,53,aio-libs,aioredis,tailhook,2014-11-10 15:34:33,"Had some troubles with multi-exec. This ain't gonna work, just to show you changes.
",start issue,Fix multi_exec for reconnecting_redis
1,issue_closed,53,aio-libs,aioredis,popravich,2014-11-10 19:09:12,,closed issue,Fix multi_exec for reconnecting_redis
2,pull_request_title,53,aio-libs,aioredis,tailhook,2014-11-10 15:34:33,"Had some troubles with multi-exec. This ain't gonna work, just to show you changes.
",620427886ec6aabbdcc7d323751f065ee1dbaca9,Fix multi_exec for reconnecting_redis
3,pull_request_merged,53,aio-libs,aioredis,popravich,2014-11-10 19:09:12,Fix multi_exec for reconnecting_redis,42a373f9ec3b2d868add9d409ef25056ba01dff2,Pull request merge from tailhook/aioredis:reconnect to aio-libs/aioredis:master
4,issue_comment,53,aio-libs,aioredis,tailhook,2014-11-10 16:45:26,"Ok. Removed `get_atomic_connection` from the `Redis`. Probably I'm still not fluent with all these abstractions.
",,
5,pull_request_commit_comment,53,aio-libs,aioredis,popravich,2014-11-10 15:44:37,"to keep it a simple generator you can get and pass `conn` as argument to `_send_pipeline` where it called in `_do_execute`:

``` python
@asyncio.coroutine
     def _do_execute(self, *, return_exceptions=False):
         # get alive connection in case of AutoConnector
         yield from asyncio.gather(*self._send_pipeline(conn),
                                   loop=self._loop,
                                   return_exceptions=True)
```
",620427886ec6aabbdcc7d323751f065ee1dbaca9,"(None, '', u'aioredis/commands/transaction.py')"
6,pull_request_commit_comment,53,aio-libs,aioredis,popravich,2014-11-10 16:11:02,"I think there is a typo and it should be `conn = yield from self._conn.get_atomic_connection()`
",620427886ec6aabbdcc7d323751f065ee1dbaca9,"(None, '', u'aioredis/commands/transaction.py')"
7,pull_request_commit_comment,53,aio-libs,aioredis,popravich,2014-11-10 16:12:34,"Don't understand why it should be here in `Redis`...
",620427886ec6aabbdcc7d323751f065ee1dbaca9,"(None, '', u'aioredis/commands/__init__.py')"
8,pull_request_commit,53,aio-libs,aioredis,tailhook,2014-11-10 15:29:02,Fix multi_exec for reconnecting_redis,620427886ec6aabbdcc7d323751f065ee1dbaca9,
0,issue_title,52,aio-libs,aioredis,tailhook,2014-11-05 14:18:59,"PoC, totally untested yet
",start issue,Prototype of auto-reconnect functionality
1,issue_closed,52,aio-libs,aioredis,popravich,2014-11-10 12:37:26,,closed issue,Prototype of auto-reconnect functionality
2,pull_request_title,52,aio-libs,aioredis,tailhook,2014-11-05 14:18:59,"PoC, totally untested yet
",266d1afe5681f18316d83370d14c6d191bcd60f2,Prototype of auto-reconnect functionality
3,pull_request_merged,52,aio-libs,aioredis,popravich,2014-11-10 12:37:26,Prototype of auto-reconnect functionality,42dd44aff69bb23a92984ea37464d0b9da9a7074,Pull request merge from tailhook/aioredis:reconnect to aio-libs/aioredis:master
4,issue_comment,52,aio-libs,aioredis,popravich,2014-11-10 09:03:58,"Hi @tailhook,

Can you remove `auto_reconnect` argument and add `create_reconnecting_redis` coroutine instead?
This would make me happy) And you can continue with tests and docs so I can merge this PR
",,
5,issue_comment,52,aio-libs,aioredis,tailhook,2014-11-10 10:31:49,"Done
",,
6,issue_comment,52,aio-libs,aioredis,tailhook,2014-11-10 10:32:02,"Hm, forgot docs...
",,
7,pull_request_commit_comment,52,aio-libs,aioredis,popravich,2014-11-06 10:00:14,"the main problem is that the signature of `execute` function is changed --
by changing `auto_reconnect`'s value you would, basically, get different interface -- `execute` would become coroutine
and, for example, pipe-lineing would work as easy is it does now
",266d1afe5681f18316d83370d14c6d191bcd60f2,"(None, '', u'aioredis/commands/__init__.py')"
8,pull_request_commit_comment,52,aio-libs,aioredis,popravich,2014-11-06 10:12:35,"this also would cause this problem:
when redis server is down this would stuck for some time
so we won't be able to control connection timeout (as we can do with `wait_for(create_redis(...), 5)`)
",266d1afe5681f18316d83370d14c6d191bcd60f2,"(21, '', u'aioredis/commands/__init__.py')"
9,pull_request_commit_comment,52,aio-libs,aioredis,popravich,2014-11-10 10:47:09,"I think `db` should be taken from previously closed connection (if any)
",266d1afe5681f18316d83370d14c6d191bcd60f2,"(22, '', u'aioredis/commands/__init__.py')"
10,pull_request_commit_comment,52,aio-libs,aioredis,tailhook,2014-11-10 10:55:25,"It's too hacky. Can we just disable `select` method?
",266d1afe5681f18316d83370d14c6d191bcd60f2,"(22, '', u'aioredis/commands/__init__.py')"
11,pull_request_commit,52,aio-libs,aioredis,tailhook,2014-11-05 14:16:43,Implement auto-reconnecting redis connection,1218ee0baea6391626d67e337c6dc194fea6ac79,
12,pull_request_commit,52,aio-libs,aioredis,tailhook,2014-11-10 10:56:25,Add docs for `create_reconnecting_redis`,266d1afe5681f18316d83370d14c6d191bcd60f2,
