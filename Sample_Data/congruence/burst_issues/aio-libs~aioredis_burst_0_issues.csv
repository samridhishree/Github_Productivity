,rectype,issueid,project_owner,project_name,actor,time,text,action,title
0,issue_title,2,aio-libs,aioredis,popravich,2014-05-26 07:43:33,"for case when `hiredis` is not available
",start issue,implement pure-python fallback redis response parser
1,issue_closed,2,aio-libs,aioredis,popravich,2015-03-05 09:04:35,,closed issue,implement pure-python fallback redis response parser
2,issue_comment,2,aio-libs,aioredis,asvetlov,2014-05-28 18:57:49,"Sounds good for me, but for you that means extra code and tests.
Do you really want to implement the feature very soon?
I guess to postpone one to the future.
At least you can make translation of hiredis events into aioredis ones and do not implement pure python parser.
",,
3,issue_comment,2,aio-libs,aioredis,popravich,2015-03-05 09:04:35,"Won't do. hiredis is much faster. It would sound more reasonable to improve hiredis parser.
",,
4,issue_comment,2,aio-libs,aioredis,kernel0,2015-03-05 12:43:15,"because hiredis package does not support windows, windows user can't use aioredis. Is there workaround?
",,
5,issue_comment,2,aio-libs,aioredis,popravich,2015-03-05 14:16:48,"hmm...
",,
6,issue_comment,2,aio-libs,aioredis,popravich,2015-03-05 14:17:08,"ok. I'll consider this
",,
7,issue_comment,2,aio-libs,aioredis,kernel0,2015-03-05 15:57:18,"thank you! :+1: 
",,
0,issue_title,1,aio-libs,aioredis,popravich,2014-05-26 07:42:09,,start issue,write tests for connection
1,issue_closed,1,aio-libs,aioredis,popravich,2014-05-30 18:42:25,,closed issue,write tests for connection
2,issue_comment,1,aio-libs,aioredis,popravich,2014-05-30 18:42:25,"done
",,
0,issue_title,6,aio-libs,aioredis,popravich,2014-05-26 09:05:20,,start issue,Implement connections Pool
1,issue_closed,6,aio-libs,aioredis,popravich,2014-06-13 21:23:19,,closed issue,Implement connections Pool
2,issue_comment,6,aio-libs,aioredis,asvetlov,2014-05-28 16:59:40,"After some thinking I've come to sharing your opinion about explicit acquiring connection from pool. It's much safer and cleaner than implicit way.
",,
3,issue_comment,6,aio-libs,aioredis,popravich,2014-05-31 10:13:27,"started implementing `RedisPool` almost the same as `aiopg.Pool`
",,
4,issue_comment,6,aio-libs,aioredis,popravich,2014-06-13 21:23:19,"done
",,
0,issue_title,3,aio-libs,aioredis,popravich,2014-05-26 07:44:37,,start issue,implement high-level commands interface
1,issue_closed,3,aio-libs,aioredis,popravich,2014-07-09 08:15:41,,closed issue,implement high-level commands interface
2,issue_comment,3,aio-libs,aioredis,popravich,2014-05-29 08:37:33,"Any ideas / proposals?
",,
3,issue_comment,3,aio-libs,aioredis,popravich,2014-05-29 09:10:16,"here is two ideas:
1.

``` python
# make a decorator that will register function as a redis command;
# make a wrapper that will (in __getattr__ call) look into registry for command
# handler and return that handler bound to connection
# like this:
def command(fun):
    """"""extract name;
       assert not in registry;
       put (name, fun) pair into registry""""""

class Wrapper:
    def __init__(self, conn):
        self.conn = conn
    def __getattr__(self, name):
        fun = registry[name]  # with KeyError to AttributeError translation ofcourse
        return partial(fun, self.conn)
```

2.

``` python
# make a connection wrapper class that will provide all commands
# (throught mixins)
# without any dynamic lookups in registry ro elsewhere
class Redis(_KeysCommandsMixin, _StringCommandsMixin,...):
    def __init__(self, conn):
        self.conn = conn
# plus a factory to instantiate this wrapper.
```
",,
4,issue_comment,3,aio-libs,aioredis,popravich,2014-05-29 12:22:04,"pros & cons:
**1.**
_pros_:
    \* dynamic handlers registration
    \* a way for registerring custom handlers
_cons_:
    \* very hard to debug

**2.**
_pros_:
    \* simple and clean way for implementing commands
    \* easy to debug calls
_cons_:
    \* no simple way for registering custom handlers/commands
",,
5,issue_comment,3,aio-libs,aioredis,popravich,2014-05-29 12:22:41,"+1 for option **2**
",,
6,issue_comment,3,aio-libs,aioredis,asvetlov,2014-05-29 12:27:33,"I vote on the second option too.

On Thu, May 29, 2014 at 3:22 PM, Alexey Popravka notifications@github.com
wrote:

> +1 for option _2_
> 
> â€”
> Reply to this email directly or view it on GitHub
> https://github.com/popravich/aioredis/issues/3#issuecomment-44525940.

## 

Thanks,
Andrew Svetlov
",,
7,issue_comment,3,aio-libs,aioredis,popravich,2014-05-30 18:45:24,"ok.
started implementing option 2.
",,
8,issue_comment,3,aio-libs,aioredis,asvetlov,2014-05-30 18:48:24,"Thanks
",,
9,issue_comment,3,aio-libs,aioredis,popravich,2014-06-03 08:29:05,"For implementation status see #22 
",,
0,issue_title,4,aio-libs,aioredis,popravich,2014-05-26 07:44:53,"and docstrings
",start issue,write docs
1,issue_closed,4,aio-libs,aioredis,popravich,2014-06-24 10:20:48,,closed issue,write docs
2,issue_comment,4,aio-libs,aioredis,popravich,2014-06-24 10:20:48,"done for initial release
",,
0,issue_title,5,aio-libs,aioredis,popravich,2014-05-26 09:05:00,"in branch `redis_on_streams`
",start issue,try using asyncio streams instead of RedisProtocol
1,issue_closed,5,aio-libs,aioredis,popravich,2014-05-27 07:30:05,,closed issue,try using asyncio streams instead of RedisProtocol
2,issue_comment,5,aio-libs,aioredis,popravich,2014-05-27 07:30:05,"done
",,
