"rectype","issueid","project_owner","project_name","actor","time","text","action","title"
"issue_title","318","nilearn","nilearn","AlexandreAbraham","2014-12-12 15:21:14","Conda handles dependencies better than pip so we could submit nilearn here. It would be easier to install for non-technical people.
","start issue","Conda install nilearn"
"issue_closed","318","nilearn","nilearn","AlexandreAbraham","2016-06-17 12:09:39","","closed issue","Conda install nilearn"
"issue_comment","318","nilearn","nilearn","lesteve","2014-12-12 15:42:26","FWIW nibabel is not available in conda.
","",""
"issue_comment","318","nilearn","nilearn","GaelVaroquaux","2014-12-12 16:09:12","> FWIW nibabel is not available in conda.

Maybe this can be sorted out using https://binstar.org/ (not sure, worth
checking)
","",""
"issue_comment","318","nilearn","nilearn","AlexandreAbraham","2016-06-17 12:09:53","Solved itself. `conda install -c=conda-forge nilearn`
","",""
"issue_comment","318","nilearn","nilearn","AlexandreAbraham","2016-06-17 12:27:46","> I probably need to do something to have nilearn 0.2.5 available in conda-forge

https://conda-forge.github.io/#update_recipe

Basically, we just have to do a PR to increment a version number in the yaml recipe file.

> Why? Pip works, why confuse users?

I would like to know if there is any benefit in using conda-forge. If not, we may advertise not to use it as we do not control the diffusion. If, during a tutorial, somebody uses anaconda to install nilearn and does not have the right version, I can't imagine what will happen if he uses pip on top of that to upgrade it.
","",""
"issue_comment","318","nilearn","nilearn","AlexandreAbraham","2016-06-17 12:41:42","No, I did not looked a the commits and, in conda-forge, I've seen a lot of packages that seems migrated automatically from pypi though an automated script. Also, I've missed a lot of team meetings recently ;).

OK, so, in that case, it's already in good hands.
","",""
