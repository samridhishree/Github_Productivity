"rectype","issueid","project_owner","project_name","actor","time","text","action","title"
"issue_title","208","idan","oauthlib","masci","2013-09-17 16:30:47","Just a proof of concept, I tried to uniform the logic for the three grants involved with Client authentication and make it generic enough for final users to decide if and how authenticate Clients through the validator.
","start issue","Ask validator if Client has to be authenticated"
"issue_closed","208","idan","oauthlib","ib-lundgren","2013-09-18 16:18:03","","closed issue","Ask validator if Client has to be authenticated"
"pull_request_title","208","idan","oauthlib","masci","2013-09-17 16:30:47","Just a proof of concept, I tried to uniform the logic for the three grants involved with Client authentication and make it generic enough for final users to decide if and how authenticate Clients through the validator.
","4ea5db5724bf71d84d27f4c68f177129bac1c637","Ask validator if Client has to be authenticated"
"pull_request_merged","208","idan","oauthlib","ib-lundgren","2013-09-18 16:18:03","Ask validator if Client has to be authenticated","5c9c8366edbdab7977f6aeb463dd5bed5b9fdc57","Pull request merge from masci/oauthlib:is_auth_required_method to idan/oauthlib:master"
"issue_comment","208","idan","oauthlib","ib-lundgren","2013-09-18 16:18:00","Great work @masci
","",""
"pull_request_commit_comment","208","idan","oauthlib","ib-lundgren","2013-09-17 20:14:11","Nice that you added this in there, uncertain why it never got there in the first place. I probably just missed it in the spec.
","4ea5db5724bf71d84d27f4c68f177129bac1c637","(36, '', u'oauthlib/oauth2/rfc6749/grant_types/resource_owner_password_credentials.py')"
"pull_request_commit_comment","208","idan","oauthlib","ib-lundgren","2013-09-17 20:14:41","Neat getting rid of this awkward check.
","4ea5db5724bf71d84d27f4c68f177129bac1c637","(36, '', u'oauthlib/oauth2/rfc6749/grant_types/authorization_code.py')"
"pull_request_commit_comment","208","idan","oauthlib","ib-lundgren","2013-09-17 20:15:31","Should this be `return True` instead? Since the default should be to authenticate and then providers implementing non authenticated support could override this method.
","4ea5db5724bf71d84d27f4c68f177129bac1c637","(None, '', u'oauthlib/oauth2/rfc6749/request_validator.py')"
"pull_request_commit_comment","208","idan","oauthlib","masci","2013-09-18 08:22:17","At first I was actually returning True, which is perfectly ok with the standard and is coherent with the current behaviour of oauthlib, but then I thought this would be an assumption of the server and wasn't sure what to do...
For me it's ok returning true since, as you say, I could easily implement my logic inside my validator.
","4ea5db5724bf71d84d27f4c68f177129bac1c637","(None, '', u'oauthlib/oauth2/rfc6749/request_validator.py')"
"pull_request_commit_comment","208","idan","oauthlib","ib-lundgren","2013-09-18 11:45:14","Think it is ok to make this assumption. Will try and make it clear in the docs as well, maybe even a full public vs confidential client section is in order.
","4ea5db5724bf71d84d27f4c68f177129bac1c637","(None, '', u'oauthlib/oauth2/rfc6749/request_validator.py')"
"pull_request_commit_comment","208","idan","oauthlib","masci","2013-09-18 13:34:05",":+1: 
","4ea5db5724bf71d84d27f4c68f177129bac1c637","(None, '', u'oauthlib/oauth2/rfc6749/request_validator.py')"
"pull_request_commit","208","idan","oauthlib","masci@evonove.it","2013-09-16 22:25:10","added client_authentication_required() method to the validator","dff8e6d170f8028c9169bde1d208c1cccbea5aae",""
"pull_request_commit","208","idan","oauthlib","masci@evonove.it","2013-09-16 22:31:25","ask validator if client has to be authenticated","07326c9baad1dcc631157f8edfa508066aee6d23",""
"pull_request_commit","208","idan","oauthlib","masci@evonove.it","2013-09-18 13:31:41","client authentication needed by default","4ea5db5724bf71d84d27f4c68f177129bac1c637",""
