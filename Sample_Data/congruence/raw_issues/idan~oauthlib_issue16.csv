"rectype","issueid","project_owner","project_name","actor","time","text","action","title"
"issue_title","16","idan","oauthlib","ib-lundgren","2012-03-31 09:09:20","Mostly migrated utility methods from OAuth 1 utils.py.

New methods are:

add_params_to_uri which takes add_params_to_qs one step further.
host_from_uri which extract host from URI and splits it in domain + port, might need renaming. Used for OAuth2 bearer tokens.

Tests also included.
","start issue","Utility methods for OAuth2"
"issue_closed","16","idan","oauthlib","idan","2012-04-11 10:04:26","","closed issue","Utility methods for OAuth2"
"pull_request_title","16","idan","oauthlib","ib-lundgren","2012-03-31 09:09:20","Mostly migrated utility methods from OAuth 1 utils.py.

New methods are:

add_params_to_uri which takes add_params_to_qs one step further.
host_from_uri which extract host from URI and splits it in domain + port, might need renaming. Used for OAuth2 bearer tokens.

Tests also included.
","0144e370874e8525b955eb007a90c205e5df7559","Utility methods for OAuth2"
"pull_request_merged","16","idan","oauthlib","idan","2012-04-11 10:04:26","Utility methods for OAuth2","d7efe3adf99f442e913655867aa6f6fa392a6371","Pull request merge from ib-lundgren/oauthlib:oauth2_utils to idan/oauthlib:master"
"issue_comment","16","idan","oauthlib","dgouldin","2012-04-07 21:07:44","In the name of DRY, are there utils that can be abstracted out of both oauth 1 and 2 and put in a base utils module?  This would probably require restructuring of the oauth 1 rfc code into its own package, but honestly I'd prefer it that way anyway.
","",""
"issue_comment","16","idan","oauthlib","idan","2012-04-11 10:04:11","Merging this for now, we can abstract and improve as we go.
","",""
"pull_request_commit","16","idan","oauthlib","ib-lundgren","2012-03-31 08:59:22","Utility methods for OAuth2","0144e370874e8525b955eb007a90c205e5df7559",""
