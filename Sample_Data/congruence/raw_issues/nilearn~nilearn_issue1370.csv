"rectype","issueid","project_owner","project_name","actor","time","text","action","title"
"issue_title","1370","nilearn","nilearn","KamalakerDadi","2017-01-28 15:30:55","Still to do:

- More work on example.

- Update doc/connectivity/parcellating.rst

- Including in doc/whatsnew.rst 

But, PR is very much reviewable.","start issue","Clustering methods - KMeans and Ward for fMRI images"
"pull_request_title","1370","nilearn","nilearn","KamalakerDadi","2017-01-28 15:30:55","Still to do:

- More work on example.

- Update doc/connectivity/parcellating.rst

- Including in doc/whatsnew.rst 

But, PR is very much reviewable.","8d2fd39b778960f2128c1f94f4c2882984da1732","Clustering methods - KMeans and Ward for fMRI images"
"issue_comment","1370","nilearn","nilearn","GaelVaroquaux","2017-09-19 21:02:10","From a cursory read, this looks almost ready to merge. There is a conflict to fix in whats_new, and I've made a few comments, but there isn't much extra work on this.","",""
"issue_comment","1370","nilearn","nilearn","codecov[bot]","2017-02-10 12:11:39","# [Codecov](https://codecov.io/gh/nilearn/nilearn/pull/1370?src=pr&el=h1) Report
> Merging [#1370](https://codecov.io/gh/nilearn/nilearn/pull/1370?src=pr&el=desc) into [master](https://codecov.io/gh/nilearn/nilearn/commit/7e413a51676fea8bdcbab12e20482da6c417567c?src=pr&el=desc) will **increase** coverage by `0.08%`.
> The diff coverage is `97.97%`.

[![Impacted file tree graph](https://codecov.io/gh/nilearn/nilearn/pull/1370/graphs/tree.svg?width=650&token=KpYArSdyXv&height=150&src=pr)](https://codecov.io/gh/nilearn/nilearn/pull/1370?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##           master    #1370      +/-   ##
==========================================
+ Coverage   94.48%   94.57%   +0.08%     
==========================================
  Files         122      124       +2     
  Lines       14912    15159     +247     
==========================================
+ Hits        14090    14337     +247     
  Misses        822      822
```


| [Impacted Files](https://codecov.io/gh/nilearn/nilearn/pull/1370?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [nilearn/\_\_init\_\_.py](https://codecov.io/gh/nilearn/nilearn/pull/1370?src=pr&el=tree#diff-bmlsZWFybi9fX2luaXRfXy5weQ==) | `100% <ø> (ø)` | :arrow_up: |
| [nilearn/regions/\_\_init\_\_.py](https://codecov.io/gh/nilearn/nilearn/pull/1370?src=pr&el=tree#diff-bmlsZWFybi9yZWdpb25zL19faW5pdF9fLnB5) | `100% <100%> (ø)` | :arrow_up: |
| [nilearn/regions/tests/test\_parcellations.py](https://codecov.io/gh/nilearn/nilearn/pull/1370?src=pr&el=tree#diff-bmlsZWFybi9yZWdpb25zL3Rlc3RzL3Rlc3RfcGFyY2VsbGF0aW9ucy5weQ==) | `100% <100%> (ø)` | |
| [nilearn/regions/parcellations.py](https://codecov.io/gh/nilearn/nilearn/pull/1370?src=pr&el=tree#diff-bmlsZWFybi9yZWdpb25zL3BhcmNlbGxhdGlvbnMucHk=) | `94.79% <94.79%> (ø)` | |
| [nilearn/decomposition/base.py](https://codecov.io/gh/nilearn/nilearn/pull/1370?src=pr&el=tree#diff-bmlsZWFybi9kZWNvbXBvc2l0aW9uL2Jhc2UucHk=) | `96.12% <0%> (+0.64%)` | :arrow_up: |
| [nilearn/input\_data/base\_masker.py](https://codecov.io/gh/nilearn/nilearn/pull/1370?src=pr&el=tree#diff-bmlsZWFybi9pbnB1dF9kYXRhL2Jhc2VfbWFza2VyLnB5) | `85.5% <0%> (+1.44%)` | :arrow_up: |
| [nilearn/input\_data/multi\_nifti\_masker.py](https://codecov.io/gh/nilearn/nilearn/pull/1370?src=pr&el=tree#diff-bmlsZWFybi9pbnB1dF9kYXRhL211bHRpX25pZnRpX21hc2tlci5weQ==) | `95.94% <0%> (+4.05%)` | :arrow_up: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/nilearn/nilearn/pull/1370?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/nilearn/nilearn/pull/1370?src=pr&el=footer). Last update [7e413a5...8d2fd39](https://codecov.io/gh/nilearn/nilearn/pull/1370?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
","",""
"pull_request_commit_comment","1370","nilearn","nilearn","KamalakerDadi","2017-04-27 12:00:45","We should use our own get_data to avoid the side effect.","8d2fd39b778960f2128c1f94f4c2882984da1732","(None, '', u'nilearn/parcellations.py')"
"pull_request_commit_comment","1370","nilearn","nilearn","KamalakerDadi","2017-04-27 12:01:37","Change this to label_img","8d2fd39b778960f2128c1f94f4c2882984da1732","(None, '', u'nilearn/parcellations.py')"
"pull_request_commit_comment","1370","nilearn","nilearn","GaelVaroquaux","2017-05-29 20:20:17","""the :class:`nilearn.parcellations.Parcellations` object, and full...""","8d2fd39b778960f2128c1f94f4c2882984da1732","(None, '', u'doc/connectivity/parcellating.rst')"
"pull_request_commit_comment","1370","nilearn","nilearn","GaelVaroquaux","2017-05-29 20:21:56","Am I wrong, or did you somewhat repeat the last paragraph?","8d2fd39b778960f2128c1f94f4c2882984da1732","(None, '', u'doc/connectivity/parcellating.rst')"
"pull_request_commit_comment","1370","nilearn","nilearn","GaelVaroquaux","2017-05-29 20:22:37","Repeated paragraph","8d2fd39b778960f2128c1f94f4c2882984da1732","(None, '', u'doc/connectivity/parcellating.rst')"
"pull_request_commit_comment","1370","nilearn","nilearn","GaelVaroquaux","2017-05-29 20:23:41","are found in the `labels_img_` attribute of the :class:`...Parcellation` object after fitting it to the data.","8d2fd39b778960f2128c1f94f4c2882984da1732","(None, '', u'doc/connectivity/parcellating.rst')"
"pull_request_commit_comment","1370","nilearn","nilearn","GaelVaroquaux","2017-05-29 20:26:09","These methods can be interesting to create a 'compressed'... by mean signals on the parcellation, which can subsequently be used for statistical analysis or machine learning.","8d2fd39b778960f2128c1f94f4c2882984da1732","(None, '', u'examples/03_connectivity/plot_rest_clustering.py')"
"pull_request_commit_comment","1370","nilearn","nilearn","GaelVaroquaux","2017-05-29 20:31:57","Also, these methods can be interesting to learn... for instance to use in a classification task be controls and disease states","8d2fd39b778960f2128c1f94f4c2882984da1732","(None, '', u'examples/03_connectivity/plot_rest_clustering.py')"
"pull_request_commit_comment","1370","nilearn","nilearn","GaelVaroquaux","2017-05-29 20:34:02","Don't mention joblib. ""To see the benefits of caching...""","8d2fd39b778960f2128c1f94f4c2882984da1732","(None, '', u'examples/03_connectivity/plot_rest_clustering.py')"
"pull_request_commit_comment","1370","nilearn","nilearn","GaelVaroquaux","2017-05-29 20:36:42","I think that we could simplify the example by just using the default background, and thus not computing the mean img","8d2fd39b778960f2128c1f94f4c2882984da1732","(None, '', u'examples/03_connectivity/plot_rest_clustering.py')"
"pull_request_commit_comment","1370","nilearn","nilearn","GaelVaroquaux","2017-05-29 20:39:34","I think that it would be better to not use math_img and simply run np.sum, np.min, and np.max on the result of .get_data() above.","8d2fd39b778960f2128c1f94f4c2882984da1732","(None, '', u'examples/03_connectivity/plot_rest_clustering.py')"
"pull_request_commit_comment","1370","nilearn","nilearn","GaelVaroquaux","2017-05-29 20:41:17","It does mean that we would compute the mean img a bit lower in the script, but I think that it's useful later, and not very useful here.","8d2fd39b778960f2128c1f94f4c2882984da1732","(None, '', u'examples/03_connectivity/plot_rest_clustering.py')"
"pull_request_commit_comment","1370","nilearn","nilearn","GaelVaroquaux","2017-05-29 20:44:43","I try to always use a ""nii.gz"" in the examples, to teach users to use it, as it saves space on the disk.","8d2fd39b778960f2128c1f94f4c2882984da1732","(None, '', u'examples/03_connectivity/plot_rest_clustering.py')"
"pull_request_commit_comment","1370","nilearn","nilearn","GaelVaroquaux","2017-05-29 20:54:11","I think that we should clone the masker in this function. The reasoning is to avoid a different behavior when run in parallel and in series","8d2fd39b778960f2128c1f94f4c2882984da1732","(None, '', u'nilearn/regions/parcellations.py')"
"pull_request_commit_comment","1370","nilearn","nilearn","GaelVaroquaux","2017-05-29 20:56:35","Not only for ward? For complete and average, right?","8d2fd39b778960f2128c1f94f4c2882984da1732","(None, '', u'nilearn/regions/parcellations.py')"
"pull_request_commit_comment","1370","nilearn","nilearn","KamalakerDadi","2017-05-30 13:59:46","Yes, I missed that. I have added now. Thanks","8d2fd39b778960f2128c1f94f4c2882984da1732","(None, '', u'nilearn/regions/parcellations.py')"
"pull_request_commit_comment","1370","nilearn","nilearn","GaelVaroquaux","2017-09-19 20:45:11","Now that you've simplified this example (which is a great thing), you could merge this header with the one above: there is no need for a subsection.","8d2fd39b778960f2128c1f94f4c2882984da1732","(None, '', u'doc/connectivity/parcellating.rst')"
"pull_request_commit_comment","1370","nilearn","nilearn","GaelVaroquaux","2017-09-19 20:47:35","This reference should go above the other one.","8d2fd39b778960f2128c1f94f4c2882984da1732","(None, '', u'examples/03_connectivity/plot_rest_clustering.py')"
"pull_request_commit_comment","1370","nilearn","nilearn","GaelVaroquaux","2017-09-19 20:51:58","If I run this example, the caching doesn't seem to work: the second call to fit takes the same time as the first call. Maybe it's a question of adjusting how ""memory_level"" is propagated in the object?","8d2fd39b778960f2128c1f94f4c2882984da1732","(150, '', u'examples/03_connectivity/plot_rest_clustering.py')"
"pull_request_commit_comment","1370","nilearn","nilearn","GaelVaroquaux","2017-09-19 20:54:02","I don't understand why we need both ""index_img"" and the list indexing on ""fmi_compressed"". It seems that fmri_compressed is not what I would have expected it to be: a 4D nifti image.","8d2fd39b778960f2128c1f94f4c2882984da1732","(None, '', u'examples/03_connectivity/plot_rest_clustering.py')"
"pull_request_commit_comment","1370","nilearn","nilearn","GaelVaroquaux","2017-09-19 20:55:00","The text here is incorrect: it's 100 parcels.","8d2fd39b778960f2128c1f94f4c2882984da1732","(None, '', u'examples/03_connectivity/plot_rest_clustering.py')"
"pull_request_commit_comment","1370","nilearn","nilearn","GaelVaroquaux","2017-09-19 20:56:04","The results look really ugly. Could you try reducing the number of parcels (to 50 for instance), and smoothing, if it still looks ugly.","8d2fd39b778960f2128c1f94f4c2882984da1732","(None, '', u'examples/03_connectivity/plot_rest_clustering.py')"
"pull_request_commit_comment","1370","nilearn","nilearn","GaelVaroquaux","2017-09-19 21:00:08","Why did you put this in a separate method? It would be simpler to inline it into the ""fit"" method.","8d2fd39b778960f2128c1f94f4c2882984da1732","(None, '', u'nilearn/regions/parcellations.py')"
"pull_request_commit_comment","1370","nilearn","nilearn","KamalakerDadi","2017-09-20 14:37:27","For me, I renamed the memory to new cache directory. It looks like it is working.
You have less time taken by object for second time.

Ward agglomeration 1000 clusters: 15.44s
Ward agglomeration 2000 clusters: 10.84s
","8d2fd39b778960f2128c1f94f4c2882984da1732","(150, '', u'examples/03_connectivity/plot_rest_clustering.py')"
"pull_request_commit_comment","1370","nilearn","nilearn","KamalakerDadi","2017-09-20 14:38:25","Oops. Yes it is incorrect.","8d2fd39b778960f2128c1f94f4c2882984da1732","(None, '', u'examples/03_connectivity/plot_rest_clustering.py')"
"pull_request_commit_comment","1370","nilearn","nilearn","KamalakerDadi","2017-09-20 14:40:09","I thought it will be for easy readability.","8d2fd39b778960f2128c1f94f4c2882984da1732","(None, '', u'nilearn/regions/parcellations.py')"
"pull_request_commit_comment","1370","nilearn","nilearn","KamalakerDadi","2017-09-20 14:43:57","This plot is to show the compressed version in comparison to a 4D nifti image which is on above.

I should either use index_img or mean_img for 3D visualization with ```plot_epi```.","8d2fd39b778960f2128c1f94f4c2882984da1732","(None, '', u'examples/03_connectivity/plot_rest_clustering.py')"
"pull_request_commit_comment","1370","nilearn","nilearn","KamalakerDadi","2017-09-20 14:47:00",">the list indexing on ""fmi_compressed""

Because this object operates on a list of nifti images and in return as a list.","8d2fd39b778960f2128c1f94f4c2882984da1732","(None, '', u'examples/03_connectivity/plot_rest_clustering.py')"
"pull_request_commit","1370","nilearn","nilearn","KamalakerDadi","2017-01-28 15:22:26","Clustering methods - KMeans and Ward for fMRI images","797bd4dc0f78b92579e9f2da4bb99cd8e99d3711",""
"pull_request_commit","1370","nilearn","nilearn","KamalakerDadi","2017-01-29 09:29:48","ImportError sklearn<0.14.1, Attempts to fix Travis failures","31565012f07e08b4187d780329a91fa6cc5ea4b1",""
"pull_request_commit","1370","nilearn","nilearn","KamalakerDadi","2017-01-29 11:47:45","Attempts to fix Travis failure","0044e6ff436e0533594aad61c528caec35f63d4d",""
"pull_request_commit","1370","nilearn","nilearn","KamalakerDadi","2017-01-30 00:56:38","Fixing tests with sklearn compatible versions","987935afbe800860c1c3919b1495a43e91cf28ef",""
"pull_request_commit","1370","nilearn","nilearn","KamalakerDadi","2017-01-30 01:06:05","Minor fix in tests","ab7855cf239c6ea061eb0ec60d3bd7b1d4294ee8",""
"pull_request_commit","1370","nilearn","nilearn","KamalakerDadi","2017-01-30 01:15:59","Minor fixes Travis failure","a52361dfca433ee099b321a831b2bc8de92f1556",""
"pull_request_commit","1370","nilearn","nilearn","KamalakerDadi","2017-02-07 12:20:00","flake8 corrections & added missing return in fit_transform","28bb450e35de2606231dbe9dab4fda4ac8acdc07",""
"pull_request_commit","1370","nilearn","nilearn","KamalakerDadi","2017-02-10 12:06:39","Minor changes in the plotting imports in example","d9c3a9a391142d6c81b5e32f7511a1033dd93b85",""
"pull_request_commit","1370","nilearn","nilearn","KamalakerDadi","2017-03-04 10:56:44","ENH: inverse_transform integrated operable on list of numpy arrays","95b720ce1594156a1034d63ebcba7566196c9d44",""
"pull_request_commit","1370","nilearn","nilearn","KamalakerDadi","2017-03-04 11:54:47","Tests for inverse_transform","090f2939c6497162ea3fb8cad1e43c10f8e17718",""
"pull_request_commit","1370","nilearn","nilearn","KamalakerDadi","2017-03-04 14:15:53","ENH: Example adaptation with Parcellations object","702d90f02160cf0cb246f53b6aebe549885629d2",""
"pull_request_commit","1370","nilearn","nilearn","KamalakerDadi","2017-03-04 16:36:34","Test to understand to fix matplotlib error","9f3dbbc1cab54a8b378099800d253b8cea0ebe4a",""
"pull_request_commit","1370","nilearn","nilearn","KamalakerDadi","2017-03-04 16:40:47","Test thte CI","9f4896a884beccf4faafc93f9bc6104962b18975",""
"pull_request_commit","1370","nilearn","nilearn","KamalakerDadi","2017-03-04 17:16:40","Iter: Test travis","ad9cae85ceba67b2b7719d3e0a3c505f18f89e19",""
"pull_request_commit","1370","nilearn","nilearn","KamalakerDadi","2017-03-04 17:53:41","FIX: tests in Travis work along with @GaelVaroquaux","72072b6ba6863f15d55da05d5533fb0d04d47cf6",""
"pull_request_commit","1370","nilearn","nilearn","KamalakerDadi","2017-03-04 18:16:34","Iter: Fixing Travis","11ad15eee50ef34a443f9de4adc59236ae322949",""
"pull_request_commit","1370","nilearn","nilearn","KamalakerDadi","2017-03-04 18:19:05","Iter: Fix travis","bf15e1f47a3f9de9bb11c3462512dc18c3021a95",""
"pull_request_commit","1370","nilearn","nilearn","KamalakerDadi","2017-03-04 18:31:25","Iter again: fixing plotting error","07c0fc31426762a0ccbabdcd151b2849c64f019e",""
"pull_request_commit","1370","nilearn","nilearn","KamalakerDadi","2017-03-16 12:23:30","Fix CircleCI- changing the way attributes are called in doc","d025fb11da068b392012f55e21902a7dcc863c80",""
"pull_request_commit","1370","nilearn","nilearn","KamalakerDadi","2017-04-03 20:13:36","Addressed comments @GaelVaroquaux - refactored clustering example","8935e9f94521ee713dafddd2829a5569e7c5e251",""
"pull_request_commit","1370","nilearn","nilearn","KamalakerDadi","2017-05-07 14:56:40","Addressed @Gael comments:
 - Improving plot_rest_clustering example
 - Moved to module regions
 - Minor improvements in userguide parcellations","1c3e43792e5bd096c6f72aceecd42945df9b5783",""
"pull_request_commit","1370","nilearn","nilearn","KamalakerDadi","2017-05-07 15:00:58","FIX: Module import in example","8855b2ca74ad6c7b36e90dc8fae6187a7b2e92b9",""
"pull_request_commit","1370","nilearn","nilearn","KamalakerDadi","2017-05-07 17:21:36","Iter on Sphinx doc","5812f788dcefec5ba448f820a748d24beaa14c9d",""
"pull_request_commit","1370","nilearn","nilearn","KamalakerDadi","2017-05-29 18:24:51","Drop sklearn < 0.15","0bfcb193115bc0d73846b58e0a95baa6a015bcfe",""
"pull_request_commit","1370","nilearn","nilearn","KamalakerDadi","2017-05-29 20:15:32","FIX: referencing from old module. Should be nilearn.regions.Parcellations","1931612bfd7d8362aaba28494267b34de68a6b3d",""
"pull_request_commit","1370","nilearn","nilearn","KamalakerDadi","2017-05-30 14:07:35","Few improvements in the user guide section, Parcellations object and example","b74ee27d6387690a27dbb8251df86a74fdb6b23a",""
"pull_request_commit","1370","nilearn","nilearn","KamalakerDadi","2017-05-30 14:16:49","DOC: Added in whats_new.rst","3f2e04fe5cd449cd026a4dc9859c18748b16f18a",""
"pull_request_commit","1370","nilearn","nilearn","KamalakerDadi","2017-08-24 19:37:39","Rebase & fix conflict","1f7cbd26f5502686bcc1b7b4b1eefda2c62ee1bb",""
"pull_request_commit","1370","nilearn","nilearn","KamalakerDadi","2017-09-23 13:57:45","Simplified headlines, ref, inline _fit_method to fit","7b3aa1000b745cdaf8db2f0b47a1680c563c03c7",""
"pull_request_commit","1370","nilearn","nilearn","KamalakerDadi","2017-09-24 09:41:48","Adjust object return for single subject inputs & tests","fde3b28ba950fd0238dab37fe320407ab0794424",""
"pull_request_commit","1370","nilearn","nilearn","KamalakerDadi","2017-09-30 09:57:41","Added explanation for KMeans - standardization & smoothing","8d2fd39b778960f2128c1f94f4c2882984da1732",""
