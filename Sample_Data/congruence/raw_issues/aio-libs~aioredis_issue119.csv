"rectype","issueid","project_owner","project_name","actor","time","text","action","title"
"issue_title","119","aio-libs","aioredis","the-panda","2016-04-05 15:54:08","I have continued the work of [trezorg](https://github.com/trezorg/aioredis) to add cluster support. All the old tests now run against both a standard Redis and a Redis cluster (except those which test features that are not available or not yet supported on a cluster).
","start issue","Add cluster support"
"pull_request_title","119","aio-libs","aioredis","the-panda","2016-04-05 15:54:08","I have continued the work of [trezorg](https://github.com/trezorg/aioredis) to add cluster support. All the old tests now run against both a standard Redis and a Redis cluster (except those which test features that are not available or not yet supported on a cluster).
","7978ce26787ddc4ad9938a36c036cda020e0eebd","Add cluster support"
"issue_comment","119","aio-libs","aioredis","coveralls","2016-04-06 11:00:01","[![Coverage Status](https://coveralls.io/builds/5681650/badge)](https://coveralls.io/builds/5681650)

Coverage decreased (-14.9%) to 77.592% when pulling **bfa3650b98fa5fd36eca27db78772aec3057fc54 on ymap:master** into **3d97b83019b122288d7d2f561993ca6f907c6a47 on aio-libs:master**.
","",""
"issue_comment","119","aio-libs","aioredis","coveralls","2016-04-06 12:53:11","[![Coverage Status](https://coveralls.io/builds/5682755/badge)](https://coveralls.io/builds/5682755)

Coverage decreased (-14.8%) to 77.626% when pulling **9c2e9148caea2d3dc98e7bf0177381024b5c9b25 on ymap:master** into **3d97b83019b122288d7d2f561993ca6f907c6a47 on aio-libs:master**.
","",""
"issue_comment","119","aio-libs","aioredis","popravich","2016-04-06 13:08:04","ok, thanks.
I, obviously, need some time to review this
","",""
"issue_comment","119","aio-libs","aioredis","coveralls","2016-04-12 14:24:58","[![Coverage Status](https://coveralls.io/builds/5755703/badge)](https://coveralls.io/builds/5755703)

Coverage decreased (-14.9%) to 77.592% when pulling **c91510c8ef8fe49185d512f821da2fb101699403 on ymap:master** into **3d97b83019b122288d7d2f561993ca6f907c6a47 on aio-libs:master**.
","",""
"issue_comment","119","aio-libs","aioredis","coveralls","2016-04-13 14:52:26","[![Coverage Status](https://coveralls.io/builds/5772094/badge)](https://coveralls.io/builds/5772094)

Coverage decreased (-6.8%) to 85.667% when pulling **70fc958be91a6570dfcac2ecd17738128d4a3e70 on ymap:master** into **3d97b83019b122288d7d2f561993ca6f907c6a47 on aio-libs:master**.
","",""
"issue_comment","119","aio-libs","aioredis","coveralls","2016-04-13 15:14:33","[![Coverage Status](https://coveralls.io/builds/5772486/badge)](https://coveralls.io/builds/5772486)

Coverage decreased (-8.8%) to 83.66% when pulling **0e2f0929d3aa0faa73ac194bf41156111da4114b on ymap:master** into **3d97b83019b122288d7d2f561993ca6f907c6a47 on aio-libs:master**.
","",""
"issue_comment","119","aio-libs","aioredis","coveralls","2016-04-13 15:26:04","[![Coverage Status](https://coveralls.io/builds/5772687/badge)](https://coveralls.io/builds/5772687)

Coverage decreased (-8.7%) to 83.708% when pulling **f58f840b9126ff6334818823dc856c8b7731dbbc on ymap:master** into **3d97b83019b122288d7d2f561993ca6f907c6a47 on aio-libs:master**.
","",""
"issue_comment","119","aio-libs","aioredis","coveralls","2016-04-13 15:34:05","[![Coverage Status](https://coveralls.io/builds/5772803/badge)](https://coveralls.io/builds/5772803)

Coverage decreased (-8.7%) to 83.755% when pulling **b4702d45c3fbfda93091158d1b4fdd609c127477 on ymap:master** into **3d97b83019b122288d7d2f561993ca6f907c6a47 on aio-libs:master**.
","",""
"issue_comment","119","aio-libs","aioredis","coveralls","2016-04-13 15:50:45","[![Coverage Status](https://coveralls.io/builds/5773104/badge)](https://coveralls.io/builds/5773104)

Coverage decreased (-8.7%) to 83.755% when pulling **72707fdfbe723ba740d51a73067cd870f7389b55 on ymap:master** into **3d97b83019b122288d7d2f561993ca6f907c6a47 on aio-libs:master**.
","",""
"issue_comment","119","aio-libs","aioredis","coveralls","2016-04-13 16:04:11","[![Coverage Status](https://coveralls.io/builds/5773377/badge)](https://coveralls.io/builds/5773377)

Coverage decreased (-9.6%) to 82.895% when pulling **3056beaa280468af3dedcfeb5f73c0f5d5faea92 on ymap:master** into **3d97b83019b122288d7d2f561993ca6f907c6a47 on aio-libs:master**.
","",""
"issue_comment","119","aio-libs","aioredis","coveralls","2016-04-14 07:54:01","[![Coverage Status](https://coveralls.io/builds/5783144/badge)](https://coveralls.io/builds/5783144)

Coverage decreased (-1.5%) to 90.97% when pulling **7a02950b07c159e0de42e240580d2603a0841021 on ymap:master** into **3d97b83019b122288d7d2f561993ca6f907c6a47 on aio-libs:master**.
","",""
"issue_comment","119","aio-libs","aioredis","coveralls","2016-04-14 12:50:37","[![Coverage Status](https://coveralls.io/builds/5786209/badge)](https://coveralls.io/builds/5786209)

Coverage decreased (-0.2%) to 92.242% when pulling **359458a1416c2ae9634d20273423a00302e1eb82 on ymap:master** into **3d97b83019b122288d7d2f561993ca6f907c6a47 on aio-libs:master**.
","",""
"issue_comment","119","aio-libs","aioredis","coveralls","2016-04-14 13:23:01","[![Coverage Status](https://coveralls.io/builds/5786615/badge)](https://coveralls.io/builds/5786615)

Coverage decreased (-0.2%) to 92.282% when pulling **ff808766b9a4a3e9a3d54ab3b4b02cf67a0dbd98 on ymap:master** into **3d97b83019b122288d7d2f561993ca6f907c6a47 on aio-libs:master**.
","",""
"issue_comment","119","aio-libs","aioredis","coveralls","2016-04-14 13:56:04","[![Coverage Status](https://coveralls.io/builds/5787007/badge)](https://coveralls.io/builds/5787007)

Coverage increased (+0.04%) to 92.499% when pulling **0ee3f5d6bf5df1bc7e61593ea4cde9e253879f59 on ymap:master** into **3d97b83019b122288d7d2f561993ca6f907c6a47 on aio-libs:master**.
","",""
"issue_comment","119","aio-libs","aioredis","coveralls","2016-05-02 14:41:12","[![Coverage Status](https://coveralls.io/builds/6012195/badge)](https://coveralls.io/builds/6012195)

Coverage decreased (-0.09%) to 92.37% when pulling **596466fb09035f3328e69bec5448308e26428201 on ymap:master** into **3d97b83019b122288d7d2f561993ca6f907c6a47 on aio-libs:master**.
","",""
"issue_comment","119","aio-libs","aioredis","coveralls","2016-05-03 09:10:41","[![Coverage Status](https://coveralls.io/builds/6025705/badge)](https://coveralls.io/builds/6025705)

Coverage increased (+0.06%) to 92.513% when pulling **d0550f75a8f9771c2addda43abde62f45b7b7d39 on ymap:master** into **3d97b83019b122288d7d2f561993ca6f907c6a47 on aio-libs:master**.
","",""
"issue_comment","119","aio-libs","aioredis","the-panda","2016-05-03 09:10:49","Hello popravich, how far did you get with the review? Please let me know if I can help.
","",""
"issue_comment","119","aio-libs","aioredis","popravich","2016-05-26 08:25:55","Hi, @the-panda,
I reviewed the code but I can not merge it -- the implementation is naive, it expects that nothing goes wrong or there are not many tasks using this code simultaneously.
Please read the code comments for more details.

Also, I'm working on [new pool implementation](https://github.com/aio-libs/aioredis/compare/pool_refactoring) which will make it easier to add cluster and sentinel support and
any other custom connections manager (#120 for example). Also I'm switching from unittest to pytest ( #126 ) as this would simplify writing and running cluster tests cause redis instances would be managed with fixtures.
","",""
"issue_comment","119","aio-libs","aioredis","the-panda","2016-05-30 10:48:39","Since there seem to be several refactorings in progress, we will continue using our fork for the moment and wait for the new pool.
","",""
"issue_comment","119","aio-libs","aioredis","sweetpotato0","2017-02-08 08:30:19","Merge quckly, please! tks","",""
"issue_comment","119","aio-libs","aioredis","offline","2017-04-24 13:04:41","Is something changed since then?","",""
"issue_comment","119","aio-libs","aioredis","the-panda","2017-04-25 15:15:15","I am trying to bring this fork up-to-date with the master branch. Due to the switch to PyTest on master this is a lot of work though (the fork modifies a lot of tests to run against single-instance and cluster setups).","",""
"pull_request_commit_comment","119","aio-libs","aioredis","popravich","2016-05-26 08:33:23","This is really bad design decision as you will be wasting most time creating and closing connections.
","7978ce26787ddc4ad9938a36c036cda020e0eebd","(415, '', u'aioredis/cluster/cluster.py')"
"pull_request_commit_comment","119","aio-libs","aioredis","popravich","2016-05-26 08:42:50","The `execute` method expects that command is str, its ok, but its now the Redis command it is name of aioredis commands method. So someone expecting this worked, will actually end up with some strange error:

``` python
yield from cluster.execute('client', 'list')
```

`aioredis` provides `execute` method to allow users to write low-level stuff, to communicate with redis server the way they want. It also allows to use this library with new redis features (such as geo commands) without need to wait for GeoCommandsMixin implementation and release. This implementation of cluster execute would make it impossible
","7978ce26787ddc4ad9938a36c036cda020e0eebd","(455, '', u'aioredis/cluster/cluster.py')"
"pull_request_commit_comment","119","aio-libs","aioredis","popravich","2016-05-26 08:52:54","Without any locks you'll end up with the following:
- assume `_moved_count == MAX_MOVED_COUNT - 1`;
- two coroutines execute command on moved keys;
- first one increments `_moved_count`, it hits limit and `initialize()` is called, execution is passed to loop;
- loop resumes the second coro;
- it recieves moved error as well; increments `_moved_count` and calls `initialize()` too.
  The cluster would be re-configured twice.
  now imagine that there are more that 2 coros hits this case...
","7978ce26787ddc4ad9938a36c036cda020e0eebd","(425, '', u'aioredis/cluster/cluster.py')"
"pull_request_commit_comment","119","aio-libs","aioredis","popravich","2016-05-26 08:56:18","The same concurrency issue as in parent class, but `minsize * nodes` connections need to be recreated each time.
","7978ce26787ddc4ad9938a36c036cda020e0eebd","(425, '', u'aioredis/cluster/cluster.py')"
"pull_request_commit_comment","119","aio-libs","aioredis","the-panda","2016-05-30 10:45:36","The main reason is that I do not want to use a pool here. Typically, users will want to use RedisPoolCluster directly, where connections are stored in a pool.

I will wait for your pool refactoring and then merge RedisCluster and RedisPoolCluster into a single class if it is still relevant.
","7978ce26787ddc4ad9938a36c036cda020e0eebd","(415, '', u'aioredis/cluster/cluster.py')"
"pull_request_commit_comment","119","aio-libs","aioredis","the-panda","2016-05-30 10:47:24","The problem in the cluster case is that I cannot know to which server I should direct unknown commands. Currently, all commands with a key are sent to the server responsible for the key. All other commands are simply sent to all masters, which makes sense for commands like FLUSHALL, but doesn't make sense for many others.

Possibly this is also a problem in your pool refactoring, because it seems that now the pool class must figure out the right server based on a command name and arguments.
","7978ce26787ddc4ad9938a36c036cda020e0eebd","(455, '', u'aioredis/cluster/cluster.py')"
"pull_request_commit_comment","119","aio-libs","aioredis","the-panda","2016-05-30 10:48:13","I will fix this issue.
","7978ce26787ddc4ad9938a36c036cda020e0eebd","(425, '', u'aioredis/cluster/cluster.py')"
"pull_request_commit_comment","119","aio-libs","aioredis","the-panda","2016-05-30 10:48:21","Will be fixed as above.
","7978ce26787ddc4ad9938a36c036cda020e0eebd","(425, '', u'aioredis/cluster/cluster.py')"
"pull_request_commit_comment","119","aio-libs","aioredis","popravich","2016-05-30 11:01:17","My consern is that `cluster.execute()` expects `aioredis.Redis` method name as its argument
instead of redis server command
","7978ce26787ddc4ad9938a36c036cda020e0eebd","(455, '', u'aioredis/cluster/cluster.py')"
"pull_request_commit_comment","119","aio-libs","aioredis","popravich","2016-05-30 11:03:33","i.e.: istead of `cluster.execute('script', 'load', 'script...')` it expects `cluster.execute('script_load', 'script...')`
","7978ce26787ddc4ad9938a36c036cda020e0eebd","(455, '', u'aioredis/cluster/cluster.py')"
"pull_request_commit","119","aio-libs","aioredis","trezorg","2016-02-24 15:05:53","Redis cluster. Initial. Processing Moved command.

It is working only with masters nodes properly.","95118376a48bd6dfb905a401589219bac6315ab4",""
"pull_request_commit","119","aio-libs","aioredis","trezorg","2016-03-07 14:53:15","Fixed cluster initialization","028a03df41a970683bdc0308bb8bceffd9a7bad6",""
"pull_request_commit","119","aio-libs","aioredis","the-panda","2016-03-08 16:19:40","Added IntelliJ config file to gitignore.","4550efb5ad902ee88a3e194f538d2646be99d44c",""
"pull_request_commit","119","aio-libs","aioredis","the-panda","2016-03-08 16:20:55","Tests now run in a sentinel setup.","75a7fd5d132ae7ed2a7d0140128d3b4d37359245",""
"pull_request_commit","119","aio-libs","aioredis","the-panda","2016-03-10 15:07:36","Added a script to setup an MMM SSS cluster.","c70678b2374853e7681077e75de0831e03e5b170",""
"pull_request_commit","119","aio-libs","aioredis","the-panda","2016-03-10 15:08:47","Started to make the old tests work against a cluster. Created runclustertests.py. Fixed a bug in key_slot.","865f5493906f599c2f88b3807ea78eca703ce69f",""
"pull_request_commit","119","aio-libs","aioredis","trezorg","2016-03-10 20:46:53","Fixed key_slot method. Force bytes","ab03ae6b8916a98cbc0306df92dbf046e5a02a2c",""
"pull_request_commit","119","aio-libs","aioredis","the-panda","2016-03-14 09:32:33","More tests work on a Redis cluster.","48c72f9a3ff5975c3ba18c08b1fc8285a0a449e0",""
"pull_request_commit","119","aio-libs","aioredis","the-panda","2016-03-14 10:12:35","HLL and sorted set tests work with cluster.","e622278f8fe09e8fa42ba56d4c28bf8618888fe5",""
"pull_request_commit","119","aio-libs","aioredis","the-panda","2016-03-14 12:32:31","Converted remaining tests to run on a cluster. Except those where functionality is not implemented yet or doesn't make sense on a cluster.","0cb598a71d5b17a819ee154d01311bafc00a4659",""
"pull_request_commit","119","aio-libs","aioredis","the-panda","2016-03-14 14:12:58","Fixed SLOT_ZERO_KEY","6da6ff92ed3f4b9c3e120b5dfdf35abeae571524",""
"pull_request_commit","119","aio-libs","aioredis","the-panda","2016-03-15 12:41:04","Added some tests for RedisCluster and RedisPoolCluster.","55cc202fc692b69208bfc08ad00fd680c34489bd",""
"pull_request_commit","119","aio-libs","aioredis","the-panda","2016-03-15 16:50:41","Moved test cluster setup code into own package within aioredis so that it can be imported in application tests.","e28e5ea542693680618fc85e8f91124cbc936325",""
"pull_request_commit","119","aio-libs","aioredis","the-panda","2016-03-18 09:06:05","Added reload_cluster_pool. Added methods to TestCluster to trigger failover.","f3d56596c2c08a899a2678bce2aa2fbd4c97e39e",""
"pull_request_commit","119","aio-libs","aioredis","the-panda","2016-03-18 16:12:44","Implemented own cluster configuration script (using sockets). No need anymore to download the redis-trib.rb file from Redis source.","6fb63cb3dde5df5a99e7a83398f6543837fb118c",""
"pull_request_commit","119","aio-libs","aioredis","the-panda","2016-03-21 10:11:29","Improved testcluster code: Better handling of error responses and retries.","ff6664155514dbf02e7128ee8dbea70b235d6012",""
"pull_request_commit","119","aio-libs","aioredis","the-panda","2016-03-21 12:09:03","Improved socket.recv usage.","e1c11aabafb39e9c60022c681999af82ead1a5f2",""
"pull_request_commit","119","aio-libs","aioredis","the-panda","2016-03-23 14:57:30","Make setupcluster print a message that explains how to run the tests.","cd44e4385e6b747a59f126aba4c0e17c437e6182",""
"pull_request_commit","119","aio-libs","aioredis","the-panda","2016-03-23 16:14:18","Added a docstring.","2848d50862e08382f79a65d09121f58a705cde5c",""
"pull_request_commit","119","aio-libs","aioredis","eyj","2016-03-24 16:04:08","Properly raise exception on connection problem","95e7fafbcf33ab9ee24853b05accd0eb3595b5b3",""
"pull_request_commit","119","aio-libs","aioredis","nasenbaer13","2016-04-04 08:22:58","Prepare cluster pool parallelized","cd02bb14a647f96191e70776490f9f720becb94a",""
"pull_request_commit","119","aio-libs","aioredis","nasenbaer13","2016-04-04 08:31:22","Reset cluster pool after reloading cluster pool not before to prevent race conditions when accessing the cluster_pool","839685b5ecfc01738d241d632ddffe90432da3ce",""
"pull_request_commit","119","aio-libs","aioredis","nasenbaer13","2016-04-04 08:51:50","Access node via its unique id and not by its position in the node list","f67bc7a2828afadbbd6893b16745fd7740e5adb5",""
"pull_request_commit","119","aio-libs","aioredis","the-panda","2016-04-04 09:29:37","RedisCluster asks all nodes for cluster info and takes the first returned info. Various improvements.","69e7262df57596e4e9e0d7c64b2006bd8bfa0c97",""
"pull_request_commit","119","aio-libs","aioredis","the-panda","2016-04-04 10:48:05","Really parallelized get_cluster_pool.","a47f7be649ecc407e98d9f4197807cae403568c4",""
"pull_request_commit","119","aio-libs","aioredis","the-panda","2016-04-04 13:53:55","Fixed tests after merge.","042145031e08478788dd3ca9141505b634dc39ed",""
"pull_request_commit","119","aio-libs","aioredis","the-panda","2016-04-04 15:53:47","Removed broken iscan method.","63be672587809c4ab17e5fc02764924f60e2a3b8",""
"pull_request_commit","119","aio-libs","aioredis","the-panda","2016-04-04 16:11:53","Fixed _read_bulk_string_response.","3bea6130c5b2fddf0d26db384191d558399565fc",""
"pull_request_commit","119","aio-libs","aioredis","the-panda","2016-04-05 10:43:33","Improved cluster examples. Now they can be used together with the setupcluster.py script.","d0cb2e81b8eaecce60cbacaeb5d31e257776a20a",""
"pull_request_commit","119","aio-libs","aioredis","the-panda","2016-04-05 10:44:33","Improvements in cluster code.","fd124f9afdd32c278839424dda3e8481ab0c20d0",""
"pull_request_commit","119","aio-libs","aioredis","the-panda","2016-04-05 11:28:14","Small improvements.","16d6d84b7215de2a6462b193bf6feb3b4229dc1f",""
"pull_request_commit","119","aio-libs","aioredis","the-panda","2016-04-05 13:54:02","Added tests for wait_closed fix.","d7fc708bf55bb2ce2ff9857bb5b3c97af160f946",""
"pull_request_commit","119","aio-libs","aioredis","the-panda","2016-04-05 15:18:16","Comply with PEP8.","7d935c54bdd6ea620bff1897bdc56eeaa7eb8c96",""
"pull_request_commit","119","aio-libs","aioredis","the-panda","2016-04-06 08:08:03","Fixed issues after rebasing.","99ce27d884bd7d8c98509352c6af7661f5738ded",""
"pull_request_commit","119","aio-libs","aioredis","the-panda","2016-04-06 10:12:15","Fixed flake8 warnings.","b7fe4fcdb41137d734c905c5860c09ca4c4c4302",""
"pull_request_commit","119","aio-libs","aioredis","the-panda","2016-04-06 10:55:12","Make travis start a cluster before running cluster examples.","bfa3650b98fa5fd36eca27db78772aec3057fc54",""
"pull_request_commit","119","aio-libs","aioredis","the-panda","2016-04-06 12:48:58","Fixed reload_cluster_pool and corresponding test.","9c2e9148caea2d3dc98e7bf0177381024b5c9b25",""
"pull_request_commit","119","aio-libs","aioredis","the-panda","2016-04-12 14:19:26","Make sure fetch cluster info connections are closed (to avoid Pending Task Destroyed warnings).","c91510c8ef8fe49185d512f821da2fb101699403",""
"pull_request_commit","119","aio-libs","aioredis","the-panda","2016-04-13 14:46:40","Modified tests so that the runtests script can run both the standalone tests and the cluster tests and measure coverage appropriately.","70fc958be91a6570dfcac2ecd17738128d4a3e70",""
"pull_request_commit","119","aio-libs","aioredis","the-panda","2016-04-13 15:06:36","Only run cluster tests on travis, if Redis 3 is used.","7e439550a1dc8af4e3731975a7a3ab8c65fc966c",""
"pull_request_commit","119","aio-libs","aioredis","the-panda","2016-04-13 15:10:13","Hopefully fixed travis.yml file.","0e2f0929d3aa0faa73ac194bf41156111da4114b",""
"pull_request_commit","119","aio-libs","aioredis","the-panda","2016-04-13 15:22:07","Fixed example filter in travis script.","f58f840b9126ff6334818823dc856c8b7731dbbc",""
"pull_request_commit","119","aio-libs","aioredis","the-panda","2016-04-13 15:29:55","More fixes in Travis script.","b4702d45c3fbfda93091158d1b4fdd609c127477",""
"pull_request_commit","119","aio-libs","aioredis","the-panda","2016-04-13 15:45:17","Setup cluster using the correct version of Redis.","72707fdfbe723ba740d51a73067cd870f7389b55",""
"pull_request_commit","119","aio-libs","aioredis","the-panda","2016-04-13 16:00:18","More fixes for Travis.","3056beaa280468af3dedcfeb5f73c0f5d5faea92",""
"pull_request_commit","119","aio-libs","aioredis","the-panda","2016-04-14 07:47:18","Make cluster examples run even if database is not empty.","7a02950b07c159e0de42e240580d2603a0841021",""
"pull_request_commit","119","aio-libs","aioredis","the-panda","2016-04-14 12:39:50","Fixed EVAL handling on cluster.","359458a1416c2ae9634d20273423a00302e1eb82",""
"pull_request_commit","119","aio-libs","aioredis","the-panda","2016-04-14 13:16:43","Removed two unnecessary lines.","ff808766b9a4a3e9a3d54ab3b4b02cf67a0dbd98",""
"pull_request_commit","119","aio-libs","aioredis","the-panda","2016-04-14 13:42:45","Removed unused method.","0ee3f5d6bf5df1bc7e61593ea4cde9e253879f59",""
"pull_request_commit","119","aio-libs","aioredis","eyj","2016-05-02 14:23:10","Properly clean up a pool if cancellation occurs during setup","596466fb09035f3328e69bec5448308e26428201",""
"pull_request_commit","119","aio-libs","aioredis","the-panda","2016-05-03 09:06:20","Added test for the last commit to keep coverage high.","d0550f75a8f9771c2addda43abde62f45b7b7d39",""
"pull_request_commit","119","aio-libs","aioredis","the-panda","2017-08-07 09:19:30","Handle new CLUSTER NODES format in Redis v4.","7978ce26787ddc4ad9938a36c036cda020e0eebd",""
