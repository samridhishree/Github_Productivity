"rectype","issueid","project_owner","project_name","actor","time","text","action","title"
"issue_title","740","nilearn","nilearn","lesteve","2015-07-29 13:19:16","Nobody is working on existing examples AFAIK so it shouldn't be too much pain.
","start issue","[MRG] Run autopep8 in examples"
"issue_closed","740","nilearn","nilearn","AlexandreAbraham","2015-07-30 11:49:32","","closed issue","[MRG] Run autopep8 in examples"
"pull_request_title","740","nilearn","nilearn","lesteve","2015-07-29 13:19:16","Nobody is working on existing examples AFAIK so it shouldn't be too much pain.
","1e3a28353cd8c898557d06bf3f22b44f396b4e75","[MRG] Run autopep8 in examples"
"pull_request_merged","740","nilearn","nilearn","AlexandreAbraham","2015-07-30 11:49:32","[MRG] Run autopep8 in examples","60efa8cc4e3547d71740a94c369952cc6e6055f9","Pull request merge from lesteve/nilearn:autopep8-examples to nilearn/nilearn:master"
"issue_comment","740","nilearn","nilearn","AlexandreAbraham","2015-07-29 13:27:23","Yeah, maybe we should fine another convention for these ones...
","",""
"issue_comment","740","nilearn","nilearn","AlexandreAbraham","2015-07-29 13:40:53","Not by the last version.
","",""
"issue_comment","740","nilearn","nilearn","AlexandreAbraham","2015-07-30 08:29:07","One small comment in the code. Apart from that, :+1: 
","",""
"pull_request_commit_comment","740","nilearn","nilearn","AlexandreAbraham","2015-07-30 08:23:44","AFAIK the only constraint on comment in PEP8 is to start by sharp + whitespace. Maybe something like

``` Python
# Title 1
# - Title 2
# -- Title 3
```

could do ?
","1e3a28353cd8c898557d06bf3f22b44f396b4e75","(5, '', u'examples/decoding/plot_haxby_anova_svm.py')"
"pull_request_commit_comment","740","nilearn","nilearn","AlexandreAbraham","2015-07-30 08:27:18","I already found this line hard to understand before (I particularly dislike playing with the priority of operators = and ==) but now the new_line make it even more obscure. Maybe we could change by:

``` python
task_mask = np.logical_not(resting_state)  # or sample_mask?
classification_target = (stimuli[task_mask] == category)
```
","1e3a28353cd8c898557d06bf3f22b44f396b4e75","(29, '', u'examples/decoding/plot_haxby_different_estimators.py')"
"pull_request_commit_comment","740","nilearn","nilearn","AlexandreAbraham","2015-07-30 08:27:57","Funny to see how starting # are not remove in this one.
","1e3a28353cd8c898557d06bf3f22b44f396b4e75","(17, '', u'examples/decoding/plot_haxby_space_net.py')"
"pull_request_commit_comment","740","nilearn","nilearn","AlexandreAbraham","2015-07-30 08:28:43","OK, I think that the leading `###` are not here to indicate a level of comment but just for cosmetics. In that cas, removing them is fine for me.
","1e3a28353cd8c898557d06bf3f22b44f396b4e75","(5, '', u'examples/decoding/plot_haxby_anova_svm.py')"
"pull_request_commit_comment","740","nilearn","nilearn","lesteve","2015-07-30 08:37:54","Removing them sounds fine then. Note that if we want headers for sphinx-gallery we'll have to write them in reST.
","1e3a28353cd8c898557d06bf3f22b44f396b4e75","(5, '', u'examples/decoding/plot_haxby_anova_svm.py')"
"pull_request_commit_comment","740","nilearn","nilearn","lesteve","2015-07-30 08:38:58","Different PR or even commit into master?
","1e3a28353cd8c898557d06bf3f22b44f396b4e75","(29, '', u'examples/decoding/plot_haxby_different_estimators.py')"
"pull_request_commit_comment","740","nilearn","nilearn","lesteve","2015-07-30 08:42:06","Yeah I don't really understand what the rule is ... As a side note, I removed this one by hand for the reason mentioned in my first commit message:

>  MAINT prepare examples for nicer interactionwith autopep8
> autopep8 shortens line of comments to 72 characters if strictly above 79
> but leaves lines of 72 to 79 characters alone ...
","1e3a28353cd8c898557d06bf3f22b44f396b4e75","(17, '', u'examples/decoding/plot_haxby_space_net.py')"
"pull_request_commit_comment","740","nilearn","nilearn","GaelVaroquaux","2015-07-30 08:43:26","> Yeah I don't really understand what the rule is ...

I hate autopep8 and other tools like this, because their interpretation
of the details of pep8 varies (and varies across versions of the same
tool).
","1e3a28353cd8c898557d06bf3f22b44f396b4e75","(17, '', u'examples/decoding/plot_haxby_space_net.py')"
"pull_request_commit_comment","740","nilearn","nilearn","lesteve","2015-07-30 08:43:36","I am guessing this pattern may be used in other examples too.
","1e3a28353cd8c898557d06bf3f22b44f396b4e75","(29, '', u'examples/decoding/plot_haxby_different_estimators.py')"
"pull_request_commit_comment","740","nilearn","nilearn","lesteve","2015-07-30 09:28:13",">  their interpretation of the details of pep8 varies (and varies across versions of the same tool).

I have to say just using it a little bit got me convinced that there are indeed subtleties involved. I would argue that it is still a useful tool ...
","1e3a28353cd8c898557d06bf3f22b44f396b4e75","(17, '', u'examples/decoding/plot_haxby_space_net.py')"
"pull_request_commit_comment","740","nilearn","nilearn","GaelVaroquaux","2015-07-30 09:33:13","> I have to say just using it a little bit got me convinced that there
> are indeed subtleties involved. I would argue that it is still a useful
> tool ...

I agree. Mostly as a training tool.
","1e3a28353cd8c898557d06bf3f22b44f396b4e75","(17, '', u'examples/decoding/plot_haxby_space_net.py')"
"pull_request_commit","740","nilearn","nilearn","lesteve","2015-07-29 13:16:42","MAINT prepare examples for nicer interactionwith autopep8

autopep8 shortens line of comments to 72 characters if strictly above 79
but leaves lines of 72 to 79 characters alone ...","a429020ce178f0a0052ceae1c15e5826c4f4a441",""
"pull_request_commit","740","nilearn","nilearn","lesteve","2015-07-29 13:18:55","MAINT run autopep8 in examples","1e3a28353cd8c898557d06bf3f22b44f396b4e75",""
