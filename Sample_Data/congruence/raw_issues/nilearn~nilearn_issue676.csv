"rectype","issueid","project_owner","project_name","actor","time","text","action","title"
"issue_title","676","nilearn","nilearn","arthurmensch","2015-07-15 12:39:28","Refactorisation of PR #638. I added a SinglePCA class that process a list of imgs, stacking single subject PCA together. It is derived by both MultiPCA and DictLearning.

DictLearning can be arbitrarily initialized (parameter `dict_init`), and by default initialize dictionary with a CanICA.
","start issue","[To close] L1 dict learning composition"
"issue_closed","676","nilearn","nilearn","GaelVaroquaux","2015-07-18 15:48:02","","closed issue","[To close] L1 dict learning composition"
"pull_request_title","676","nilearn","nilearn","arthurmensch","2015-07-15 12:39:28","Refactorisation of PR #638. I added a SinglePCA class that process a list of imgs, stacking single subject PCA together. It is derived by both MultiPCA and DictLearning.

DictLearning can be arbitrarily initialized (parameter `dict_init`), and by default initialize dictionary with a CanICA.
","368ba33403c2b730dcbd81d669882f50540449b7","[To close] L1 dict learning composition"
"issue_comment","676","nilearn","nilearn","GaelVaroquaux","2015-07-15 18:41:24","@arthurmensch : are you pleased with this code design?

It seems to me quite nice. I like it! I think that this is the right track.
","",""
"issue_comment","676","nilearn","nilearn","GaelVaroquaux","2015-07-16 16:38:49","Side remark: if you rebase on master, you can now use the plot_prob_atlas in your example, which makes it even cooler.
","",""
"issue_comment","676","nilearn","nilearn","GaelVaroquaux","2015-07-18 15:48:02","Closing.
","",""
"issue_comment","676","nilearn","nilearn","AlexandreAbraham","2015-07-15 14:30:29","Isn't SinglePCA file missing?
","",""
"issue_comment","676","nilearn","nilearn","lesteve","2015-07-17 16:54:06","> This PR should be closed now, see PR #693

You should be able to close it yourself, shouldn't you?
","",""
"pull_request_commit_comment","676","nilearn","nilearn","GaelVaroquaux","2015-07-15 18:29:30","I think that we shouldn't be changing the memory_level in the examples, we should use the default one.
","368ba33403c2b730dcbd81d669882f50540449b7","(36, '', u'examples/connectivity/plot_dict_learning_resting_state.py')"
"pull_request_commit_comment","676","nilearn","nilearn","GaelVaroquaux","2015-07-15 18:30:56","Is that change still relevant?
","368ba33403c2b730dcbd81d669882f50540449b7","(16, '', u'nilearn/decomposition/canica.py')"
"pull_request_commit_comment","676","nilearn","nilearn","GaelVaroquaux","2015-07-15 18:31:25","At some point, you will want to be slightly more verbose here.
","368ba33403c2b730dcbd81d669882f50540449b7","(2, '', u'nilearn/decomposition/dict_learning.py')"
"pull_request_commit_comment","676","nilearn","nilearn","GaelVaroquaux","2015-07-15 18:32:12","TODO
","368ba33403c2b730dcbd81d669882f50540449b7","(100, '', u'nilearn/decomposition/dict_learning.py')"
"pull_request_commit_comment","676","nilearn","nilearn","GaelVaroquaux","2015-07-15 18:34:06","Should the default be to 'auto'? If not, we should probably remove the option 'auto'.
","368ba33403c2b730dcbd81d669882f50540449b7","(110, '', u'nilearn/decomposition/dict_learning.py')"
"pull_request_commit_comment","676","nilearn","nilearn","GaelVaroquaux","2015-07-15 18:36:12","I would think that the 'do_cca' option needs to be moved to MultiPCA, as it doesn't have a lot of meaning in SinglePCA.
","368ba33403c2b730dcbd81d669882f50540449b7","(None, '', u'nilearn/decomposition/multi_pca.py')"
"pull_request_commit_comment","676","nilearn","nilearn","GaelVaroquaux","2015-07-15 18:37:37","OK, I see that it would make the code much more complex. So let's leave it there. It just needs to be well documented there.
","368ba33403c2b730dcbd81d669882f50540449b7","(None, '', u'nilearn/decomposition/multi_pca.py')"
"pull_request_commit_comment","676","nilearn","nilearn","GaelVaroquaux","2015-07-15 18:38:30","numpy import should be just before scipy import: we do from more general to less general (ie more domain-specific)
","368ba33403c2b730dcbd81d669882f50540449b7","(None, '', u'nilearn/decomposition/single_pca.py')"
"pull_request_commit_comment","676","nilearn","nilearn","GaelVaroquaux","2015-07-15 18:39:26","In the context of this object, no CCA is run. It's more that the subject-level data is whitened, for instance as a preparation step to do a CCA.
","368ba33403c2b730dcbd81d669882f50540449b7","(None, '', u'nilearn/decomposition/single_pca.py')"
"pull_request_commit_comment","676","nilearn","nilearn","GaelVaroquaux","2015-07-15 18:43:02","Are you sure that this import is useful? It seems that the only change that you have done to the file is to add it.
","368ba33403c2b730dcbd81d669882f50540449b7","(6, '', u'nilearn/decomposition/tests/test_multi_pca.py')"
"pull_request_commit_comment","676","nilearn","nilearn","GaelVaroquaux","2015-07-15 18:44:55","We could check that the components are reasonably orthogonal: the off-diagonal element of np.dot(components, components.T) being small.

That would make a numerical test, on top of the smoke tests above.
","368ba33403c2b730dcbd81d669882f50540449b7","(None, '', u'nilearn/decomposition/tests/test_single_pca.py')"
"pull_request_commit_comment","676","nilearn","nilearn","AlexandreAbraham","2015-07-15 20:31:56",":+1:
","368ba33403c2b730dcbd81d669882f50540449b7","(36, '', u'examples/connectivity/plot_dict_learning_resting_state.py')"
"pull_request_commit_comment","676","nilearn","nilearn","AlexandreAbraham","2015-07-15 23:05:07","I've been thinking about your optimization. In some sklearn functions, there is a switch to allow multiple inputs. In [Spectral clustering](http://scikit-learn.org/stable/modules/generated/sklearn.cluster.SpectralClustering.html), you can specify `affinity='precomputed'` and directly give the affinity matrix in the fit.

You could do the same here for the subject pca.
","368ba33403c2b730dcbd81d669882f50540449b7","(None, '', u'nilearn/decomposition/dict_learning.py')"
"pull_request_commit_comment","676","nilearn","nilearn","AlexandreAbraham","2015-07-15 23:11:58","If you look at the original code, there is an efficient concatenation after the computation of session_pca. Maybe you should systematically concatenate afterward.
","368ba33403c2b730dcbd81d669882f50540449b7","(None, '', u'nilearn/decomposition/dict_learning.py')"
"pull_request_commit_comment","676","nilearn","nilearn","banilo","2015-07-16 09:38:51","dito
","368ba33403c2b730dcbd81d669882f50540449b7","(2, '', u'nilearn/decomposition/dict_learning.py')"
"pull_request_commit_comment","676","nilearn","nilearn","banilo","2015-07-16 09:40:26","trailing points are inconsistent
","368ba33403c2b730dcbd81d669882f50540449b7","(57, '', u'nilearn/decomposition/dict_learning.py')"
"pull_request_commit_comment","676","nilearn","nilearn","AlexandreAbraham","2015-07-16 12:32:32","Except that, as Salma underlined, default parameter raises a warning.
","368ba33403c2b730dcbd81d669882f50540449b7","(36, '', u'examples/connectivity/plot_dict_learning_resting_state.py')"
"pull_request_commit_comment","676","nilearn","nilearn","bthirion","2015-07-16 15:13:58","Give the actual link: https://hal.inria.fr/inria-00588898/en/
","368ba33403c2b730dcbd81d669882f50540449b7","(None, '', u'examples/connectivity/plot_dict_learning_resting_state.py')"
"pull_request_commit_comment","676","nilearn","nilearn","bthirion","2015-07-16 15:14:46","from sklearn.externals.joblib import Memory
","368ba33403c2b730dcbd81d669882f50540449b7","(None, '', u'examples/connectivity/plot_dict_learning_resting_state.py')"
"pull_request_commit_comment","676","nilearn","nilearn","bthirion","2015-07-16 15:28:25","Currently needs to be imported from nilearn.decomposition.dict_learning
","368ba33403c2b730dcbd81d669882f50540449b7","(31, '', u'examples/connectivity/plot_dict_learning_resting_state.py')"
"pull_request_commit_comment","676","nilearn","nilearn","bthirion","2015-07-16 15:56:20","Why one component in two ? 
","368ba33403c2b730dcbd81d669882f50540449b7","(None, '', u'examples/connectivity/plot_dict_learning_resting_state.py')"
"pull_request_commit_comment","676","nilearn","nilearn","bthirion","2015-07-16 16:02:41","Oops, the line is probably too long
","368ba33403c2b730dcbd81d669882f50540449b7","(97, '', u'nilearn/decomposition/_subject_pca.py')"
"pull_request_commit_comment","676","nilearn","nilearn","bthirion","2015-07-16 17:15:30","Works now. Great stuff.
","368ba33403c2b730dcbd81d669882f50540449b7","(69, '', u'examples/connectivity/plot_dict_learning_resting_state.py')"
"pull_request_commit_comment","676","nilearn","nilearn","banilo","2015-07-17 08:47:01","Add PCA and plain vanilla ICA for comparison?
","368ba33403c2b730dcbd81d669882f50540449b7","(41, '', u'examples/connectivity/plot_dict_learning_resting_state.py')"
"pull_request_commit_comment","676","nilearn","nilearn","banilo","2015-07-17 08:51:13","add a comment for this heuristic
","368ba33403c2b730dcbd81d669882f50540449b7","(83, '', u'nilearn/decomposition/_subject_pca.py')"
"pull_request_commit_comment","676","nilearn","nilearn","banilo","2015-07-17 08:54:23","trailing points inconsistent
","368ba33403c2b730dcbd81d669882f50540449b7","(102, '', u'nilearn/decomposition/_subject_pca.py')"
"pull_request_commit_comment","676","nilearn","nilearn","banilo","2015-07-17 09:15:31","different results across iterations or different results coming out of the function...below there appears to be only one function call....
","368ba33403c2b730dcbd81d669882f50540449b7","(46, '', u'nilearn/decomposition/tests/test_canica.py')"
"pull_request_commit_comment","676","nilearn","nilearn","arthurmensch","2015-07-17 14:08:53","Would make the example pretty long, but it could be interesting
","368ba33403c2b730dcbd81d669882f50540449b7","(41, '', u'examples/connectivity/plot_dict_learning_resting_state.py')"
"pull_request_commit_comment","676","nilearn","nilearn","arthurmensch","2015-07-17 14:09:46","Done in PR #693 
","368ba33403c2b730dcbd81d669882f50540449b7","(83, '', u'nilearn/decomposition/_subject_pca.py')"
"pull_request_commit_comment","676","nilearn","nilearn","arthurmensch","2015-07-17 14:11:29","Can you clarify ?
","368ba33403c2b730dcbd81d669882f50540449b7","(46, '', u'nilearn/decomposition/tests/test_canica.py')"
"pull_request_commit_comment","676","nilearn","nilearn","bthirion","2015-07-17 14:12:40","I'm not sure we want that. PCA probably yields ugly results an should not be used for that purpose anyhow. Concatenated ICA will probably not work as well as CanICA. I'm afraid of added complexity + computation overhead + message dilution
","368ba33403c2b730dcbd81d669882f50540449b7","(41, '', u'examples/connectivity/plot_dict_learning_resting_state.py')"
"pull_request_commit_comment","676","nilearn","nilearn","arthurmensch","2015-07-17 14:19:37","It is
","368ba33403c2b730dcbd81d669882f50540449b7","(6, '', u'nilearn/decomposition/tests/test_multi_pca.py')"
"pull_request_commit_comment","676","nilearn","nilearn","arthurmensch","2015-07-17 14:19:46","Done
","368ba33403c2b730dcbd81d669882f50540449b7","(110, '', u'nilearn/decomposition/dict_learning.py')"
"pull_request_commit_comment","676","nilearn","nilearn","arthurmensch","2015-07-17 14:19:51","DOne
","368ba33403c2b730dcbd81d669882f50540449b7","(16, '', u'nilearn/decomposition/canica.py')"
"pull_request_commit_comment","676","nilearn","nilearn","arthurmensch","2015-07-17 14:20:05","Put to 2...
","368ba33403c2b730dcbd81d669882f50540449b7","(36, '', u'examples/connectivity/plot_dict_learning_resting_state.py')"
"pull_request_commit_comment","676","nilearn","nilearn","arthurmensch","2015-07-17 14:20:12","Done
","368ba33403c2b730dcbd81d669882f50540449b7","(100, '', u'nilearn/decomposition/dict_learning.py')"
"pull_request_commit_comment","676","nilearn","nilearn","arthurmensch","2015-07-17 14:21:23","I agree, I think comparing two methods only is the best way to have impact
","368ba33403c2b730dcbd81d669882f50540449b7","(41, '', u'examples/connectivity/plot_dict_learning_resting_state.py')"
"pull_request_commit","676","nilearn","nilearn","arthurmensch","2015-07-08 09:35:00","Base code for l1 dictionary learning","4f0de556647fd12505ababbb827e05760219f0da",""
"pull_request_commit","676","nilearn","nilearn","arthurmensch","2015-07-16 16:45:16","Addressed comments","10a94a39a95f2773cafe3bf2b8c1637038b94cae",""
"pull_request_commit","676","nilearn","nilearn","arthurmensch","2015-07-16 16:51:53","Addressed comments","368ba33403c2b730dcbd81d669882f50540449b7",""
