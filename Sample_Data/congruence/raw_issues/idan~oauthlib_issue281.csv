"rectype","issueid","project_owner","project_name","actor","time","text","action","title"
"issue_title","281","idan","oauthlib","twhtanghk","2014-10-14 03:46:08","In OAuth2, it is expected to redirect browser to ""GET"" Web Application URL with token by status code 302 after browser ""POST"" the authorized scope to Authenticate Server. However, Internet Explorer not completely following the POST-REDIRECT-GET with status code 302. Is it feasible to return status code 303 instead of 302 in this case?
","start issue","Post Redirect Get with Status 303 instead of 302"
"issue_comment","281","idan","oauthlib","ib-lundgren","2014-10-16 08:54:23","Sure. Think 303 makes more sense in the default case so could go ahead and
change all auth responses. I suppose we could even expose an easy way to
override this, either by using a auth_redirect_code member on the class or
through an extra validator method, e.g.

``` py
def authorization_response_status_code(self, response_type, client_id, request):
     return 303
```

Fancy creating a PR?

(Note to future self) The spec use 302 for all examples but is not mandated
and the code used is considered an implementation detail.

On Tuesday, October 14, 2014, Tommy Tang notifications@github.com wrote:

> In OAuth2, it is expected to redirect browser to ""GET"" Web Application URL
> with token by status code 302 after browser ""POST"" the authorized scope to
> Authenticate Server. However, Internet Explorer not completely following
> the POST-REDIRECT-GET with status code 302. Is it feasible to return status
> code 303 instead of 302 in this case?
> 
> â€”
> Reply to this email directly or view it on GitHub
> https://github.com/idan/oauthlib/issues/281.
","",""
