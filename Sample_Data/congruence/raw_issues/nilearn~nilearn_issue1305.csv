"rectype","issueid","project_owner","project_name","actor","time","text","action","title"
"issue_title","1305","nilearn","nilearn","alexsavio","2016-10-06 10:29:03","Wouldn't it be simpler to use `numexpr` instead of `numpy` for `math_img`? Apart from simplifying the code, I guess this would also improve efficiency since 2 volumes usually don't fit in the current CPU caches.
A common cache size is 3MB (L3). It's true though that the latest Intel chips have 8MB (I think L4 cache).

Let's say a common volume size is 70x70x70 in float32. This is ~1350KB, and usually for a Numpy operation you need space for 3 volumes: left hand size, right hand side and the temporary result.

I understand this is a feature you don't want to spend much time on, and also it would add a new dependency. But I was just saying...
","start issue","math_img performance improvement"
"issue_closed","1305","nilearn","nilearn","alexsavio","2016-10-06 14:04:11","","closed issue","math_img performance improvement"
"issue_comment","1305","nilearn","nilearn","GaelVaroquaux","2016-10-06 13:55:49","We don't want to add a dependency.

The real fix to the problem would be to have numexpr merged into numpy. I
don't think that it will happen, but that would be from the big picture
the solution to these problems that pop up everywhere, and not only in
math_img or in nilearn.
","",""
"issue_comment","1305","nilearn","nilearn","GaelVaroquaux","2016-10-06 14:05:45","> But this wouldn't help if you don't want to add the dependency.

Numerical computation in math_img is seldom a bottleneck in an analysis.
","",""
"issue_comment","1305","nilearn","nilearn","AlexandreAbraham","2016-10-06 15:21:30","That may be a good candidate for nilearn_sandbox.
","",""
"issue_comment","1305","nilearn","nilearn","alexsavio","2016-10-06 14:04:10","Ok, thanks.

BTW, I am playing with numexpr to add a wrapper to automatically generate expressions from numpy functions. But this wouldn't help if you don't want to add the dependency.
","",""
