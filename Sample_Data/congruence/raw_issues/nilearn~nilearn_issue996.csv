"rectype","issueid","project_owner","project_name","actor","time","text","action","title"
"issue_title","996","nilearn","nilearn","KamalakerDadi","2016-02-19 11:34:15","Attempts to Fix #930 
","start issue","[MRG+1] Datasets: Uniform representation of labels in MSDL Atlas"
"issue_closed","996","nilearn","nilearn","AlexandreAbraham","2016-02-25 21:16:29","","closed issue","[MRG+1] Datasets: Uniform representation of labels in MSDL Atlas"
"pull_request_title","996","nilearn","nilearn","KamalakerDadi","2016-02-19 11:34:15","Attempts to Fix #930 
","0ee801d61539161cedd186188a5249003cbd5bb6","[MRG+1] Datasets: Uniform representation of labels in MSDL Atlas"
"pull_request_merged","996","nilearn","nilearn","AlexandreAbraham","2016-02-25 21:16:29","[MRG+1] Datasets: Uniform representation of labels in MSDL Atlas","0168e840d3603a7b9c2564e5084bfed7bc0d92ba","Pull request merge from KamalakerDadi/nilearn:labels to nilearn/nilearn:master"
"issue_comment","996","nilearn","nilearn","GaelVaroquaux","2016-02-19 11:53:57","We would like the code to be really interchangeable between Harvard-Oxford and MSDL.

If you look at how Harvard-Oxford is used (for instance in the following example:
http://nilearn.github.io/auto_examples/03_connectivity/plot_signal_extraction.html ) we need the 'labels' field of the data bunch to be an array of labels.

Hence, I suggest putting in this field of the bunch, the ""labels"" field of the current structure, and a adding two other fields; one ""regions_coords"" that would be the current ""labels[['x', 'y', 'z']].tolist()"", and one ""network_name"" that would contain the ""networks"" field of the CSV.

As a results, the code should look much more similar for Harvard-Oxford and for MSDL.
","",""
"issue_comment","996","nilearn","nilearn","GaelVaroquaux","2016-02-19 11:56:01","We also need to make fetch_atlas_aal consistent: the field ""regions"" should be renamed to ""maps"", and we should rethink how the names are given. The goal would be to make AAL and Harvard-Oxford completely interchangeable in the examples:

http://nilearn.github.io/modules/generated/nilearn.datasets.fetch_atlas_aal.html#nilearn.datasets.fetch_atlas_aal
","",""
"issue_comment","996","nilearn","nilearn","GaelVaroquaux","2016-02-22 12:53:42","You have what I believe is a non-spurious failure on numpy 1.6:
https://travis-ci.org/nilearn/nilearn/jobs/110814412
","",""
"issue_comment","996","nilearn","nilearn","KamalakerDadi","2016-02-25 07:44:59","Can I also have reviews on this ?
","",""
"pull_request_commit_comment","996","nilearn","nilearn","GaelVaroquaux","2016-02-22 12:56:22","I would like these 2 assignments split in 2 different lines: it makes it easier to follow for the beginner.
","0ee801d61539161cedd186188a5249003cbd5bb6","(None, '', u'examples/03_connectivity/plot_probabilistic_atlas_extraction.py')"
"pull_request_commit_comment","996","nilearn","nilearn","GaelVaroquaux","2016-02-22 13:01:21","This is the line that's failing in Python 2.6.
","0ee801d61539161cedd186188a5249003cbd5bb6","(None, '', u'nilearn/datasets/tests/test_atlas.py')"
"pull_request_commit_comment","996","nilearn","nilearn","KamalakerDadi","2016-02-22 15:33:56","I am not sure whether we really care about Python 2.6 failure here. @AlexandreAbraham any ideas ?
","0ee801d61539161cedd186188a5249003cbd5bb6","(None, '', u'nilearn/datasets/tests/test_atlas.py')"
"pull_request_commit_comment","996","nilearn","nilearn","AlexandreAbraham","2016-02-22 15:37:45","We are officially supporting Python 2.6 so the test suite must run in 2.6. It should not be that hard to fix, why not using `np.savetxt` ?
","0ee801d61539161cedd186188a5249003cbd5bb6","(None, '', u'nilearn/datasets/tests/test_atlas.py')"
"pull_request_commit_comment","996","nilearn","nilearn","GaelVaroquaux","2016-02-22 15:44:16","> We are officially supporting Python 2.6 so the test suite must run in 2.6. It
> should not be that hard to fix, why not using np.savetxt ?

If np.savetxt does the trick, then let's use it.

However, I am really considering droping Py2.6
","0ee801d61539161cedd186188a5249003cbd5bb6","(None, '', u'nilearn/datasets/tests/test_atlas.py')"
"pull_request_commit","996","nilearn","nilearn","KamalakerDadi","2016-02-19 11:28:26","Datasets: Uniform representation of labels in MSDL Atlas","2987d6af74ced55de5195d0dcd381366a4c1b541",""
"pull_request_commit","996","nilearn","nilearn","KamalakerDadi","2016-02-21 17:12:44","Attempts to fix Gael comments, having labels, coords, networks in a bunch","a532c86956ed565ea170ba5353e1b31ce06a0a4d",""
"pull_request_commit","996","nilearn","nilearn","KamalakerDadi","2016-02-21 19:43:59","Uniform representation with aal atlas","4df0fa8074b674fe6f17eb4d0e7702c25a38167f",""
"pull_request_commit","996","nilearn","nilearn","KamalakerDadi","2016-02-21 20:13:53","changed accordingly whats new documentation and conflicts","c61b05472bb3cb24bc185a0ab664f2bcdcae5031",""
"pull_request_commit","996","nilearn","nilearn","KamalakerDadi","2016-02-22 16:36:39","Attempts to fix Py26 failure","299207744a82077f8b703844a1456e225163272f",""
"pull_request_commit","996","nilearn","nilearn","KamalakerDadi","2016-02-23 10:14:28","Fixing tests to save csv file","9275b23a3d9d19e304def2cf4b24e42620e219ba",""
"pull_request_commit","996","nilearn","nilearn","KamalakerDadi","2016-02-23 10:30:01","Passing tests","7fe79ef6b6028e640003d872678b939313a187a7",""
"pull_request_commit","996","nilearn","nilearn","KamalakerDadi","2016-02-23 11:31:36","Passing tests","7a99bf198d7bd231d19e88cd0da285ae062f850a",""
"pull_request_commit","996","nilearn","nilearn","KamalakerDadi","2016-02-23 14:34:18","Making tests pass","bd66fd2b850f51ae61ce8c2ace20550add53e4f5",""
"pull_request_commit","996","nilearn","nilearn","KamalakerDadi","2016-02-23 16:21:10","fixing circleci error in whatsnew","0ee801d61539161cedd186188a5249003cbd5bb6",""
