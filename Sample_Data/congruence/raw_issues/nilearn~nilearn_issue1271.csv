"rectype","issueid","project_owner","project_name","actor","time","text","action","title"
"issue_title","1271","nilearn","nilearn","KamalakerDadi","2016-09-11 19:32:04","- Add ""ensure_finite"" to ilearn.image.clean_img
- Deal automatically with NaNs in NiftiMapsMasker

Attempts to Fix #1249 
","start issue","[MRG] Fix: NaN problem in NiftiMapsMasker"
"issue_closed","1271","nilearn","nilearn","GaelVaroquaux","2016-11-05 08:11:51","","closed issue","[MRG] Fix: NaN problem in NiftiMapsMasker"
"pull_request_title","1271","nilearn","nilearn","KamalakerDadi","2016-09-11 19:32:04","- Add ""ensure_finite"" to ilearn.image.clean_img
- Deal automatically with NaNs in NiftiMapsMasker

Attempts to Fix #1249 
","a7ecedd92cc2fd7ab84b65592955cb930f4d23aa","[MRG] Fix: NaN problem in NiftiMapsMasker"
"pull_request_merged","1271","nilearn","nilearn","GaelVaroquaux","2016-11-05 08:11:51","[MRG] Fix: NaN problem in NiftiMapsMasker","d4c248f4c72fb30a3191f733483cc3d838a78d9c","Pull request merge from KamalakerDadi/nilearn:fix_nan_maps_masker to nilearn/nilearn:master"
"issue_comment","1271","nilearn","nilearn","GaelVaroquaux","2016-11-04 19:03:17","Yup. I am doing it right now. I'll push this to your branch
","",""
"issue_comment","1271","nilearn","nilearn","GaelVaroquaux","2016-11-04 19:29:46","Done. Beware that I pushed changes to your branch. You need to pull.
","",""
"issue_comment","1271","nilearn","nilearn","GaelVaroquaux","2016-11-04 20:35:13","> This PR also has NiftiLabelsMasker related changes. Should I have been specific
> to Maps masker only ?

Indeed.

The docstring was no longer valid. I have just fixed it.
","",""
"issue_comment","1271","nilearn","nilearn","GaelVaroquaux","2016-11-05 08:11:48","This is good to go. Merging.
","",""
"issue_comment","1271","nilearn","nilearn","GaelVaroquaux","2016-11-05 09:43:45","@KamalakerDadi, thanks for doing the work!
","",""
"issue_comment","1271","nilearn","nilearn","aabadie","2016-09-20 10:32:53","@KamalakerDadi, I don't know. This seems weird and here for a long time in nilearn. Googling a bit I found other projects complaining about PyQt installation on appveyor. Have you tried this kind of [appveyor configuration](https://github.com/mozilla/mozregression/blob/master/appveyor.yml) ?
","",""
"issue_comment","1271","nilearn","nilearn","KamalakerDadi","2016-09-14 20:24:50","@darya-chyzhyk it would be great if you could look review the PR to see if NaN problem will be solved. Thanks 
","",""
"issue_comment","1271","nilearn","nilearn","KamalakerDadi","2016-09-20 09:29:06","@aabadie Any hints how to fix this AppVeyor failure ?
","",""
"issue_comment","1271","nilearn","nilearn","KamalakerDadi","2016-09-20 10:45:08","> Have you tried this kind of appveyor configuration ?

@aabadie Thanks, I haven't but I would try. Not immediately but later.
","",""
"issue_comment","1271","nilearn","nilearn","KamalakerDadi","2016-09-21 07:45:58","Can I have reviews please ?
","",""
"issue_comment","1271","nilearn","nilearn","KamalakerDadi","2016-10-01 09:39:52","The way I am trying to fix this issue in particular NaN or infinite values in NiftiMapsMasker or NiftiLabelsMasker is by always keeping `ensure_finite=True` with function `_safe_get_data(data, ensure_finite=True)` in nilearn.regions.signal_extraction.py which is the heart of signal extraction for atlas maskers.

What I think would be instead of keeping `ensure_finite=True` always we give parameter option to atlas maskers and ask user to give it as `True` if they occur any error with non-finite values. Which I think would be safer. What do you think ? ping @AlexandreAbraham @GaelVaroquaux @bthirion 

This idea came up following discussion in issue #282 
","",""
"issue_comment","1271","nilearn","nilearn","KamalakerDadi","2016-10-27 07:34:53","Any improvements or reviews on this please ?
","",""
"issue_comment","1271","nilearn","nilearn","KamalakerDadi","2016-11-04 19:34:57","This PR also has NiftiLabelsMasker related changes. Should I have been specific to Maps masker only ?
","",""
"issue_comment","1271","nilearn","nilearn","KamalakerDadi","2016-11-05 09:28:44","Thank you very much for your contribution and merging @GaelVaroquaux 
","",""
"pull_request_commit_comment","1271","nilearn","nilearn","bthirion","2016-09-12 22:02:40","the infinite values (NANs and infs)
","a7ecedd92cc2fd7ab84b65592955cb930f4d23aa","(None, '', u'nilearn/image/image.py')"
"pull_request_commit_comment","1271","nilearn","nilearn","AlexandreAbraham","2016-09-15 07:28:50","Please add the description of the parameter in the docstring.
","a7ecedd92cc2fd7ab84b65592955cb930f4d23aa","(5, '', u'nilearn/_utils/niimg.py')"
"pull_request_commit_comment","1271","nilearn","nilearn","AlexandreAbraham","2016-09-15 07:31:05","First, it is not about ""infinite"" values but ""non-finite"" values (because NaN is not an infinity). Second, you rely on `np.nan_to_num` that set NaNs to 0, Inf to a very big value and NegInf to a very small value. So your doc is not correct.

Although we agree that NaN = 0 in this case, I don't know what we should do with infinities... Maybe raise an error?
","a7ecedd92cc2fd7ab84b65592955cb930f4d23aa","(None, '', u'nilearn/image/image.py')"
"pull_request_commit_comment","1271","nilearn","nilearn","AlexandreAbraham","2016-09-15 07:32:50","You don't test infinities, which tells me that this PR is more about NaNs than infinities.
","a7ecedd92cc2fd7ab84b65592955cb930f4d23aa","(None, '', u'nilearn/input_data/tests/test_nifti_labels_masker.py')"
"pull_request_commit_comment","1271","nilearn","nilearn","KamalakerDadi","2016-09-15 11:34:46","> Although we agree that NaN = 0 in this case, I don't know what we should do with infinities... Maybe raise an error?

Rather than raising an error. We do what we have done for NaN case. May be convert them equivalently to zeros or less risk value. What do you say ? Can you say we occur infinity errors too more often ?
","a7ecedd92cc2fd7ab84b65592955cb930f4d23aa","(None, '', u'nilearn/image/image.py')"
"pull_request_commit_comment","1271","nilearn","nilearn","KamalakerDadi","2016-09-15 11:35:06","Sure
","a7ecedd92cc2fd7ab84b65592955cb930f4d23aa","(5, '', u'nilearn/_utils/niimg.py')"
"pull_request_commit_comment","1271","nilearn","nilearn","KamalakerDadi","2016-09-15 11:36:40","> First, it is not about ""infinite"" values but ""non-finite"" values (because NaN is not an infinity). Second, you rely on np.nan_to_num that set NaNs to 0, Inf to a very big value and NegInf to a very small value. So your doc is not correct.

I followed the same documentation which already written and exists for `ensure_finite`.
","a7ecedd92cc2fd7ab84b65592955cb930f4d23aa","(None, '', u'nilearn/image/image.py')"
"pull_request_commit_comment","1271","nilearn","nilearn","KamalakerDadi","2016-09-16 17:32:29","what are we decided upon ? what do we do with infinite values ?
","a7ecedd92cc2fd7ab84b65592955cb930f4d23aa","(None, '', u'nilearn/image/image.py')"
"pull_request_commit_comment","1271","nilearn","nilearn","bthirion","2016-09-22 20:40:11","Why does it default to False ? (just asking, I have no strong opinion on the question). 
","a7ecedd92cc2fd7ab84b65592955cb930f4d23aa","(30, '', u'nilearn/image/image.py')"
"pull_request_commit_comment","1271","nilearn","nilearn","bthirion","2016-09-22 20:41:22","How does this behave if ensure_fininte==False ?
","a7ecedd92cc2fd7ab84b65592955cb930f4d23aa","(9, '', u'nilearn/image/tests/test_image.py')"
"pull_request_commit_comment","1271","nilearn","nilearn","bthirion","2016-09-22 20:42:51","You don't test whether `sig` is finite ?
","a7ecedd92cc2fd7ab84b65592955cb930f4d23aa","(29, '', u'nilearn/input_data/tests/test_nifti_labels_masker.py')"
"pull_request_commit_comment","1271","nilearn","nilearn","bthirion","2016-09-22 20:43:13","Idem
","a7ecedd92cc2fd7ab84b65592955cb930f4d23aa","(34, '', u'nilearn/input_data/tests/test_nifti_maps_masker.py')"
"pull_request_commit_comment","1271","nilearn","nilearn","bthirion","2016-09-22 20:44:51","ensure_finite=True (?)
","a7ecedd92cc2fd7ab84b65592955cb930f4d23aa","(None, '', u'nilearn/regions/signal_extraction.py')"
"pull_request_commit_comment","1271","nilearn","nilearn","KamalakerDadi","2016-09-23 09:02:04","I think image will still have non-finite values and might break somewhere in the analysis.

With the same test code it behaves like this:

``` python
nilearn/signal.py:146: RuntimeWarning: invalid value encountered in subtract
  signals -= np.mean(signals, axis=0)
nilearn/signal.py:63: RuntimeWarning: invalid value encountered in less
  std[std < np.finfo(np.float).eps] = 1.  # avoid numerical problems
```
","a7ecedd92cc2fd7ab84b65592955cb930f4d23aa","(9, '', u'nilearn/image/tests/test_image.py')"
"pull_request_commit_comment","1271","nilearn","nilearn","KamalakerDadi","2016-10-26 13:55:05","Its done.
","a7ecedd92cc2fd7ab84b65592955cb930f4d23aa","(5, '', u'nilearn/_utils/niimg.py')"
"pull_request_commit_comment","1271","nilearn","nilearn","KamalakerDadi","2016-10-26 13:56:10","Done
","a7ecedd92cc2fd7ab84b65592955cb930f4d23aa","(29, '', u'nilearn/input_data/tests/test_nifti_labels_masker.py')"
"pull_request_commit_comment","1271","nilearn","nilearn","KamalakerDadi","2016-10-26 13:56:30","Its done below.
","a7ecedd92cc2fd7ab84b65592955cb930f4d23aa","(34, '', u'nilearn/input_data/tests/test_nifti_maps_masker.py')"
"pull_request_commit_comment","1271","nilearn","nilearn","KamalakerDadi","2016-10-26 14:13:11","I think agreement was not fill zeros automatically by default. Full discussion is in #282  
","a7ecedd92cc2fd7ab84b65592955cb930f4d23aa","(30, '', u'nilearn/image/image.py')"
"pull_request_commit_comment","1271","nilearn","nilearn","GaelVaroquaux","2016-11-04 18:46:05","I think that we should always have ensure_finite=True here: it costs as much to check if there is a problem as to fix it.

I'll push these changes directly in your branch, to save time.
","a7ecedd92cc2fd7ab84b65592955cb930f4d23aa","(None, '', u'nilearn/input_data/base_masker.py')"
"pull_request_commit_comment","1271","nilearn","nilearn","GaelVaroquaux","2016-11-04 18:54:09","Actually, I've just realized that you are doing the ensure_finite on the signals, while it should really be done on the maps. I'll change that.
","a7ecedd92cc2fd7ab84b65592955cb930f4d23aa","(None, '', u'nilearn/input_data/base_masker.py')"
"pull_request_commit_comment","1271","nilearn","nilearn","KamalakerDadi","2016-11-04 19:01:40","Ok. I think we can remove this whole block ? Since signals that comes out are already replaced by zeros.
","a7ecedd92cc2fd7ab84b65592955cb930f4d23aa","(None, '', u'nilearn/input_data/base_masker.py')"
"pull_request_commit","1271","nilearn","nilearn","KamalakerDadi","2016-09-11 19:25:24","[Fix] NaN problem in NiftiMapsMasker
- Add ""ensure_finite"" to ilearn.image.clean_img
- Deal automatically with NaNs in NiftiMapsMasker","c59f0d6b5d98c8d07154101e5be082ab3922a159",""
"pull_request_commit","1271","nilearn","nilearn","KamalakerDadi","2016-09-14 18:49:38","Addressed comment-documentation wording","9ec805f8a74f75d0e3ba88329bd2634346cb2f8c",""
"pull_request_commit","1271","nilearn","nilearn","KamalakerDadi","2016-09-19 20:52:56","doc added in _safe_get_data and also deals with inf now","932386351cb65b64da9916cd3b7aac90bae8b130",""
"pull_request_commit","1271","nilearn","nilearn","KamalakerDadi","2016-10-26 13:38:45","Addressed comments:Fixed testing sig is finite after ensure_finite=True","5af0dccd7cd5bd5bf4db1272391b383031a8e005",""
"pull_request_commit","1271","nilearn","nilearn","KamalakerDadi","2016-10-31 15:58:26","Doc: Added about putting Inf or NaN to zeros in Maps & Labels Masker","b83ca64af5bca17e8d4548c302638eb44e67b3bf",""
"pull_request_commit","1271","nilearn","nilearn","GaelVaroquaux","2016-11-04 19:26:11","ENH: ensure_finite in maps, for NiftiMapsMasker","a7725d4aa7adbaf7d2e4ea57902e38870b775fac",""
"pull_request_commit","1271","nilearn","nilearn","GaelVaroquaux","2016-11-04 20:34:28","Update docstring","a7ecedd92cc2fd7ab84b65592955cb930f4d23aa",""
