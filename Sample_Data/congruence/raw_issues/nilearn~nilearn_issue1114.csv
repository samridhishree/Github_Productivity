"rectype","issueid","project_owner","project_name","actor","time","text","action","title"
"issue_title","1114","nilearn","nilearn","AlexandreAbraham","2016-06-09 08:29:39","Supersed #994 
","start issue","Add shelving to NiftiMasker"
"issue_closed","1114","nilearn","nilearn","AlexandreAbraham","2016-07-19 07:20:18","","closed issue","Add shelving to NiftiMasker"
"pull_request_title","1114","nilearn","nilearn","AlexandreAbraham","2016-06-09 08:29:39","Supersed #994 
","e1fb38872a6ce19f8536ac480823ccf62890f2df","Add shelving to NiftiMasker"
"pull_request_merged","1114","nilearn","nilearn","AlexandreAbraham","2016-07-19 07:20:18","Add shelving to NiftiMasker","24185cd747a781fea5147cb14229bee2339437d4","Pull request merge from AlexandreAbraham/nilearn:shelving to nilearn/nilearn:master"
"issue_comment","1114","nilearn","nilearn","AlexandreAbraham","2016-07-12 08:08:18","I addressed all the comments so this should be ready to go? @GaelVaroquaux 
","",""
"issue_comment","1114","nilearn","nilearn","AlexandreAbraham","2016-07-13 13:36:42","> Actually, confused with memory_level and func_memory_level in _cache() function ?

Oh, this... You must know about memory_level, right? Well, this function will decide if the caching is activated or not.

`func_memory_level` is the `threshold` from which the caching must be activated. `memory_level` is the level selected by the used. If `memory_level` is above `func_memory_level` (or the opposite, I always mix it up), then caching is activated, otherwise it is not.

I think that we should remove that but, for the moment, this is how it works.
","",""
"issue_comment","1114","nilearn","nilearn","KamalakerDadi","2016-07-12 10:38:24","Some minor comments from my side.
","",""
"issue_comment","1114","nilearn","nilearn","KamalakerDadi","2016-07-13 12:06:16","LGTM
","",""
"issue_comment","1114","nilearn","nilearn","KamalakerDadi","2016-07-13 13:13:04","Actually, confused with `memory_level` and `func_memory_level` in `_cache()` function ?

Isn't that should be called as `memory_level` ?
","",""
"pull_request_commit_comment","1114","nilearn","nilearn","GaelVaroquaux","2016-06-09 08:31:31","Say that it's a joblib MemorizedResult, so that people who don't know what it is can Google.
","e1fb38872a6ce19f8536ac480823ccf62890f2df","(None, '', u'nilearn/_utils/cache_mixin.py')"
"pull_request_commit_comment","1114","nilearn","nilearn","GaelVaroquaux","2016-06-09 08:39:25","Same remark
","e1fb38872a6ce19f8536ac480823ccf62890f2df","(None, '', u'nilearn/_utils/cache_mixin.py')"
"pull_request_commit_comment","1114","nilearn","nilearn","GaelVaroquaux","2016-06-09 08:43:07","While I agree that all these cosmetic changes make the code abide better to standards, they make reviewing the PR hard. :(
","e1fb38872a6ce19f8536ac480823ccf62890f2df","(None, '', u'nilearn/input_data/multi_nifti_masker.py')"
"pull_request_commit_comment","1114","nilearn","nilearn","GaelVaroquaux","2016-06-09 08:44:57","Looking at this, it seems that the signature of the method has changed. Is that the case?
","e1fb38872a6ce19f8536ac480823ccf62890f2df","(None, '', u'nilearn/input_data/multi_nifti_masker.py')"
"pull_request_commit_comment","1114","nilearn","nilearn","GaelVaroquaux","2016-06-09 08:49:21","Why this change? It add an argument that may trigger recomputation and doesn't add much to the function.
","e1fb38872a6ce19f8536ac480823ccf62890f2df","(None, '', u'nilearn/input_data/nifti_masker.py')"
"pull_request_commit_comment","1114","nilearn","nilearn","AlexandreAbraham","2016-06-09 08:57:05","Done.
","e1fb38872a6ce19f8536ac480823ccf62890f2df","(None, '', u'nilearn/_utils/cache_mixin.py')"
"pull_request_commit_comment","1114","nilearn","nilearn","AlexandreAbraham","2016-06-09 08:57:13","Done.
","e1fb38872a6ce19f8536ac480823ccf62890f2df","(None, '', u'nilearn/_utils/cache_mixin.py')"
"pull_request_commit_comment","1114","nilearn","nilearn","GaelVaroquaux","2016-06-09 08:58:26","Why the two methods above. They are on-liners. They should be removed, IMHO.
","e1fb38872a6ce19f8536ac480823ccf62890f2df","(None, '', u'nilearn/input_data/nifti_masker.py')"
"pull_request_commit_comment","1114","nilearn","nilearn","GaelVaroquaux","2016-06-09 08:58:45","I am not really that this method is useful either.
","e1fb38872a6ce19f8536ac480823ccf62890f2df","(None, '', u'nilearn/input_data/nifti_masker.py')"
"pull_request_commit_comment","1114","nilearn","nilearn","AlexandreAbraham","2016-06-09 08:59:58","No because `return_affine=False`. See below.
","e1fb38872a6ce19f8536ac480823ccf62890f2df","(None, '', u'nilearn/input_data/multi_nifti_masker.py')"
"pull_request_commit_comment","1114","nilearn","nilearn","GaelVaroquaux","2016-06-09 09:00:39","> No because return_affine=False. See below.

I saw that after, but I don't like it :)
","e1fb38872a6ce19f8536ac480823ccf62890f2df","(None, '', u'nilearn/input_data/multi_nifti_masker.py')"
"pull_request_commit_comment","1114","nilearn","nilearn","AlexandreAbraham","2016-06-09 09:04:48","The thing is that `filter_and_mask` returns the affine because we need it to do sanity checks (reminder, for performance reasons, the `check_niimg` is called in `filter_and_mask`). So, if we directly shelve the result of `filter_and_mask`, the affine will be stored together, which is not useful. Plus, if we need the affine, we will have to unshelve the object.

One solution may be to add a `shelving` parameter to `filter_and_mask` and directly use the shelving inside.
","e1fb38872a6ce19f8536ac480823ccf62890f2df","(None, '', u'nilearn/input_data/nifti_masker.py')"
"pull_request_commit_comment","1114","nilearn","nilearn","AlexandreAbraham","2016-06-09 09:06:05","I agree. We only need a `_set_shelving` one.
","e1fb38872a6ce19f8536ac480823ccf62890f2df","(None, '', u'nilearn/input_data/nifti_masker.py')"
"pull_request_commit_comment","1114","nilearn","nilearn","GaelVaroquaux","2016-06-09 09:17:30","> I agree. We only need a _set_shelving one.

We don't need a setter. This is not java. We just change the value of the
attribute directly. The methods do nothing else.
","e1fb38872a6ce19f8536ac480823ccf62890f2df","(None, '', u'nilearn/input_data/nifti_masker.py')"
"pull_request_commit_comment","1114","nilearn","nilearn","lesteve","2016-06-09 09:51:38","No comma needed I think. Also I tend to prefer Python types in general so bool rather than boolean.
","e1fb38872a6ce19f8536ac480823ccf62890f2df","(None, '', u'nilearn/_utils/cache_mixin.py')"
"pull_request_commit_comment","1114","nilearn","nilearn","lesteve","2016-06-09 09:53:07","_ShelvedFunc would abide by the usual naming conventions for classes.
","e1fb38872a6ce19f8536ac480823ccf62890f2df","(None, '', u'nilearn/_utils/cache_mixin.py')"
"pull_request_commit_comment","1114","nilearn","nilearn","lesteve","2016-06-09 09:53:27","Same comment as above.
","e1fb38872a6ce19f8536ac480823ccf62890f2df","(None, '', u'nilearn/_utils/cache_mixin.py')"
"pull_request_commit_comment","1114","nilearn","nilearn","lesteve","2016-06-09 10:12:23","We should use relative imports everywhere ...
","e1fb38872a6ce19f8536ac480823ccf62890f2df","(None, '', u'nilearn/input_data/multi_nifti_masker.py')"
"pull_request_commit_comment","1114","nilearn","nilearn","AlexandreAbraham","2016-07-11 14:18:59","Fixed it by removing the kwarg.
","e1fb38872a6ce19f8536ac480823ccf62890f2df","(None, '', u'nilearn/input_data/multi_nifti_masker.py')"
"pull_request_commit_comment","1114","nilearn","nilearn","KamalakerDadi","2016-07-12 09:04:18","May be we should forget about `MemorizedResult` since it is not exposed to user and also it is not officially documented yet.
","e1fb38872a6ce19f8536ac480823ccf62890f2df","(None, '', u'nilearn/input_data/nifti_masker.py')"
"pull_request_commit_comment","1114","nilearn","nilearn","KamalakerDadi","2016-07-12 09:12:05","Do we required to say in documentation what it returns if it is shelved ? 
","e1fb38872a6ce19f8536ac480823ccf62890f2df","(66, '', u'nilearn/_utils/cache_mixin.py')"
"pull_request_commit_comment","1114","nilearn","nilearn","KamalakerDadi","2016-07-12 09:12:55","same comment here as above ?
","e1fb38872a6ce19f8536ac480823ccf62890f2df","(111, '', u'nilearn/_utils/cache_mixin.py')"
"pull_request_commit_comment","1114","nilearn","nilearn","AlexandreAbraham","2016-07-13 09:29:45","You mean the hack regarding _ShelvedFunc?
","e1fb38872a6ce19f8536ac480823ccf62890f2df","(66, '', u'nilearn/_utils/cache_mixin.py')"
"pull_request_commit_comment","1114","nilearn","nilearn","AlexandreAbraham","2016-07-13 09:31:28","Indeed.
","e1fb38872a6ce19f8536ac480823ccf62890f2df","(None, '', u'nilearn/input_data/nifti_masker.py')"
"pull_request_commit_comment","1114","nilearn","nilearn","KamalakerDadi","2016-07-13 09:32:52","Yes. Is it not required ?
","e1fb38872a6ce19f8536ac480823ccf62890f2df","(66, '', u'nilearn/_utils/cache_mixin.py')"
"pull_request_commit_comment","1114","nilearn","nilearn","AlexandreAbraham","2016-07-13 09:41:32","I modified the doc!
","e1fb38872a6ce19f8536ac480823ccf62890f2df","(66, '', u'nilearn/_utils/cache_mixin.py')"
"pull_request_commit","1114","nilearn","nilearn","arthurmensch","2016-02-18 10:59:30","Initial commit

Test + doc

Test + doc

Python 2.7 compat

Added space

Minor comments

Removed functionality for scikit-learn <0.15

PEP8

PEP8

PEP8

gitingore

gitingore

gitingore

gitingore","e6ea7e4c516af3b815627abbd1b75ffe31214294",""
"pull_request_commit","1114","nilearn","nilearn","arthurmensch","2016-05-27 12:52:11","Cleaned API","622f3cc985178387840f1115f9fde6b0d84e313e",""
"pull_request_commit","1114","nilearn","nilearn","arthurmensch","2016-05-27 13:38:25","Fix python<3.5","67409283d73a1817c6ac198ba5208b905c0239c5",""
"pull_request_commit","1114","nilearn","nilearn","arthurmensch","2016-05-27 13:45:30","removed crap","d85ddadb31be2c88ea472695c331d673f2c268ea",""
"pull_request_commit","1114","nilearn","nilearn","arthurmensch","2016-05-27 13:47:31",".gitignor","059299f09ac245814eac35006c32e4bd62b9d989",""
"pull_request_commit","1114","nilearn","nilearn","AlexandreAbraham","2016-06-09 08:27:11","Fix test","71fda66db34dcab4f9aea71963df0b941016238a",""
"pull_request_commit","1114","nilearn","nilearn","AlexandreAbraham","2016-06-09 09:44:33","Fix error message","b7b39cee016829a4e7486ff3b6bc94266459a28b",""
"pull_request_commit","1114","nilearn","nilearn","AlexandreAbraham","2016-06-09 10:04:31","Address comments","0e6bd5e21c03a2c7735db6c55d176689fa4aebe0",""
"pull_request_commit","1114","nilearn","nilearn","AlexandreAbraham","2016-06-09 10:21:20","Fix imports","01c7848608d0b16e9db4f449221f362b69f559fd",""
"pull_request_commit","1114","nilearn","nilearn","AlexandreAbraham","2016-07-11 14:18:27","Remove `return_affine` parameter from filter_and_mask","236c34a1f4253095d6b042e0568d8119e25b6dfc",""
"pull_request_commit","1114","nilearn","nilearn","AlexandreAbraham","2016-07-13 09:32:13","Fix doc to hide shelving","46396c0ac11c94da9fee085a9eef7c7a9f39bb44",""
"pull_request_commit","1114","nilearn","nilearn","AlexandreAbraham","2016-07-13 09:36:24","Fix doc","e1fb38872a6ce19f8536ac480823ccf62890f2df",""
