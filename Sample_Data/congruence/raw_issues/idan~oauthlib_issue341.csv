"rectype","issueid","project_owner","project_name","actor","time","text","action","title"
"issue_title","341","idan","oauthlib","kdazzle","2015-05-09 19:22:18","https://github.com/idan/oauthlib/issues/340

Raise an `AttributeError` from `common.Request.__getattr__` so that `getattr` can be used like normal on a request. This commit breaks a lot of existing tests, which I'll fix in another commit.

This might break backwards compatibility if people are relying on `getattr(Request)` automatically returning `None`. 
","start issue","#340 - calling getattr on Request should raise an AttributeError if that attribute doesn't exist"
"issue_closed","341","idan","oauthlib","thedrow","2015-07-02 08:46:10","","closed issue","#340 - calling getattr on Request should raise an AttributeError if that attribute doesn't exist"
"pull_request_title","341","idan","oauthlib","kdazzle","2015-05-09 19:22:18","https://github.com/idan/oauthlib/issues/340

Raise an `AttributeError` from `common.Request.__getattr__` so that `getattr` can be used like normal on a request. This commit breaks a lot of existing tests, which I'll fix in another commit.

This might break backwards compatibility if people are relying on `getattr(Request)` automatically returning `None`. 
","fb8dcb41adef9617d11550102d9872e055a3ce8d","#340 - calling getattr on Request should raise an AttributeError if that attribute doesn't exist"
"pull_request_merged","341","idan","oauthlib","thedrow","2015-07-02 08:46:10","#340 - calling getattr on Request should raise an AttributeError if that attribute doesn't exist","624cb9bc4f9ae93e17fae9b9d37db3fcd936a653","Pull request merge from kdazzle/oauthlib:request-getattr to idan/oauthlib:master"
"issue_comment","341","idan","oauthlib","kdazzle","2015-05-09 19:45:17","Hmm, well a _lot_ of tests fail for a lot of different places around the code. One solution would be to replace all of the assumptions that a request attribute will be either something or `None`, or another would be to provide default values in `Request._params` in the constructor. Or a mix, of course. Something like the following commit.
","",""
"issue_comment","341","idan","oauthlib","thedrow","2015-07-01 11:37:25","I'm really not sure about this one.
Will this change break backwards compatibility?
","",""
"issue_comment","341","idan","oauthlib","foxx","2015-07-01 20:12:31","It's certainly the correct way of doing things, and the test appear to pass fine, although there is a chance this might be breaking something which isn't well tested, as well as other people relying on this implementation approach. I'm +1 on this, but will need to be highlighted in the change log.
","",""
"issue_comment","341","idan","oauthlib","kdazzle","2015-07-02 19:23:37","Thanks for taking a look at this and for merging it in!
Yeah, as @foxx said, it could break peoples' code if they are relying on that implementation, but I think this change is worth it.
","",""
"pull_request_commit","341","idan","oauthlib","kdazzle","2015-05-09 19:18:12","#340 - raise AttributeError from common.Request.__getattr__+ add tests","539558a02edbadb8d6ef690fb0beb2510a5eeb17",""
"pull_request_commit","341","idan","oauthlib","kdazzle","2015-05-09 19:46:51","#340 - provide default values for some params in common.Request","e1af87fd6f520576f3547ce69224779a40ebd85a",""
"pull_request_commit","341","idan","oauthlib","kdazzle","2015-05-24 23:29:23","Merge remote-tracking branch 'upstream/master' into request-getattr","7168c03ce6307f21e632dfbbfc62e1a89e6282a3",""
"pull_request_commit","341","idan","oauthlib","kdazzle","2015-05-24 23:42:20","#340 - add default param values to common.Request","fb8dcb41adef9617d11550102d9872e055a3ce8d",""
