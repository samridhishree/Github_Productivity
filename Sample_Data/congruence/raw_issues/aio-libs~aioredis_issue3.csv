"rectype","issueid","project_owner","project_name","actor","time","text","action","title"
"issue_title","3","aio-libs","aioredis","popravich","2014-05-26 07:44:37","","start issue","implement high-level commands interface"
"issue_closed","3","aio-libs","aioredis","popravich","2014-07-09 08:15:41","","closed issue","implement high-level commands interface"
"issue_comment","3","aio-libs","aioredis","popravich","2014-05-29 08:37:33","Any ideas / proposals?
","",""
"issue_comment","3","aio-libs","aioredis","popravich","2014-05-29 09:10:16","here is two ideas:
1.

``` python
# make a decorator that will register function as a redis command;
# make a wrapper that will (in __getattr__ call) look into registry for command
# handler and return that handler bound to connection
# like this:
def command(fun):
    """"""extract name;
       assert not in registry;
       put (name, fun) pair into registry""""""

class Wrapper:
    def __init__(self, conn):
        self.conn = conn
    def __getattr__(self, name):
        fun = registry[name]  # with KeyError to AttributeError translation ofcourse
        return partial(fun, self.conn)
```

2.

``` python
# make a connection wrapper class that will provide all commands
# (throught mixins)
# without any dynamic lookups in registry ro elsewhere
class Redis(_KeysCommandsMixin, _StringCommandsMixin,...):
    def __init__(self, conn):
        self.conn = conn
# plus a factory to instantiate this wrapper.
```
","",""
"issue_comment","3","aio-libs","aioredis","popravich","2014-05-29 12:22:04","pros & cons:
**1.**
_pros_:
    \* dynamic handlers registration
    \* a way for registerring custom handlers
_cons_:
    \* very hard to debug

**2.**
_pros_:
    \* simple and clean way for implementing commands
    \* easy to debug calls
_cons_:
    \* no simple way for registering custom handlers/commands
","",""
"issue_comment","3","aio-libs","aioredis","popravich","2014-05-29 12:22:41","+1 for option **2**
","",""
"issue_comment","3","aio-libs","aioredis","asvetlov","2014-05-29 12:27:33","I vote on the second option too.

On Thu, May 29, 2014 at 3:22 PM, Alexey Popravka notifications@github.com
wrote:

> +1 for option _2_
> 
> â€”
> Reply to this email directly or view it on GitHub
> https://github.com/popravich/aioredis/issues/3#issuecomment-44525940.

## 

Thanks,
Andrew Svetlov
","",""
"issue_comment","3","aio-libs","aioredis","popravich","2014-05-30 18:45:24","ok.
started implementing option 2.
","",""
"issue_comment","3","aio-libs","aioredis","asvetlov","2014-05-30 18:48:24","Thanks
","",""
"issue_comment","3","aio-libs","aioredis","popravich","2014-06-03 08:29:05","For implementation status see #22 
","",""
