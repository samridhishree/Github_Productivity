"rectype","issueid","project_owner","project_name","actor","time","text","action","title"
"issue_title","553","nilearn","nilearn","GaelVaroquaux","2015-04-20 16:16:22","Fixes #549

The signals were normlized when confounds were used, for little good
reason
","start issue","[MRG] BUG: don't normalize when confounds"
"issue_closed","553","nilearn","nilearn","GaelVaroquaux","2015-05-11 09:26:00","","closed issue","[MRG] BUG: don't normalize when confounds"
"pull_request_title","553","nilearn","nilearn","GaelVaroquaux","2015-04-20 16:16:22","Fixes #549

The signals were normlized when confounds were used, for little good
reason
","7dc04275022925c2f8a16e9c5f215890b43c0fa8","[MRG] BUG: don't normalize when confounds"
"pull_request_merged","553","nilearn","nilearn","GaelVaroquaux","2015-05-11 09:26:00","[MRG] BUG: don't normalize when confounds","13aca5bbb5c08bd16fd358c4cbd2acfdf3ef5e54","Pull request merge from GaelVaroquaux/nilearn:std_confounds to nilearn/nilearn:master"
"issue_comment","553","nilearn","nilearn","GaelVaroquaux","2015-04-24 15:40:18","Comments addressed. Thanks for the review.
","",""
"issue_comment","553","nilearn","nilearn","GaelVaroquaux","2015-05-07 14:07:35","By looking at the discussion, I think that they is nothing to do on this PR, and that it is mergeable.

Can I haz reviews? To haz merge?
","",""
"issue_comment","553","nilearn","nilearn","GaelVaroquaux","2015-05-11 09:25:48","Okay! Alors je merge ce tantÃ´t. 
","",""
"issue_comment","553","nilearn","nilearn","AlexandreAbraham","2015-05-11 09:23:58","Pouce vers le haut !
","",""
"issue_comment","553","nilearn","nilearn","eickenberg","2015-05-11 09:25:50","> Pouce vers le haut !

Bon pour fusion?

http://www.wordreference.com/enfr/merge
","",""
"pull_request_commit_comment","553","nilearn","nilearn","AlexandreAbraham","2015-04-20 20:34:22","Do we have to put space before colons now?
","7dc04275022925c2f8a16e9c5f215890b43c0fa8","(None, '', u'nilearn/signal.py')"
"pull_request_commit_comment","553","nilearn","nilearn","GaelVaroquaux","2015-04-20 20:35:53","> Do we have to put space before colons now?

Yes. It's always been like this in the numpy doc standard. But we keep
forgetting.
","7dc04275022925c2f8a16e9c5f215890b43c0fa8","(None, '', u'nilearn/signal.py')"
"pull_request_commit_comment","553","nilearn","nilearn","AlexandreAbraham","2015-04-20 20:52:58","Well, I don't keep forgetting, I've been corrected several times when I add them...
","7dc04275022925c2f8a16e9c5f215890b43c0fa8","(None, '', u'nilearn/signal.py')"
"pull_request_commit_comment","553","nilearn","nilearn","GaelVaroquaux","2015-04-20 20:54:24","> Well, I don't keep forgetting, I've been corrected several times when I add
> them...

:$
","7dc04275022925c2f8a16e9c5f215890b43c0fa8","(None, '', u'nilearn/signal.py')"
"pull_request_commit_comment","553","nilearn","nilearn","AlexandreAbraham","2015-04-21 08:54:50","Here is an image of generated doc. For the first parameter, there is no space. For the second one, I put a space. You can see that the extra space shows in the doc. This is, AFAIK, why we decided not to put them (this is the same in scikit-learn). I am not against adding them but we should be consistent and do that in a dedicated PR.

![space](https://cloud.githubusercontent.com/assets/1647301/7248651/a5291bba-e814-11e4-8c76-9ae3ecb2d685.png)
","7dc04275022925c2f8a16e9c5f215890b43c0fa8","(None, '', u'nilearn/signal.py')"
"pull_request_commit_comment","553","nilearn","nilearn","AlexandreAbraham","2015-04-21 08:56:29","There is no change in the code for that output.
","7dc04275022925c2f8a16e9c5f215890b43c0fa8","(None, '', u'nilearn/signal.py')"
"pull_request_commit_comment","553","nilearn","nilearn","salma1601","2015-04-24 14:02:05","hi @GaelVaroquaux 
What's the need for this additionnal output std ? Can't we just not standardize the input signal in the confounds removal if standardize is set to False?
","7dc04275022925c2f8a16e9c5f215890b43c0fa8","(None, '', u'nilearn/signal.py')"
"pull_request_commit_comment","553","nilearn","nilearn","GaelVaroquaux","2015-04-24 15:37:31","Indeed, thanks for the comment, Alex and Salma. This is a mistake and I
am correcting it.
","7dc04275022925c2f8a16e9c5f215890b43c0fa8","(None, '', u'nilearn/signal.py')"
"pull_request_commit_comment","553","nilearn","nilearn","salma1601","2015-04-24 15:55:28","if detrend is False here, the _standardize will just return a copy of the signals without centering them. May be the function _standardize also has to be changed so that the signal is centered even if both standardize and detrend are False ?
","7dc04275022925c2f8a16e9c5f215890b43c0fa8","(13, '', u'nilearn/signal.py')"
"pull_request_commit_comment","553","nilearn","nilearn","AlexandreAbraham","2015-04-25 14:30:26","You mean that you want a constant trend to be removed even if detrend is False?
","7dc04275022925c2f8a16e9c5f215890b43c0fa8","(13, '', u'nilearn/signal.py')"
"pull_request_commit_comment","553","nilearn","nilearn","salma1601","2015-04-25 17:25:51","yes that's what I meant but thinking again it is not necessary. In fact I was testing the new code on ADHD removing one unique constant confound and I had a weired result.
![demo_constant_removal](https://cloud.githubusercontent.com/assets/7080143/7333892/8c628cba-eb7f-11e4-84ad-e151f34f175d.png)

Investigating what is wrong it turns out it is the way the regression of confounds is done. In fact, it relies on a QR decomposition and in case of a unique null confound, the Q matrix is the vector np.array([1, 0, ..., 0]). So the output signal is np.array([0, input[1], ..., input[n]]). 

https://github.com/nilearn/nilearn/blob/master/nilearn/signal.py#L460

I think that the case of a constant confound must be handled precisely. Shall I open another issue for that?
","7dc04275022925c2f8a16e9c5f215890b43c0fa8","(13, '', u'nilearn/signal.py')"
"pull_request_commit_comment","553","nilearn","nilearn","salma1601","2015-04-26 08:14:57","I added a new issue for the confounds removal, because I think it is unrelated to standardization.
https://github.com/nilearn/nilearn/issues/561
","7dc04275022925c2f8a16e9c5f215890b43c0fa8","(13, '', u'nilearn/signal.py')"
"pull_request_commit_comment","553","nilearn","nilearn","lesteve","2015-05-09 00:26:02","I feel this has been discussed but I couldn't find it anywhere. How come we need to relax this condition, i.e. somehow that the cleaned_signals and confounds are less orthogonal ?
","7dc04275022925c2f8a16e9c5f215890b43c0fa8","(5, '', u'nilearn/tests/test_signal.py')"
"pull_request_commit_comment","553","nilearn","nilearn","lesteve","2015-05-09 00:26:48","Same question as above, do we understand why we need to relax this condition?
","7dc04275022925c2f8a16e9c5f215890b43c0fa8","(14, '', u'nilearn/tests/test_signal.py')"
"pull_request_commit_comment","553","nilearn","nilearn","GaelVaroquaux","2015-05-09 08:54:41","I am not sure. I couldn't get this to work.

There are two possible explanations: either the normalizing does indeed improve the numerics, and the results are less orthogonal. I think that it would not be the end of the world given that the precision is still very good.

Or options: the norm of residuals is really related to the norm of what goes in. Relative errors are what it meaningful, not absolute. Thus, it is normal that it goes up.

Anyhow, I couldn't decide which one was true, and chose to move forward: I don't think that this is too bad.
","7dc04275022925c2f8a16e9c5f215890b43c0fa8","(5, '', u'nilearn/tests/test_signal.py')"
"pull_request_commit_comment","553","nilearn","nilearn","salma1601","2015-05-09 22:41:23","> Or options: the norm of residuals is really related to the norm of what goes in. Relative errors are what it meaningful, not absolute. Thus, it is normal that it goes up.

for me this is the reason we need to relax both tests. To be convinced, rerun the same tests on the master with standardize=True (which results in a multiplication of the output signal by some factor) and the tests will not work.
","7dc04275022925c2f8a16e9c5f215890b43c0fa8","(14, '', u'nilearn/tests/test_signal.py')"
"pull_request_commit","553","nilearn","nilearn","GaelVaroquaux","2015-04-20 15:54:36","BUG: don't normalize when coufounds

Fixes #549

The signals were normlized when confounds were used, for little good
reason","9c594f2f140c8f21dfb005bf54b66e16ee281c07",""
"pull_request_commit","553","nilearn","nilearn","GaelVaroquaux","2015-04-24 15:37:33","DOC: fix incorrect documentation","7dc04275022925c2f8a16e9c5f215890b43c0fa8",""
