"rectype","issueid","project_owner","project_name","actor","time","text","action","title"
"issue_title","497","idan","oauthlib","JonathanHuot","2017-10-27 15:39:56","Hi guys,

I would like to know if someone already had a look on the [RFC 7662 ""OAuth2.0 Token Introspection](https://tools.ietf.org/html/rfc7662)"" ? 
That's a pretty simple extension which decipher a opaque token, and we're going to add this support to our OAuth2.0 authorization server.

Since the Introspection implementation is intrinsically linked to a RequestValidator implementation, I was wondering if this enhancement can be included into oauthlib project, and if anyone is interested by such features ?

Thank you for this excellent project.","start issue","OAuth2.0 Token Introspection"
"issue_comment","497","idan","oauthlib","duaneking","2017-10-31 17:26:07","Would love to see this done.
","",""
"issue_comment","497","idan","oauthlib","JonathanHuot","2017-11-08 08:38:56","We have completed a first implementation, where oauthlib support active:true/false and extra claims, plus an optional client authentication.

The fork/PR should be public soon.","",""
"issue_comment","497","idan","oauthlib","duaneking","2017-11-10 19:25:02","Thank You!

Does this include JWT token support? ","",""
"issue_comment","497","idan","oauthlib","duaneking","2017-11-13 16:51:51","#50 ","",""
"issue_comment","497","idan","oauthlib","JonathanHuot","2017-11-13 17:48:00","Our implementation of Token Introspection involves a  JWT token support, but I believe it's the responsability of the oauthlib's RequestValidator implementor to do such statements.

Since it seems we cannot make assumptions of ""how opaque"" a token is, we delegated the entire introspection to the RequestValidator. And then, the oauthlib's RequestValidator do basic calls.

However, I'll be happy to have other views of our PR, soon available. Stay tuned,","",""
"issue_comment","497","idan","oauthlib","duaneking","2017-11-13 17:50:20","Looking forward to this! I was just looking at the code to see what would be required to get JWT working, so you may have beaten me to the punch.","",""
