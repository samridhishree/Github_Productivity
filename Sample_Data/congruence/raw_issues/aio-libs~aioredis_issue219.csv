"rectype","issueid","project_owner","project_name","actor","time","text","action","title"
"issue_title","219","aio-libs","aioredis","pyup-bot","2017-05-09 19:04:11","
coverage is not pinned to a specific version.

I'm pinning it to the latest version **4.4** for now.


These links might come in handy:  <a href=""https://pypi.python.org/pypi/coverage"">PyPI</a> | <a href=""https://pyup.io/changelogs/coverage/"">Changelog</a> | <a href=""https://coverage.readthedocs.io"">Docs</a> 



### Changelog
> 
>### 4.4b1

>----------------------------

>- Some warnings can now be individually disabled.  Warnings that can be
>  disabled have a short name appended.  The ``[run] disable_warnings`` setting
>  takes a list of these warning names to disable. Closes both `issue 96`_ and
>  `issue 355`_.

>- The XML report now includes attributes from version 4 of the Cobertura XML
>  format, fixing `issue 570`_.

>- In previous versions, calling a method that used collected data would prevent
>  further collection.  For example, `save()`, `report()`, `html_report()`, and
>  others would all stop collection.  An explicit `start()` was needed to get it
>  going again.  This is no longer true.  Now you can use the collected data and
>  also continue measurement. Both `issue 79`_ and `issue 448`_ described this
>  problem, and have been fixed.

>- Plugins can now find unexecuted files if they choose, by implementing the
>  `find_executable_files` method.  Thanks, Emil Madsen.

>- Minimal IronPython support. You should be able to run IronPython programs
>  under ``coverage run``, though you will still have to do the reporting phase
>  with CPython.

>- Coverage.py has long had a special hack to support CPython&#39;s need to measure
>  the coverage of the standard library tests. This code was not installed by
>  kitted versions of coverage.py.  Now it is.

>.. _issue 79: https://bitbucket.org/ned/coveragepy/issues/79/save-prevents-harvesting-on-stop
>.. _issue 96: https://bitbucket.org/ned/coveragepy/issues/96/unhelpful-warnings-produced-when-using
>.. _issue 355: https://bitbucket.org/ned/coveragepy/issues/355/warnings-should-be-suppressable
>.. _issue 448: https://bitbucket.org/ned/coveragepy/issues/448/save-and-html_report-prevent-further
>.. _issue 570: https://bitbucket.org/ned/coveragepy/issues/570/cobertura-coverage-04dtd-support


>.. _changes_434:



>### 4.3.4

>----------------------------

>- Fixing 2.6 in version 4.3.3 broke other things, because the too-tricky
>  exception wasn&#39;t properly derived from Exception, described in `issue 556`_.
>  A newb mistake; it hasn&#39;t been a good few days.

>.. _issue 556: https://bitbucket.org/ned/coveragepy/issues/556/43-fails-if-there-are-html-files-in-the


>.. _changes_433:



>### 4.3.3

>----------------------------

>- Python 2.6 support was broken due to a testing exception imported for the
>  benefit of the coverage.py test suite.  Properly conditionalizing it fixed
>  `issue 554`_ so that Python 2.6 works again.

>.. _issue 554: https://bitbucket.org/ned/coveragepy/issues/554/traceback-on-python-26-starting-with-432


>.. _changes_432:



>### 4.3.2

>----------------------------

>- Using the ``--skip-covered`` option on an HTML report with 100% coverage
>  would cause a &quot;No data to report&quot; error, as reported in `issue 549`_. This is
>  now fixed; thanks, LoÃ¯c Dachary.

>- If-statements can be optimized away during compilation, for example, `if 0:`
>  or `if __debug__:`.  Coverage.py had problems properly understanding these
>  statements which existed in the source, but not in the compiled bytecode.
>  This problem, reported in `issue 522`_, is now fixed.

>- If you specified ``--source`` as a directory, then coverage.py would look for
>  importable Python files in that directory, and could identify ones that had
>  never been executed at all.  But if you specified it as a package name, that
>  detection wasn&#39;t performed.  Now it is, closing `issue 426`_. Thanks to LoÃ¯c
>  Dachary for the fix.

>- If you started and stopped coverage measurement thousands of times in your
>  process, you could crash Python with a &quot;Fatal Python error: deallocating
>  None&quot; error.  This is now fixed.  Thanks to Alex Groce for the bug report.

>- On PyPy, measuring coverage in subprocesses could produce a warning: &quot;Trace
>  function changed, measurement is likely wrong: None&quot;.  This was spurious, and
>  has been suppressed.

>- Previously, coverage.py couldn&#39;t start on Jython, due to that implementation
>  missing the multiprocessing module (`issue 551`_). This problem has now been
>  fixed. Also, `issue 322`_ about not being able to invoke coverage
>  conveniently, seems much better: ``jython -m coverage run myprog.py`` works
>  properly.

>- Let&#39;s say you ran the HTML report over and over again in the same output
>  directory, with ``--skip-covered``. And imagine due to your heroic
>  test-writing efforts, a file just acheived the goal of 100% coverage. With
>  coverage.py 4.3, the old HTML file with the less-than-100% coverage would be
>  left behind.  This file is now properly deleted.

>.. _issue 322: https://bitbucket.org/ned/coveragepy/issues/322/cannot-use-coverage-with-jython
>.. _issue 426: https://bitbucket.org/ned/coveragepy/issues/426/difference-between-coverage-results-with
>.. _issue 522: https://bitbucket.org/ned/coveragepy/issues/522/incorrect-branch-reporting-with-__debug__
>.. _issue 549: https://bitbucket.org/ned/coveragepy/issues/549/skip-covered-with-100-coverage-throws-a-no
>.. _issue 551: https://bitbucket.org/ned/coveragepy/issues/551/coveragepy-cannot-be-imported-in-jython27


>.. _changes_431:



>### 4.3.1

>----------------------------

>- Some environments couldn&#39;t install 4.3, as described in `issue 540`_. This is
>  now fixed.

>- The check for conflicting ``--source`` and ``--include`` was too simple in a
>  few different ways, breaking a few perfectly reasonable use cases, described
>  in `issue 541`_.  The check has been reverted while we re-think the fix for
>  `issue 265`_.

>.. _issue 540: https://bitbucket.org/ned/coveragepy/issues/540/cant-install-coverage-v43-into-under
>.. _issue 541: https://bitbucket.org/ned/coveragepy/issues/541/coverage-43-breaks-nosetest-with-coverage


>.. _changes_43:



>### 4.3

>--------------------------

>Special thanks to **LoÃ¯c Dachary**, who took an extraordinary interest in
>coverage.py and contributed a number of improvements in this release.

>- Subprocesses that are measured with `automatic subprocess measurement`_ used
>  to read in any pre-existing data file.  This meant data would be incorrectly
>  carried forward from run to run.  Now those files are not read, so each
>  subprocess only writes its own data. Fixes `issue 510`_.

>- The ``coverage combine`` command will now fail if there are no data files to
>  combine. The combine changes in 4.2 meant that multiple combines could lose
>  data, leaving you with an empty .coverage data file. Fixes
>  `issue 525`_, `issue 412`_, `issue 516`_, and probably `issue 511`_.

>- Coverage.py wouldn&#39;t execute `sys.excepthook`_ when an exception happened in
>  your program.  Now it does, thanks to Andrew Hoos.  Closes `issue 535`_.

>- Branch coverage fixes:

>  - Branch coverage could misunderstand a finally clause on a try block that
>    never continued on to the following statement, as described in `issue
>    493`_.  This is now fixed. Thanks to Joe Doherty for the report and LoÃ¯c
>    Dachary for the fix.

>  - A while loop with a constant condition (while True) and a continue
>    statement would be mis-analyzed, as described in `issue 496`_. This is now
>    fixed, thanks to a bug report by Eli Skeggs and a fix by LoÃ¯c Dachary.

>  - While loops with constant conditions that were never executed could result
>    in a non-zero coverage report.  Artem Dayneko reported this in `issue
>    502`_, and LoÃ¯c Dachary provided the fix.

>- The HTML report now supports a ``--skip-covered`` option like the other
>  reporting commands.  Thanks, LoÃ¯c Dachary for the implementation, closing
>  `issue 433`_.

>- Options can now be read from a tox.ini file, if any. Like setup.cfg, sections
>  are prefixed with &quot;coverage:&quot;, so ``[run]`` options will be read from the
>  ``[coverage:run]`` section of tox.ini. Implements part of `issue 519`_.
>  Thanks, Stephen Finucane.

>- Specifying both ``--source`` and ``--include`` no longer silently ignores the
>  include setting, instead it fails with a message. Thanks, Nathan Land and
>  LoÃ¯c Dachary. Closes `issue 265`_.

>- The ``Coverage.combine`` method has a new parameter, ``strict=False``, to
>  support failing if there are no data files to combine.

>- When forking subprocesses, the coverage data files would have the same random
>  number appended to the file name. This didn&#39;t cause problems, because the
>  file names had the process id also, making collisions (nearly) impossible.
>  But it was disconcerting.  This is now fixed.

>- The text report now properly sizes headers when skipping some files, fixing
>  `issue 524`_. Thanks, Anthony Sottile and LoÃ¯c Dachary.

>- Coverage.py can now search .pex files for source, just as it can .zip and
>  .egg.  Thanks, Peter Ebden.

>- Data files are now about 15% smaller.

>- Improvements in the ``[run] debug`` setting:

>  - The &quot;dataio&quot; debug setting now also logs when data files are deleted during
>    combining or erasing.

>  - A new debug option, &quot;multiproc&quot;, for logging the behavior of
>    ``concurrency=multiprocessing``.

>  - If you used the debug options &quot;config&quot; and &quot;callers&quot; together, you&#39;d get a
>    call stack printed for every line in the multi-line config output. This is
>    now fixed.

>- Fixed an unusual bug involving multiple coding declarations affecting code
>  containing code in multi-line strings: `issue 529`_.

>- Coverage.py will no longer be misled into thinking that a plain file is a
>  package when interpreting ``--source`` options.  Thanks, Cosimo Lupo.

>- If you try to run a non-Python file with coverage.py, you will now get a more
>  useful error message. `Issue 514`_.

>- The default pragma regex changed slightly, but this will only matter to you
>  if you are deranged and use mixed-case pragmas.

>- Deal properly with non-ASCII file names in an ASCII-only world, `issue 533`_.

>- Programs that set Unicode configuration values could cause UnicodeErrors when
>  generating HTML reports.  Pytest-cov is one example.  This is now fixed.

>- Prevented deprecation warnings from configparser that happened in some
>  circumstances, closing `issue 530`_.

>- Corrected the name of the jquery.ba-throttle-debounce.js library. Thanks,
>  Ben Finney.  Closes `issue 505`_.

>- Testing against PyPy 5.6 and PyPy3 5.5.

>- Switched to pytest from nose for running the coverage.py tests.

>- Renamed AUTHORS.txt to CONTRIBUTORS.txt, since there are other ways to
>  contribute than by writing code. Also put the count of contributors into the
>  author string in setup.py, though this might be too cute.

>.. _sys.excepthook: https://docs.python.org/3/library/sys.htmlsys.excepthook
>.. _issue 265: https://bitbucket.org/ned/coveragepy/issues/265/when-using-source-include-is-silently
>.. _issue 412: https://bitbucket.org/ned/coveragepy/issues/412/coverage-combine-should-error-if-no
>.. _issue 433: https://bitbucket.org/ned/coveragepy/issues/433/coverage-html-does-not-suport-skip-covered
>.. _issue 493: https://bitbucket.org/ned/coveragepy/issues/493/confusing-branching-failure
>.. _issue 496: https://bitbucket.org/ned/coveragepy/issues/496/incorrect-coverage-with-branching-and
>.. _issue 502: https://bitbucket.org/ned/coveragepy/issues/502/incorrect-coverage-report-with-cover
>.. _issue 505: https://bitbucket.org/ned/coveragepy/issues/505/use-canonical-filename-for-debounce
>.. _issue 514: https://bitbucket.org/ned/coveragepy/issues/514/path-to-problem-file-not-reported-when
>.. _issue 510: https://bitbucket.org/ned/coveragepy/issues/510/erase-still-needed-in-42
>.. _issue 511: https://bitbucket.org/ned/coveragepy/issues/511/version-42-coverage-combine-empties
>.. _issue 516: https://bitbucket.org/ned/coveragepy/issues/516/running-coverage-combine-twice-deletes-all
>.. _issue 519: https://bitbucket.org/ned/coveragepy/issues/519/coverage-run-sections-in-toxini-or-as
>.. _issue 524: https://bitbucket.org/ned/coveragepy/issues/524/coverage-report-with-skip-covered-column
>.. _issue 525: https://bitbucket.org/ned/coveragepy/issues/525/coverage-combine-when-not-in-parallel-mode
>.. _issue 529: https://bitbucket.org/ned/coveragepy/issues/529/encoding-marker-may-only-appear-on-the
>.. _issue 530: https://bitbucket.org/ned/coveragepy/issues/530/deprecationwarning-you-passed-a-bytestring
>.. _issue 533: https://bitbucket.org/ned/coveragepy/issues/533/exception-on-unencodable-file-name
>.. _issue 535: https://bitbucket.org/ned/coveragepy/issues/535/sysexcepthook-is-not-called


>.. _changes_42:



>### 4.2

>--------------------------

>- Since ``concurrency=multiprocessing`` uses subprocesses, options specified on
>  the coverage.py command line will not be communicated down to them.  Only
>  options in the configuration file will apply to the subprocesses.
>  Previously, the options didn&#39;t apply to the subprocesses, but there was no
>  indication.  Now it is an error to use ``--concurrency=multiprocessing`` and
>  other run-affecting options on the command line.  This prevents
>  failures like those reported in `issue 495`_.

>- Filtering the HTML report is now faster, thanks to Ville SkyttÃ¤.

>.. _issue 495: https://bitbucket.org/ned/coveragepy/issues/495/branch-and-concurrency-are-conflicting




>### 4.2b1

>----------------------------

>Work from the PyCon 2016 Sprints!

>- BACKWARD INCOMPATIBILITY: the ``coverage combine`` command now ignores an
>  existing ``.coverage`` data file.  It used to include that file in its
>  combining.  This caused confusing results, and extra tox &quot;clean&quot; steps.  If
>  you want the old behavior, use the new ``coverage combine --append`` option.

>- The ``concurrency`` option can now take multiple values, to support programs
>  using multiprocessing and another library such as eventlet.  This is only
>  possible in the configuration file, not from the command line. The
>  configuration file is the only way for sub-processes to all run with the same
>  options.  Fixes `issue 484`_.  Thanks to Josh Williams for prototyping.

>- Using a ``concurrency`` setting of ``multiprocessing`` now implies
>  ``--parallel`` so that the main program is measured similarly to the
>  sub-processes.

>- When using `automatic subprocess measurement`_, running coverage commands
>  would create spurious data files.  This is now fixed, thanks to diagnosis and
>  testing by Dan Riti.  Closes `issue 492`_.

>- A new configuration option, ``report:sort``, controls what column of the
>  text report is used to sort the rows.  Thanks to Dan Wandschneider, this
>  closes `issue 199`_.

>- The HTML report has a more-visible indicator for which column is being
>  sorted.  Closes `issue 298`_, thanks to Josh Williams.

>- If the HTML report cannot find the source for a file, the message now
>  suggests using the ``-i`` flag to allow the report to continue. Closes
>  `issue 231`_, thanks, Nathan Land.

>- When reports are ignoring errors, there&#39;s now a warning if a file cannot be
>  parsed, rather than being silently ignored.  Closes `issue 396`_. Thanks,
>  Matthew Boehm.

>- A new option for ``coverage debug`` is available: ``coverage debug config``
>  shows the current configuration.  Closes `issue 454`_, thanks to Matthew
>  Boehm.

>- Running coverage as a module (``python -m coverage``) no longer shows the
>  program name as ``__main__.py``.  Fixes `issue 478`_.  Thanks, Scott Belden.

>- The `test_helpers` module has been moved into a separate pip-installable
>  package: `unittest-mixins`_.

>.. _automatic subprocess measurement: http://coverage.readthedocs.io/en/latest/subprocess.html
>.. _issue 199: https://bitbucket.org/ned/coveragepy/issues/199/add-a-way-to-sort-the-text-report
>.. _issue 231: https://bitbucket.org/ned/coveragepy/issues/231/various-default-behavior-in-report-phase
>.. _issue 298: https://bitbucket.org/ned/coveragepy/issues/298/show-in-html-report-that-the-columns-are
>.. _issue 396: https://bitbucket.org/ned/coveragepy/issues/396/coverage-xml-shouldnt-bail-out-on-parse
>.. _issue 454: https://bitbucket.org/ned/coveragepy/issues/454/coverage-debug-config-should-be
>.. _issue 478: https://bitbucket.org/ned/coveragepy/issues/478/help-shows-silly-program-name-when-running
>.. _issue 484: https://bitbucket.org/ned/coveragepy/issues/484/multiprocessing-greenlet-concurrency
>.. _issue 492: https://bitbucket.org/ned/coveragepy/issues/492/subprocess-coverage-strange-detection-of
>.. _unittest-mixins: https://pypi.python.org/pypi/unittest-mixins


>.. _changes_41:



>### 4.1

>--------------------------

>- The internal attribute `Reporter.file_reporters` was removed in 4.1b3.  It
>  should have come has no surprise that there were third-party tools out there
>  using that attribute.  It has been restored, but with a deprecation warning.




>### 4.1b3

>----------------------------

>- When running your program, execution can jump from an ``except X:`` line to
>  some other line when an exception other than ``X`` happens.  This jump is no
>  longer considered a branch when measuring branch coverage.

>- When measuring branch coverage, ``yield`` statements that were never resumed
>  were incorrectly marked as missing, as reported in `issue 440`_.  This is now
>  fixed.

>- During branch coverage of single-line callables like lambdas and generator
>  expressions, coverage.py can now distinguish between them never being called,
>  or being called but not completed.  Fixes `issue 90`_, `issue 460`_ and
>  `issue 475`_.

>- The HTML report now has a map of the file along the rightmost edge of the
>  page, giving an overview of where the missed lines are.  Thanks, Dmitry
>  Shishov.

>- The HTML report now uses different monospaced fonts, favoring Consolas over
>  Courier.  Along the way, `issue 472`_ about not properly handling one-space
>  indents was fixed.  The index page also has slightly different styling, to
>  try to make the clickable detail pages more apparent.

>- Missing branches reported with ``coverage report -m`` will now say ``-&gt;exit``
>  for missed branches to the exit of a function, rather than a negative number.
>  Fixes `issue 469`_.

>- ``coverage --help`` and ``coverage --version`` now mention which tracer is
>  installed, to help diagnose problems. The docs mention which features need
>  the C extension. (`issue 479`_)

>- Officially support PyPy 5.1, which required no changes, just updates to the
>  docs.

>- The `Coverage.report` function had two parameters with non-None defaults,
>  which have been changed.  `show_missing` used to default to True, but now
>  defaults to None.  If you had been calling `Coverage.report` without
>  specifying `show_missing`, you&#39;ll need to explicitly set it to True to keep
>  the same behavior.  `skip_covered` used to default to False. It is now None,
>  which doesn&#39;t change the behavior.  This fixes `issue 485`_.

>- It&#39;s never been possible to pass a namespace module to one of the analysis
>  functions, but now at least we raise a more specific error message, rather
>  than getting confused. (`issue 456`_)

>- The `coverage.process_startup` function now returns the `Coverage` instance
>  it creates, as suggested in `issue 481`_.

>- Make a small tweak to how we compare threads, to avoid buggy custom
>  comparison code in thread classes. (`issue 245`_)

>.. _issue 90: https://bitbucket.org/ned/coveragepy/issues/90/lambda-expression-confuses-branch
>.. _issue 245: https://bitbucket.org/ned/coveragepy/issues/245/change-solution-for-issue-164
>.. _issue 440: https://bitbucket.org/ned/coveragepy/issues/440/yielded-twisted-failure-marked-as-missed
>.. _issue 456: https://bitbucket.org/ned/coveragepy/issues/456/coverage-breaks-with-implicit-namespaces
>.. _issue 460: https://bitbucket.org/ned/coveragepy/issues/460/confusing-html-report-for-certain-partial
>.. _issue 469: https://bitbucket.org/ned/coveragepy/issues/469/strange-1-line-number-in-branch-coverage
>.. _issue 472: https://bitbucket.org/ned/coveragepy/issues/472/html-report-indents-incorrectly-for-one
>.. _issue 475: https://bitbucket.org/ned/coveragepy/issues/475/generator-expression-is-marked-as-not
>.. _issue 479: https://bitbucket.org/ned/coveragepy/issues/479/clarify-the-need-for-the-c-extension
>.. _issue 481: https://bitbucket.org/ned/coveragepy/issues/481/asyncioprocesspoolexecutor-tracing-not
>.. _issue 485: https://bitbucket.org/ned/coveragepy/issues/485/coveragereport-ignores-show_missing-and




>### 4.1b2

>----------------------------

>- Problems with the new branch measurement in 4.1 beta 1 were fixed:

>  - Class docstrings were considered executable.  Now they no longer are.

>  - ``yield from`` and ``await`` were considered returns from functions, since
>    they could tranfer control to the caller.  This produced unhelpful &quot;missing
>    branch&quot; reports in a number of circumstances.  Now they no longer are
>    considered returns.

>  - In unusual situations, a missing branch to a negative number was reported.
>    This has been fixed, closing `issue 466`_.

>- The XML report now produces correct package names for modules found in
>  directories specified with ``source=``.  Fixes `issue 465`_.

>- ``coverage report`` won&#39;t produce trailing whitespace.

>.. _issue 465: https://bitbucket.org/ned/coveragepy/issues/465/coveragexml-produces-package-names-with-an
>.. _issue 466: https://bitbucket.org/ned/coveragepy/issues/466/impossible-missed-branch-to-a-negative




>### 4.1b1

>----------------------------

>- Branch analysis has been rewritten: it used to be based on bytecode, but now
>  uses AST analysis.  This has changed a number of things:

>  - More code paths are now considered runnable, especially in
>    ``try``/``except`` structures.  This may mean that coverage.py will
>    identify more code paths as uncovered.  This could either raise or lower
>    your overall coverage number.

>  - Python 3.5&#39;s ``async`` and ``await`` keywords are properly supported,
>    fixing `issue 434`_.

>  - Some long-standing branch coverage bugs were fixed:

>    - `issue 129`_: functions with only a docstring for a body would
>      incorrectly report a missing branch on the ``def`` line.

>    - `issue 212`_: code in an ``except`` block could be incorrectly marked as
>      a missing branch.

>    - `issue 146`_: context managers (``with`` statements) in a loop or ``try``
>      block could confuse the branch measurement, reporting incorrect partial
>      branches.

>    - `issue 422`_: in Python 3.5, an actual partial branch could be marked as
>      complete.

>- Pragmas to disable coverage measurement can now be used on decorator lines,
>  and they will apply to the entire function or class being decorated.  This
>  implements the feature requested in `issue 131`_.

>- Multiprocessing support is now available on Windows.  Thanks, Rodrigue
>  Cloutier.

>- Files with two encoding declarations are properly supported, fixing
>  `issue 453`_. Thanks, Max Linke.

>- Non-ascii characters in regexes in the configuration file worked in 3.7, but
>  stopped working in 4.0.  Now they work again, closing `issue 455`_.

>- Form-feed characters would prevent accurate determination of the beginning of
>  statements in the rest of the file.  This is now fixed, closing `issue 461`_.

>.. _issue 129: https://bitbucket.org/ned/coveragepy/issues/129/misleading-branch-coverage-of-empty
>.. _issue 131: https://bitbucket.org/ned/coveragepy/issues/131/pragma-on-a-decorator-line-should-affect
>.. _issue 146: https://bitbucket.org/ned/coveragepy/issues/146/context-managers-confuse-branch-coverage
>.. _issue 212: https://bitbucket.org/ned/coveragepy/issues/212/coverage-erroneously-reports-partial
>.. _issue 422: https://bitbucket.org/ned/coveragepy/issues/422/python35-partial-branch-marked-as-fully
>.. _issue 434: https://bitbucket.org/ned/coveragepy/issues/434/indexerror-in-python-35
>.. _issue 453: https://bitbucket.org/ned/coveragepy/issues/453/source-code-encoding-can-only-be-specified
>.. _issue 455: https://bitbucket.org/ned/coveragepy/issues/455/unusual-exclusions-stopped-working-in
>.. _issue 461: https://bitbucket.org/ned/coveragepy/issues/461/multiline-asserts-need-too-many-pragma


>.. _changes_403:



>### 4.0.3

>----------------------------

>- Fixed a mysterious problem that manifested in different ways: sometimes
>  hanging the process (`issue 420`_), sometimes making database connections
>  fail (`issue 445`_).

>- The XML report now has correct ``&lt;source&gt;`` elements when using a
>  ``--source=`` option somewhere besides the current directory.  This fixes
>  `issue 439`_. Thanks, Arcady Ivanov.

>- Fixed an unusual edge case of detecting source encodings, described in
>  `issue 443`_.

>- Help messages that mention the command to use now properly use the actual
>  command name, which might be different than &quot;coverage&quot;.  Thanks to Ben
>  Finney, this closes `issue 438`_.

>.. _issue 420: https://bitbucket.org/ned/coveragepy/issues/420/coverage-40-hangs-indefinitely-on-python27
>.. _issue 438: https://bitbucket.org/ned/coveragepy/issues/438/parameterise-coverage-command-name
>.. _issue 439: https://bitbucket.org/ned/coveragepy/issues/439/incorrect-cobertura-file-sources-generated
>.. _issue 443: https://bitbucket.org/ned/coveragepy/issues/443/coverage-gets-confused-when-encoding
>.. _issue 445: https://bitbucket.org/ned/coveragepy/issues/445/django-app-cannot-connect-to-cassandra


>.. _changes_402:



>### 4.0.2

>----------------------------

>- More work on supporting unusually encoded source. Fixed `issue 431`_.

>- Files or directories with non-ASCII characters are now handled properly,
>  fixing `issue 432`_.

>- Setting a trace function with sys.settrace was broken by a change in 4.0.1,
>  as reported in `issue 436`_.  This is now fixed.

>- Officially support PyPy 4.0, which required no changes, just updates to the
>  docs.

>.. _issue 431: https://bitbucket.org/ned/coveragepy/issues/431/couldnt-parse-python-file-with-cp1252
>.. _issue 432: https://bitbucket.org/ned/coveragepy/issues/432/path-with-unicode-characters-various
>.. _issue 436: https://bitbucket.org/ned/coveragepy/issues/436/disabled-coverage-ctracer-may-rise-from


>.. _changes_401:



>### 4.0.1

>----------------------------

>- When combining data files, unreadable files will now generate a warning
>  instead of failing the command.  This is more in line with the older
>  coverage.py v3.7.1 behavior, which silently ignored unreadable files.
>  Prompted by `issue 418`_.

>- The --skip-covered option would skip reporting on 100% covered files, but
>  also skipped them when calculating total coverage.  This was wrong, it should
>  only remove lines from the report, not change the final answer.  This is now
>  fixed, closing `issue 423`_.

>- In 4.0, the data file recorded a summary of the system on which it was run.
>  Combined data files would keep all of those summaries.  This could lead to
>  enormous data files consisting of mostly repetitive useless information. That
>  summary is now gone, fixing `issue 415`_.  If you want summary information,
>  get in touch, and we&#39;ll figure out a better way to do it.

>- Test suites that mocked os.path.exists would experience strange failures, due
>  to coverage.py using their mock inadvertently.  This is now fixed, closing
>  `issue 416`_.

>- Importing a ``__init__`` module explicitly would lead to an error:
>  ``AttributeError: &#39;module&#39; object has no attribute &#39;__path__&#39;``, as reported
>  in `issue 410`_.  This is now fixed.

>- Code that uses ``sys.settrace(sys.gettrace())`` used to incur a more than 2x
>  speed penalty.  Now there&#39;s no penalty at all. Fixes `issue 397`_.

>- Pyexpat C code will no longer be recorded as a source file, fixing
>  `issue 419`_.

>- The source kit now contains all of the files needed to have a complete source
>  tree, re-fixing `issue 137`_ and closing `issue 281`_.

>.. _issue 281: https://bitbucket.org/ned/coveragepy/issues/281/supply-scripts-for-testing-in-the
>.. _issue 397: https://bitbucket.org/ned/coveragepy/issues/397/stopping-and-resuming-coverage-with
>.. _issue 410: https://bitbucket.org/ned/coveragepy/issues/410/attributeerror-module-object-has-no
>.. _issue 415: https://bitbucket.org/ned/coveragepy/issues/415/repeated-coveragedataupdates-cause
>.. _issue 416: https://bitbucket.org/ned/coveragepy/issues/416/mocking-ospathexists-causes-failures
>.. _issue 418: https://bitbucket.org/ned/coveragepy/issues/418/json-parse-error
>.. _issue 419: https://bitbucket.org/ned/coveragepy/issues/419/nosource-no-source-for-code-path-to-c
>.. _issue 423: https://bitbucket.org/ned/coveragepy/issues/423/skip_covered-changes-reported-total


>.. _changes_40:



>### 4.0

>--------------------------



>### 4.0b3

>----------------------------

>- Reporting on an unmeasured file would fail with a traceback.  This is now
>  fixed, closing `issue 403`_.

>- The Jenkins ShiningPanda plugin looks for an obsolete file name to find the
>  HTML reports to publish, so it was failing under coverage.py 4.0.  Now we
>  create that file if we are running under Jenkins, to keep things working
>  smoothly. `issue 404`_.

>- Kits used to include tests and docs, but didn&#39;t install them anywhere, or
>  provide all of the supporting tools to make them useful.  Kits no longer
>  include tests and docs.  If you were using them from the older packages, get
>  in touch and help me understand how.

>.. _issue 403: https://bitbucket.org/ned/coveragepy/issues/403/hasherupdate-fails-with-typeerror-nonetype
>.. _issue 404: https://bitbucket.org/ned/coveragepy/issues/404/shiningpanda-jenkins-plugin-cant-find-html




>### 4.0b2

>----------------------------

>- 4.0b1 broke ``--append`` creating new data files.  This is now fixed, closing
>  `issue 392`_.

>- ``py.test --cov`` can write empty data, then touch files due to ``--source``,
>  which made coverage.py mistakenly force the data file to record lines instead
>  of arcs.  This would lead to a &quot;Can&#39;t combine line data with arc data&quot; error
>  message.  This is now fixed, and changed some method names in the
>  CoverageData interface.  Fixes `issue 399`_.

>- `CoverageData.read_fileobj` and `CoverageData.write_fileobj` replace the
>  `.read` and `.write` methods, and are now properly inverses of each other.

>- When using ``report --skip-covered``, a message will now be included in the
>  report output indicating how many files were skipped, and if all files are
>  skipped, coverage.py won&#39;t accidentally scold you for having no data to
>  report.  Thanks, Krystian Kichewko.

>- A new conversion utility has been added:  ``python -m coverage.pickle2json``
>  will convert v3.x pickle data files to v4.x JSON data files.  Thanks,
>  Alexander Todorov.  Closes `issue 395`_.

>- A new version identifier is available, `coverage.version_info`, a plain tuple
>  of values similar to `sys.version_info`_.

>.. _issue 392: https://bitbucket.org/ned/coveragepy/issues/392/run-append-doesnt-create-coverage-file
>.. _issue 395: https://bitbucket.org/ned/coveragepy/issues/395/rfe-read-pickled-files-as-well-for
>.. _issue 399: https://bitbucket.org/ned/coveragepy/issues/399/coverageexception-cant-combine-line-data
>.. _sys.version_info: https://docs.python.org/3/library/sys.htmlsys.version_info




>### 4.0b1

>----------------------------

>- Coverage.py is now licensed under the Apache 2.0 license.  See NOTICE.txt for
>  details.  Closes `issue 313`_.

>- The data storage has been completely revamped.  The data file is now
>  JSON-based instead of a pickle, closing `issue 236`_.  The `CoverageData`
>  class is now a public supported documented API to the data file.

>- A new configuration option, ``[run] note``, lets you set a note that will be
>  stored in the `runs` section of the data file.  You can use this to annotate
>  the data file with any information you like.

>- Unrecognized configuration options will now print an error message and stop
>  coverage.py.  This should help prevent configuration mistakes from passing
>  silently.  Finishes `issue 386`_.

>- In parallel mode, ``coverage erase`` will now delete all of the data files,
>  fixing `issue 262`_.

>- Coverage.py now accepts a directory name for ``coverage run`` and will run a
>  ``__main__.py`` found there, just like Python will.  Fixes `issue 252`_.
>  Thanks, Dmitry Trofimov.

>- The XML report now includes a ``missing-branches`` attribute.  Thanks, Steve
>  Peak.  This is not a part of the Cobertura DTD, so the XML report no longer
>  references the DTD.

>- Missing branches in the HTML report now have a bit more information in the
>  right-hand annotations.  Hopefully this will make their meaning clearer.

>- All the reporting functions now behave the same if no data had been
>  collected, exiting with a status code of 1.  Fixed ``fail_under`` to be
>  applied even when the report is empty.  Thanks, Ionel Cristian MÄrieÈ.

>- Plugins are now initialized differently.  Instead of looking for a class
>  called ``Plugin``, coverage.py looks for a function called ``coverage_init``.

>- A file-tracing plugin can now ask to have built-in Python reporting by
>  returning `&quot;python&quot;` from its `file_reporter()` method.

>- Code that was executed with `exec` would be mis-attributed to the file that
>  called it.  This is now fixed, closing `issue 380`_.

>- The ability to use item access on `Coverage.config` (introduced in 4.0a2) has
>  been changed to a more explicit `Coverage.get_option` and
>  `Coverage.set_option` API.

>- The ``Coverage.use_cache`` method is no longer supported.

>- The private method ``Coverage._harvest_data`` is now called
>  ``Coverage.get_data``, and returns the ``CoverageData`` containing the
>  collected data.

>- The project is consistently referred to as &quot;coverage.py&quot; throughout the code
>  and the documentation, closing `issue 275`_.

>- Combining data files with an explicit configuration file was broken in 4.0a6,
>  but now works again, closing `issue 385`_.

>- ``coverage combine`` now accepts files as well as directories.

>- The speed is back to 3.7.1 levels, after having slowed down due to plugin
>  support, finishing up `issue 387`_.

>.. _issue 236: https://bitbucket.org/ned/coveragepy/issues/236/pickles-are-bad-and-you-should-feel-bad
>.. _issue 252: https://bitbucket.org/ned/coveragepy/issues/252/coverage-wont-run-a-program-with
>.. _issue 262: https://bitbucket.org/ned/coveragepy/issues/262/when-parallel-true-erase-should-erase-all
>.. _issue 275: https://bitbucket.org/ned/coveragepy/issues/275/refer-consistently-to-project-as-coverage
>.. _issue 313: https://bitbucket.org/ned/coveragepy/issues/313/add-license-file-containing-2-3-or-4
>.. _issue 380: https://bitbucket.org/ned/coveragepy/issues/380/code-executed-by-exec-excluded-from
>.. _issue 385: https://bitbucket.org/ned/coveragepy/issues/385/coverage-combine-doesnt-work-with-rcfile
>.. _issue 386: https://bitbucket.org/ned/coveragepy/issues/386/error-on-unrecognised-configuration
>.. _issue 387: https://bitbucket.org/ned/coveragepy/issues/387/performance-degradation-from-371-to-40

>.. 40 issues closed in 4.0 below here




>### 4.0a6

>----------------------------

>- Python 3.5b2 and PyPy 2.6.0 are supported.

>- The original module-level function interface to coverage.py is no longer
>  supported.  You must now create a ``coverage.Coverage`` object, and use
>  methods on it.

>- The ``coverage combine`` command now accepts any number of directories as
>  arguments, and will combine all the data files from those directories.  This
>  means you don&#39;t have to copy the files to one directory before combining.
>  Thanks, Christine Lytwynec.  Finishes `issue 354`_.

>- Branch coverage couldn&#39;t properly handle certain extremely long files. This
>  is now fixed (`issue 359`_).

>- Branch coverage didn&#39;t understand yield statements properly.  Mickie Betz
>  persisted in pursuing this despite Ned&#39;s pessimism.  Fixes `issue 308`_ and
>  `issue 324`_.

>- The COVERAGE_DEBUG environment variable can be used to set the
>  ``[run] debug`` configuration option to control what internal operations are
>  logged.

>- HTML reports were truncated at formfeed characters.  This is now fixed
>  (`issue 360`_).  It&#39;s always fun when the problem is due to a `bug in the
>  Python standard library &lt;http://bugs.python.org/issue19035&gt;`_.

>- Files with incorrect encoding declaration comments are no longer ignored by
>  the reporting commands, fixing `issue 351`_.

>- HTML reports now include a timestamp in the footer, closing `issue 299`_.
>  Thanks, Conrad Ho.

>- HTML reports now begrudgingly use double-quotes rather than single quotes,
>  because there are &quot;software engineers&quot; out there writing tools that read HTML
>  and somehow have no idea that single quotes exist.  Capitulates to the absurd
>  `issue 361`_.  Thanks, Jon Chappell.

>- The ``coverage annotate`` command now handles non-ASCII characters properly,
>  closing `issue 363`_.  Thanks, Leonardo Pistone.

>- Drive letters on Windows were not normalized correctly, now they are. Thanks,
>  Ionel Cristian MÄrieÈ.

>- Plugin support had some bugs fixed, closing `issue 374`_ and `issue 375`_.
>  Thanks, Stefan Behnel.

>.. _issue 299: https://bitbucket.org/ned/coveragepy/issue/299/inserted-created-on-yyyy-mm-dd-hh-mm-in
>.. _issue 308: https://bitbucket.org/ned/coveragepy/issue/308/yield-lambda-branch-coverage
>.. _issue 324: https://bitbucket.org/ned/coveragepy/issue/324/yield-in-loop-confuses-branch-coverage
>.. _issue 351: https://bitbucket.org/ned/coveragepy/issue/351/files-with-incorrect-encoding-are-ignored
>.. _issue 354: https://bitbucket.org/ned/coveragepy/issue/354/coverage-combine-should-take-a-list-of
>.. _issue 359: https://bitbucket.org/ned/coveragepy/issue/359/xml-report-chunk-error
>.. _issue 360: https://bitbucket.org/ned/coveragepy/issue/360/html-reports-get-confused-by-l-in-the-code
>.. _issue 361: https://bitbucket.org/ned/coveragepy/issue/361/use-double-quotes-in-html-output-to
>.. _issue 363: https://bitbucket.org/ned/coveragepy/issue/363/annotate-command-hits-unicode-happy-fun
>.. _issue 374: https://bitbucket.org/ned/coveragepy/issue/374/c-tracer-lookups-fail-in
>.. _issue 375: https://bitbucket.org/ned/coveragepy/issue/375/ctracer_handle_return-reads-byte-code




>### 4.0a5

>----------------------------

>- Plugin support is now implemented in the C tracer instead of the Python
>  tracer. This greatly improves the speed of tracing projects using plugins.

>- Coverage.py now always adds the current directory to sys.path, so that
>  plugins can import files in the current directory (`issue 358`_).

>- If the `config_file` argument to the Coverage constructor is specified as
>  &quot;.coveragerc&quot;, it is treated as if it were True.  This means setup.cfg is
>  also examined, and a missing file is not considered an error (`issue 357`_).

>- Wildly experimental: support for measuring processes started by the
>  multiprocessing module.  To use, set ``--concurrency=multiprocessing``,
>  either on the command line or in the .coveragerc file (`issue 117`_). Thanks,
>  Eduardo Schettino.  Currently, this does not work on Windows.

>- A new warning is possible, if a desired file isn&#39;t measured because it was
>  imported before coverage.py was started (`issue 353`_).

>- The `coverage.process_startup` function now will start coverage measurement
>  only once, no matter how many times it is called.  This fixes problems due
>  to unusual virtualenv configurations (`issue 340`_).

>- Added 3.5.0a1 to the list of supported CPython versions.

>.. _issue 117: https://bitbucket.org/ned/coveragepy/issue/117/enable-coverage-measurement-of-code-run-by
>.. _issue 340: https://bitbucket.org/ned/coveragepy/issue/340/keyerror-subpy
>.. _issue 353: https://bitbucket.org/ned/coveragepy/issue/353/40a3-introduces-an-unexpected-third-case
>.. _issue 357: https://bitbucket.org/ned/coveragepy/issue/357/behavior-changed-when-coveragerc-is
>.. _issue 358: https://bitbucket.org/ned/coveragepy/issue/358/all-coverage-commands-should-adjust




>### 4.0a4

>----------------------------

>- Plugins can now provide sys_info for debugging output.

>- Started plugins documentation.

>- Prepared to move the docs to readthedocs.org.




>### 4.0a3

>----------------------------

>- Reports now use file names with extensions.  Previously, a report would
>  describe a/b/c.py as &quot;a/b/c&quot;.  Now it is shown as &quot;a/b/c.py&quot;.  This allows
>  for better support of non-Python files, and also fixed `issue 69`_.

>- The XML report now reports each directory as a package again.  This was a bad
>  regression, I apologize.  This was reported in `issue 235`_, which is now
>  fixed.

>- A new configuration option for the XML report: ``[xml] package_depth``
>  controls which directories are identified as packages in the report.
>  Directories deeper than this depth are not reported as packages.
>  The default is that all directories are reported as packages.
>  Thanks, Lex Berezhny.

>- When looking for the source for a frame, check if the file exists. On
>  Windows, .pyw files are no longer recorded as .py files. Along the way, this
>  fixed `issue 290`_.

>- Empty files are now reported as 100% covered in the XML report, not 0%
>  covered (`issue 345`_).

>- Regexes in the configuration file are now compiled as soon as they are read,
>  to provide error messages earlier (`issue 349`_).

>.. _issue 69: https://bitbucket.org/ned/coveragepy/issue/69/coverage-html-overwrite-files-that-doesnt
>.. _issue 235: https://bitbucket.org/ned/coveragepy/issue/235/package-name-is-missing-in-xml-report
>.. _issue 290: https://bitbucket.org/ned/coveragepy/issue/290/running-programmatically-with-pyw-files
>.. _issue 345: https://bitbucket.org/ned/coveragepy/issue/345/xml-reports-line-rate-0-for-empty-files
>.. _issue 349: https://bitbucket.org/ned/coveragepy/issue/349/bad-regex-in-config-should-get-an-earlier




>### 4.0a2

>----------------------------

>- Officially support PyPy 2.4, and PyPy3 2.4.  Drop support for
>  CPython 3.2 and older versions of PyPy.  The code won&#39;t work on CPython 3.2.
>  It will probably still work on older versions of PyPy, but I&#39;m not testing
>  against them.

>- Plugins!

>- The original command line switches (`-x` to run a program, etc) are no
>  longer supported.

>- A new option: `coverage report --skip-covered` will reduce the number of
>  files reported by skipping files with 100% coverage.  Thanks, Krystian
>  Kichewko.  This means that empty `__init__.py` files will be skipped, since
>  they are 100% covered, closing `issue 315`_.

>- You can now specify the ``--fail-under`` option in the ``.coveragerc`` file
>  as the ``[report] fail_under`` option.  This closes `issue 314`_.

>- The ``COVERAGE_OPTIONS`` environment variable is no longer supported.  It was
>  a hack for ``--timid`` before configuration files were available.

>- The HTML report now has filtering.  Type text into the Filter box on the
>  index page, and only modules with that text in the name will be shown.
>  Thanks, Danny Allen.

>- The textual report and the HTML report used to report partial branches
>  differently for no good reason.  Now the text report&#39;s &quot;missing branches&quot;
>  column is a &quot;partial branches&quot; column so that both reports show the same
>  numbers.  This closes `issue 342`_.

>- If you specify a ``--rcfile`` that cannot be read, you will get an error
>  message.  Fixes `issue 343`_.

>- The ``--debug`` switch can now be used on any command.

>- You can now programmatically adjust the configuration of coverage.py by
>  setting items on `Coverage.config` after construction.

>- A module run with ``-m`` can be used as the argument to ``--source``, fixing
>  `issue 328`_.  Thanks, Buck Evan.

>- The regex for matching exclusion pragmas has been fixed to allow more kinds
>  of whitespace, fixing `issue 334`_.

>- Made some PyPy-specific tweaks to improve speed under PyPy.  Thanks, Alex
>  Gaynor.

>- In some cases, with a source file missing a final newline, coverage.py would
>  count statements incorrectly.  This is now fixed, closing `issue 293`_.

>- The status.dat file that HTML reports use to avoid re-creating files that
>  haven&#39;t changed is now a JSON file instead of a pickle file.  This obviates
>  `issue 287`_ and `issue 237`_.

>.. _issue 237: https://bitbucket.org/ned/coveragepy/issue/237/htmlcov-with-corrupt-statusdat
>.. _issue 287: https://bitbucket.org/ned/coveragepy/issue/287/htmlpy-doesnt-specify-pickle-protocol
>.. _issue 293: https://bitbucket.org/ned/coveragepy/issue/293/number-of-statement-detection-wrong-if-no
>.. _issue 314: https://bitbucket.org/ned/coveragepy/issue/314/fail_under-param-not-working-in-coveragerc
>.. _issue 315: https://bitbucket.org/ned/coveragepy/issue/315/option-to-omit-empty-files-eg-__init__py
>.. _issue 328: https://bitbucket.org/ned/coveragepy/issue/328/misbehavior-in-run-source
>.. _issue 334: https://bitbucket.org/ned/coveragepy/issue/334/pragma-not-recognized-if-tab-character
>.. _issue 342: https://bitbucket.org/ned/coveragepy/issue/342/console-and-html-coverage-reports-differ
>.. _issue 343: https://bitbucket.org/ned/coveragepy/issue/343/an-explicitly-named-non-existent-config




>### 4.0a1

>----------------------------

>- Python versions supported are now CPython 2.6, 2.7, 3.2, 3.3, and 3.4, and
>  PyPy 2.2.

>- Gevent, eventlet, and greenlet are now supported, closing `issue 149`_.
>  The ``concurrency`` setting specifies the concurrency library in use.  Huge
>  thanks to Peter Portante for initial implementation, and to Joe Jevnik for
>  the final insight that completed the work.

>- Options are now also read from a setup.cfg file, if any.  Sections are
>  prefixed with &quot;coverage:&quot;, so the ``[run]`` options will be read from the
>  ``[coverage:run]`` section of setup.cfg.  Finishes `issue 304`_.

>- The ``report -m`` command can now show missing branches when reporting on
>  branch coverage.  Thanks, Steve Leonard. Closes `issue 230`_.

>- The XML report now contains a &lt;source&gt; element, fixing `issue 94`_.  Thanks
>  Stan Hu.

>- The class defined in the coverage module is now called ``Coverage`` instead
>  of ``coverage``, though the old name still works, for backward compatibility.

>- The ``fail-under`` value is now rounded the same as reported results,
>  preventing paradoxical results, fixing `issue 284`_.

>- The XML report will now create the output directory if need be, fixing
>  `issue 285`_.  Thanks, Chris Rose.

>- HTML reports no longer raise UnicodeDecodeError if a Python file has
>  undecodable characters, fixing `issue 303`_ and `issue 331`_.

>- The annotate command will now annotate all files, not just ones relative to
>  the current directory, fixing `issue 57`_.

>- The coverage module no longer causes deprecation warnings on Python 3.4 by
>  importing the imp module, fixing `issue 305`_.

>- Encoding declarations in source files are only considered if they are truly
>  comments.  Thanks, Anthony Sottile.

>.. _issue 57: https://bitbucket.org/ned/coveragepy/issue/57/annotate-command-fails-to-annotate-many
>.. _issue 94: https://bitbucket.org/ned/coveragepy/issue/94/coverage-xml-doesnt-produce-sources
>.. _issue 149: https://bitbucket.org/ned/coveragepy/issue/149/coverage-gevent-looks-broken
>.. _issue 230: https://bitbucket.org/ned/coveragepy/issue/230/show-line-no-for-missing-branches-in
>.. _issue 284: https://bitbucket.org/ned/coveragepy/issue/284/fail-under-should-show-more-precision
>.. _issue 285: https://bitbucket.org/ned/coveragepy/issue/285/xml-report-fails-if-output-file-directory
>.. _issue 303: https://bitbucket.org/ned/coveragepy/issue/303/unicodedecodeerror
>.. _issue 304: https://bitbucket.org/ned/coveragepy/issue/304/attempt-to-get-configuration-from-setupcfg
>.. _issue 305: https://bitbucket.org/ned/coveragepy/issue/305/pendingdeprecationwarning-the-imp-module
>.. _issue 331: https://bitbucket.org/ned/coveragepy/issue/331/failure-of-encoding-detection-on-python2


>.. _changes_371:



>### 3.7.1

>----------------------------

>- Improved the speed of HTML report generation by about 20%.

>- Fixed the mechanism for finding OS-installed static files for the HTML report
>  so that it will actually find OS-installed static files.


>.. _changes_37:



>### 3.7

>--------------------------

>- Added the ``--debug`` switch to ``coverage run``.  It accepts a list of
>  options indicating the type of internal activity to log to stderr.

>- Improved the branch coverage facility, fixing `issue 92`_ and `issue 175`_.

>- Running code with ``coverage run -m`` now behaves more like Python does,
>  setting sys.path properly, which fixes `issue 207`_ and `issue 242`_.

>- Coverage.py can now run .pyc files directly, closing `issue 264`_.

>- Coverage.py properly supports .pyw files, fixing `issue 261`_.

>- Omitting files within a tree specified with the ``source`` option would
>  cause them to be incorrectly marked as unexecuted, as described in
>  `issue 218`_.  This is now fixed.

>- When specifying paths to alias together during data combining, you can now
>  specify relative paths, fixing `issue 267`_.

>- Most file paths can now be specified with username expansion (``~/src``, or
>  ``~build/src``, for example), and with environment variable expansion
>  (``build/$BUILDNUM/src``).

>- Trying to create an XML report with no files to report on, would cause a
>  ZeroDivideError, but no longer does, fixing `issue 250`_.

>- When running a threaded program under the Python tracer, coverage.py no
>  longer issues a spurious warning about the trace function changing: &quot;Trace
>  function changed, measurement is likely wrong: None.&quot;  This fixes `issue
>  164`_.

>- Static files necessary for HTML reports are found in system-installed places,
>  to ease OS-level packaging of coverage.py.  Closes `issue 259`_.

>- Source files with encoding declarations, but a blank first line, were not
>  decoded properly.  Now they are.  Thanks, Roger Hu.

>- The source kit now includes the ``__main__.py`` file in the root coverage
>  directory, fixing `issue 255`_.

>.. _issue 92: https://bitbucket.org/ned/coveragepy/issue/92/finally-clauses-arent-treated-properly-in
>.. _issue 164: https://bitbucket.org/ned/coveragepy/issue/164/trace-function-changed-warning-when-using
>.. _issue 175: https://bitbucket.org/ned/coveragepy/issue/175/branch-coverage-gets-confused-in-certain
>.. _issue 207: https://bitbucket.org/ned/coveragepy/issue/207/run-m-cannot-find-module-or-package-in
>.. _issue 242: https://bitbucket.org/ned/coveragepy/issue/242/running-a-two-level-package-doesnt-work
>.. _issue 218: https://bitbucket.org/ned/coveragepy/issue/218/run-command-does-not-respect-the-omit-flag
>.. _issue 250: https://bitbucket.org/ned/coveragepy/issue/250/uncaught-zerodivisionerror-when-generating
>.. _issue 255: https://bitbucket.org/ned/coveragepy/issue/255/directory-level-__main__py-not-included-in
>.. _issue 259: https://bitbucket.org/ned/coveragepy/issue/259/allow-use-of-system-installed-third-party
>.. _issue 261: https://bitbucket.org/ned/coveragepy/issue/261/pyw-files-arent-reported-properly
>.. _issue 264: https://bitbucket.org/ned/coveragepy/issue/264/coverage-wont-run-pyc-files
>.. _issue 267: https://bitbucket.org/ned/coveragepy/issue/267/relative-path-aliases-dont-work


>.. _changes_36:



>### 3.6

>--------------------------

>- Added a page to the docs about troublesome situations, closing `issue 226`_,
>  and added some info to the TODO file, closing `issue 227`_.

>.. _issue 226: https://bitbucket.org/ned/coveragepy/issue/226/make-readme-section-to-describe-when
>.. _issue 227: https://bitbucket.org/ned/coveragepy/issue/227/update-todo




>### 3.6b3

>----------------------------

>- Beta 2 broke the nose plugin. It&#39;s fixed again, closing `issue 224`_.

>.. _issue 224: https://bitbucket.org/ned/coveragepy/issue/224/36b2-breaks-nosexcover




>### 3.6b2

>----------------------------

>- Coverage.py runs on Python 2.3 and 2.4 again. It was broken in 3.6b1.

>- The C extension is optionally compiled using a different more widely-used
>  technique, taking another stab at fixing `issue 80`_ once and for all.

>- Combining data files would create entries for phantom files if used with
>  ``source`` and path aliases.  It no longer does.

>- ``debug sys`` now shows the configuration file path that was read.

>- If an oddly-behaved package claims that code came from an empty-string
>  file name, coverage.py no longer associates it with the directory name,
>  fixing `issue 221`_.

>.. _issue 221: https://bitbucket.org/ned/coveragepy/issue/221/coveragepy-incompatible-with-pyratemp




>### 3.6b1

>----------------------------

>- Wildcards in ``include=`` and ``omit=`` arguments were not handled properly
>  in reporting functions, though they were when running.  Now they are handled
>  uniformly, closing `issue 143`_ and `issue 163`_.  **NOTE**: it is possible
>  that your configurations may now be incorrect.  If you use ``include`` or
>  ``omit`` during reporting, whether on the command line, through the API, or
>  in a configuration file, please check carefully that you were not relying on
>  the old broken behavior.

>- The **report**, **html**, and **xml** commands now accept a ``--fail-under``
>  switch that indicates in the exit status whether the coverage percentage was
>  less than a particular value.  Closes `issue 139`_.

>- The reporting functions coverage.report(), coverage.html_report(), and
>  coverage.xml_report() now all return a float, the total percentage covered
>  measurement.

>- The HTML report&#39;s title can now be set in the configuration file, with the
>  ``--title`` switch on the command line, or via the API.

>- Configuration files now support substitution of environment variables, using
>  syntax like ``${WORD}``.  Closes `issue 97`_.

>- Embarrassingly, the ``[xml] output=`` setting in the .coveragerc file simply
>  didn&#39;t work.  Now it does.

>- The XML report now consistently uses file names for the file name attribute,
>  rather than sometimes using module names.  Fixes `issue 67`_.
>  Thanks, Marcus Cobden.

>- Coverage percentage metrics are now computed slightly differently under
>  branch coverage.  This means that completely unexecuted files will now
>  correctly have 0% coverage, fixing `issue 156`_.  This also means that your
>  total coverage numbers will generally now be lower if you are measuring
>  branch coverage.

>- When installing, now in addition to creating a &quot;coverage&quot; command, two new
>  aliases are also installed.  A &quot;coverage2&quot; or &quot;coverage3&quot; command will be
>  created, depending on whether you are installing in Python 2.x or 3.x.
>  A &quot;coverage-X.Y&quot; command will also be created corresponding to your specific
>  version of Python.  Closes `issue 111`_.

>- The coverage.py installer no longer tries to bootstrap setuptools or
>  Distribute.  You must have one of them installed first, as `issue 202`_
>  recommended.

>- The coverage.py kit now includes docs (closing `issue 137`_) and tests.

>- On Windows, files are now reported in their correct case, fixing `issue 89`_
>  and `issue 203`_.

>- If a file is missing during reporting, the path shown in the error message
>  is now correct, rather than an incorrect path in the current directory.
>  Fixes `issue 60`_.

>- Running an HTML report in Python 3 in the same directory as an old Python 2
>  HTML report would fail with a UnicodeDecodeError. This issue (`issue 193`_)
>  is now fixed.

>- Fixed yet another error trying to parse non-Python files as Python, this
>  time an IndentationError, closing `issue 82`_ for the fourth time...

>- If `coverage xml` fails because there is no data to report, it used to
>  create a zero-length XML file.  Now it doesn&#39;t, fixing `issue 210`_.

>- Jython files now work with the ``--source`` option, fixing `issue 100`_.

>- Running coverage.py under a debugger is unlikely to work, but it shouldn&#39;t
>  fail with &quot;TypeError: &#39;NoneType&#39; object is not iterable&quot;.  Fixes `issue
>  201`_.

>- On some Linux distributions, when installed with the OS package manager,
>  coverage.py would report its own code as part of the results.  Now it won&#39;t,
>  fixing `issue 214`_, though this will take some time to be repackaged by the
>  operating systems.

>- Docstrings for the legacy singleton methods are more helpful.  Thanks Marius
>  Gedminas.  Closes `issue 205`_.

>- The pydoc tool can now show documentation for the class `coverage.coverage`.
>  Closes `issue 206`_.

>- Added a page to the docs about contributing to coverage.py, closing
>  `issue 171`_.

>- When coverage.py ended unsuccessfully, it may have reported odd errors like
>  ``&#39;NoneType&#39; object has no attribute &#39;isabs&#39;``.  It no longer does,
>  so kiss `issue 153`_ goodbye.

>.. _issue 60: https://bitbucket.org/ned/coveragepy/issue/60/incorrect-path-to-orphaned-pyc-files
>.. _issue 67: https://bitbucket.org/ned/coveragepy/issue/67/xml-report-filenames-may-be-generated
>.. _issue 89: https://bitbucket.org/ned/coveragepy/issue/89/on-windows-all-packages-are-reported-in
>.. _issue 97: https://bitbucket.org/ned/coveragepy/issue/97/allow-environment-variables-to-be
>.. _issue 100: https://bitbucket.org/ned/coveragepy/issue/100/source-directive-doesnt-work-for-packages
>.. _issue 111: https://bitbucket.org/ned/coveragepy/issue/111/when-installing-coverage-with-pip-not
>.. _issue 137: https://bitbucket.org/ned/coveragepy/issue/137/provide-docs-with-source-distribution
>.. _issue 139: https://bitbucket.org/ned/coveragepy/issue/139/easy-check-for-a-certain-coverage-in-tests
>.. _issue 143: https://bitbucket.org/ned/coveragepy/issue/143/omit-doesnt-seem-to-work-in-coverage
>.. _issue 153: https://bitbucket.org/ned/coveragepy/issue/153/non-existent-filename-triggers
>.. _issue 156: https://bitbucket.org/ned/coveragepy/issue/156/a-completely-unexecuted-file-shows-14
>.. _issue 163: https://bitbucket.org/ned/coveragepy/issue/163/problem-with-include-and-omit-filename
>.. _issue 171: https://bitbucket.org/ned/coveragepy/issue/171/how-to-contribute-and-run-tests
>.. _issue 193: https://bitbucket.org/ned/coveragepy/issue/193/unicodedecodeerror-on-htmlpy
>.. _issue 201: https://bitbucket.org/ned/coveragepy/issue/201/coverage-using-django-14-with-pydb-on
>.. _issue 202: https://bitbucket.org/ned/coveragepy/issue/202/get-rid-of-ez_setuppy-and
>.. _issue 203: https://bitbucket.org/ned/coveragepy/issue/203/duplicate-filenames-reported-when-filename
>.. _issue 205: https://bitbucket.org/ned/coveragepy/issue/205/make-pydoc-coverage-more-friendly
>.. _issue 206: https://bitbucket.org/ned/coveragepy/issue/206/pydoc-coveragecoverage-fails-with-an-error
>.. _issue 210: https://bitbucket.org/ned/coveragepy/issue/210/if-theres-no-coverage-data-coverage-xml
>.. _issue 214: https://bitbucket.org/ned/coveragepy/issue/214/coveragepy-measures-itself-on-precise


>.. _changes_353:



>### 3.5.3

>----------------------------

>- Line numbers in the HTML report line up better with the source lines, fixing
>  `issue 197`_, thanks Marius Gedminas.

>- When specifying a directory as the source= option, the directory itself no
>  longer needs to have a ``__init__.py`` file, though its sub-directories do,
>  to be considered as source files.

>- Files encoded as UTF-8 with a BOM are now properly handled, fixing
>  `issue 179`_.  Thanks, Pablo Carballo.

>- Fixed more cases of non-Python files being reported as Python source, and
>  then not being able to parse them as Python.  Closes `issue 82`_ (again).
>  Thanks, Julian Berman.

>- Fixed memory leaks under Python 3, thanks, Brett Cannon. Closes `issue 147`_.

>- Optimized .pyo files may not have been handled correctly, `issue 195`_.
>  Thanks, Marius Gedminas.

>- Certain unusually named file paths could have been mangled during reporting,
>  `issue 194`_.  Thanks, Marius Gedminas.

>- Try to do a better job of the impossible task of detecting when we can&#39;t
>  build the C extension, fixing `issue 183`_.

>- Testing is now done with `tox`_, thanks, Marc Abramowitz.

>.. _issue 147: https://bitbucket.org/ned/coveragepy/issue/147/massive-memory-usage-by-ctracer
>.. _issue 179: https://bitbucket.org/ned/coveragepy/issue/179/htmlreporter-fails-when-source-file-is
>.. _issue 183: https://bitbucket.org/ned/coveragepy/issue/183/install-fails-for-python-23
>.. _issue 194: https://bitbucket.org/ned/coveragepy/issue/194/filelocatorrelative_filename-could-mangle
>.. _issue 195: https://bitbucket.org/ned/coveragepy/issue/195/pyo-file-handling-in-codeunit
>.. _issue 197: https://bitbucket.org/ned/coveragepy/issue/197/line-numbers-in-html-report-do-not-align
>.. _tox: http://tox.readthedocs.org/


>.. _changes_352:



>### 3.5.2

>----------------------------



>### 3.5.2b1

>------------------------------

>- The HTML report has slightly tweaked controls: the buttons at the top of
>  the page are color-coded to the source lines they affect.

>- Custom CSS can be applied to the HTML report by specifying a CSS file as
>  the ``extra_css`` configuration value in the ``[html]`` section.

>- Source files with custom encodings declared in a comment at the top are now
>  properly handled during reporting on Python 2.  Python 3 always handled them
>  properly.  This fixes `issue 157`_.

>- Backup files left behind by editors are no longer collected by the source=
>  option, fixing `issue 168`_.

>- If a file doesn&#39;t parse properly as Python, we don&#39;t report it as an error
>  if the file name seems like maybe it wasn&#39;t meant to be Python.  This is a
>  pragmatic fix for `issue 82`_.

>- The ``-m`` switch on ``coverage report``, which includes missing line numbers
>  in the summary report, can now be specified as ``show_missing`` in the
>  config file.  Closes `issue 173`_.

>- When running a module with ``coverage run -m &lt;modulename&gt;``, certain details
>  of the execution environment weren&#39;t the same as for
>  ``python -m &lt;modulename&gt;``.  This had the unfortunate side-effect of making
>  ``coverage run -m unittest discover`` not work if you had tests in a
>  directory named &quot;test&quot;.  This fixes `issue 155`_ and `issue 142`_.

>- Now the exit status of your product code is properly used as the process
>  status when running ``python -m coverage run ...``.  Thanks, JT Olds.

>- When installing into pypy, we no longer attempt (and fail) to compile
>  the C tracer function, closing `issue 166`_.

>.. _issue 142: https://bitbucket.org/ned/coveragepy/issue/142/executing-python-file-syspath-is-replaced
>.. _issue 155: https://bitbucket.org/ned/coveragepy/issue/155/cant-use-coverage-run-m-unittest-discover
>.. _issue 157: https://bitbucket.org/ned/coveragepy/issue/157/chokes-on-source-files-with-non-utf-8
>.. _issue 166: https://bitbucket.org/ned/coveragepy/issue/166/dont-try-to-compile-c-extension-on-pypy
>.. _issue 168: https://bitbucket.org/ned/coveragepy/issue/168/dont-be-alarmed-by-emacs-droppings
>.. _issue 173: https://bitbucket.org/ned/coveragepy/issue/173/theres-no-way-to-specify-show-missing-in


>.. _changes_351:



>### 3.5.2.b1





>### 3.5.1

>----------------------------

>- The ``[paths]`` feature unfortunately didn&#39;t work in real world situations
>  where you wanted to, you know, report on the combined data.  Now all paths
>  stored in the combined file are canonicalized properly.




>### 3.5.1b1

>------------------------------

>- When combining data files from parallel runs, you can now instruct
>  coverage.py about which directories are equivalent on different machines.  A
>  ``[paths]`` section in the configuration file lists paths that are to be
>  considered equivalent.  Finishes `issue 17`_.

>- for-else constructs are understood better, and don&#39;t cause erroneous partial
>  branch warnings.  Fixes `issue 122`_.

>- Branch coverage for ``with`` statements is improved, fixing `issue 128`_.

>- The number of partial branches reported on the HTML summary page was
>  different than the number reported on the individual file pages.  This is
>  now fixed.

>- An explicit include directive to measure files in the Python installation
>  wouldn&#39;t work because of the standard library exclusion.  Now the include
>  directive takes precedence, and the files will be measured.  Fixes
>  `issue 138`_.

>- The HTML report now handles Unicode characters in Python source files
>  properly.  This fixes `issue 124`_ and `issue 144`_. Thanks, Devin
>  Jeanpierre.

>- In order to help the core developers measure the test coverage of the
>  standard library, Brandon Rhodes devised an aggressive hack to trick Python
>  into running some coverage.py code before anything else in the process.
>  See the coverage/fullcoverage directory if you are interested.

>..","start issue","Pin coverage to latest version 4.4"
"issue_closed","219","aio-libs","aioredis","popravich","2017-05-13 14:55:23","","closed issue","Pin coverage to latest version 4.4"
"pull_request_title","219","aio-libs","aioredis","pyup-bot","2017-05-09 19:04:11","
coverage is not pinned to a specific version.

I'm pinning it to the latest version **4.4** for now.


These links might come in handy:  <a href=""https://pypi.python.org/pypi/coverage"">PyPI</a> | <a href=""https://pyup.io/changelogs/coverage/"">Changelog</a> | <a href=""https://coverage.readthedocs.io"">Docs</a> 



### Changelog
> 
>### 4.4b1

>----------------------------

>- Some warnings can now be individually disabled.  Warnings that can be
>  disabled have a short name appended.  The ``[run] disable_warnings`` setting
>  takes a list of these warning names to disable. Closes both `issue 96`_ and
>  `issue 355`_.

>- The XML report now includes attributes from version 4 of the Cobertura XML
>  format, fixing `issue 570`_.

>- In previous versions, calling a method that used collected data would prevent
>  further collection.  For example, `save()`, `report()`, `html_report()`, and
>  others would all stop collection.  An explicit `start()` was needed to get it
>  going again.  This is no longer true.  Now you can use the collected data and
>  also continue measurement. Both `issue 79`_ and `issue 448`_ described this
>  problem, and have been fixed.

>- Plugins can now find unexecuted files if they choose, by implementing the
>  `find_executable_files` method.  Thanks, Emil Madsen.

>- Minimal IronPython support. You should be able to run IronPython programs
>  under ``coverage run``, though you will still have to do the reporting phase
>  with CPython.

>- Coverage.py has long had a special hack to support CPython&#39;s need to measure
>  the coverage of the standard library tests. This code was not installed by
>  kitted versions of coverage.py.  Now it is.

>.. _issue 79: https://bitbucket.org/ned/coveragepy/issues/79/save-prevents-harvesting-on-stop
>.. _issue 96: https://bitbucket.org/ned/coveragepy/issues/96/unhelpful-warnings-produced-when-using
>.. _issue 355: https://bitbucket.org/ned/coveragepy/issues/355/warnings-should-be-suppressable
>.. _issue 448: https://bitbucket.org/ned/coveragepy/issues/448/save-and-html_report-prevent-further
>.. _issue 570: https://bitbucket.org/ned/coveragepy/issues/570/cobertura-coverage-04dtd-support


>.. _changes_434:



>### 4.3.4

>----------------------------

>- Fixing 2.6 in version 4.3.3 broke other things, because the too-tricky
>  exception wasn&#39;t properly derived from Exception, described in `issue 556`_.
>  A newb mistake; it hasn&#39;t been a good few days.

>.. _issue 556: https://bitbucket.org/ned/coveragepy/issues/556/43-fails-if-there-are-html-files-in-the


>.. _changes_433:



>### 4.3.3

>----------------------------

>- Python 2.6 support was broken due to a testing exception imported for the
>  benefit of the coverage.py test suite.  Properly conditionalizing it fixed
>  `issue 554`_ so that Python 2.6 works again.

>.. _issue 554: https://bitbucket.org/ned/coveragepy/issues/554/traceback-on-python-26-starting-with-432


>.. _changes_432:



>### 4.3.2

>----------------------------

>- Using the ``--skip-covered`` option on an HTML report with 100% coverage
>  would cause a &quot;No data to report&quot; error, as reported in `issue 549`_. This is
>  now fixed; thanks, LoÃ¯c Dachary.

>- If-statements can be optimized away during compilation, for example, `if 0:`
>  or `if __debug__:`.  Coverage.py had problems properly understanding these
>  statements which existed in the source, but not in the compiled bytecode.
>  This problem, reported in `issue 522`_, is now fixed.

>- If you specified ``--source`` as a directory, then coverage.py would look for
>  importable Python files in that directory, and could identify ones that had
>  never been executed at all.  But if you specified it as a package name, that
>  detection wasn&#39;t performed.  Now it is, closing `issue 426`_. Thanks to LoÃ¯c
>  Dachary for the fix.

>- If you started and stopped coverage measurement thousands of times in your
>  process, you could crash Python with a &quot;Fatal Python error: deallocating
>  None&quot; error.  This is now fixed.  Thanks to Alex Groce for the bug report.

>- On PyPy, measuring coverage in subprocesses could produce a warning: &quot;Trace
>  function changed, measurement is likely wrong: None&quot;.  This was spurious, and
>  has been suppressed.

>- Previously, coverage.py couldn&#39;t start on Jython, due to that implementation
>  missing the multiprocessing module (`issue 551`_). This problem has now been
>  fixed. Also, `issue 322`_ about not being able to invoke coverage
>  conveniently, seems much better: ``jython -m coverage run myprog.py`` works
>  properly.

>- Let&#39;s say you ran the HTML report over and over again in the same output
>  directory, with ``--skip-covered``. And imagine due to your heroic
>  test-writing efforts, a file just acheived the goal of 100% coverage. With
>  coverage.py 4.3, the old HTML file with the less-than-100% coverage would be
>  left behind.  This file is now properly deleted.

>.. _issue 322: https://bitbucket.org/ned/coveragepy/issues/322/cannot-use-coverage-with-jython
>.. _issue 426: https://bitbucket.org/ned/coveragepy/issues/426/difference-between-coverage-results-with
>.. _issue 522: https://bitbucket.org/ned/coveragepy/issues/522/incorrect-branch-reporting-with-__debug__
>.. _issue 549: https://bitbucket.org/ned/coveragepy/issues/549/skip-covered-with-100-coverage-throws-a-no
>.. _issue 551: https://bitbucket.org/ned/coveragepy/issues/551/coveragepy-cannot-be-imported-in-jython27


>.. _changes_431:



>### 4.3.1

>----------------------------

>- Some environments couldn&#39;t install 4.3, as described in `issue 540`_. This is
>  now fixed.

>- The check for conflicting ``--source`` and ``--include`` was too simple in a
>  few different ways, breaking a few perfectly reasonable use cases, described
>  in `issue 541`_.  The check has been reverted while we re-think the fix for
>  `issue 265`_.

>.. _issue 540: https://bitbucket.org/ned/coveragepy/issues/540/cant-install-coverage-v43-into-under
>.. _issue 541: https://bitbucket.org/ned/coveragepy/issues/541/coverage-43-breaks-nosetest-with-coverage


>.. _changes_43:



>### 4.3

>--------------------------

>Special thanks to **LoÃ¯c Dachary**, who took an extraordinary interest in
>coverage.py and contributed a number of improvements in this release.

>- Subprocesses that are measured with `automatic subprocess measurement`_ used
>  to read in any pre-existing data file.  This meant data would be incorrectly
>  carried forward from run to run.  Now those files are not read, so each
>  subprocess only writes its own data. Fixes `issue 510`_.

>- The ``coverage combine`` command will now fail if there are no data files to
>  combine. The combine changes in 4.2 meant that multiple combines could lose
>  data, leaving you with an empty .coverage data file. Fixes
>  `issue 525`_, `issue 412`_, `issue 516`_, and probably `issue 511`_.

>- Coverage.py wouldn&#39;t execute `sys.excepthook`_ when an exception happened in
>  your program.  Now it does, thanks to Andrew Hoos.  Closes `issue 535`_.

>- Branch coverage fixes:

>  - Branch coverage could misunderstand a finally clause on a try block that
>    never continued on to the following statement, as described in `issue
>    493`_.  This is now fixed. Thanks to Joe Doherty for the report and LoÃ¯c
>    Dachary for the fix.

>  - A while loop with a constant condition (while True) and a continue
>    statement would be mis-analyzed, as described in `issue 496`_. This is now
>    fixed, thanks to a bug report by Eli Skeggs and a fix by LoÃ¯c Dachary.

>  - While loops with constant conditions that were never executed could result
>    in a non-zero coverage report.  Artem Dayneko reported this in `issue
>    502`_, and LoÃ¯c Dachary provided the fix.

>- The HTML report now supports a ``--skip-covered`` option like the other
>  reporting commands.  Thanks, LoÃ¯c Dachary for the implementation, closing
>  `issue 433`_.

>- Options can now be read from a tox.ini file, if any. Like setup.cfg, sections
>  are prefixed with &quot;coverage:&quot;, so ``[run]`` options will be read from the
>  ``[coverage:run]`` section of tox.ini. Implements part of `issue 519`_.
>  Thanks, Stephen Finucane.

>- Specifying both ``--source`` and ``--include`` no longer silently ignores the
>  include setting, instead it fails with a message. Thanks, Nathan Land and
>  LoÃ¯c Dachary. Closes `issue 265`_.

>- The ``Coverage.combine`` method has a new parameter, ``strict=False``, to
>  support failing if there are no data files to combine.

>- When forking subprocesses, the coverage data files would have the same random
>  number appended to the file name. This didn&#39;t cause problems, because the
>  file names had the process id also, making collisions (nearly) impossible.
>  But it was disconcerting.  This is now fixed.

>- The text report now properly sizes headers when skipping some files, fixing
>  `issue 524`_. Thanks, Anthony Sottile and LoÃ¯c Dachary.

>- Coverage.py can now search .pex files for source, just as it can .zip and
>  .egg.  Thanks, Peter Ebden.

>- Data files are now about 15% smaller.

>- Improvements in the ``[run] debug`` setting:

>  - The &quot;dataio&quot; debug setting now also logs when data files are deleted during
>    combining or erasing.

>  - A new debug option, &quot;multiproc&quot;, for logging the behavior of
>    ``concurrency=multiprocessing``.

>  - If you used the debug options &quot;config&quot; and &quot;callers&quot; together, you&#39;d get a
>    call stack printed for every line in the multi-line config output. This is
>    now fixed.

>- Fixed an unusual bug involving multiple coding declarations affecting code
>  containing code in multi-line strings: `issue 529`_.

>- Coverage.py will no longer be misled into thinking that a plain file is a
>  package when interpreting ``--source`` options.  Thanks, Cosimo Lupo.

>- If you try to run a non-Python file with coverage.py, you will now get a more
>  useful error message. `Issue 514`_.

>- The default pragma regex changed slightly, but this will only matter to you
>  if you are deranged and use mixed-case pragmas.

>- Deal properly with non-ASCII file names in an ASCII-only world, `issue 533`_.

>- Programs that set Unicode configuration values could cause UnicodeErrors when
>  generating HTML reports.  Pytest-cov is one example.  This is now fixed.

>- Prevented deprecation warnings from configparser that happened in some
>  circumstances, closing `issue 530`_.

>- Corrected the name of the jquery.ba-throttle-debounce.js library. Thanks,
>  Ben Finney.  Closes `issue 505`_.

>- Testing against PyPy 5.6 and PyPy3 5.5.

>- Switched to pytest from nose for running the coverage.py tests.

>- Renamed AUTHORS.txt to CONTRIBUTORS.txt, since there are other ways to
>  contribute than by writing code. Also put the count of contributors into the
>  author string in setup.py, though this might be too cute.

>.. _sys.excepthook: https://docs.python.org/3/library/sys.htmlsys.excepthook
>.. _issue 265: https://bitbucket.org/ned/coveragepy/issues/265/when-using-source-include-is-silently
>.. _issue 412: https://bitbucket.org/ned/coveragepy/issues/412/coverage-combine-should-error-if-no
>.. _issue 433: https://bitbucket.org/ned/coveragepy/issues/433/coverage-html-does-not-suport-skip-covered
>.. _issue 493: https://bitbucket.org/ned/coveragepy/issues/493/confusing-branching-failure
>.. _issue 496: https://bitbucket.org/ned/coveragepy/issues/496/incorrect-coverage-with-branching-and
>.. _issue 502: https://bitbucket.org/ned/coveragepy/issues/502/incorrect-coverage-report-with-cover
>.. _issue 505: https://bitbucket.org/ned/coveragepy/issues/505/use-canonical-filename-for-debounce
>.. _issue 514: https://bitbucket.org/ned/coveragepy/issues/514/path-to-problem-file-not-reported-when
>.. _issue 510: https://bitbucket.org/ned/coveragepy/issues/510/erase-still-needed-in-42
>.. _issue 511: https://bitbucket.org/ned/coveragepy/issues/511/version-42-coverage-combine-empties
>.. _issue 516: https://bitbucket.org/ned/coveragepy/issues/516/running-coverage-combine-twice-deletes-all
>.. _issue 519: https://bitbucket.org/ned/coveragepy/issues/519/coverage-run-sections-in-toxini-or-as
>.. _issue 524: https://bitbucket.org/ned/coveragepy/issues/524/coverage-report-with-skip-covered-column
>.. _issue 525: https://bitbucket.org/ned/coveragepy/issues/525/coverage-combine-when-not-in-parallel-mode
>.. _issue 529: https://bitbucket.org/ned/coveragepy/issues/529/encoding-marker-may-only-appear-on-the
>.. _issue 530: https://bitbucket.org/ned/coveragepy/issues/530/deprecationwarning-you-passed-a-bytestring
>.. _issue 533: https://bitbucket.org/ned/coveragepy/issues/533/exception-on-unencodable-file-name
>.. _issue 535: https://bitbucket.org/ned/coveragepy/issues/535/sysexcepthook-is-not-called


>.. _changes_42:



>### 4.2

>--------------------------

>- Since ``concurrency=multiprocessing`` uses subprocesses, options specified on
>  the coverage.py command line will not be communicated down to them.  Only
>  options in the configuration file will apply to the subprocesses.
>  Previously, the options didn&#39;t apply to the subprocesses, but there was no
>  indication.  Now it is an error to use ``--concurrency=multiprocessing`` and
>  other run-affecting options on the command line.  This prevents
>  failures like those reported in `issue 495`_.

>- Filtering the HTML report is now faster, thanks to Ville SkyttÃ¤.

>.. _issue 495: https://bitbucket.org/ned/coveragepy/issues/495/branch-and-concurrency-are-conflicting




>### 4.2b1

>----------------------------

>Work from the PyCon 2016 Sprints!

>- BACKWARD INCOMPATIBILITY: the ``coverage combine`` command now ignores an
>  existing ``.coverage`` data file.  It used to include that file in its
>  combining.  This caused confusing results, and extra tox &quot;clean&quot; steps.  If
>  you want the old behavior, use the new ``coverage combine --append`` option.

>- The ``concurrency`` option can now take multiple values, to support programs
>  using multiprocessing and another library such as eventlet.  This is only
>  possible in the configuration file, not from the command line. The
>  configuration file is the only way for sub-processes to all run with the same
>  options.  Fixes `issue 484`_.  Thanks to Josh Williams for prototyping.

>- Using a ``concurrency`` setting of ``multiprocessing`` now implies
>  ``--parallel`` so that the main program is measured similarly to the
>  sub-processes.

>- When using `automatic subprocess measurement`_, running coverage commands
>  would create spurious data files.  This is now fixed, thanks to diagnosis and
>  testing by Dan Riti.  Closes `issue 492`_.

>- A new configuration option, ``report:sort``, controls what column of the
>  text report is used to sort the rows.  Thanks to Dan Wandschneider, this
>  closes `issue 199`_.

>- The HTML report has a more-visible indicator for which column is being
>  sorted.  Closes `issue 298`_, thanks to Josh Williams.

>- If the HTML report cannot find the source for a file, the message now
>  suggests using the ``-i`` flag to allow the report to continue. Closes
>  `issue 231`_, thanks, Nathan Land.

>- When reports are ignoring errors, there&#39;s now a warning if a file cannot be
>  parsed, rather than being silently ignored.  Closes `issue 396`_. Thanks,
>  Matthew Boehm.

>- A new option for ``coverage debug`` is available: ``coverage debug config``
>  shows the current configuration.  Closes `issue 454`_, thanks to Matthew
>  Boehm.

>- Running coverage as a module (``python -m coverage``) no longer shows the
>  program name as ``__main__.py``.  Fixes `issue 478`_.  Thanks, Scott Belden.

>- The `test_helpers` module has been moved into a separate pip-installable
>  package: `unittest-mixins`_.

>.. _automatic subprocess measurement: http://coverage.readthedocs.io/en/latest/subprocess.html
>.. _issue 199: https://bitbucket.org/ned/coveragepy/issues/199/add-a-way-to-sort-the-text-report
>.. _issue 231: https://bitbucket.org/ned/coveragepy/issues/231/various-default-behavior-in-report-phase
>.. _issue 298: https://bitbucket.org/ned/coveragepy/issues/298/show-in-html-report-that-the-columns-are
>.. _issue 396: https://bitbucket.org/ned/coveragepy/issues/396/coverage-xml-shouldnt-bail-out-on-parse
>.. _issue 454: https://bitbucket.org/ned/coveragepy/issues/454/coverage-debug-config-should-be
>.. _issue 478: https://bitbucket.org/ned/coveragepy/issues/478/help-shows-silly-program-name-when-running
>.. _issue 484: https://bitbucket.org/ned/coveragepy/issues/484/multiprocessing-greenlet-concurrency
>.. _issue 492: https://bitbucket.org/ned/coveragepy/issues/492/subprocess-coverage-strange-detection-of
>.. _unittest-mixins: https://pypi.python.org/pypi/unittest-mixins


>.. _changes_41:



>### 4.1

>--------------------------

>- The internal attribute `Reporter.file_reporters` was removed in 4.1b3.  It
>  should have come has no surprise that there were third-party tools out there
>  using that attribute.  It has been restored, but with a deprecation warning.




>### 4.1b3

>----------------------------

>- When running your program, execution can jump from an ``except X:`` line to
>  some other line when an exception other than ``X`` happens.  This jump is no
>  longer considered a branch when measuring branch coverage.

>- When measuring branch coverage, ``yield`` statements that were never resumed
>  were incorrectly marked as missing, as reported in `issue 440`_.  This is now
>  fixed.

>- During branch coverage of single-line callables like lambdas and generator
>  expressions, coverage.py can now distinguish between them never being called,
>  or being called but not completed.  Fixes `issue 90`_, `issue 460`_ and
>  `issue 475`_.

>- The HTML report now has a map of the file along the rightmost edge of the
>  page, giving an overview of where the missed lines are.  Thanks, Dmitry
>  Shishov.

>- The HTML report now uses different monospaced fonts, favoring Consolas over
>  Courier.  Along the way, `issue 472`_ about not properly handling one-space
>  indents was fixed.  The index page also has slightly different styling, to
>  try to make the clickable detail pages more apparent.

>- Missing branches reported with ``coverage report -m`` will now say ``-&gt;exit``
>  for missed branches to the exit of a function, rather than a negative number.
>  Fixes `issue 469`_.

>- ``coverage --help`` and ``coverage --version`` now mention which tracer is
>  installed, to help diagnose problems. The docs mention which features need
>  the C extension. (`issue 479`_)

>- Officially support PyPy 5.1, which required no changes, just updates to the
>  docs.

>- The `Coverage.report` function had two parameters with non-None defaults,
>  which have been changed.  `show_missing` used to default to True, but now
>  defaults to None.  If you had been calling `Coverage.report` without
>  specifying `show_missing`, you&#39;ll need to explicitly set it to True to keep
>  the same behavior.  `skip_covered` used to default to False. It is now None,
>  which doesn&#39;t change the behavior.  This fixes `issue 485`_.

>- It&#39;s never been possible to pass a namespace module to one of the analysis
>  functions, but now at least we raise a more specific error message, rather
>  than getting confused. (`issue 456`_)

>- The `coverage.process_startup` function now returns the `Coverage` instance
>  it creates, as suggested in `issue 481`_.

>- Make a small tweak to how we compare threads, to avoid buggy custom
>  comparison code in thread classes. (`issue 245`_)

>.. _issue 90: https://bitbucket.org/ned/coveragepy/issues/90/lambda-expression-confuses-branch
>.. _issue 245: https://bitbucket.org/ned/coveragepy/issues/245/change-solution-for-issue-164
>.. _issue 440: https://bitbucket.org/ned/coveragepy/issues/440/yielded-twisted-failure-marked-as-missed
>.. _issue 456: https://bitbucket.org/ned/coveragepy/issues/456/coverage-breaks-with-implicit-namespaces
>.. _issue 460: https://bitbucket.org/ned/coveragepy/issues/460/confusing-html-report-for-certain-partial
>.. _issue 469: https://bitbucket.org/ned/coveragepy/issues/469/strange-1-line-number-in-branch-coverage
>.. _issue 472: https://bitbucket.org/ned/coveragepy/issues/472/html-report-indents-incorrectly-for-one
>.. _issue 475: https://bitbucket.org/ned/coveragepy/issues/475/generator-expression-is-marked-as-not
>.. _issue 479: https://bitbucket.org/ned/coveragepy/issues/479/clarify-the-need-for-the-c-extension
>.. _issue 481: https://bitbucket.org/ned/coveragepy/issues/481/asyncioprocesspoolexecutor-tracing-not
>.. _issue 485: https://bitbucket.org/ned/coveragepy/issues/485/coveragereport-ignores-show_missing-and




>### 4.1b2

>----------------------------

>- Problems with the new branch measurement in 4.1 beta 1 were fixed:

>  - Class docstrings were considered executable.  Now they no longer are.

>  - ``yield from`` and ``await`` were considered returns from functions, since
>    they could tranfer control to the caller.  This produced unhelpful &quot;missing
>    branch&quot; reports in a number of circumstances.  Now they no longer are
>    considered returns.

>  - In unusual situations, a missing branch to a negative number was reported.
>    This has been fixed, closing `issue 466`_.

>- The XML report now produces correct package names for modules found in
>  directories specified with ``source=``.  Fixes `issue 465`_.

>- ``coverage report`` won&#39;t produce trailing whitespace.

>.. _issue 465: https://bitbucket.org/ned/coveragepy/issues/465/coveragexml-produces-package-names-with-an
>.. _issue 466: https://bitbucket.org/ned/coveragepy/issues/466/impossible-missed-branch-to-a-negative




>### 4.1b1

>----------------------------

>- Branch analysis has been rewritten: it used to be based on bytecode, but now
>  uses AST analysis.  This has changed a number of things:

>  - More code paths are now considered runnable, especially in
>    ``try``/``except`` structures.  This may mean that coverage.py will
>    identify more code paths as uncovered.  This could either raise or lower
>    your overall coverage number.

>  - Python 3.5&#39;s ``async`` and ``await`` keywords are properly supported,
>    fixing `issue 434`_.

>  - Some long-standing branch coverage bugs were fixed:

>    - `issue 129`_: functions with only a docstring for a body would
>      incorrectly report a missing branch on the ``def`` line.

>    - `issue 212`_: code in an ``except`` block could be incorrectly marked as
>      a missing branch.

>    - `issue 146`_: context managers (``with`` statements) in a loop or ``try``
>      block could confuse the branch measurement, reporting incorrect partial
>      branches.

>    - `issue 422`_: in Python 3.5, an actual partial branch could be marked as
>      complete.

>- Pragmas to disable coverage measurement can now be used on decorator lines,
>  and they will apply to the entire function or class being decorated.  This
>  implements the feature requested in `issue 131`_.

>- Multiprocessing support is now available on Windows.  Thanks, Rodrigue
>  Cloutier.

>- Files with two encoding declarations are properly supported, fixing
>  `issue 453`_. Thanks, Max Linke.

>- Non-ascii characters in regexes in the configuration file worked in 3.7, but
>  stopped working in 4.0.  Now they work again, closing `issue 455`_.

>- Form-feed characters would prevent accurate determination of the beginning of
>  statements in the rest of the file.  This is now fixed, closing `issue 461`_.

>.. _issue 129: https://bitbucket.org/ned/coveragepy/issues/129/misleading-branch-coverage-of-empty
>.. _issue 131: https://bitbucket.org/ned/coveragepy/issues/131/pragma-on-a-decorator-line-should-affect
>.. _issue 146: https://bitbucket.org/ned/coveragepy/issues/146/context-managers-confuse-branch-coverage
>.. _issue 212: https://bitbucket.org/ned/coveragepy/issues/212/coverage-erroneously-reports-partial
>.. _issue 422: https://bitbucket.org/ned/coveragepy/issues/422/python35-partial-branch-marked-as-fully
>.. _issue 434: https://bitbucket.org/ned/coveragepy/issues/434/indexerror-in-python-35
>.. _issue 453: https://bitbucket.org/ned/coveragepy/issues/453/source-code-encoding-can-only-be-specified
>.. _issue 455: https://bitbucket.org/ned/coveragepy/issues/455/unusual-exclusions-stopped-working-in
>.. _issue 461: https://bitbucket.org/ned/coveragepy/issues/461/multiline-asserts-need-too-many-pragma


>.. _changes_403:



>### 4.0.3

>----------------------------

>- Fixed a mysterious problem that manifested in different ways: sometimes
>  hanging the process (`issue 420`_), sometimes making database connections
>  fail (`issue 445`_).

>- The XML report now has correct ``&lt;source&gt;`` elements when using a
>  ``--source=`` option somewhere besides the current directory.  This fixes
>  `issue 439`_. Thanks, Arcady Ivanov.

>- Fixed an unusual edge case of detecting source encodings, described in
>  `issue 443`_.

>- Help messages that mention the command to use now properly use the actual
>  command name, which might be different than &quot;coverage&quot;.  Thanks to Ben
>  Finney, this closes `issue 438`_.

>.. _issue 420: https://bitbucket.org/ned/coveragepy/issues/420/coverage-40-hangs-indefinitely-on-python27
>.. _issue 438: https://bitbucket.org/ned/coveragepy/issues/438/parameterise-coverage-command-name
>.. _issue 439: https://bitbucket.org/ned/coveragepy/issues/439/incorrect-cobertura-file-sources-generated
>.. _issue 443: https://bitbucket.org/ned/coveragepy/issues/443/coverage-gets-confused-when-encoding
>.. _issue 445: https://bitbucket.org/ned/coveragepy/issues/445/django-app-cannot-connect-to-cassandra


>.. _changes_402:



>### 4.0.2

>----------------------------

>- More work on supporting unusually encoded source. Fixed `issue 431`_.

>- Files or directories with non-ASCII characters are now handled properly,
>  fixing `issue 432`_.

>- Setting a trace function with sys.settrace was broken by a change in 4.0.1,
>  as reported in `issue 436`_.  This is now fixed.

>- Officially support PyPy 4.0, which required no changes, just updates to the
>  docs.

>.. _issue 431: https://bitbucket.org/ned/coveragepy/issues/431/couldnt-parse-python-file-with-cp1252
>.. _issue 432: https://bitbucket.org/ned/coveragepy/issues/432/path-with-unicode-characters-various
>.. _issue 436: https://bitbucket.org/ned/coveragepy/issues/436/disabled-coverage-ctracer-may-rise-from


>.. _changes_401:



>### 4.0.1

>----------------------------

>- When combining data files, unreadable files will now generate a warning
>  instead of failing the command.  This is more in line with the older
>  coverage.py v3.7.1 behavior, which silently ignored unreadable files.
>  Prompted by `issue 418`_.

>- The --skip-covered option would skip reporting on 100% covered files, but
>  also skipped them when calculating total coverage.  This was wrong, it should
>  only remove lines from the report, not change the final answer.  This is now
>  fixed, closing `issue 423`_.

>- In 4.0, the data file recorded a summary of the system on which it was run.
>  Combined data files would keep all of those summaries.  This could lead to
>  enormous data files consisting of mostly repetitive useless information. That
>  summary is now gone, fixing `issue 415`_.  If you want summary information,
>  get in touch, and we&#39;ll figure out a better way to do it.

>- Test suites that mocked os.path.exists would experience strange failures, due
>  to coverage.py using their mock inadvertently.  This is now fixed, closing
>  `issue 416`_.

>- Importing a ``__init__`` module explicitly would lead to an error:
>  ``AttributeError: &#39;module&#39; object has no attribute &#39;__path__&#39;``, as reported
>  in `issue 410`_.  This is now fixed.

>- Code that uses ``sys.settrace(sys.gettrace())`` used to incur a more than 2x
>  speed penalty.  Now there&#39;s no penalty at all. Fixes `issue 397`_.

>- Pyexpat C code will no longer be recorded as a source file, fixing
>  `issue 419`_.

>- The source kit now contains all of the files needed to have a complete source
>  tree, re-fixing `issue 137`_ and closing `issue 281`_.

>.. _issue 281: https://bitbucket.org/ned/coveragepy/issues/281/supply-scripts-for-testing-in-the
>.. _issue 397: https://bitbucket.org/ned/coveragepy/issues/397/stopping-and-resuming-coverage-with
>.. _issue 410: https://bitbucket.org/ned/coveragepy/issues/410/attributeerror-module-object-has-no
>.. _issue 415: https://bitbucket.org/ned/coveragepy/issues/415/repeated-coveragedataupdates-cause
>.. _issue 416: https://bitbucket.org/ned/coveragepy/issues/416/mocking-ospathexists-causes-failures
>.. _issue 418: https://bitbucket.org/ned/coveragepy/issues/418/json-parse-error
>.. _issue 419: https://bitbucket.org/ned/coveragepy/issues/419/nosource-no-source-for-code-path-to-c
>.. _issue 423: https://bitbucket.org/ned/coveragepy/issues/423/skip_covered-changes-reported-total


>.. _changes_40:



>### 4.0

>--------------------------



>### 4.0b3

>----------------------------

>- Reporting on an unmeasured file would fail with a traceback.  This is now
>  fixed, closing `issue 403`_.

>- The Jenkins ShiningPanda plugin looks for an obsolete file name to find the
>  HTML reports to publish, so it was failing under coverage.py 4.0.  Now we
>  create that file if we are running under Jenkins, to keep things working
>  smoothly. `issue 404`_.

>- Kits used to include tests and docs, but didn&#39;t install them anywhere, or
>  provide all of the supporting tools to make them useful.  Kits no longer
>  include tests and docs.  If you were using them from the older packages, get
>  in touch and help me understand how.

>.. _issue 403: https://bitbucket.org/ned/coveragepy/issues/403/hasherupdate-fails-with-typeerror-nonetype
>.. _issue 404: https://bitbucket.org/ned/coveragepy/issues/404/shiningpanda-jenkins-plugin-cant-find-html




>### 4.0b2

>----------------------------

>- 4.0b1 broke ``--append`` creating new data files.  This is now fixed, closing
>  `issue 392`_.

>- ``py.test --cov`` can write empty data, then touch files due to ``--source``,
>  which made coverage.py mistakenly force the data file to record lines instead
>  of arcs.  This would lead to a &quot;Can&#39;t combine line data with arc data&quot; error
>  message.  This is now fixed, and changed some method names in the
>  CoverageData interface.  Fixes `issue 399`_.

>- `CoverageData.read_fileobj` and `CoverageData.write_fileobj` replace the
>  `.read` and `.write` methods, and are now properly inverses of each other.

>- When using ``report --skip-covered``, a message will now be included in the
>  report output indicating how many files were skipped, and if all files are
>  skipped, coverage.py won&#39;t accidentally scold you for having no data to
>  report.  Thanks, Krystian Kichewko.

>- A new conversion utility has been added:  ``python -m coverage.pickle2json``
>  will convert v3.x pickle data files to v4.x JSON data files.  Thanks,
>  Alexander Todorov.  Closes `issue 395`_.

>- A new version identifier is available, `coverage.version_info`, a plain tuple
>  of values similar to `sys.version_info`_.

>.. _issue 392: https://bitbucket.org/ned/coveragepy/issues/392/run-append-doesnt-create-coverage-file
>.. _issue 395: https://bitbucket.org/ned/coveragepy/issues/395/rfe-read-pickled-files-as-well-for
>.. _issue 399: https://bitbucket.org/ned/coveragepy/issues/399/coverageexception-cant-combine-line-data
>.. _sys.version_info: https://docs.python.org/3/library/sys.htmlsys.version_info




>### 4.0b1

>----------------------------

>- Coverage.py is now licensed under the Apache 2.0 license.  See NOTICE.txt for
>  details.  Closes `issue 313`_.

>- The data storage has been completely revamped.  The data file is now
>  JSON-based instead of a pickle, closing `issue 236`_.  The `CoverageData`
>  class is now a public supported documented API to the data file.

>- A new configuration option, ``[run] note``, lets you set a note that will be
>  stored in the `runs` section of the data file.  You can use this to annotate
>  the data file with any information you like.

>- Unrecognized configuration options will now print an error message and stop
>  coverage.py.  This should help prevent configuration mistakes from passing
>  silently.  Finishes `issue 386`_.

>- In parallel mode, ``coverage erase`` will now delete all of the data files,
>  fixing `issue 262`_.

>- Coverage.py now accepts a directory name for ``coverage run`` and will run a
>  ``__main__.py`` found there, just like Python will.  Fixes `issue 252`_.
>  Thanks, Dmitry Trofimov.

>- The XML report now includes a ``missing-branches`` attribute.  Thanks, Steve
>  Peak.  This is not a part of the Cobertura DTD, so the XML report no longer
>  references the DTD.

>- Missing branches in the HTML report now have a bit more information in the
>  right-hand annotations.  Hopefully this will make their meaning clearer.

>- All the reporting functions now behave the same if no data had been
>  collected, exiting with a status code of 1.  Fixed ``fail_under`` to be
>  applied even when the report is empty.  Thanks, Ionel Cristian MÄrieÈ.

>- Plugins are now initialized differently.  Instead of looking for a class
>  called ``Plugin``, coverage.py looks for a function called ``coverage_init``.

>- A file-tracing plugin can now ask to have built-in Python reporting by
>  returning `&quot;python&quot;` from its `file_reporter()` method.

>- Code that was executed with `exec` would be mis-attributed to the file that
>  called it.  This is now fixed, closing `issue 380`_.

>- The ability to use item access on `Coverage.config` (introduced in 4.0a2) has
>  been changed to a more explicit `Coverage.get_option` and
>  `Coverage.set_option` API.

>- The ``Coverage.use_cache`` method is no longer supported.

>- The private method ``Coverage._harvest_data`` is now called
>  ``Coverage.get_data``, and returns the ``CoverageData`` containing the
>  collected data.

>- The project is consistently referred to as &quot;coverage.py&quot; throughout the code
>  and the documentation, closing `issue 275`_.

>- Combining data files with an explicit configuration file was broken in 4.0a6,
>  but now works again, closing `issue 385`_.

>- ``coverage combine`` now accepts files as well as directories.

>- The speed is back to 3.7.1 levels, after having slowed down due to plugin
>  support, finishing up `issue 387`_.

>.. _issue 236: https://bitbucket.org/ned/coveragepy/issues/236/pickles-are-bad-and-you-should-feel-bad
>.. _issue 252: https://bitbucket.org/ned/coveragepy/issues/252/coverage-wont-run-a-program-with
>.. _issue 262: https://bitbucket.org/ned/coveragepy/issues/262/when-parallel-true-erase-should-erase-all
>.. _issue 275: https://bitbucket.org/ned/coveragepy/issues/275/refer-consistently-to-project-as-coverage
>.. _issue 313: https://bitbucket.org/ned/coveragepy/issues/313/add-license-file-containing-2-3-or-4
>.. _issue 380: https://bitbucket.org/ned/coveragepy/issues/380/code-executed-by-exec-excluded-from
>.. _issue 385: https://bitbucket.org/ned/coveragepy/issues/385/coverage-combine-doesnt-work-with-rcfile
>.. _issue 386: https://bitbucket.org/ned/coveragepy/issues/386/error-on-unrecognised-configuration
>.. _issue 387: https://bitbucket.org/ned/coveragepy/issues/387/performance-degradation-from-371-to-40

>.. 40 issues closed in 4.0 below here




>### 4.0a6

>----------------------------

>- Python 3.5b2 and PyPy 2.6.0 are supported.

>- The original module-level function interface to coverage.py is no longer
>  supported.  You must now create a ``coverage.Coverage`` object, and use
>  methods on it.

>- The ``coverage combine`` command now accepts any number of directories as
>  arguments, and will combine all the data files from those directories.  This
>  means you don&#39;t have to copy the files to one directory before combining.
>  Thanks, Christine Lytwynec.  Finishes `issue 354`_.

>- Branch coverage couldn&#39;t properly handle certain extremely long files. This
>  is now fixed (`issue 359`_).

>- Branch coverage didn&#39;t understand yield statements properly.  Mickie Betz
>  persisted in pursuing this despite Ned&#39;s pessimism.  Fixes `issue 308`_ and
>  `issue 324`_.

>- The COVERAGE_DEBUG environment variable can be used to set the
>  ``[run] debug`` configuration option to control what internal operations are
>  logged.

>- HTML reports were truncated at formfeed characters.  This is now fixed
>  (`issue 360`_).  It&#39;s always fun when the problem is due to a `bug in the
>  Python standard library &lt;http://bugs.python.org/issue19035&gt;`_.

>- Files with incorrect encoding declaration comments are no longer ignored by
>  the reporting commands, fixing `issue 351`_.

>- HTML reports now include a timestamp in the footer, closing `issue 299`_.
>  Thanks, Conrad Ho.

>- HTML reports now begrudgingly use double-quotes rather than single quotes,
>  because there are &quot;software engineers&quot; out there writing tools that read HTML
>  and somehow have no idea that single quotes exist.  Capitulates to the absurd
>  `issue 361`_.  Thanks, Jon Chappell.

>- The ``coverage annotate`` command now handles non-ASCII characters properly,
>  closing `issue 363`_.  Thanks, Leonardo Pistone.

>- Drive letters on Windows were not normalized correctly, now they are. Thanks,
>  Ionel Cristian MÄrieÈ.

>- Plugin support had some bugs fixed, closing `issue 374`_ and `issue 375`_.
>  Thanks, Stefan Behnel.

>.. _issue 299: https://bitbucket.org/ned/coveragepy/issue/299/inserted-created-on-yyyy-mm-dd-hh-mm-in
>.. _issue 308: https://bitbucket.org/ned/coveragepy/issue/308/yield-lambda-branch-coverage
>.. _issue 324: https://bitbucket.org/ned/coveragepy/issue/324/yield-in-loop-confuses-branch-coverage
>.. _issue 351: https://bitbucket.org/ned/coveragepy/issue/351/files-with-incorrect-encoding-are-ignored
>.. _issue 354: https://bitbucket.org/ned/coveragepy/issue/354/coverage-combine-should-take-a-list-of
>.. _issue 359: https://bitbucket.org/ned/coveragepy/issue/359/xml-report-chunk-error
>.. _issue 360: https://bitbucket.org/ned/coveragepy/issue/360/html-reports-get-confused-by-l-in-the-code
>.. _issue 361: https://bitbucket.org/ned/coveragepy/issue/361/use-double-quotes-in-html-output-to
>.. _issue 363: https://bitbucket.org/ned/coveragepy/issue/363/annotate-command-hits-unicode-happy-fun
>.. _issue 374: https://bitbucket.org/ned/coveragepy/issue/374/c-tracer-lookups-fail-in
>.. _issue 375: https://bitbucket.org/ned/coveragepy/issue/375/ctracer_handle_return-reads-byte-code




>### 4.0a5

>----------------------------

>- Plugin support is now implemented in the C tracer instead of the Python
>  tracer. This greatly improves the speed of tracing projects using plugins.

>- Coverage.py now always adds the current directory to sys.path, so that
>  plugins can import files in the current directory (`issue 358`_).

>- If the `config_file` argument to the Coverage constructor is specified as
>  &quot;.coveragerc&quot;, it is treated as if it were True.  This means setup.cfg is
>  also examined, and a missing file is not considered an error (`issue 357`_).

>- Wildly experimental: support for measuring processes started by the
>  multiprocessing module.  To use, set ``--concurrency=multiprocessing``,
>  either on the command line or in the .coveragerc file (`issue 117`_). Thanks,
>  Eduardo Schettino.  Currently, this does not work on Windows.

>- A new warning is possible, if a desired file isn&#39;t measured because it was
>  imported before coverage.py was started (`issue 353`_).

>- The `coverage.process_startup` function now will start coverage measurement
>  only once, no matter how many times it is called.  This fixes problems due
>  to unusual virtualenv configurations (`issue 340`_).

>- Added 3.5.0a1 to the list of supported CPython versions.

>.. _issue 117: https://bitbucket.org/ned/coveragepy/issue/117/enable-coverage-measurement-of-code-run-by
>.. _issue 340: https://bitbucket.org/ned/coveragepy/issue/340/keyerror-subpy
>.. _issue 353: https://bitbucket.org/ned/coveragepy/issue/353/40a3-introduces-an-unexpected-third-case
>.. _issue 357: https://bitbucket.org/ned/coveragepy/issue/357/behavior-changed-when-coveragerc-is
>.. _issue 358: https://bitbucket.org/ned/coveragepy/issue/358/all-coverage-commands-should-adjust




>### 4.0a4

>----------------------------

>- Plugins can now provide sys_info for debugging output.

>- Started plugins documentation.

>- Prepared to move the docs to readthedocs.org.




>### 4.0a3

>----------------------------

>- Reports now use file names with extensions.  Previously, a report would
>  describe a/b/c.py as &quot;a/b/c&quot;.  Now it is shown as &quot;a/b/c.py&quot;.  This allows
>  for better support of non-Python files, and also fixed `issue 69`_.

>- The XML report now reports each directory as a package again.  This was a bad
>  regression, I apologize.  This was reported in `issue 235`_, which is now
>  fixed.

>- A new configuration option for the XML report: ``[xml] package_depth``
>  controls which directories are identified as packages in the report.
>  Directories deeper than this depth are not reported as packages.
>  The default is that all directories are reported as packages.
>  Thanks, Lex Berezhny.

>- When looking for the source for a frame, check if the file exists. On
>  Windows, .pyw files are no longer recorded as .py files. Along the way, this
>  fixed `issue 290`_.

>- Empty files are now reported as 100% covered in the XML report, not 0%
>  covered (`issue 345`_).

>- Regexes in the configuration file are now compiled as soon as they are read,
>  to provide error messages earlier (`issue 349`_).

>.. _issue 69: https://bitbucket.org/ned/coveragepy/issue/69/coverage-html-overwrite-files-that-doesnt
>.. _issue 235: https://bitbucket.org/ned/coveragepy/issue/235/package-name-is-missing-in-xml-report
>.. _issue 290: https://bitbucket.org/ned/coveragepy/issue/290/running-programmatically-with-pyw-files
>.. _issue 345: https://bitbucket.org/ned/coveragepy/issue/345/xml-reports-line-rate-0-for-empty-files
>.. _issue 349: https://bitbucket.org/ned/coveragepy/issue/349/bad-regex-in-config-should-get-an-earlier




>### 4.0a2

>----------------------------

>- Officially support PyPy 2.4, and PyPy3 2.4.  Drop support for
>  CPython 3.2 and older versions of PyPy.  The code won&#39;t work on CPython 3.2.
>  It will probably still work on older versions of PyPy, but I&#39;m not testing
>  against them.

>- Plugins!

>- The original command line switches (`-x` to run a program, etc) are no
>  longer supported.

>- A new option: `coverage report --skip-covered` will reduce the number of
>  files reported by skipping files with 100% coverage.  Thanks, Krystian
>  Kichewko.  This means that empty `__init__.py` files will be skipped, since
>  they are 100% covered, closing `issue 315`_.

>- You can now specify the ``--fail-under`` option in the ``.coveragerc`` file
>  as the ``[report] fail_under`` option.  This closes `issue 314`_.

>- The ``COVERAGE_OPTIONS`` environment variable is no longer supported.  It was
>  a hack for ``--timid`` before configuration files were available.

>- The HTML report now has filtering.  Type text into the Filter box on the
>  index page, and only modules with that text in the name will be shown.
>  Thanks, Danny Allen.

>- The textual report and the HTML report used to report partial branches
>  differently for no good reason.  Now the text report&#39;s &quot;missing branches&quot;
>  column is a &quot;partial branches&quot; column so that both reports show the same
>  numbers.  This closes `issue 342`_.

>- If you specify a ``--rcfile`` that cannot be read, you will get an error
>  message.  Fixes `issue 343`_.

>- The ``--debug`` switch can now be used on any command.

>- You can now programmatically adjust the configuration of coverage.py by
>  setting items on `Coverage.config` after construction.

>- A module run with ``-m`` can be used as the argument to ``--source``, fixing
>  `issue 328`_.  Thanks, Buck Evan.

>- The regex for matching exclusion pragmas has been fixed to allow more kinds
>  of whitespace, fixing `issue 334`_.

>- Made some PyPy-specific tweaks to improve speed under PyPy.  Thanks, Alex
>  Gaynor.

>- In some cases, with a source file missing a final newline, coverage.py would
>  count statements incorrectly.  This is now fixed, closing `issue 293`_.

>- The status.dat file that HTML reports use to avoid re-creating files that
>  haven&#39;t changed is now a JSON file instead of a pickle file.  This obviates
>  `issue 287`_ and `issue 237`_.

>.. _issue 237: https://bitbucket.org/ned/coveragepy/issue/237/htmlcov-with-corrupt-statusdat
>.. _issue 287: https://bitbucket.org/ned/coveragepy/issue/287/htmlpy-doesnt-specify-pickle-protocol
>.. _issue 293: https://bitbucket.org/ned/coveragepy/issue/293/number-of-statement-detection-wrong-if-no
>.. _issue 314: https://bitbucket.org/ned/coveragepy/issue/314/fail_under-param-not-working-in-coveragerc
>.. _issue 315: https://bitbucket.org/ned/coveragepy/issue/315/option-to-omit-empty-files-eg-__init__py
>.. _issue 328: https://bitbucket.org/ned/coveragepy/issue/328/misbehavior-in-run-source
>.. _issue 334: https://bitbucket.org/ned/coveragepy/issue/334/pragma-not-recognized-if-tab-character
>.. _issue 342: https://bitbucket.org/ned/coveragepy/issue/342/console-and-html-coverage-reports-differ
>.. _issue 343: https://bitbucket.org/ned/coveragepy/issue/343/an-explicitly-named-non-existent-config




>### 4.0a1

>----------------------------

>- Python versions supported are now CPython 2.6, 2.7, 3.2, 3.3, and 3.4, and
>  PyPy 2.2.

>- Gevent, eventlet, and greenlet are now supported, closing `issue 149`_.
>  The ``concurrency`` setting specifies the concurrency library in use.  Huge
>  thanks to Peter Portante for initial implementation, and to Joe Jevnik for
>  the final insight that completed the work.

>- Options are now also read from a setup.cfg file, if any.  Sections are
>  prefixed with &quot;coverage:&quot;, so the ``[run]`` options will be read from the
>  ``[coverage:run]`` section of setup.cfg.  Finishes `issue 304`_.

>- The ``report -m`` command can now show missing branches when reporting on
>  branch coverage.  Thanks, Steve Leonard. Closes `issue 230`_.

>- The XML report now contains a &lt;source&gt; element, fixing `issue 94`_.  Thanks
>  Stan Hu.

>- The class defined in the coverage module is now called ``Coverage`` instead
>  of ``coverage``, though the old name still works, for backward compatibility.

>- The ``fail-under`` value is now rounded the same as reported results,
>  preventing paradoxical results, fixing `issue 284`_.

>- The XML report will now create the output directory if need be, fixing
>  `issue 285`_.  Thanks, Chris Rose.

>- HTML reports no longer raise UnicodeDecodeError if a Python file has
>  undecodable characters, fixing `issue 303`_ and `issue 331`_.

>- The annotate command will now annotate all files, not just ones relative to
>  the current directory, fixing `issue 57`_.

>- The coverage module no longer causes deprecation warnings on Python 3.4 by
>  importing the imp module, fixing `issue 305`_.

>- Encoding declarations in source files are only considered if they are truly
>  comments.  Thanks, Anthony Sottile.

>.. _issue 57: https://bitbucket.org/ned/coveragepy/issue/57/annotate-command-fails-to-annotate-many
>.. _issue 94: https://bitbucket.org/ned/coveragepy/issue/94/coverage-xml-doesnt-produce-sources
>.. _issue 149: https://bitbucket.org/ned/coveragepy/issue/149/coverage-gevent-looks-broken
>.. _issue 230: https://bitbucket.org/ned/coveragepy/issue/230/show-line-no-for-missing-branches-in
>.. _issue 284: https://bitbucket.org/ned/coveragepy/issue/284/fail-under-should-show-more-precision
>.. _issue 285: https://bitbucket.org/ned/coveragepy/issue/285/xml-report-fails-if-output-file-directory
>.. _issue 303: https://bitbucket.org/ned/coveragepy/issue/303/unicodedecodeerror
>.. _issue 304: https://bitbucket.org/ned/coveragepy/issue/304/attempt-to-get-configuration-from-setupcfg
>.. _issue 305: https://bitbucket.org/ned/coveragepy/issue/305/pendingdeprecationwarning-the-imp-module
>.. _issue 331: https://bitbucket.org/ned/coveragepy/issue/331/failure-of-encoding-detection-on-python2


>.. _changes_371:



>### 3.7.1

>----------------------------

>- Improved the speed of HTML report generation by about 20%.

>- Fixed the mechanism for finding OS-installed static files for the HTML report
>  so that it will actually find OS-installed static files.


>.. _changes_37:



>### 3.7

>--------------------------

>- Added the ``--debug`` switch to ``coverage run``.  It accepts a list of
>  options indicating the type of internal activity to log to stderr.

>- Improved the branch coverage facility, fixing `issue 92`_ and `issue 175`_.

>- Running code with ``coverage run -m`` now behaves more like Python does,
>  setting sys.path properly, which fixes `issue 207`_ and `issue 242`_.

>- Coverage.py can now run .pyc files directly, closing `issue 264`_.

>- Coverage.py properly supports .pyw files, fixing `issue 261`_.

>- Omitting files within a tree specified with the ``source`` option would
>  cause them to be incorrectly marked as unexecuted, as described in
>  `issue 218`_.  This is now fixed.

>- When specifying paths to alias together during data combining, you can now
>  specify relative paths, fixing `issue 267`_.

>- Most file paths can now be specified with username expansion (``~/src``, or
>  ``~build/src``, for example), and with environment variable expansion
>  (``build/$BUILDNUM/src``).

>- Trying to create an XML report with no files to report on, would cause a
>  ZeroDivideError, but no longer does, fixing `issue 250`_.

>- When running a threaded program under the Python tracer, coverage.py no
>  longer issues a spurious warning about the trace function changing: &quot;Trace
>  function changed, measurement is likely wrong: None.&quot;  This fixes `issue
>  164`_.

>- Static files necessary for HTML reports are found in system-installed places,
>  to ease OS-level packaging of coverage.py.  Closes `issue 259`_.

>- Source files with encoding declarations, but a blank first line, were not
>  decoded properly.  Now they are.  Thanks, Roger Hu.

>- The source kit now includes the ``__main__.py`` file in the root coverage
>  directory, fixing `issue 255`_.

>.. _issue 92: https://bitbucket.org/ned/coveragepy/issue/92/finally-clauses-arent-treated-properly-in
>.. _issue 164: https://bitbucket.org/ned/coveragepy/issue/164/trace-function-changed-warning-when-using
>.. _issue 175: https://bitbucket.org/ned/coveragepy/issue/175/branch-coverage-gets-confused-in-certain
>.. _issue 207: https://bitbucket.org/ned/coveragepy/issue/207/run-m-cannot-find-module-or-package-in
>.. _issue 242: https://bitbucket.org/ned/coveragepy/issue/242/running-a-two-level-package-doesnt-work
>.. _issue 218: https://bitbucket.org/ned/coveragepy/issue/218/run-command-does-not-respect-the-omit-flag
>.. _issue 250: https://bitbucket.org/ned/coveragepy/issue/250/uncaught-zerodivisionerror-when-generating
>.. _issue 255: https://bitbucket.org/ned/coveragepy/issue/255/directory-level-__main__py-not-included-in
>.. _issue 259: https://bitbucket.org/ned/coveragepy/issue/259/allow-use-of-system-installed-third-party
>.. _issue 261: https://bitbucket.org/ned/coveragepy/issue/261/pyw-files-arent-reported-properly
>.. _issue 264: https://bitbucket.org/ned/coveragepy/issue/264/coverage-wont-run-pyc-files
>.. _issue 267: https://bitbucket.org/ned/coveragepy/issue/267/relative-path-aliases-dont-work


>.. _changes_36:



>### 3.6

>--------------------------

>- Added a page to the docs about troublesome situations, closing `issue 226`_,
>  and added some info to the TODO file, closing `issue 227`_.

>.. _issue 226: https://bitbucket.org/ned/coveragepy/issue/226/make-readme-section-to-describe-when
>.. _issue 227: https://bitbucket.org/ned/coveragepy/issue/227/update-todo




>### 3.6b3

>----------------------------

>- Beta 2 broke the nose plugin. It&#39;s fixed again, closing `issue 224`_.

>.. _issue 224: https://bitbucket.org/ned/coveragepy/issue/224/36b2-breaks-nosexcover




>### 3.6b2

>----------------------------

>- Coverage.py runs on Python 2.3 and 2.4 again. It was broken in 3.6b1.

>- The C extension is optionally compiled using a different more widely-used
>  technique, taking another stab at fixing `issue 80`_ once and for all.

>- Combining data files would create entries for phantom files if used with
>  ``source`` and path aliases.  It no longer does.

>- ``debug sys`` now shows the configuration file path that was read.

>- If an oddly-behaved package claims that code came from an empty-string
>  file name, coverage.py no longer associates it with the directory name,
>  fixing `issue 221`_.

>.. _issue 221: https://bitbucket.org/ned/coveragepy/issue/221/coveragepy-incompatible-with-pyratemp




>### 3.6b1

>----------------------------

>- Wildcards in ``include=`` and ``omit=`` arguments were not handled properly
>  in reporting functions, though they were when running.  Now they are handled
>  uniformly, closing `issue 143`_ and `issue 163`_.  **NOTE**: it is possible
>  that your configurations may now be incorrect.  If you use ``include`` or
>  ``omit`` during reporting, whether on the command line, through the API, or
>  in a configuration file, please check carefully that you were not relying on
>  the old broken behavior.

>- The **report**, **html**, and **xml** commands now accept a ``--fail-under``
>  switch that indicates in the exit status whether the coverage percentage was
>  less than a particular value.  Closes `issue 139`_.

>- The reporting functions coverage.report(), coverage.html_report(), and
>  coverage.xml_report() now all return a float, the total percentage covered
>  measurement.

>- The HTML report&#39;s title can now be set in the configuration file, with the
>  ``--title`` switch on the command line, or via the API.

>- Configuration files now support substitution of environment variables, using
>  syntax like ``${WORD}``.  Closes `issue 97`_.

>- Embarrassingly, the ``[xml] output=`` setting in the .coveragerc file simply
>  didn&#39;t work.  Now it does.

>- The XML report now consistently uses file names for the file name attribute,
>  rather than sometimes using module names.  Fixes `issue 67`_.
>  Thanks, Marcus Cobden.

>- Coverage percentage metrics are now computed slightly differently under
>  branch coverage.  This means that completely unexecuted files will now
>  correctly have 0% coverage, fixing `issue 156`_.  This also means that your
>  total coverage numbers will generally now be lower if you are measuring
>  branch coverage.

>- When installing, now in addition to creating a &quot;coverage&quot; command, two new
>  aliases are also installed.  A &quot;coverage2&quot; or &quot;coverage3&quot; command will be
>  created, depending on whether you are installing in Python 2.x or 3.x.
>  A &quot;coverage-X.Y&quot; command will also be created corresponding to your specific
>  version of Python.  Closes `issue 111`_.

>- The coverage.py installer no longer tries to bootstrap setuptools or
>  Distribute.  You must have one of them installed first, as `issue 202`_
>  recommended.

>- The coverage.py kit now includes docs (closing `issue 137`_) and tests.

>- On Windows, files are now reported in their correct case, fixing `issue 89`_
>  and `issue 203`_.

>- If a file is missing during reporting, the path shown in the error message
>  is now correct, rather than an incorrect path in the current directory.
>  Fixes `issue 60`_.

>- Running an HTML report in Python 3 in the same directory as an old Python 2
>  HTML report would fail with a UnicodeDecodeError. This issue (`issue 193`_)
>  is now fixed.

>- Fixed yet another error trying to parse non-Python files as Python, this
>  time an IndentationError, closing `issue 82`_ for the fourth time...

>- If `coverage xml` fails because there is no data to report, it used to
>  create a zero-length XML file.  Now it doesn&#39;t, fixing `issue 210`_.

>- Jython files now work with the ``--source`` option, fixing `issue 100`_.

>- Running coverage.py under a debugger is unlikely to work, but it shouldn&#39;t
>  fail with &quot;TypeError: &#39;NoneType&#39; object is not iterable&quot;.  Fixes `issue
>  201`_.

>- On some Linux distributions, when installed with the OS package manager,
>  coverage.py would report its own code as part of the results.  Now it won&#39;t,
>  fixing `issue 214`_, though this will take some time to be repackaged by the
>  operating systems.

>- Docstrings for the legacy singleton methods are more helpful.  Thanks Marius
>  Gedminas.  Closes `issue 205`_.

>- The pydoc tool can now show documentation for the class `coverage.coverage`.
>  Closes `issue 206`_.

>- Added a page to the docs about contributing to coverage.py, closing
>  `issue 171`_.

>- When coverage.py ended unsuccessfully, it may have reported odd errors like
>  ``&#39;NoneType&#39; object has no attribute &#39;isabs&#39;``.  It no longer does,
>  so kiss `issue 153`_ goodbye.

>.. _issue 60: https://bitbucket.org/ned/coveragepy/issue/60/incorrect-path-to-orphaned-pyc-files
>.. _issue 67: https://bitbucket.org/ned/coveragepy/issue/67/xml-report-filenames-may-be-generated
>.. _issue 89: https://bitbucket.org/ned/coveragepy/issue/89/on-windows-all-packages-are-reported-in
>.. _issue 97: https://bitbucket.org/ned/coveragepy/issue/97/allow-environment-variables-to-be
>.. _issue 100: https://bitbucket.org/ned/coveragepy/issue/100/source-directive-doesnt-work-for-packages
>.. _issue 111: https://bitbucket.org/ned/coveragepy/issue/111/when-installing-coverage-with-pip-not
>.. _issue 137: https://bitbucket.org/ned/coveragepy/issue/137/provide-docs-with-source-distribution
>.. _issue 139: https://bitbucket.org/ned/coveragepy/issue/139/easy-check-for-a-certain-coverage-in-tests
>.. _issue 143: https://bitbucket.org/ned/coveragepy/issue/143/omit-doesnt-seem-to-work-in-coverage
>.. _issue 153: https://bitbucket.org/ned/coveragepy/issue/153/non-existent-filename-triggers
>.. _issue 156: https://bitbucket.org/ned/coveragepy/issue/156/a-completely-unexecuted-file-shows-14
>.. _issue 163: https://bitbucket.org/ned/coveragepy/issue/163/problem-with-include-and-omit-filename
>.. _issue 171: https://bitbucket.org/ned/coveragepy/issue/171/how-to-contribute-and-run-tests
>.. _issue 193: https://bitbucket.org/ned/coveragepy/issue/193/unicodedecodeerror-on-htmlpy
>.. _issue 201: https://bitbucket.org/ned/coveragepy/issue/201/coverage-using-django-14-with-pydb-on
>.. _issue 202: https://bitbucket.org/ned/coveragepy/issue/202/get-rid-of-ez_setuppy-and
>.. _issue 203: https://bitbucket.org/ned/coveragepy/issue/203/duplicate-filenames-reported-when-filename
>.. _issue 205: https://bitbucket.org/ned/coveragepy/issue/205/make-pydoc-coverage-more-friendly
>.. _issue 206: https://bitbucket.org/ned/coveragepy/issue/206/pydoc-coveragecoverage-fails-with-an-error
>.. _issue 210: https://bitbucket.org/ned/coveragepy/issue/210/if-theres-no-coverage-data-coverage-xml
>.. _issue 214: https://bitbucket.org/ned/coveragepy/issue/214/coveragepy-measures-itself-on-precise


>.. _changes_353:



>### 3.5.3

>----------------------------

>- Line numbers in the HTML report line up better with the source lines, fixing
>  `issue 197`_, thanks Marius Gedminas.

>- When specifying a directory as the source= option, the directory itself no
>  longer needs to have a ``__init__.py`` file, though its sub-directories do,
>  to be considered as source files.

>- Files encoded as UTF-8 with a BOM are now properly handled, fixing
>  `issue 179`_.  Thanks, Pablo Carballo.

>- Fixed more cases of non-Python files being reported as Python source, and
>  then not being able to parse them as Python.  Closes `issue 82`_ (again).
>  Thanks, Julian Berman.

>- Fixed memory leaks under Python 3, thanks, Brett Cannon. Closes `issue 147`_.

>- Optimized .pyo files may not have been handled correctly, `issue 195`_.
>  Thanks, Marius Gedminas.

>- Certain unusually named file paths could have been mangled during reporting,
>  `issue 194`_.  Thanks, Marius Gedminas.

>- Try to do a better job of the impossible task of detecting when we can&#39;t
>  build the C extension, fixing `issue 183`_.

>- Testing is now done with `tox`_, thanks, Marc Abramowitz.

>.. _issue 147: https://bitbucket.org/ned/coveragepy/issue/147/massive-memory-usage-by-ctracer
>.. _issue 179: https://bitbucket.org/ned/coveragepy/issue/179/htmlreporter-fails-when-source-file-is
>.. _issue 183: https://bitbucket.org/ned/coveragepy/issue/183/install-fails-for-python-23
>.. _issue 194: https://bitbucket.org/ned/coveragepy/issue/194/filelocatorrelative_filename-could-mangle
>.. _issue 195: https://bitbucket.org/ned/coveragepy/issue/195/pyo-file-handling-in-codeunit
>.. _issue 197: https://bitbucket.org/ned/coveragepy/issue/197/line-numbers-in-html-report-do-not-align
>.. _tox: http://tox.readthedocs.org/


>.. _changes_352:



>### 3.5.2

>----------------------------



>### 3.5.2b1

>------------------------------

>- The HTML report has slightly tweaked controls: the buttons at the top of
>  the page are color-coded to the source lines they affect.

>- Custom CSS can be applied to the HTML report by specifying a CSS file as
>  the ``extra_css`` configuration value in the ``[html]`` section.

>- Source files with custom encodings declared in a comment at the top are now
>  properly handled during reporting on Python 2.  Python 3 always handled them
>  properly.  This fixes `issue 157`_.

>- Backup files left behind by editors are no longer collected by the source=
>  option, fixing `issue 168`_.

>- If a file doesn&#39;t parse properly as Python, we don&#39;t report it as an error
>  if the file name seems like maybe it wasn&#39;t meant to be Python.  This is a
>  pragmatic fix for `issue 82`_.

>- The ``-m`` switch on ``coverage report``, which includes missing line numbers
>  in the summary report, can now be specified as ``show_missing`` in the
>  config file.  Closes `issue 173`_.

>- When running a module with ``coverage run -m &lt;modulename&gt;``, certain details
>  of the execution environment weren&#39;t the same as for
>  ``python -m &lt;modulename&gt;``.  This had the unfortunate side-effect of making
>  ``coverage run -m unittest discover`` not work if you had tests in a
>  directory named &quot;test&quot;.  This fixes `issue 155`_ and `issue 142`_.

>- Now the exit status of your product code is properly used as the process
>  status when running ``python -m coverage run ...``.  Thanks, JT Olds.

>- When installing into pypy, we no longer attempt (and fail) to compile
>  the C tracer function, closing `issue 166`_.

>.. _issue 142: https://bitbucket.org/ned/coveragepy/issue/142/executing-python-file-syspath-is-replaced
>.. _issue 155: https://bitbucket.org/ned/coveragepy/issue/155/cant-use-coverage-run-m-unittest-discover
>.. _issue 157: https://bitbucket.org/ned/coveragepy/issue/157/chokes-on-source-files-with-non-utf-8
>.. _issue 166: https://bitbucket.org/ned/coveragepy/issue/166/dont-try-to-compile-c-extension-on-pypy
>.. _issue 168: https://bitbucket.org/ned/coveragepy/issue/168/dont-be-alarmed-by-emacs-droppings
>.. _issue 173: https://bitbucket.org/ned/coveragepy/issue/173/theres-no-way-to-specify-show-missing-in


>.. _changes_351:



>### 3.5.2.b1





>### 3.5.1

>----------------------------

>- The ``[paths]`` feature unfortunately didn&#39;t work in real world situations
>  where you wanted to, you know, report on the combined data.  Now all paths
>  stored in the combined file are canonicalized properly.




>### 3.5.1b1

>------------------------------

>- When combining data files from parallel runs, you can now instruct
>  coverage.py about which directories are equivalent on different machines.  A
>  ``[paths]`` section in the configuration file lists paths that are to be
>  considered equivalent.  Finishes `issue 17`_.

>- for-else constructs are understood better, and don&#39;t cause erroneous partial
>  branch warnings.  Fixes `issue 122`_.

>- Branch coverage for ``with`` statements is improved, fixing `issue 128`_.

>- The number of partial branches reported on the HTML summary page was
>  different than the number reported on the individual file pages.  This is
>  now fixed.

>- An explicit include directive to measure files in the Python installation
>  wouldn&#39;t work because of the standard library exclusion.  Now the include
>  directive takes precedence, and the files will be measured.  Fixes
>  `issue 138`_.

>- The HTML report now handles Unicode characters in Python source files
>  properly.  This fixes `issue 124`_ and `issue 144`_. Thanks, Devin
>  Jeanpierre.

>- In order to help the core developers measure the test coverage of the
>  standard library, Brandon Rhodes devised an aggressive hack to trick Python
>  into running some coverage.py code before anything else in the process.
>  See the coverage/fullcoverage directory if you are interested.

>..","94c10843165dbb48a5a4b0e8f6a126cf5fc573eb","Pin coverage to latest version 4.4"
"pull_request_merged","219","aio-libs","aioredis","popravich","2017-05-13 14:55:23","Pin coverage to latest version 4.4","cabe4844c6ffb849327e1884b5781d03c727a412","Pull request merge from aio-libs/aioredis:pyup-pin-coverage-4.4 to aio-libs/aioredis:master"
"pull_request_commit","219","aio-libs","aioredis","pyup-bot","2017-05-09 19:04:10","Pin coverage to latest version 4.4","94c10843165dbb48a5a4b0e8f6a126cf5fc573eb",""
