"rectype","issueid","project_owner","project_name","actor","time","text","action","title"
"issue_title","571","nilearn","nilearn","dohmatob","2015-05-04 14:30:09","","start issue","[MRG+1] BF: issue #570 (including tests)"
"issue_closed","571","nilearn","nilearn","AlexandreAbraham","2015-05-11 07:56:18","","closed issue","[MRG+1] BF: issue #570 (including tests)"
"pull_request_title","571","nilearn","nilearn","dohmatob","2015-05-04 14:30:09","","56b4ca29e1d4815064dff2e1b1cb4bdff8deab00","[MRG+1] BF: issue #570 (including tests)"
"pull_request_merged","571","nilearn","nilearn","AlexandreAbraham","2015-05-11 07:56:18","[MRG+1] BF: issue #570 (including tests)","a73a4d675b5807073fde3ec195b53dcd515cf05c","Pull request merge from dohmatob/nilearn:fix-ica-sign to nilearn/nilearn:master"
"issue_comment","571","nilearn","nilearn","GaelVaroquaux","2015-05-09 09:30:35","No further comments from me: should be mergeable once the above comments are addressed.
","",""
"issue_comment","571","nilearn","nilearn","GaelVaroquaux","2015-05-09 12:46:31","Don't worry about the coverage report. 
","",""
"issue_comment","571","nilearn","nilearn","GaelVaroquaux","2015-05-09 13:55:06",":+1: for merge.
","",""
"issue_comment","571","nilearn","nilearn","dohmatob","2015-05-05 08:49:10","3 ==> 2 subjects in test.
","",""
"issue_comment","571","nilearn","nilearn","dohmatob","2015-05-05 08:49:56","sum ==> max heuristic
","",""
"issue_comment","571","nilearn","nilearn","dohmatob","2015-05-09 11:14:59","OK, I've completed my end of the deal.
","",""
"issue_comment","571","nilearn","nilearn","dohmatob","2015-05-09 11:35:32","OK, the coveralls threshold (for acceptable % coverage decrease) seems crazy :)  Is 0.01 not simply too tiny ?

Also it seems to me about have of the open / half-closed PRs are affected same way. Any thoughts ?
","",""
"pull_request_commit_comment","571","nilearn","nilearn","GaelVaroquaux","2015-05-07 14:01:00","I don't understand the few lines above: what are they there for? It seems that they are not used.
","56b4ca29e1d4815064dff2e1b1cb4bdff8deab00","(None, '', u'nilearn/decomposition/tests/test_canica.py')"
"pull_request_commit_comment","571","nilearn","nilearn","dohmatob","2015-05-08 14:07:47","Yes the code snippet is useless as it stands. Thanks for spotting. I'm pushing the full test-case (where the above snippet is used).
","56b4ca29e1d4815064dff2e1b1cb4bdff8deab00","(None, '', u'nilearn/decomposition/tests/test_canica.py')"
"pull_request_commit_comment","571","nilearn","nilearn","lesteve","2015-05-08 21:55:43","Just use assert_true I would say. If we care about providing an assert_less, it should be done somewhere in _utils rather than in one test file.

Two comments:
- assert_less_than does not exist it seems (it is called assert_less AFAICT)
- what you implemented is actually assert_less_equal
","56b4ca29e1d4815064dff2e1b1cb4bdff8deab00","(None, '', u'nilearn/decomposition/tests/test_canica.py')"
"pull_request_commit_comment","571","nilearn","nilearn","lesteve","2015-05-08 21:59:26","I don't think this comment is accurate anymore now that we use the max heuristics.

Also I'd rather have a comment that explain that it is a heuristics for reproducible maps rather than mentioning the GH issue.
","56b4ca29e1d4815064dff2e1b1cb4bdff8deab00","(None, '', u'nilearn/decomposition/canica.py')"
"pull_request_commit_comment","571","nilearn","nilearn","lesteve","2015-05-08 23:00:03","Is that not the exact same thing as l. 107-108?
","56b4ca29e1d4815064dff2e1b1cb4bdff8deab00","(None, '', u'nilearn/decomposition/tests/test_canica.py')"
"pull_request_commit_comment","571","nilearn","nilearn","lesteve","2015-05-08 23:01:04","This comment is not accurate anymore since we are using a max heuristic.
","56b4ca29e1d4815064dff2e1b1cb4bdff8deab00","(None, '', u'nilearn/decomposition/tests/test_canica.py')"
"pull_request_commit_comment","571","nilearn","nilearn","lesteve","2015-05-08 23:26:19","In your example you have actually mp.max() == 1 == -mp.min() so the maps don't get the sign flip. If you are wondering, the reason your test pass is that your test is less or equal and it hits the  equal case in both directions.
","56b4ca29e1d4815064dff2e1b1cb4bdff8deab00","(None, '', u'nilearn/decomposition/tests/test_canica.py')"
"pull_request_commit_comment","571","nilearn","nilearn","lesteve","2015-05-08 23:28:50","This comment is not far from useless. Even if I knew what you were trying to test it took me a while to make sense of it.
","56b4ca29e1d4815064dff2e1b1cb4bdff8deab00","(None, '', u'nilearn/decomposition/tests/test_canica.py')"
"pull_request_commit_comment","571","nilearn","nilearn","dohmatob","2015-05-09 07:59:53","yep, there was typo in the function name/
","56b4ca29e1d4815064dff2e1b1cb4bdff8deab00","(None, '', u'nilearn/decomposition/tests/test_canica.py')"
"pull_request_commit_comment","571","nilearn","nilearn","GaelVaroquaux","2015-05-09 08:33:49","Could you please move this to a new file in nilearn/_utils/fixes/testings and mention in a comment that when we support scikit-learn 0.14 we can remove it.
","56b4ca29e1d4815064dff2e1b1cb4bdff8deab00","(None, '', u'nilearn/decomposition/tests/test_canica.py')"
"pull_request_commit_comment","571","nilearn","nilearn","GaelVaroquaux","2015-05-09 09:21:05","For PEP8 there should be 2 empty lines between first-level entries, thus 2 empty lines here.
","56b4ca29e1d4815064dff2e1b1cb4bdff8deab00","(None, '', u'nilearn/decomposition/tests/test_canica.py')"
"pull_request_commit_comment","571","nilearn","nilearn","GaelVaroquaux","2015-05-09 09:30:06","It would be cooler / more readable if you used iter_img on the img rather than rollaxis on the data.
","56b4ca29e1d4815064dff2e1b1cb4bdff8deab00","(None, '', u'nilearn/decomposition/tests/test_canica.py')"
"pull_request_commit_comment","571","nilearn","nilearn","banilo","2015-05-09 10:34:01","cf. `assert_raises_regex` appears to be similar case and is located in nilearn/_utils/testing.py
","56b4ca29e1d4815064dff2e1b1cb4bdff8deab00","(None, '', u'nilearn/decomposition/tests/test_canica.py')"
"pull_request_commit_comment","571","nilearn","nilearn","banilo","2015-05-09 10:35:50","Function name, even if private, could be more explicit, particularly with respect to the format of the output.
","56b4ca29e1d4815064dff2e1b1cb4bdff8deab00","(None, '', u'nilearn/decomposition/tests/test_canica.py')"
"pull_request_commit_comment","571","nilearn","nilearn","banilo","2015-05-09 10:46:39","Mention ""regression test"" at this point? ...perhaps instead of ""BF"".
","56b4ca29e1d4815064dff2e1b1cb4bdff8deab00","(None, '', u'nilearn/decomposition/tests/test_canica.py')"
"pull_request_commit_comment","571","nilearn","nilearn","GaelVaroquaux","2015-05-09 10:50:00","> > +def test_component_sign():
> > -    # BF for issue #570
> 
> Mention ""regression test"" at this point? ...perhaps instead of ""BF"".

Good point. And don't put a number, which doesn't mean much to the
reader, but a short description of the issue.
","56b4ca29e1d4815064dff2e1b1cb4bdff8deab00","(None, '', u'nilearn/decomposition/tests/test_canica.py')"
"pull_request_commit_comment","571","nilearn","nilearn","dohmatob","2015-05-09 11:09:51","This recommendation is strange. My PEP8 checker dislikes it. Also, does it really matter here ? :)
","56b4ca29e1d4815064dff2e1b1cb4bdff8deab00","(None, '', u'nilearn/decomposition/tests/test_canica.py')"
"pull_request_commit_comment","571","nilearn","nilearn","GaelVaroquaux","2015-05-09 12:47:56","Please move the above to nilearn._utils.testing
","56b4ca29e1d4815064dff2e1b1cb4bdff8deab00","(None, '', u'nilearn/decomposition/tests/test_canica.py')"
"pull_request_commit_comment","571","nilearn","nilearn","dohmatob","2015-05-09 11:00:53","Please could you create a separate issue ? This is not related to / was not introduced by, the PR.
","56b4ca29e1d4815064dff2e1b1cb4bdff8deab00","(None, '', u'nilearn/decomposition/tests/test_canica.py')"
"pull_request_commit_comment","571","nilearn","nilearn","dohmatob","2015-05-09 13:01:47","Done.
","56b4ca29e1d4815064dff2e1b1cb4bdff8deab00","(None, '', u'nilearn/decomposition/tests/test_canica.py')"
"pull_request_commit","571","nilearn","nilearn","dohmatob","2015-05-04 12:25:05","BF: issue #570 (including tests)","5d68e77b21d77d812fe34cad99f32b2547d295d1",""
"pull_request_commit","571","nilearn","nilearn","dohmatob","2015-05-04 12:30:16","squash","b8cc6d4b08d5efad373ca3bd64687b2f4e30a9a7",""
"pull_request_commit","571","nilearn","nilearn","dohmatob","2015-05-04 15:59:57","still adressing issue #570: better comment","068749ad3e1ca128b817434b9d8a40a6a7b01d30",""
"pull_request_commit","571","nilearn","nilearn","dohmatob","2015-05-04 16:04:37","squash","fcb5f395c9ded409df887d032e0dcb692bb90bed",""
"pull_request_commit","571","nilearn","nilearn","dohmatob","2015-05-05 06:46:32","using: 'max' heuristic instead of 'sum' (blobs are the grail)","5b0f83fbfaea00d5c68cb11ba5543f51fc98f73b",""
"pull_request_commit","571","nilearn","nilearn","dohmatob","2015-05-05 06:59:17","BF (py3 troubles): xrange ==> range","f9d7827158cb4712401278fbb870d612421a6920",""
"pull_request_commit","571","nilearn","nilearn","dohmatob","2015-05-08 12:07:21","FIXUPS: test_component_sign in canica (issue #570)","1872ec1a1359fc4486f244b7e6e561cbbba10882",""
"pull_request_commit","571","nilearn","nilearn","dohmatob","2015-05-09 05:59:47","address @lesteve's comments","2e47c50fb73bf5dc178bedec8add0ca076cfeb38",""
"pull_request_commit","571","nilearn","nilearn","dohmatob","2015-05-09 06:01:47","typo","dd2c791d5374d9c0bc3c94456cc94e21c99bcb81",""
"pull_request_commit","571","nilearn","nilearn","dohmatob","2015-05-09 06:02:51","FIX: double-pasted code","cd96caf07ab07927772dac5df671139d16aa82e5",""
"pull_request_commit","571","nilearn","nilearn","dohmatob","2015-05-09 06:03:58","better comments","03a136505fe9b4bf5db91a66b45a66e9a6de4654",""
"pull_request_commit","571","nilearn","nilearn","dohmatob","2015-05-09 08:57:59","still addressing comments (cosmetic stuff)","769fc21e3a47e748e046e1e1979e6e9a9d87122b",""
"pull_request_commit","571","nilearn","nilearn","dohmatob","2015-05-09 09:12:28","ENH: rollaxis ==> iter_img","34f627a7f6c97e842314f557fee3f1e1cc996f46",""
"pull_request_commit","571","nilearn","nilearn","dohmatob","2015-05-09 10:57:07","REFACTOR: moved assert_less_equal to nilearn._utils.testing.py","56b4ca29e1d4815064dff2e1b1cb4bdff8deab00",""
"pull_request_commit_comment","571","nilearn","nilearn","GaelVaroquaux","2015-05-05 07:27:27","I'd rather have the heuristic that I proposed, using the max, rather that the heuristic using the sum. Indeed, the max is really what people look at in neuroimaging, it's the ""blob"" sticking out.
","5d68e77b21d77d812fe34cad99f32b2547d295d1","(None, None, None)"
"pull_request_commit_comment","571","nilearn","nilearn","GaelVaroquaux","2015-05-05 07:29:37","I don't understand the goal of these lines: I don't see what they test at the level of CanICA
","5d68e77b21d77d812fe34cad99f32b2547d295d1","(63, 92, u'nilearn/decomposition/tests/test_canica.py')"
"pull_request_commit_comment","571","nilearn","nilearn","GaelVaroquaux","2015-05-05 07:30:47","Good thinking with regards to decreasing the number of subjects to speed up tests. How about having only 2 subjects?
","5d68e77b21d77d812fe34cad99f32b2547d295d1","(53, 82, u'nilearn/decomposition/tests/test_canica.py')"
"pull_request_commit_comment","571","nilearn","nilearn","dohmatob","2015-05-05 08:23:44","Those lines are not meant to test CanICA. They're simply making sure the test data are what they should be (more blue than red). They're testing the test data for sanity. They're meta-tests if you like. At worst, those lines don't do any harm.
","5d68e77b21d77d812fe34cad99f32b2547d295d1","(63, 92, u'nilearn/decomposition/tests/test_canica.py')"
