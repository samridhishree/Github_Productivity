"rectype","issueid","project_owner","project_name","actor","time","text","action","title"
"issue_title","297","pycqa","astroid","lmedioni","2015-12-16 10:33:51","For now the test fails, due to issue #265. Based on PR #296, everything is OK.
","start issue","Add support for inference on threading.Lock"
"issue_closed","297","pycqa","astroid","PCManticore","2015-12-21 16:04:34","","closed issue","Add support for inference on threading.Lock"
"pull_request_title","297","pycqa","astroid","lmedioni","2015-12-16 10:33:51","For now the test fails, due to issue #265. Based on PR #296, everything is OK.
","1586fb45afa2918977e1f3a764273e9b4f2abeee","Add support for inference on threading.Lock"
"issue_comment","297","pycqa","astroid","PCManticore","2015-12-21 16:04:33","Merged with a couple of small changes https://github.com/PyCQA/astroid/commit/af0e3f5658097a21b78e3008854fa02ddbfc0ab3. I changed it to a function, which returns an instance of a lock class.
","",""
"pull_request_commit_comment","297","pycqa","astroid","PCManticore","2015-12-17 18:11:05","Did you see my comment from https://bitbucket.org/logilab/astroid/pull-requests/98/add-support-for-inference-on-threadinglock/diff regarding transforms vs inference tip?
","1586fb45afa2918977e1f3a764273e9b4f2abeee","(20, '', u'astroid/brain/brain_stdlib.py')"
"pull_request_commit_comment","297","pycqa","astroid","lmedioni","2015-12-18 12:35:12","Sorry. You're right but I'm running out of time... Would it be OK if I modify the module transform to have Lock being a function? 
","1586fb45afa2918977e1f3a764273e9b4f2abeee","(20, '', u'astroid/brain/brain_stdlib.py')"
"pull_request_commit","297","pycqa","astroid","laura.medioni@logilab.fr","2015-12-16 10:30:53","Add support for inference on threading.Lock","1586fb45afa2918977e1f3a764273e9b4f2abeee",""
