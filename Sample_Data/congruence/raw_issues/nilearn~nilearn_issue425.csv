"rectype","issueid","project_owner","project_name","actor","time","text","action","title"
"issue_title","425","nilearn","nilearn","banilo","2015-02-13 08:19:06","Since we are at it, how about refactoring all the nifti masker classes into a single python file?

More concretely, how about unifying the code of...

``` python
- base_masker.py
- nifti_masker.py
- nifti_region.py
- multi_nifti_masker.py
```
","start issue","Refactor nifti masker code"
"issue_closed","425","nilearn","nilearn","AlexandreAbraham","2015-02-16 13:07:47","","closed issue","Refactor nifti masker code"
"issue_comment","425","nilearn","nilearn","GaelVaroquaux","2015-02-13 08:21:19","I tend to like the organization where there is one major class per file,
and the file name is the snake_case version of the CamelCase class name.
","",""
"issue_comment","425","nilearn","nilearn","AlexandreAbraham","2015-02-13 08:24:02","> I tend to like the organization where there is one major class per file, and the file name is the snake_case version of the CamelCase class name.

So should we split nifti_region into nifti_labels_masker and nifti_maps_masker?
","",""
"issue_comment","425","nilearn","nilearn","banilo","2015-02-13 08:24:53","> split nifti_region into nifti_labels_masker and nifti_maps_masker

This seems to make sense for the sake of consistency.
","",""
"issue_comment","425","nilearn","nilearn","GaelVaroquaux","2015-02-13 08:25:00","> So should we split nifti_region into nifti_labels_masker and
> nifti_maps_masker?

IMHO Yes. I find that such organization of the codebase makes it very
easy to find where a class is defined.
","",""
"issue_comment","425","nilearn","nilearn","AlexandreAbraham","2015-02-13 08:54:41","@banilo, do you volunteer? ;)

If not, I'll find 10 minutes to do that during the week end. Given that we have released, I think that this kind of change should be done ASAP.
","",""
"issue_comment","425","nilearn","nilearn","banilo","2015-02-13 08:57:14","I volunteer - will do it this afternoon.
","",""
