"rectype","issueid","project_owner","project_name","actor","time","text","action","title"
"issue_title","164","idan","oauthlib","synasius","2013-05-28 21:26:46","This is a proposal to solve Issue #162
","start issue","Redirect uri on error raise"
"issue_closed","164","idan","oauthlib","synasius","2013-05-29 12:33:11","","closed issue","Redirect uri on error raise"
"pull_request_title","164","idan","oauthlib","synasius","2013-05-28 21:26:46","This is a proposal to solve Issue #162
","746d5949b649af88a5d3ac250141e60a5403caa1","Redirect uri on error raise"
"issue_comment","164","idan","oauthlib","coveralls","2013-05-28 21:28:49","[![Coverage Status](https://coveralls.io/builds/54489/badge)](https://coveralls.io/builds/54489)

Coverage remained the same when pulling **83f18d7dd7d6000217834b73313a0c623aef4a00 on synasius:redirect-uri-error** into **21d31ee5aa2284b9a26037a99a7cf99a37131bd2 on idan:master**.
","",""
"issue_comment","164","idan","oauthlib","coveralls","2013-05-28 21:28:49","[![Coverage Status](https://coveralls.io/builds/54489/badge)](https://coveralls.io/builds/54489)

Coverage increased (+0%) when pulling **83f18d7dd7d6000217834b73313a0c623aef4a00 on synasius:redirect-uri-error** into **21d31ee5aa2284b9a26037a99a7cf99a37131bd2 on idan:master**.
","",""
"issue_comment","164","idan","oauthlib","ib-lundgren","2013-05-29 11:07:10","Looks good but I think we should take it one step further. I think having the collected request parameters available in all OAuth2Error exceptions would be helpful, if not for anything else but debugging.

Maybe pass in a keyword arg request that we extract client_id, redirect_uri, scopes etc from?

```
class OAuth2Error(Exception):
  error = None

  def __init__(self, description=None, uri=None, state=None, status_code=400, request=None):
    ...
    if request:
      self.redirect_uri = request.redirect_uri
      etc.
```
","",""
"issue_comment","164","idan","oauthlib","synasius","2013-05-29 11:38:52","Oh, that would be nice. 
Would you like to unpack all the params collected in request._params or only some?
","",""
"issue_comment","164","idan","oauthlib","ib-lundgren","2013-05-29 11:43:39","Let's start with cherry picking a few and add more as we find it helpful. Start with `client_id`, `redirect_uri`, `scopes`, `response_type` and `grant_type` maybe? Feel free to add more as you see fit. 

If we add `code` or a flavour of `token` we should probably make sure they are not accidentally logged anywhere, don't think that is the case though.
","",""
"issue_comment","164","idan","oauthlib","synasius","2013-05-29 11:50:49",":+1: Fully agree with you! I can update this pull req or create a new one if you prefer
","",""
"issue_comment","164","idan","oauthlib","ib-lundgren","2013-05-29 11:52:30","Whatever you prefer =) A new will make for a slightly cleaner commit log but that is a minor issue imo.
","",""
"issue_comment","164","idan","oauthlib","synasius","2013-05-29 12:03:07","I love clean logs so i'll go with a new pr. Back in 10 minutes
","",""
"pull_request_commit","164","idan","oauthlib","synasius","2013-05-28 21:18:22","RedirectClientError base class that add redirect_uri on init","b981ee7b4a45b5613fe35ed811c3ba8a415827aa",""
"pull_request_commit","164","idan","oauthlib","synasius","2013-05-28 21:19:03","Add new redirect_uri on error raise where needed","83f18d7dd7d6000217834b73313a0c623aef4a00",""
"pull_request_commit","164","idan","oauthlib","synasius","2013-05-29 11:00:39","Fixed docstrings","746d5949b649af88a5d3ac250141e60a5403caa1",""
