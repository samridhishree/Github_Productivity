"rectype","issueid","project_owner","project_name","actor","time","text","action","title"
"issue_title","462","pycqa","astroid","brycepg","2017-10-30 06:06:44","### Fixes / new features
This commit fixes https://github.com/PyCQA/pylint/issues/1698 unsupported-assignment-operation issues
I implemented a transform plugin as @PCManticore suggested
","start issue","Add Transform Plugin for attr to fix false positives due to instance attribute rewriting"
"issue_closed","462","pycqa","astroid","PCManticore","2017-12-11 09:20:37","","closed issue","Add Transform Plugin for attr to fix false positives due to instance attribute rewriting"
"pull_request_title","462","pycqa","astroid","brycepg","2017-10-30 06:06:44","### Fixes / new features
This commit fixes https://github.com/PyCQA/pylint/issues/1698 unsupported-assignment-operation issues
I implemented a transform plugin as @PCManticore suggested
","b72588718044fdd9fe49f5a5c785bc85987e1df4","Add Transform Plugin for attr to fix false positives due to instance attribute rewriting"
"pull_request_merged","462","pycqa","astroid","PCManticore","2017-12-11 09:20:37","Add Transform Plugin for attr to fix false positives due to instance attribute rewriting","e0aadfb79c2e7b577924f717e8458200488c0e32","Pull request merge from brycepg/astroid:master to PyCQA/astroid:master"
"issue_comment","462","pycqa","astroid","brycepg","2017-11-04 19:44:48","Thanks for the feedback @PCManticore 

I've made the requested changes,","",""
"issue_comment","462","pycqa","astroid","brycepg","2017-11-13 02:34:54","Done","",""
"issue_comment","462","pycqa","astroid","The-Compiler","2017-12-11 09:29:56","Oh, awesome work - thanks!","",""
"pull_request_commit_comment","462","pycqa","astroid","PCManticore","2017-11-02 13:03:11","Let's add the Licensing header like the one from the other brain tips","b72588718044fdd9fe49f5a5c785bc85987e1df4","(None, '', u'astroid/brain/brain_attrs.py')"
"pull_request_commit_comment","462","pycqa","astroid","PCManticore","2017-11-02 13:03:36","No need to have this, since it is not a pylint plugin. We already do the registration through the manager","b72588718044fdd9fe49f5a5c785bc85987e1df4","(None, '', u'astroid/brain/brain_attrs.py')"
"pull_request_commit_comment","462","pycqa","astroid","PCManticore","2017-11-02 13:06:25","We should pass the filter from the transform here instead. Something along the lines of:

```
MANAGER.register_transform(astroid.Class, attr_attributes_transform, is_decorated_with_attrs)
```
where `is_decorated_with_attrs` returns True or False","b72588718044fdd9fe49f5a5c785bc85987e1df4","(None, '', u'astroid/brain/brain_attrs.py')"
"pull_request_commit_comment","462","pycqa","astroid","PCManticore","2017-11-02 13:08:49","Please use `.qname()` rather than `as_string()`","b72588718044fdd9fe49f5a5c785bc85987e1df4","(None, '', u'astroid/brain/brain_attrs.py')"
"pull_request_commit_comment","462","pycqa","astroid","brycepg","2017-11-03 03:55:25","qname isn't available for Attribute nodes. I could do decorator_node.inferred()[0].qname() however that returns `attr._make.attributes`; this qualified name could be changed since `_make` isn't part of the API, so I thought that using the string names would be better.

What do you think?","b72588718044fdd9fe49f5a5c785bc85987e1df4","(None, '', u'astroid/brain/brain_attrs.py')"
"pull_request_commit_comment","462","pycqa","astroid","PCManticore","2017-11-11 11:59:01","Ah, I see, @brycepg, maybe we should revert back to using `as_string()`. The problem is that we should avoid doing `infer()` in transform predicates, since this could lead to circular inferences across the board, rendering everything unusable (e.g an `infer()` in a predicate could trigger a circular inference for the same object, leading to a recursion error). Sorry for misleading you down this path!","b72588718044fdd9fe49f5a5c785bc85987e1df4","(None, '', u'astroid/brain/brain_attrs.py')"
"pull_request_commit_comment","462","pycqa","astroid","PCManticore","2017-11-11 11:59:35","We should expose this in tox so that the tests could run in CI: https://github.com/PyCQA/astroid/blob/be694f811f7df89c4fcc672ef09c0e1fc499cf23/tox.ini#L14","b72588718044fdd9fe49f5a5c785bc85987e1df4","(6, '', u'astroid/tests/unittest_brain.py')"
"pull_request_commit_comment","462","pycqa","astroid","PCManticore","2017-11-11 12:00:29","Sounds good, we can use `as_string`","b72588718044fdd9fe49f5a5c785bc85987e1df4","(None, '', u'astroid/brain/brain_attrs.py')"
"pull_request_commit","462","pycqa","astroid","brycepg","2017-10-30 06:01:39","Add transform for attr library to fix unsupported-assignment-operation false positives","b72588718044fdd9fe49f5a5c785bc85987e1df4",""
