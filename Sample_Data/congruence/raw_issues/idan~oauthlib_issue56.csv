"rectype","issueid","project_owner","project_name","actor","time","text","action","title"
"issue_title","56","idan","oauthlib","mikix","2012-08-31 22:02:09","These are mostly unicode string related changes and a few syntax ones.  The diff is a bear to read because of all the minor u's' -> 's' changes.  :(

https://github.com/idan/oauthlib/issues/55

Tests pass under both Python2.7 and Python3.2.  I don't happen to have a machine with 2.6 on it available right now.  I will test later with 2.6.

The only thing I would qualify as a Change was in test_signatures.py:test_collect_parameters(), I made all the inputs unicode.  The old code path worked in Python2 because it's a bit looser.  But not in Python3, because 's' != b's'.

I had a hard time telling whether, as a matter of API, collect_parameters required its inputs to be unicode or not, but I assumed it did since so many other bits of API seemed to require that.  But if I was wrong, I can go back and fix up that whole code path to work under both encoding (and spit out the same as it was given).
","start issue","Support Python 3"
"issue_closed","56","idan","oauthlib","ib-lundgren","2012-10-23 19:49:14","","closed issue","Support Python 3"
"pull_request_title","56","idan","oauthlib","mikix","2012-08-31 22:02:09","These are mostly unicode string related changes and a few syntax ones.  The diff is a bear to read because of all the minor u's' -> 's' changes.  :(

https://github.com/idan/oauthlib/issues/55

Tests pass under both Python2.7 and Python3.2.  I don't happen to have a machine with 2.6 on it available right now.  I will test later with 2.6.

The only thing I would qualify as a Change was in test_signatures.py:test_collect_parameters(), I made all the inputs unicode.  The old code path worked in Python2 because it's a bit looser.  But not in Python3, because 's' != b's'.

I had a hard time telling whether, as a matter of API, collect_parameters required its inputs to be unicode or not, but I assumed it did since so many other bits of API seemed to require that.  But if I was wrong, I can go back and fix up that whole code path to work under both encoding (and spit out the same as it was given).
","56a5c730609b9d8ac4ec4303448ae79c7443216e","Support Python 3"
"pull_request_merged","56","idan","oauthlib","ib-lundgren","2012-10-23 19:49:14","Support Python 3","67dc9f2d31a1badc0e78c9c46bcca79d5ab03d02","Pull request merge from mikix/oauthlib:master to idan/oauthlib:master"
"issue_comment","56","idan","oauthlib","travisbot","2012-08-31 22:02:45","This pull request [fails](http://travis-ci.org/idan/oauthlib/builds/2298986) (merged 95c24638 into dcbc028f).
","",""
"issue_comment","56","idan","oauthlib","mikix","2012-08-31 22:03:06","Uh.  I seemed to have created a new issue, sorry.  I'm not super familiar with github.
","",""
"issue_comment","56","idan","oauthlib","travisbot","2012-08-31 22:05:33","This pull request [fails](http://travis-ci.org/idan/oauthlib/builds/2299006) (merged d06f0174 into dcbc028f).
","",""
"issue_comment","56","idan","oauthlib","mikix","2012-09-03 15:29:08","OK, I've fixed 2.6 support.  You shouldn't need Six.  The difficulty of this port was mostly changing from Python2's bytes-by-default to Python3's unicode-by-default.  Six won't really help with that (though it does give you u() and b() functions as syntactic sugar).  I did mimic Six's unicode_type and bytes_type in common.py though.

I'd appreciate a review of this branch, it's ready now.  I'll close out the other issue, since this one has the code.
","",""
"issue_comment","56","idan","oauthlib","travisbot","2012-09-03 15:54:03","This pull request [passes](http://travis-ci.org/idan/oauthlib/builds/2319942) (merged 56a5c730 into dcbc028f).
","",""
"issue_comment","56","idan","oauthlib","ib-lundgren","2012-09-06 19:56:16","Great work! Will try and look into this during the weekend if none beats me to it.
","",""
"issue_comment","56","idan","oauthlib","mikix","2012-09-10 00:40:19","FYI, I pushed this patch to Ubuntu.  So it should be getting some real world testing.
","",""
"issue_comment","56","idan","oauthlib","ib-lundgren","2012-10-23 08:54:22","Sorry for taking ages to get to this. I had a look this morning and found some minor unittest glitches in 3.1 and 3.3, the former lacking assertIsInstance and the latter making string comparisons based on dict ordering invalid (yea our tests needs some love). Will try and sort that out tonight. 2.6, 2.7 and 3.2 =)
","",""
"issue_comment","56","idan","oauthlib","ib-lundgren","2012-10-23 19:51:31","Thanks once again for this! I've monkey patched in assertIsInstance into TestCase for 3.1 and the 3.3 issues are in #62. 
","",""
"pull_request_commit","56","idan","oauthlib","mikix","2012-08-31 21:52:09","Support Python 3

These are mostly unicode string related changes and a few syntax ones.

https://github.com/idan/oauthlib/issues/55","95c24638a73e895fb42449b876266b8029b752bb",""
"pull_request_commit","56","idan","oauthlib","mikix","2012-08-31 22:04:18","Fix forgotten import in setup.py","d06f0174e275723b8b68b26d98140cb997daf2c9",""
"pull_request_commit","56","idan","oauthlib","mikix","2012-09-03 15:13:35","fix some byte/unicode arguments for Python 2.6's benefit","56a5c730609b9d8ac4ec4303448ae79c7443216e",""
