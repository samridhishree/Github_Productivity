"rectype","issueid","project_owner","project_name","actor","time","text","action","title"
"issue_title","52","aio-libs","aioredis","tailhook","2014-11-05 14:18:59","PoC, totally untested yet
","start issue","Prototype of auto-reconnect functionality"
"issue_closed","52","aio-libs","aioredis","popravich","2014-11-10 12:37:26","","closed issue","Prototype of auto-reconnect functionality"
"pull_request_title","52","aio-libs","aioredis","tailhook","2014-11-05 14:18:59","PoC, totally untested yet
","266d1afe5681f18316d83370d14c6d191bcd60f2","Prototype of auto-reconnect functionality"
"pull_request_merged","52","aio-libs","aioredis","popravich","2014-11-10 12:37:26","Prototype of auto-reconnect functionality","42dd44aff69bb23a92984ea37464d0b9da9a7074","Pull request merge from tailhook/aioredis:reconnect to aio-libs/aioredis:master"
"issue_comment","52","aio-libs","aioredis","popravich","2014-11-10 09:03:58","Hi @tailhook,

Can you remove `auto_reconnect` argument and add `create_reconnecting_redis` coroutine instead?
This would make me happy) And you can continue with tests and docs so I can merge this PR
","",""
"issue_comment","52","aio-libs","aioredis","tailhook","2014-11-10 10:31:49","Done
","",""
"issue_comment","52","aio-libs","aioredis","tailhook","2014-11-10 10:32:02","Hm, forgot docs...
","",""
"pull_request_commit_comment","52","aio-libs","aioredis","popravich","2014-11-06 10:00:14","the main problem is that the signature of `execute` function is changed --
by changing `auto_reconnect`'s value you would, basically, get different interface -- `execute` would become coroutine
and, for example, pipe-lineing would work as easy is it does now
","266d1afe5681f18316d83370d14c6d191bcd60f2","(None, '', u'aioredis/commands/__init__.py')"
"pull_request_commit_comment","52","aio-libs","aioredis","popravich","2014-11-06 10:12:35","this also would cause this problem:
when redis server is down this would stuck for some time
so we won't be able to control connection timeout (as we can do with `wait_for(create_redis(...), 5)`)
","266d1afe5681f18316d83370d14c6d191bcd60f2","(21, '', u'aioredis/commands/__init__.py')"
"pull_request_commit_comment","52","aio-libs","aioredis","popravich","2014-11-10 10:47:09","I think `db` should be taken from previously closed connection (if any)
","266d1afe5681f18316d83370d14c6d191bcd60f2","(22, '', u'aioredis/commands/__init__.py')"
"pull_request_commit_comment","52","aio-libs","aioredis","tailhook","2014-11-10 10:55:25","It's too hacky. Can we just disable `select` method?
","266d1afe5681f18316d83370d14c6d191bcd60f2","(22, '', u'aioredis/commands/__init__.py')"
"pull_request_commit","52","aio-libs","aioredis","tailhook","2014-11-05 14:16:43","Implement auto-reconnecting redis connection","1218ee0baea6391626d67e337c6dc194fea6ac79",""
"pull_request_commit","52","aio-libs","aioredis","tailhook","2014-11-10 10:56:25","Add docs for `create_reconnecting_redis`","266d1afe5681f18316d83370d14c6d191bcd60f2",""
