"rectype","issueid","project_owner","project_name","actor","time","text","action","title"
"issue_title","1286","nilearn","nilearn","rschmaelzle","2016-09-21 13:35:15","Dear developers,
i am trying to create a schmatic brain visualization that I don't know the name for - a not-quite volumetric, not-quite-surface view. Let's assume I'd extract 4d data from a parcellation, e.g. the AAL90. That would give me a 90*TR array, which I'd wish to visualize on a schematic brain similar to the lateral or medial glass brain, just with more 'tiles'. The best analogy I can think of is a geomap, and there seem to be very useful packages for that, e.g. [kartograph](http://kartograph.org/showcase/choropleth/) (also brain-shapes exist e.g. [here](https://scalablebrainatlas.incf.org/main/coronal3d.php?template=EAZ05&). Currently, I use cumbersome code to loop over a volumetric file to assign the same value to all voxels within the same ROI/parcel/region and then use simple plot_stat_map. However, a schematic would be nice, visually appealing, and smaller in terms of file-size that carries the data. 
i) is there possibly a better way to achieve what I want?
ii) if not, does it sound interesting or sth similar in planning?
iii) if not, is it even desirable? I cannot promise I am up to the task of implementing ,but could see what we can do.
Thanks, R
","start issue","'geomap-style' plotting of brain tiles"
"issue_closed","1286","nilearn","nilearn","rschmaelzle","2016-09-21 13:55:03","","closed issue","'geomap-style' plotting of brain tiles"
"issue_comment","1286","nilearn","nilearn","GaelVaroquaux","2016-09-21 13:42:56","You should be able to use the inverse_transform method of
NiftiLabelsMasker (where you have instantiated it given as a labels_img
your parcellation, and you have fitted it on data that has the same
affine and shape than the image you want to produce) to create the image
that you pass to plot_stat_maps.
","",""
"issue_comment","1286","nilearn","nilearn","rschmaelzle","2016-09-21 13:53:23","+++ thank you so much. so fast, so simple!
","",""
