"rectype","issueid","project_owner","project_name","actor","time","text","action","title"
"issue_title","1477","nilearn","nilearn","GaelVaroquaux","2017-06-26 01:12:39","Geometric mean can be unstable, and not converge. It makes it hazardous
to use tangent-space parametrization (feedback at OHBM). A Euclidean
mean works well, and this PR adds an option to have tangent-space
parametrization with Euclidean mean.","start issue","[MRG] add tangent space with euclidean mean."
"pull_request_title","1477","nilearn","nilearn","GaelVaroquaux","2017-06-26 01:12:39","Geometric mean can be unstable, and not converge. It makes it hazardous
to use tangent-space parametrization (feedback at OHBM). A Euclidean
mean works well, and this PR adds an option to have tangent-space
parametrization with Euclidean mean.","d04cc2781a19a99f02f3b3ecb1a173ab8d5024bb","[MRG] add tangent space with euclidean mean."
"issue_comment","1477","nilearn","nilearn","bthirion","2017-06-26 01:56:52","LGTM : just a naming comment.","",""
"issue_comment","1477","nilearn","nilearn","bthirion","2017-06-26 05:40:39","+1 for merge.","",""
"issue_comment","1477","nilearn","nilearn","bthirion","2017-07-02 21:49:04","LGTM besides the small detail.","",""
"issue_comment","1477","nilearn","nilearn","bthirion","2017-07-06 21:19:30","You probably don't want to switch model while dealing with convergence issues. This makes the behavior of estimators even more complex to figure out.
My 2c,
B
","",""
"issue_comment","1477","nilearn","nilearn","salma1601","2017-07-06 21:11:58","Why not just switch back to euclidean mean in case the algorithm does not converge? We can tell this in the actual non convergence warning. I find that this multiplication of kinds may complicate users life.","",""
"issue_comment","1477","nilearn","nilearn","salma1601","2017-07-07 08:43:25",">Kamalakar is running benchmarks right now to figure out those tradeoffs based on empirical results.

Great ! The gradient descent is initiated at the euclidean mean, so we'll see if it can be trapped in an aberrant region.","",""
"issue_comment","1477","nilearn","nilearn","KamalakerDadi","2017-06-26 16:52:12"," - adding in whats_new.rst is missing. I think it is useful.
- could you please add tests ?","",""
"issue_comment","1477","nilearn","nilearn","KamalakerDadi","2017-06-26 17:03:33"," >While we are at it, can we write explicit naming to tangent too ?
>What do you mean?

tangent_euclidean ?","",""
"issue_comment","1477","nilearn","nilearn","KamalakerDadi","2017-06-26 17:24:42","May be you have missed to add 'tangent_geometric' at Line552 ?
Currently, there is a chance to override mean_ ? Correct me if I am wrong","",""
"issue_comment","1477","nilearn","nilearn","KamalakerDadi","2017-07-06 09:14:12",">LGTM besides the small detail.

Currently, I am using this PR in my experimental paper. To see the results and also one way reviewing this PR.","",""
"issue_comment","1477","nilearn","nilearn","codecov[bot]","2017-06-26 02:22:19","# [Codecov](https://codecov.io/gh/nilearn/nilearn/pull/1477?src=pr&el=h1) Report
> Merging [#1477](https://codecov.io/gh/nilearn/nilearn/pull/1477?src=pr&el=desc) into [master](https://codecov.io/gh/nilearn/nilearn/commit/41e3df0fad8908817472954062def83b4fd1e289?src=pr&el=desc) will **increase** coverage by `0.01%`.
> The diff coverage is `100%`.

[![Impacted file tree graph](https://codecov.io/gh/nilearn/nilearn/pull/1477/graphs/tree.svg?token=KpYArSdyXv&width=650&height=150&src=pr)](https://codecov.io/gh/nilearn/nilearn/pull/1477?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##           master    #1477      +/-   ##
==========================================
+ Coverage   94.68%   94.69%   +0.01%     
==========================================
  Files         120      120              
  Lines       14776    14809      +33     
==========================================
+ Hits        13991    14024      +33     
  Misses        785      785
```


| [Impacted Files](https://codecov.io/gh/nilearn/nilearn/pull/1477?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [...arn/connectome/tests/test\_connectivity\_matrices.py](https://codecov.io/gh/nilearn/nilearn/pull/1477?src=pr&el=tree#diff-bmlsZWFybi9jb25uZWN0b21lL3Rlc3RzL3Rlc3RfY29ubmVjdGl2aXR5X21hdHJpY2VzLnB5) | `99.03% <100%> (+0.03%)` | :arrow_up: |
| [nilearn/connectome/connectivity\_matrices.py](https://codecov.io/gh/nilearn/nilearn/pull/1477?src=pr&el=tree#diff-bmlsZWFybi9jb25uZWN0b21lL2Nvbm5lY3Rpdml0eV9tYXRyaWNlcy5weQ==) | `95.62% <100%> (+0.47%)` | :arrow_up: |
| [nilearn/plotting/tests/test\_img\_plotting.py](https://codecov.io/gh/nilearn/nilearn/pull/1477?src=pr&el=tree#diff-bmlsZWFybi9wbG90dGluZy90ZXN0cy90ZXN0X2ltZ19wbG90dGluZy5weQ==) | `100% <0%> (ø)` | :arrow_up: |
| [nilearn/plotting/img\_plotting.py](https://codecov.io/gh/nilearn/nilearn/pull/1477?src=pr&el=tree#diff-bmlsZWFybi9wbG90dGluZy9pbWdfcGxvdHRpbmcucHk=) | `94.34% <0%> (+0.04%)` | :arrow_up: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/nilearn/nilearn/pull/1477?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/nilearn/nilearn/pull/1477?src=pr&el=footer). Last update [41e3df0...d04cc27](https://codecov.io/gh/nilearn/nilearn/pull/1477?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
","",""
"pull_request_commit_comment","1477","nilearn","nilearn","bthirion","2017-06-26 01:53:32","'tangent_geometric' ?","d04cc2781a19a99f02f3b3ecb1a173ab8d5024bb","(None, '', u'nilearn/connectome/connectivity_matrices.py')"
"pull_request_commit_comment","1477","nilearn","nilearn","KamalakerDadi","2017-06-26 16:50:28","typo here","d04cc2781a19a99f02f3b3ecb1a173ab8d5024bb","(None, '', u'nilearn/connectome/connectivity_matrices.py')"
"pull_request_commit_comment","1477","nilearn","nilearn","KamalakerDadi","2017-06-26 16:51:19","While we are at it, can we write explicit naming to tangent too ?","d04cc2781a19a99f02f3b3ecb1a173ab8d5024bb","(6, '', u'nilearn/connectome/connectivity_matrices.py')"
"pull_request_commit_comment","1477","nilearn","nilearn","KamalakerDadi","2017-06-26 17:15:08","Can you add a test for this too. To test if error raises ?","d04cc2781a19a99f02f3b3ecb1a173ab8d5024bb","(117, '', u'nilearn/connectome/connectivity_matrices.py')"
"pull_request_commit_comment","1477","nilearn","nilearn","bthirion","2017-07-02 21:41:23","Shouldn't one of the two  mean_sqrt be transposed ? (not sure that they are symmetric)","d04cc2781a19a99f02f3b3ecb1a173ab8d5024bb","(160, '', u'nilearn/connectome/connectivity_matrices.py')"
"pull_request_commit_comment","1477","nilearn","nilearn","KamalakerDadi","2017-07-06 10:01:55","If I understood correctly, this also applies for all kinds except tangent_geometric ?","d04cc2781a19a99f02f3b3ecb1a173ab8d5024bb","(101, '', u'nilearn/connectome/connectivity_matrices.py')"
"pull_request_commit","1477","nilearn","nilearn","GaelVaroquaux","2017-06-26 01:08:58","ENH: add tangent space with euclidean mean.

Geometric mean can be unstable, and not converge. It makes it hazardous
to use tangent-space parametrization (feedback at OHBM). A Euclidean
mean works well, and this PR adds an option to have tangent-space
parametrization with Euclidean mean.","3212e9cc838667f001f02f9d919e6394e027ff3d",""
"pull_request_commit","1477","nilearn","nilearn","GaelVaroquaux","2017-06-26 01:58:24","MISC: naming

Address @bthirion's comment.","fbc8b0fc1e739742f03b0362211e5fdb46ad04fa",""
"pull_request_commit","1477","nilearn","nilearn","GaelVaroquaux","2017-06-27 00:34:44","Add tests, and fix tangent","9ebb6a08e934be9f35b425d756db1607c79a9f89",""
"pull_request_commit","1477","nilearn","nilearn","GaelVaroquaux","2017-06-27 00:38:02","TST: add a test for the validation error","d781b1ebfb941c7c9a3a7be83998d8fe8a29e844",""
"pull_request_commit","1477","nilearn","nilearn","GaelVaroquaux","2017-06-27 00:46:07","update example","d04cc2781a19a99f02f3b3ecb1a173ab8d5024bb",""
