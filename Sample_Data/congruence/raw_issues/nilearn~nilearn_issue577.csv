"rectype","issueid","project_owner","project_name","actor","time","text","action","title"
"issue_title","577","nilearn","nilearn","agramfort","2015-05-08 20:40:48","we use a plot_stat_map in MNE:

http://martinos.org/mne/dev/auto_examples/inverse/plot_lcmv_beamformer_volume.html#example-inverse-plot-lcmv-beamformer-volume-py

with the current master of nilearn it fails due to the dtype (int8) of the anat I make available at:

https://dl.dropboxusercontent.com/u/2140486/T1.mgz

error is:

```
/Users/alex/work/src/nibabel/nibabel/freesurfer/mghformat.pyc in set_data_dtype(self, datatype)
    284             code = self._data_type_codes[datatype]
    285         except KeyError:
--> 286             raise MGHError('datatype dtype ""%s"" not recognized' % datatype)
    287         self._header_data['type'] = code
    288

MGHError: datatype dtype ""int8"" not recognized
```

any help?
","start issue","pb with plot_stat_map with MGZ T1 image"
"issue_closed","577","nilearn","nilearn","GaelVaroquaux","2015-05-11 09:24:43","","closed issue","pb with plot_stat_map with MGZ T1 image"
"issue_comment","577","nilearn","nilearn","agramfort","2015-05-08 20:43:31","if I convert the mgz to nii it works...
","",""
"issue_comment","577","nilearn","nilearn","GaelVaroquaux","2015-05-08 21:17:19","Fucked up format. Stop promoting / using it and help us push for pen standards rather than lone labs feeling powerful enough to invent new file formats. 

Sent from my phone. Please forgive brevity and mis spelling

On May 8, 2015, 22:40, at 22:40, Alexandre Gramfort notifications@github.com wrote:

> we use a plot_stat_map in MNE:
> 
> http://martinos.org/mne/dev/auto_examples/inverse/plot_lcmv_beamformer_volume.html#example-inverse-plot-lcmv-beamformer-volume-py
> 
> with the current master of nilearn it fails due to the dtype (int8) of
> the anat I make available at:
> 
> https://dl.dropboxusercontent.com/u/2140486/T1.mgz
> 
> error is:
> 
> ```
> /Users/alex/work/src/nibabel/nibabel/freesurfer/mghformat.pyc in
> set_data_dtype(self, datatype)
>    284             code = self._data_type_codes[datatype]
>    285         except KeyError:
> --> 286             raise MGHError('datatype dtype ""%s"" not recognized'
> % datatype)
>    287         self._header_data['type'] = code
>    288
> 
> MGHError: datatype dtype ""int8"" not recognized
> ```
> 
> any help?
> 
> ---
> 
> Reply to this email directly or view it on GitHub:
> https://github.com/nilearn/nilearn/issues/577
","",""
"issue_comment","577","nilearn","nilearn","eickenberg","2015-05-08 20:57:20","I cannot right now run the full mne example, but is this a nilearn or a nibabel thing in your opinion?

Loading the T1.mgz worked transparently with `nibabel.load`, which I assume it is expected to do. It gives me dtype `uint8` though, instead of `int8`, which is weird.
","",""
"issue_comment","577","nilearn","nilearn","dengemann","2015-05-08 21:29:55","... https://xkcd.com/927/

2015-05-08 23:17 GMT+02:00 Gael Varoquaux notifications@github.com:

> Fucked up format. Stop promoting / using it and help us push for pen
> standards rather than lone labs feeling powerful enough to invent new file
> formats.
> 
> Sent from my phone. Please forgive brevity and mis spelling
> 
> On May 8, 2015, 22:40, at 22:40, Alexandre Gramfort <
> notifications@github.com> wrote:
> 
> > we use a plot_stat_map in MNE:
> > 
> > http://martinos.org/mne/dev/auto_examples/inverse/plot_lcmv_beamformer_volume.html#example-inverse-plot-lcmv-beamformer-volume-py
> > 
> > with the current master of nilearn it fails due to the dtype (int8) of
> > the anat I make available at:
> > 
> > https://dl.dropboxusercontent.com/u/2140486/T1.mgz
> > 
> > error is:
> > 
> > ```
> > /Users/alex/work/src/nibabel/nibabel/freesurfer/mghformat.pyc in
> > set_data_dtype(self, datatype)
> > 284 code = self._data_type_codes[datatype]
> > 285 except KeyError:
> > --> 286 raise MGHError('datatype dtype ""%s"" not recognized'
> > % datatype)
> > 287 self._header_data['type'] = code
> > 288
> > 
> > MGHError: datatype dtype ""int8"" not recognized
> > ```
> > 
> > any help?
> > 
> > ---
> > 
> > Reply to this email directly or view it on GitHub:
> > https://github.com/nilearn/nilearn/issues/577
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/nilearn/nilearn/issues/577#issuecomment-100371538.
","",""
"issue_comment","577","nilearn","nilearn","eickenberg","2015-05-08 21:31:48","(With the difference that the proposed standards already exist)

On Fri, May 8, 2015 at 11:29 PM, Denis A. Engemann <notifications@github.com

> wrote:
> 
> ... https://xkcd.com/927/
> 
> 2015-05-08 23:17 GMT+02:00 Gael Varoquaux notifications@github.com:
> 
> > Fucked up format. Stop promoting / using it and help us push for pen
> > standards rather than lone labs feeling powerful enough to invent new
> > file
> > formats.
> > 
> > Sent from my phone. Please forgive brevity and mis spelling
> > 
> > On May 8, 2015, 22:40, at 22:40, Alexandre Gramfort <
> > notifications@github.com> wrote:
> > 
> > > we use a plot_stat_map in MNE:
> > 
> > http://martinos.org/mne/dev/auto_examples/inverse/plot_lcmv_beamformer_volume.html#example-inverse-plot-lcmv-beamformer-volume-py
> > 
> > > with the current master of nilearn it fails due to the dtype (int8) of
> > > the anat I make available at:
> > > 
> > > https://dl.dropboxusercontent.com/u/2140486/T1.mgz
> > > 
> > > error is:
> > > 
> > > ```
> > > /Users/alex/work/src/nibabel/nibabel/freesurfer/mghformat.pyc in
> > > set_data_dtype(self, datatype)
> > > 284 code = self._data_type_codes[datatype]
> > > 285 except KeyError:
> > > --> 286 raise MGHError('datatype dtype ""%s"" not recognized'
> > > % datatype)
> > > 287 self._header_data['type'] = code
> > > 288
> > > 
> > > MGHError: datatype dtype ""int8"" not recognized
> > > ```
> > > 
> > > any help?
> > > 
> > > ---
> > > 
> > > Reply to this email directly or view it on GitHub:
> > > https://github.com/nilearn/nilearn/issues/577
> > 
> > —
> > Reply to this email directly or view it on GitHub
> > https://github.com/nilearn/nilearn/issues/577#issuecomment-100371538.
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/nilearn/nilearn/issues/577#issuecomment-100373622.
","",""
"issue_comment","577","nilearn","nilearn","AlexandreAbraham","2015-05-08 21:41:41","> I cannot right now run the full mne example, but is this a nilearn or a nibabel thing in your opinion?

A bit of both, mainly nilearn's fault.

What happens is that data is loaded in `uint8` type and then some magic happens in the code and the data is converted to `int8` that is not supported by the data format.

IMHO, converting data implictly is utterly wrong.
","",""
"issue_comment","577","nilearn","nilearn","AlexandreAbraham","2015-05-08 21:51:22","OK. If the data is boolean, we convert it to int8. We do that because Nifti1Image does not handle bool. The problem is that MGH format does not handle int8, only uint8. I can't find an easy way to get accepted types for each format.
","",""
"issue_comment","577","nilearn","nilearn","eickenberg","2015-05-08 21:54:29","But Nifti1Image can also do uint8. What is the rationale behind using int8
and not uint8 for the bool conversion?

On Fri, May 8, 2015 at 11:51 PM, Alexandre Abraham <notifications@github.com

> wrote:
> 
> OK. If the data is boolean, we convert it to int8. We do that because
> Nifti1Image does not handle bool. The problem is that MGH format does not
> handle int8, only uint8. I can't find an easy way to get accepted types for
> each format.
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/nilearn/nilearn/issues/577#issuecomment-100377390.
","",""
"issue_comment","577","nilearn","nilearn","AlexandreAbraham","2015-05-08 21:56:28","One additional character!

We have to check if uint8 is accepted by all other formats.
","",""
"issue_comment","577","nilearn","nilearn","GaelVaroquaux","2015-05-08 22:38:57","No converting the data is not wrong : I've seen many bugs due to over and under flows when using the wrong type. 

Sent from my phone. Please forgive brevity and mis spelling

On May 8, 2015, 23:41, at 23:41, Alexandre Abraham notifications@github.com wrote:

> > I cannot right now run the full mne example, but is this a nilearn or
> > a nibabel thing in your opinion?
> 
> A bit of both, mainly nilearn's fault.
> 
> What happens is that data is loaded in `uint8` type and then some magic
> happens in the code and the data is converted to `int8` that is not
> supported by the data format.
> 
> In my mind, converting data implictly is utterly wrong.
> 
> ---
> 
> Reply to this email directly or view it on GitHub:
> https://github.com/nilearn/nilearn/issues/577#issuecomment-100375915
","",""
"issue_comment","577","nilearn","nilearn","GaelVaroquaux","2015-05-08 22:40:05","And readers: mricron, fslview and papaya souks be able to read uint8

Sent from my phone. Please forgive brevity and mis spelling

On May 8, 2015, 23:56, at 23:56, Alexandre Abraham notifications@github.com wrote:

> One additional character!
> 
> We have to check if uint8 is accepted by all other formats.
> 
> ---
> 
> Reply to this email directly or view it on GitHub:
> https://github.com/nilearn/nilearn/issues/577#issuecomment-100378384
","",""
"issue_comment","577","nilearn","nilearn","AlexandreAbraham","2015-05-08 23:13:11","So should we just convert to uint8 instead of int8?
","",""
"issue_comment","577","nilearn","nilearn","GaelVaroquaux","2015-05-09 09:08:22","First: I don't understand the problem: I cannot reproduce, calling plot_anat on the corresponding file.

Second, I am very worried about supporting mgz. I think that this is feature creep. Very few people use it, and if we try supporting it, I am afraid that it will be broken most often. Our docs clearly talk about 'niimg like', ie NiftiImage like, which mgz is.

I guess that my point of view on this problem is that we will accept a PR fixing it in a clean way, and if people join the dev team to support mgz files, its fine. But I don't feel like allocating our already sparse resources to it.
","",""
"issue_comment","577","nilearn","nilearn","eickenberg","2015-05-09 21:36:43","> So should we just convert to uint8 instead of int8?

What could potentially speak against this? (It makes sense from the point of view that `uint8` is in a certain sense a smallest increment in complexity wrt `bool`, but I don't know if there are practical implications that would be counterindications to this choice)
","",""
"issue_comment","577","nilearn","nilearn","GaelVaroquaux","2015-05-09 21:38:23","> ```
> So should we just convert to uint8 instead of int8?
> ```
> 
> What could potentially speak against this?

It's less often used (at least in the analyze / nifti world), thus we run
into more chances that a software does not recognize it.
","",""
