"rectype","issueid","project_owner","project_name","actor","time","text","action","title"
"issue_title","184","aio-libs","aioredis","popravich","2017-01-17 11:01:18","aioredis may stuck (pool especially) if Redis server is not responsive.

(don't know why nobody notice it is missing)","start issue","Add connect timeout"
"issue_closed","184","aio-libs","aioredis","popravich","2017-06-23 07:06:27","","closed issue","Add connect timeout"
"issue_comment","184","aio-libs","aioredis","popravich","2017-01-17 13:20:13","TODO:
* [ ] add connect timeout
* [ ] test with slow connection","",""
"issue_comment","184","aio-libs","aioredis","SeavantUUz","2017-04-27 12:25:02","I met some problem, but I could not support your suggestion. What I had seen, although redis server is fine, aioredis got stuck too.

In redis-py, why you could pass an optional argument to pool, is redis-py chose block queue as its pool's implement. The timeout argument actually is used to tell pool the queue had been empty for specific time. aioredis used deque as its pool's implement, so you can't pass a timeout.

Maybe you pointed in `socket_timeout` or `socket_keepalive` and so on ? I have added part of them into my project, and waiting for conclusion.
","",""
"issue_comment","184","aio-libs","aioredis","popravich","2017-04-28 07:59:42","What I mean is that aioredis can stuck for some time (probably long enough) when using pool,
basically, the call to `ConnectionsPool._create_new_connection()` need to have some timeout
otherwise it will block the whole pool.","",""
"issue_comment","184","aio-libs","aioredis","pfreixes","2017-05-01 07:16:18","We might be having this issue, I can work on a fix ASAP","",""
"issue_comment","184","aio-libs","aioredis","pfreixes","2017-05-12 14:19:36","This can be closed.","",""
