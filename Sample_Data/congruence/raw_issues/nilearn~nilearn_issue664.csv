"rectype","issueid","project_owner","project_name","actor","time","text","action","title"
"issue_title","664","nilearn","nilearn","amadeuskanaan","2015-07-14 14:24:02","takes care of #646 
","start issue","find_parcellation_cut_coords "
"pull_request_title","664","nilearn","nilearn","amadeuskanaan","2015-07-14 14:24:02","takes care of #646 
","14976af95dea4034755db8672e9e88f93328c849","find_parcellation_cut_coords "
"issue_comment","664","nilearn","nilearn","GaelVaroquaux","2015-07-14 15:08:10","# Add documentation

Add to doc/modules/reference.rst

Add a seealso in the plot_connectome docstring (see the docstring of np.std as an example).

Add to the narrative documentation where we introduce plot_connectome (in connectivity/functional_connectomes.rst)

# Tests (unit tests)

Add a test in plotting/tests/test_find_cuts.py that tests the behavior on synthetic data.
","",""
"issue_comment","664","nilearn","nilearn","GaelVaroquaux","2015-07-17 15:39:20","The situation with the PR is the following:

On a non lateralized atlas, the centers detected appear randomly on the left and the right. As these atlases are very common, this means that we need to (optionally) choose centers only in one hemisphere.

There are 3 cases:
1. A label only present in one hemisphere (lateralized region)
2. A label at the center
3. A label present in 2 different regions (as in the Yeo or HO atlas).

For a given label, here is the logic I propose (which should be optional, but turned on by default):

<pre>
1. Find the medial plane (requires inversing the affine and applying it to (0, 0, 0)
2. if the weight of the label is fully on one side, we are in case 1, just use the current code
3. elif the largest CC is on both sides, we are on case 2, just use the current code
4. else take the largest CC on one hemisphere (left by default, but user-settable).
</pre>
","",""
"issue_comment","664","nilearn","nilearn","amadeuskanaan","2015-07-14 17:17:38","see added background label param and out of loop coord transform 
","",""
"issue_comment","664","nilearn","nilearn","lesteve","2015-07-27 08:19:42","You need to rebase on master and fix the merge conflicts on this one. @amadeuskanaan do give us a shout if you need some help.

> The PR looks mostly good. The CircleCI failure does not seem to be related to this PR...

Yeah this is an old CircleCI failure that has been fixed during the sprint in master. I guess what happened is that this PR branch was branched off master before the fix.
","",""
"issue_comment","664","nilearn","nilearn","amadeuskanaan","2015-07-16 08:14:46","Documentation added, though still need to add link to example in connectivity/functional_connectomes.rst. 
","",""
"issue_comment","664","nilearn","nilearn","amadeuskanaan","2015-07-16 14:59:16","tests added 
","",""
"issue_comment","664","nilearn","nilearn","amadeuskanaan","2015-07-27 08:36:15","a bit backed up with time sensitive stuff at the moment.. will get into again this week and ping again in a few days.
","",""
"issue_comment","664","nilearn","nilearn","codecov[bot]","2017-11-23 14:02:38","# [Codecov](https://codecov.io/gh/nilearn/nilearn/pull/664?src=pr&el=h1) Report
> :exclamation: No coverage uploaded for pull request base (`master@728ce39`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/nilearn/nilearn/pull/664/graphs/tree.svg?height=150&width=650&token=KpYArSdyXv&src=pr)](https://codecov.io/gh/nilearn/nilearn/pull/664?src=pr&el=tree)

```diff
@@            Coverage Diff            @@
##             master     #664   +/-   ##
=========================================
  Coverage          ?   94.44%           
=========================================
  Files             ?      125           
  Lines             ?    15420           
  Branches          ?        0           
=========================================
  Hits              ?    14563           
  Misses            ?      857           
  Partials          ?        0
```


| [Impacted Files](https://codecov.io/gh/nilearn/nilearn/pull/664?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [nilearn/decoding/tests/test\_searchlight.py](https://codecov.io/gh/nilearn/nilearn/pull/664?src=pr&el=tree#diff-bmlsZWFybi9kZWNvZGluZy90ZXN0cy90ZXN0X3NlYXJjaGxpZ2h0LnB5) | `100% <ø> (ø)` | |
| [nilearn/decomposition/canica.py](https://codecov.io/gh/nilearn/nilearn/pull/664?src=pr&el=tree#diff-bmlsZWFybi9kZWNvbXBvc2l0aW9uL2NhbmljYS5weQ==) | `95% <ø> (ø)` | |
| [nilearn/input\_data/nifti\_maps\_masker.py](https://codecov.io/gh/nilearn/nilearn/pull/664?src=pr&el=tree#diff-bmlsZWFybi9pbnB1dF9kYXRhL25pZnRpX21hcHNfbWFza2VyLnB5) | `96.36% <ø> (ø)` | |
| [nilearn/\_utils/fixes/matplotlib\_backports.py](https://codecov.io/gh/nilearn/nilearn/pull/664?src=pr&el=tree#diff-bmlsZWFybi9fdXRpbHMvZml4ZXMvbWF0cGxvdGxpYl9iYWNrcG9ydHMucHk=) | `100% <ø> (ø)` | |
| [nilearn/input\_data/\_\_init\_\_.py](https://codecov.io/gh/nilearn/nilearn/pull/664?src=pr&el=tree#diff-bmlsZWFybi9pbnB1dF9kYXRhL19faW5pdF9fLnB5) | `100% <ø> (ø)` | |
| [nilearn/connectome/tests/test\_group\_sparse\_cov.py](https://codecov.io/gh/nilearn/nilearn/pull/664?src=pr&el=tree#diff-bmlsZWFybi9jb25uZWN0b21lL3Rlc3RzL3Rlc3RfZ3JvdXBfc3BhcnNlX2Nvdi5weQ==) | `100% <ø> (ø)` | |
| [nilearn/decomposition/dict\_learning.py](https://codecov.io/gh/nilearn/nilearn/pull/664?src=pr&el=tree#diff-bmlsZWFybi9kZWNvbXBvc2l0aW9uL2RpY3RfbGVhcm5pbmcucHk=) | `94.44% <ø> (ø)` | |
| [nilearn/\_utils/niimg.py](https://codecov.io/gh/nilearn/nilearn/pull/664?src=pr&el=tree#diff-bmlsZWFybi9fdXRpbHMvbmlpbWcucHk=) | `98.3% <ø> (ø)` | |
| [nilearn/\_utils/testing.py](https://codecov.io/gh/nilearn/nilearn/pull/664?src=pr&el=tree#diff-bmlsZWFybi9fdXRpbHMvdGVzdGluZy5weQ==) | `84.36% <ø> (ø)` | |
| [nilearn/input\_data/masker\_validation.py](https://codecov.io/gh/nilearn/nilearn/pull/664?src=pr&el=tree#diff-bmlsZWFybi9pbnB1dF9kYXRhL21hc2tlcl92YWxpZGF0aW9uLnB5) | `100% <ø> (ø)` | |
| ... and [77 more](https://codecov.io/gh/nilearn/nilearn/pull/664?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/nilearn/nilearn/pull/664?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/nilearn/nilearn/pull/664?src=pr&el=footer). Last update [728ce39...14976af](https://codecov.io/gh/nilearn/nilearn/pull/664?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
","",""
"pull_request_commit_comment","664","nilearn","nilearn","GaelVaroquaux","2015-07-14 14:32:22","Remove empty line
","14976af95dea4034755db8672e9e88f93328c849","(None, '', u'nilearn/plotting/find_cuts.py')"
"pull_request_commit_comment","664","nilearn","nilearn","GaelVaroquaux","2015-07-14 14:40:45","We should probably add a way to specify the background label (use the same name for the argument as in NiftiLabelsMasker)
","14976af95dea4034755db8672e9e88f93328c849","(None, '', u'nilearn/plotting/find_cuts.py')"
"pull_request_commit_comment","664","nilearn","nilearn","GaelVaroquaux","2015-07-14 14:41:14","This should be replaced by relying on the parameter that specifies the background label.
","14976af95dea4034755db8672e9e88f93328c849","(None, '', u'nilearn/plotting/find_cuts.py')"
"pull_request_commit_comment","664","nilearn","nilearn","GaelVaroquaux","2015-07-14 14:44:28","You'll need to align tabulations (here and below).
","14976af95dea4034755db8672e9e88f93328c849","(None, '', u'nilearn/plotting/find_cuts.py')"
"pull_request_commit_comment","664","nilearn","nilearn","GaelVaroquaux","2015-07-14 14:44:58","Can you do the coord_transform at the end of the for loop.
","14976af95dea4034755db8672e9e88f93328c849","(None, '', u'nilearn/plotting/find_cuts.py')"
"pull_request_commit_comment","664","nilearn","nilearn","AlexandreAbraham","2015-07-15 00:23:53","I don't see the utility of the code here.
","14976af95dea4034755db8672e9e88f93328c849","(None, '', u'nilearn/plotting/find_cuts.py')"
"pull_request_commit_comment","664","nilearn","nilearn","AlexandreAbraham","2015-07-15 00:24:56","Comment outdated
","14976af95dea4034755db8672e9e88f93328c849","(None, '', u'nilearn/plotting/find_cuts.py')"
"pull_request_commit_comment","664","nilearn","nilearn","AlexandreAbraham","2015-07-15 00:25:14","This is highly redundant with the lines above.
","14976af95dea4034755db8672e9e88f93328c849","(None, '', u'nilearn/plotting/find_cuts.py')"
"pull_request_commit_comment","664","nilearn","nilearn","AlexandreAbraham","2015-07-15 00:25:36","You can apply coord_transform in the for loop.
","14976af95dea4034755db8672e9e88f93328c849","(None, '', u'nilearn/plotting/find_cuts.py')"
"pull_request_commit_comment","664","nilearn","nilearn","banilo","2015-07-16 09:49:29","wipe empty line
","14976af95dea4034755db8672e9e88f93328c849","(None, '', u'nilearn/plotting/find_cuts.py')"
"pull_request_commit_comment","664","nilearn","nilearn","banilo","2015-07-16 09:50:55","add notion that one region = one integer
","14976af95dea4034755db8672e9e88f93328c849","(None, '', u'nilearn/plotting/find_cuts.py')"
"pull_request_commit_comment","664","nilearn","nilearn","banilo","2015-07-16 09:51:09","...and that it can also be only a single target region in the 3d
","14976af95dea4034755db8672e9e88f93328c849","(None, '', u'nilearn/plotting/find_cuts.py')"
"pull_request_commit_comment","664","nilearn","nilearn","banilo","2015-07-16 09:51:55","in mm/cm?
","14976af95dea4034755db8672e9e88f93328c849","(None, '', u'nilearn/plotting/find_cuts.py')"
"pull_request_commit_comment","664","nilearn","nilearn","banilo","2015-07-16 09:53:25","LabelS

can me more than one
","14976af95dea4034755db8672e9e88f93328c849","(None, '', u'nilearn/plotting/find_cuts.py')"
"pull_request_commit_comment","664","nilearn","nilearn","banilo","2015-07-16 09:54:29","docstring said it would ne 2 lists
","14976af95dea4034755db8672e9e88f93328c849","(None, '', u'nilearn/plotting/find_cuts.py')"
"pull_request_commit_comment","664","nilearn","nilearn","banilo","2015-07-16 09:54:40","PEP8
","14976af95dea4034755db8672e9e88f93328c849","(None, '', u'nilearn/plotting/find_cuts.py')"
"pull_request_commit_comment","664","nilearn","nilearn","banilo","2015-07-16 09:55:46","makes no sense
","14976af95dea4034755db8672e9e88f93328c849","(None, '', u'nilearn/plotting/find_cuts.py')"
"pull_request_commit_comment","664","nilearn","nilearn","banilo","2015-07-16 09:56:21","not used anywhere
","14976af95dea4034755db8672e9e88f93328c849","(None, '', u'nilearn/plotting/find_cuts.py')"
"pull_request_commit_comment","664","nilearn","nilearn","banilo","2015-07-16 09:56:54","typo + difference from above not clear
","14976af95dea4034755db8672e9e88f93328c849","(None, '', u'nilearn/plotting/find_cuts.py')"
"pull_request_commit_comment","664","nilearn","nilearn","bthirion","2015-07-16 10:04:14","As a side not, I'd use:
_, _, _, label_count = np.unique(labels, return_counts=True)

## oops, this is numpy 1.9.0 is it supported ?
","14976af95dea4034755db8672e9e88f93328c849","(None, '', u'nilearn/plotting/find_cuts.py')"
"pull_request_commit_comment","664","nilearn","nilearn","GaelVaroquaux","2015-07-16 11:05:50","Here, I would rather have a bullet-point list with very short formulation: something like:
- For hard parcellation atlases: use ... 
- For probabiliistic atlases, use ...
","14976af95dea4034755db8672e9e88f93328c849","(None, '', u'doc/connectivity/functional_connectomes.rst')"
"pull_request_commit_comment","664","nilearn","nilearn","GaelVaroquaux","2015-07-16 11:07:55","Let's stay with bincount, which works on old numpy versions.
","14976af95dea4034755db8672e9e88f93328c849","(None, '', u'nilearn/plotting/find_cuts.py')"
"pull_request_commit_comment","664","nilearn","nilearn","GaelVaroquaux","2015-07-16 11:08:33","Indeed, it should happen before the bincount.
","14976af95dea4034755db8672e9e88f93328c849","(None, '', u'nilearn/plotting/find_cuts.py')"
"pull_request_commit_comment","664","nilearn","nilearn","GaelVaroquaux","2015-07-16 11:11:15","This code is not pep8. You need spaces after comas (also present in other parts of the docs).

You should integrate a pep8 checker to your editor.
","14976af95dea4034755db8672e9e88f93328c849","(None, '', u'nilearn/plotting/find_cuts.py')"
"pull_request_commit_comment","664","nilearn","nilearn","GaelVaroquaux","2015-07-16 11:12:46","Thinking about it, I would really make returning the label list optional and not returned by default (and as a consequence move it to a second return argument).

The reason being that to simply plot things in a plot_connectome, after using a NiftiLabelsMakser, people don't need that. And that's going to the 90% usecase.
","14976af95dea4034755db8672e9e88f93328c849","(None, '', u'nilearn/plotting/find_cuts.py')"
"pull_request_commit_comment","664","nilearn","nilearn","GaelVaroquaux","2015-07-16 11:13:20","I would convert that to an array.
","14976af95dea4034755db8672e9e88f93328c849","(None, '', u'nilearn/plotting/find_cuts.py')"
"pull_request_commit_comment","664","nilearn","nilearn","GaelVaroquaux","2015-07-16 11:13:35","I would say here that it's an array of shape (3, n_maps)
","14976af95dea4034755db8672e9e88f93328c849","(None, '', u'nilearn/plotting/find_cuts.py')"
"pull_request_commit_comment","664","nilearn","nilearn","GaelVaroquaux","2015-07-16 11:16:07","PEP8. You are missing a white space.
","14976af95dea4034755db8672e9e88f93328c849","(None, '', u'nilearn/plotting/tests/test_find_cuts.py')"
"pull_request_commit_comment","664","nilearn","nilearn","GaelVaroquaux","2015-07-16 11:16:56","Rather than ""Grab"", I would use ""Return""
","14976af95dea4034755db8672e9e88f93328c849","(None, '', u'nilearn/plotting/find_cuts.py')"
"pull_request_commit_comment","664","nilearn","nilearn","GaelVaroquaux","2015-07-16 11:17:21","I would call this function ""find_parcellation_cut_coords"" (ie: no atlas)
","14976af95dea4034755db8672e9e88f93328c849","(None, '', u'nilearn/plotting/find_cuts.py')"
"pull_request_commit_comment","664","nilearn","nilearn","amadeuskanaan","2015-07-16 12:07:22","done
","14976af95dea4034755db8672e9e88f93328c849","(None, '', u'nilearn/plotting/find_cuts.py')"
"pull_request_commit_comment","664","nilearn","nilearn","amadeuskanaan","2015-07-16 12:07:25","done.. 
","14976af95dea4034755db8672e9e88f93328c849","(None, '', u'nilearn/plotting/find_cuts.py')"
"pull_request_commit_comment","664","nilearn","nilearn","amadeuskanaan","2015-07-16 12:07:31","mm
","14976af95dea4034755db8672e9e88f93328c849","(None, '', u'nilearn/plotting/find_cuts.py')"
"pull_request_commit_comment","664","nilearn","nilearn","banilo","2015-07-16 12:09:49","You could add that in the description here
","14976af95dea4034755db8672e9e88f93328c849","(None, '', u'nilearn/plotting/find_cuts.py')"
"pull_request_commit_comment","664","nilearn","nilearn","amadeuskanaan","2015-07-16 12:11:26","coming with next commit.
","14976af95dea4034755db8672e9e88f93328c849","(None, '', u'nilearn/plotting/find_cuts.py')"
"pull_request_commit_comment","664","nilearn","nilearn","amadeuskanaan","2015-07-16 12:12:10","done
","14976af95dea4034755db8672e9e88f93328c849","(None, '', u'nilearn/plotting/find_cuts.py')"
"pull_request_commit_comment","664","nilearn","nilearn","amadeuskanaan","2015-07-16 12:12:19","okay. 
","14976af95dea4034755db8672e9e88f93328c849","(None, '', u'nilearn/plotting/find_cuts.py')"
"pull_request_commit_comment","664","nilearn","nilearn","amadeuskanaan","2015-07-16 12:14:10","i have pep8...will turn automatic formatting on.
","14976af95dea4034755db8672e9e88f93328c849","(None, '', u'nilearn/plotting/tests/test_find_cuts.py')"
"pull_request_commit_comment","664","nilearn","nilearn","amadeuskanaan","2015-07-16 12:14:16","done
","14976af95dea4034755db8672e9e88f93328c849","(None, '', u'nilearn/plotting/find_cuts.py')"
"pull_request_commit_comment","664","nilearn","nilearn","amadeuskanaan","2015-07-16 12:15:03","i guess same goes for the other one ---> 'find_probabilistic_cut_coords'.
","14976af95dea4034755db8672e9e88f93328c849","(None, '', u'nilearn/plotting/find_cuts.py')"
"pull_request_commit_comment","664","nilearn","nilearn","GaelVaroquaux","2015-07-16 12:16:34","> > +def find_parcellation_atlas_cut_coords(labels_img, background_label=0):
> 
> i guess same goes for the other one ---> 'find_probabilistic_cut_coords'.

No: it 'a parcellation', and a 'probabilistic atlas'
","14976af95dea4034755db8672e9e88f93328c849","(None, '', u'nilearn/plotting/find_cuts.py')"
"pull_request_commit_comment","664","nilearn","nilearn","amadeuskanaan","2015-07-16 12:38:56","noted.....
","14976af95dea4034755db8672e9e88f93328c849","(None, '', u'nilearn/plotting/find_cuts.py')"
"pull_request_commit_comment","664","nilearn","nilearn","amadeuskanaan","2015-07-16 12:43:49","done. with next commit. 
","14976af95dea4034755db8672e9e88f93328c849","(None, '', u'nilearn/plotting/find_cuts.py')"
"pull_request_commit_comment","664","nilearn","nilearn","amadeuskanaan","2015-07-16 12:44:56","typo. u got me. 
this func is to extract coords from 4d vols with fuzzy maps in each 3d (eg. msdl)
","14976af95dea4034755db8672e9e88f93328c849","(None, '', u'nilearn/plotting/find_cuts.py')"
"pull_request_commit_comment","664","nilearn","nilearn","amadeuskanaan","2015-07-16 12:45:05","added. 
","14976af95dea4034755db8672e9e88f93328c849","(None, '', u'doc/connectivity/functional_connectomes.rst')"
"pull_request_commit_comment","664","nilearn","nilearn","GaelVaroquaux","2015-07-16 16:11:31","The indentation of this line is wrong (same thing below): it needs to be indented with the same indentation as the 'F' of the 'For' above.
","14976af95dea4034755db8672e9e88f93328c849","(None, '', u'doc/connectivity/functional_connectomes.rst')"
"pull_request_commit_comment","664","nilearn","nilearn","amadeuskanaan","2015-07-16 16:16:43","done
","14976af95dea4034755db8672e9e88f93328c849","(None, '', u'doc/connectivity/functional_connectomes.rst')"
"pull_request_commit_comment","664","nilearn","nilearn","AlexandreAbraham","2015-07-17 14:52:01","MSDL is an example of probabilistic atlas.
","14976af95dea4034755db8672e9e88f93328c849","(13, '', u'doc/connectivity/functional_connectomes.rst')"
"pull_request_commit_comment","664","nilearn","nilearn","AlexandreAbraham","2015-07-17 14:53:44","PEP8
","14976af95dea4034755db8672e9e88f93328c849","(None, '', u'nilearn/plotting/find_cuts.py')"
"pull_request_commit_comment","664","nilearn","nilearn","AlexandreAbraham","2015-07-17 14:54:10","PEP8
","14976af95dea4034755db8672e9e88f93328c849","(None, '', u'nilearn/plotting/find_cuts.py')"
"pull_request_commit_comment","664","nilearn","nilearn","bthirion","2015-07-24 20:40:45","You use relatively large numbers. hlaving them or even dividing by 4 or 5 would save time.
","14976af95dea4034755db8672e9e88f93328c849","(17, '', u'nilearn/plotting/tests/test_find_cuts.py')"
"pull_request_commit_comment","664","nilearn","nilearn","bthirion","2015-07-24 20:42:25","Same comment here
","14976af95dea4034755db8672e9e88f93328c849","(55, '', u'nilearn/plotting/tests/test_find_cuts.py')"
"pull_request_commit","664","nilearn","nilearn","juhuntenburg","2015-07-13 16:54:37","adding example using destrieux atlas","3ed718f703f6dca8f6dbc097ee5d90514a813ad6",""
"pull_request_commit","664","nilearn","nilearn","juhuntenburg","2015-07-14 09:25:48","simplifying code, reducing subjects","04aebd7cabcc34f43199cc4b2c79c348f929ffb9",""
"pull_request_commit","664","nilearn","nilearn","amadeus.kanan@gmail.com","2015-07-14 09:46:49","added get_parcellation_coordinates function","1b8bfe813acf01cc0f09507aa26fa17b17dcba6e",""
"pull_request_commit","664","nilearn","nilearn","amadeus.kanan@gmail.com","2015-07-14 13:53:08","fixed to return dictionary with label regions and coords","9aa3f7132cb9d688fb015700a055e36769441b9b",""
"pull_request_commit","664","nilearn","nilearn","amadeus.kanan@gmail.com","2015-07-14 14:19:01","return labels and coords as separate lists","852776628ec09ff56fd30cb433c3a3eb0f56640e",""
"pull_request_commit","664","nilearn","nilearn","amadeus.kanan@gmail.com","2015-07-14 17:15:11","added background_label parameter and now transforming coords out of loop","c2a538a75e7bc1f5c1043bc48fdac59bf4e48c3d",""
"pull_request_commit","664","nilearn","nilearn","juhuntenburg","2015-07-15 08:56:59","improving descriptions","a0e99e161a2d4f4070a56afe22b9bf391fe8cecb",""
"pull_request_commit","664","nilearn","nilearn","amadeus.kanan@gmail.com","2015-07-15 12:32:31","referenced functions for prob and parcel atlas cut_coords","85f65743f6ea2c8152cfe9ae1deac1b257122640",""
"pull_request_commit","664","nilearn","nilearn","amadeus.kanan@gmail.com","2015-07-16 07:45:41","added find atlas cut_coords narrative","e141166a301e47a86eff940eba52d48abb78f5e6",""
"pull_request_commit","664","nilearn","nilearn","amadeus.kanan@gmail.com","2015-07-16 07:48:06","added find atlas cut_coords see also","38dfa8427b1e3c5d2616f52050dcbfd68bd80d67",""
"pull_request_commit","664","nilearn","nilearn","amadeus.kanan@gmail.com","2015-07-16 08:02:32","find atlas cut_coords to init","96c89a0c50cf71f3d68f757fba2554cbdf80459f",""
"pull_request_commit","664","nilearn","nilearn","amadeus.kanan@gmail.com","2015-07-16 08:07:47","removed redundancies, takes largest connect component","2916eb63f6861eedb3e23b8b0910e455334b0429",""
"pull_request_commit","664","nilearn","nilearn","amadeus.kanan@gmail.com","2015-07-16 13:30:34","renamed parcellation func","d5e0d6d3e7bfed6da14f96949a15daad89117a06",""
"pull_request_commit","664","nilearn","nilearn","amadeus.kanan@gmail.com","2015-07-16 13:31:31","simplified narrative with bullets","5be617d43d2030486b9e6ebca4ab32d126957120",""
"pull_request_commit","664","nilearn","nilearn","amadeus.kanan@gmail.com","2015-07-16 13:33:37","coord grab fixed to go with new label_return param","6e0d6ad21a12867dfc9c9b0816c4cbfeebca96f5",""
"pull_request_commit","664","nilearn","nilearn","amadeus.kanan@gmail.com","2015-07-16 13:35:10","seealso fix","a1efb095fddc25da1d5f4864937c09869120e852",""
"pull_request_commit","664","nilearn","nilearn","amadeus.kanan@gmail.com","2015-07-16 14:10:53","return_label_names param, renamed func,  label_count corrected, pep8","4a573d21078bff8bdce37b6ddd94680a63c20761",""
"pull_request_commit","664","nilearn","nilearn","amadeus.kanan@gmail.com","2015-07-16 14:30:15","Merge branch 'master' into get_prob_coords
x

Conflicts:
	nilearn/plotting/__init__.py
	nilearn/plotting/find_cuts.py","76dc34de93f1b0370ab198c56c629c36add41fd2",""
"pull_request_commit","664","nilearn","nilearn","amadeus.kanan@gmail.com","2015-07-16 14:35:05","docstring","db791081960d9b5e45327c08e1b57809495ac6fe",""
"pull_request_commit","664","nilearn","nilearn","amadeus.kanan@gmail.com","2015-07-16 14:57:30","tests for find_probabolistic_atlas_cut_coords","69153cbe90649930473559a73e686655b72634f0",""
"pull_request_commit","664","nilearn","nilearn","amadeus.kanan@gmail.com","2015-07-16 16:16:19","indent","2a47afd126645809f3f80e70bae03aee2b2ce689",""
"pull_request_commit","664","nilearn","nilearn","amadeus.kanan@gmail.com","2015-07-17 10:13:37","fixes bug in taking largest component and check image, tests amened and passed","999b16e5cb31d3aeb47e242bb528e0402a571d7e",""
"pull_request_commit","664","nilearn","nilearn","amadeus.kanan@gmail.com","2015-07-17 10:19:27","Merge remote-tracking branch 'julia/enh/destrieux_example' into get_prob_coords

Merge examples","a1b4fc5381136085cc99b22008cc620670f999a0",""
"pull_request_commit","664","nilearn","nilearn","amadeus.kanan@gmail.com","2015-07-17 12:51:50","plots connectomes instead of mats with computed parcel cut coords","4a95b0b929d0b692280675bf0c557a421b8d6efb",""
"pull_request_commit","664","nilearn","nilearn","amadeus.kanan@gmail.com","2015-07-17 15:32:30","pep8","c50db4dd05132a6b7117af37aff2b06600a142ae",""
"pull_request_commit","664","nilearn","nilearn","AlexandreAbraham","2015-05-13 08:34:27","Mask func_memory_level mandatory. Fix cache logic.","5a8f6e971a701045a11d75c5fdbeef1ae1fc086c",""
"pull_request_commit","664","nilearn","nilearn","AlexandreAbraham","2015-05-13 08:40:30","Add cache tests","ab9760cd5f23cf4ab53b539c964a0d4c668a7a25",""
"pull_request_commit","664","nilearn","nilearn","AlexandreAbraham","2015-05-13 08:49:02","Add tests.","f60fb2956136626f0dfbbc4d135ff14f3fb8e944",""
"pull_request_commit","664","nilearn","nilearn","AlexandreAbraham","2015-05-23 22:26:00","Address comments","3f2ffe1ef117a4619134ae9e3321a152a12dbeab",""
"pull_request_commit","664","nilearn","nilearn","AlexandreAbraham","2015-05-24 06:57:10","Fix P3 compat.","7bd0b985e855a2eecc5b4c6f2f4caf74284120ce",""
"pull_request_commit","664","nilearn","nilearn","AlexandreAbraham","2015-06-09 09:17:27","Fix typo","8b941b435f90cda930ec435fc0f3f367e537bf4b",""
"pull_request_commit","664","nilearn","nilearn","AlexandreAbraham","2015-06-09 11:32:36","Fix missing parameter names.","fb180cfc457a39a4d00675fa493c6962daa6a2db",""
"pull_request_commit","664","nilearn","nilearn","AlexandreAbraham","2015-06-09 11:35:10","Better parameter check.","5aef645251d52de0d10adb0934095355885d7f77",""
"pull_request_commit","664","nilearn","nilearn","AlexandreAbraham","2015-06-12 11:58:53","Fix docstrings","7c7e9cfaad7ae9e9935504445e45b070b0df35e9",""
"pull_request_commit","664","nilearn","nilearn","AlexandreAbraham","2015-06-23 08:50:56","Activate level 1 caching for maps masker","4af6a982244d05b268e9ed905bae0a4b671426d0",""
"pull_request_commit","664","nilearn","nilearn","AlexandreAbraham","2015-06-23 09:12:00","Do things","db0bbea5a275e32b9e3646ca78929b4bc2c6090f",""
"pull_request_commit","664","nilearn","nilearn","AlexandreAbraham","2015-06-23 11:09:46","Handle the `target_resampling=None` handling","0e0bbee48e45a3c8f5cc9dc44575e6a3095a05a0",""
"pull_request_commit","664","nilearn","nilearn","AlexandreAbraham","2015-06-23 11:45:04","Forgotten file in commit","b32e6d3e8b9282b9c53ff15db92fc065c57cb135",""
"pull_request_commit","664","nilearn","nilearn","AlexandreAbraham","2015-06-23 12:01:03","Fix tests","3a72a2a28143c040370da98d57b8e314b182c18e",""
"pull_request_commit","664","nilearn","nilearn","AlexandreAbraham","2015-06-23 14:22:05","Add tests","9492e911d828fb084294928a60bb357f3006874f",""
"pull_request_commit","664","nilearn","nilearn","AlexandreAbraham","2015-06-24 09:17:29","Add forgotten ignored parameters","4c887ce14f696c94e3f8e8498d814bb728834432",""
"pull_request_commit","664","nilearn","nilearn","AlexandreAbraham","2015-06-24 09:28:25","Fix comments","28709b3550207f2df9b55ebf07e0b39210229342",""
"pull_request_commit","664","nilearn","nilearn","banilo","2015-06-22 17:40:57","doccheck 2: preparation","090add8e5412311b50560095eed2c6394c83cd34",""
"pull_request_commit","664","nilearn","nilearn","banilo","2015-06-24 14:03:20","doccheck 2: fixes","74295ed0f8b4c875cb3095549ed6d3307f28fb6a",""
"pull_request_commit","664","nilearn","nilearn","lesteve","2015-06-29 14:16:49","Add test for threshold plotting bug with uint8 data","87e91c8f7853469200a8d01c6f38bcdbf6945429",""
"pull_request_commit","664","nilearn","nilearn","AlexandreAbraham","2015-06-30 13:32:50","Make tests Py3 compliant","09b855e8d7ba0bcae0a22b60d787549957d9ea06",""
"pull_request_commit","664","nilearn","nilearn","AlexandreAbraham","2015-06-30 14:02:53","Merge check_same_fov and assert_same_fov","78f3eb391f88b8f01198eff0251cc5fd4ecc3143",""
"pull_request_commit","664","nilearn","nilearn","AlexandreAbraham","2015-06-30 14:12:04","Fix tests","3ac370211b41fff5ea2976fc2f9fa8c58a863156",""
"pull_request_commit","664","nilearn","nilearn","AlexandreAbraham","2015-06-30 15:29:52","Fix tests","e86ed2a1917d970c570b9b66ce37252517f9d7ac",""
"pull_request_commit","664","nilearn","nilearn","arthurmensch","2015-06-30 16:53:14","Fixed bug in intersect_mask","65ece83c62c1432967c9b1a7b3ee73a9836ceea7",""
"pull_request_commit","664","nilearn","nilearn","AlexandreAbraham","2015-07-02 11:15:33","Fix tests","a1fe2422f6fcc866ed032ab9e372b804ff69186d",""
"pull_request_commit","664","nilearn","nilearn","AlexandreAbraham","2015-07-02 11:52:35","Fix backward compat","c65294225c70ea3676c32b25d1def43e0694bdd0",""
"pull_request_commit","664","nilearn","nilearn","AlexandreAbraham","2015-07-02 13:17:41","Address comments","347cedae62838d2602717268cb02c6680bd883c5",""
"pull_request_commit","664","nilearn","nilearn","arthurmensch","2015-07-03 09:35:59","Added non regression test","3481b963f220338e6577fe1a4286a080f3d348d7",""
"pull_request_commit","664","nilearn","nilearn","mih","2015-07-13 09:40:54","Fix path specification in LICENSE","0dc2641056d3131d7e7de2530e17e08e9a1f05ff",""
"pull_request_commit","664","nilearn","nilearn","AlexandreAbraham","2015-07-13 10:03:59","Change dtytpe of the data when loading them for plotting","221124330fb15d0c5de826ae198decefa3c9f22b",""
"pull_request_commit","664","nilearn","nilearn","AlexandreAbraham","2015-07-13 10:21:19","Better docstring for `_check_same_fov`.","4bbd444c06195fe16cb20aa0a7a1e800a0f00cf3",""
"pull_request_commit","664","nilearn","nilearn","AlexandreAbraham","2015-07-13 10:26:40","Put explicit keywork arg for `_cache`","60427a7d7b9891cca0b10f66504c00be3ce035f3",""
"pull_request_commit","664","nilearn","nilearn","AlexandreAbraham","2015-07-13 10:28:14","Fix typo","de827569698643d490b327ccc371b45e763d04b2",""
"pull_request_commit","664","nilearn","nilearn","AlexandreAbraham","2015-07-13 12:18:15","Put `func_memory_level=1` as default","656250a4e3a15cb22b3b7c42029d23f63209ab6f",""
"pull_request_commit","664","nilearn","nilearn","AlexandreAbraham","2015-07-13 12:39:25","Use dtype.kind instead of dtype.type","c8a5a41988de4070b86bf4f53510ca202845cca6",""
"pull_request_commit","664","nilearn","nilearn","AlexandreAbraham","2015-07-13 12:59:47","Add docstring for dtype","bf55896bc21fdc5c36d00392ef6aaa0b9193aa50",""
"pull_request_commit","664","nilearn","nilearn","GaelVaroquaux","2015-07-13 13:38:43","MAINT: add license info for sphinx-gallery","783c835119f624c7f6b2636d8067849f0295fb7e",""
"pull_request_commit","664","nilearn","nilearn","mih","2015-07-13 14:20:35","Cleanup sphinxext licence summary","6d7a97aa13ea506bb1776c077e0532f66788f452",""
"pull_request_commit","664","nilearn","nilearn","GaelVaroquaux","2015-07-13 14:25:46","MAINT: remove unused import","e2a7327c8a1d9f95812444aab3a4911664091cf7",""
"pull_request_commit","664","nilearn","nilearn","GaelVaroquaux","2015-07-13 14:51:24","BUG: fix failure in ""python -m nose""

We were implicitely relying on the top level stack level being an
anonymous module. This wasn't the case in the debian build environment,
that relies on ""python -m nose""","8d1b79c034e645d0cdd111fa89204069c0fb0892",""
"pull_request_commit","664","nilearn","nilearn","AlexandreAbraham","2015-07-13 15:05:39","Fix dtype type","f273262929cda049547b83c5e3c88c37b1e44b91",""
"pull_request_commit","664","nilearn","nilearn","GaelVaroquaux","2015-07-13 16:35:47","DOC: add NiftiSphereMasker to reference docs","e093f8743dca2f25bf130b84c186d79119c928c1",""
"pull_request_commit","664","nilearn","nilearn","GaelVaroquaux","2015-07-13 16:38:54","DOC: add forgotten file","f79c6c4df3e4d7dcf2c35cda41168cf495b181aa",""
"pull_request_commit","664","nilearn","nilearn","GaelVaroquaux","2015-07-13 16:43:03","REL: Release 0.1.4","1e827da2db27b9264627668ce3f06d2eff2c3e35",""
"pull_request_commit","664","nilearn","nilearn","GaelVaroquaux","2015-07-13 16:50:27","MAINT: make wheels universal by default","4e4876da1c56be9f0ebb2fc11ccab3af73f712a3",""
"pull_request_commit","664","nilearn","nilearn","GaelVaroquaux","2015-07-13 16:51:53","MAINT: we support Py3","43fe4e627d86ccf9aec443d96504d117170ef9c6",""
"pull_request_commit","664","nilearn","nilearn","mih","2015-07-13 17:27:23","Generalize example README to cover package-based installations","97af7b341ecb7ef431c5871a345f830a10ea6b4e",""
"pull_request_commit","664","nilearn","nilearn","GaelVaroquaux","2015-07-13 17:28:37","BUG: filenames in label masker were not working","4261bd48288f334f45c38b10483dfcdd030a38b8",""
"pull_request_commit","664","nilearn","nilearn","GaelVaroquaux","2015-07-13 20:41:18","DOC: Many forgotten entries in the reference","219fafd8ec6d9bed745924ebee6fc8912a7a4b11",""
"pull_request_commit","664","nilearn","nilearn","GaelVaroquaux","2015-07-13 21:27:36","REL: 0.1.4.1post1 Post-relase tag:

forgotten a couple of bug fixes","411a2b9aff84179ee27901c0b88f4b4ab90c7583",""
"pull_request_commit","664","nilearn","nilearn","GaelVaroquaux","2015-07-14 09:48:12","MISC: remove unused variable

Use pyflakes, people :)","22daee34d4b33037d938e7f52cb505fdb3eaf093",""
"pull_request_commit","664","nilearn","nilearn","MartinPerez","2015-07-14 10:30:29","updated reference.rst with all fetch dataset methods that were deprecated","0187fe3b1f4c1ccc5137bb7ef4790fe00ea3a2d1",""
"pull_request_commit","664","nilearn","nilearn","mih","2015-07-14 12:00:02","Mention Debian package as installation option (fixes gh-660)","85a96eebb27f55ef554e5a9fc3138783d6ab9ff1",""
"pull_request_commit","664","nilearn","nilearn","AlexandreAbraham","2015-07-14 12:03:21","Add missing atlases in the reference","f61601ac31e18e427475bda7f51befb829794093",""
"pull_request_commit","664","nilearn","nilearn","lesteve","2015-05-13 21:08:10","Put the sign back into glass brain plotting","6c77434291c1701499d734f85431a4a780523e11",""
"pull_request_commit","664","nilearn","nilearn","chrisfilo","2015-07-13 10:09:59","Added option to represent negative values in glass brain. Closes #455.","b70a2bd1794f36345d3923a8216ea4f2f1155f67",""
"pull_request_commit","664","nilearn","nilearn","chrisfilo","2015-07-13 13:51:21","Fixed color maps.","b83eb0f443d738ddf284771b18bd23cb5c804d38",""
"pull_request_commit","664","nilearn","nilearn","chrisfilo","2015-07-13 14:20:26","Fixed the plot_connectome inheritance bug.","66d41fa7e20a84c62d798afd116c690af29536cb",""
"pull_request_commit","664","nilearn","nilearn","chrisfilo","2015-07-14 12:11:04","rename plot_negative to plot_abs","5de539d136625ad0eb742a7da55f30ad98e76b5d",""
"pull_request_commit","664","nilearn","nilearn","chrisfilo","2015-07-14 12:27:15","added test","6afe72b890a84d4e8ef01c90cb4559e9131b894b",""
"pull_request_commit","664","nilearn","nilearn","dohmatob","2015-07-14 12:59:27","BF: ""<i8"" ==> ""int"" in test_fetch_adhd (fixes issue #658","5886349645b79ffa5614cf807171e25569f5938c",""
"pull_request_commit","664","nilearn","nilearn","chrisfilo","2015-07-14 13:32:07","added comments simplified code","8d23a8df975e496d2b9a77d0551e7c015fd5de62",""
"pull_request_commit","664","nilearn","nilearn","chrisfilo","2015-07-14 13:32:17","fixed the demo","d7f67ef6e404ad4b22366b7c6a891c9e7dcba6b1",""
"pull_request_commit","664","nilearn","nilearn","chrisfilo","2015-07-14 15:15:49","fixed sign","d34625431f5871d327433756bdab5417a10ea623",""
"pull_request_commit","664","nilearn","nilearn","chrisfilo","2015-07-14 15:16:02","refactor demos","b4fd01ca09f98499892c10e16af37b09c35b369c",""
"pull_request_commit","664","nilearn","nilearn","chrisfilo","2015-07-14 15:24:55","reference the example in docstring","46b4cd2376c10379940a86b9da7038261c6b6b5d",""
"pull_request_commit","664","nilearn","nilearn","chrisfilo","2015-07-14 16:59:49","Revert zero threshold.","317ddc24d4f38a7d0c9c8144ecf239605f112e4e",""
"pull_request_commit","664","nilearn","nilearn","chrisfilo","2015-07-14 17:01:59","sync with upstream","eb23cdd3ede1848cb49a78e654f9df8274a41765",""
"pull_request_commit","664","nilearn","nilearn","chrisfilo","2015-07-14 17:20:09","Added a mention of of the new glass brain functionality.","2baa458775f7bf8a7deab883a5ef7d287270fd58",""
"pull_request_commit","664","nilearn","nilearn","chrisfilo","2015-07-14 17:25:06","fixed identation","4ecde4067a9a15a8bdd446f0b97a0b6e246be1c3",""
"pull_request_commit","664","nilearn","nilearn","AlexandreAbraham","2015-07-15 08:45:29","Reorganize ids in ADHD test","436ed34b32be549c893d5fa3ac64f9798e3e0cc3",""
"pull_request_commit","664","nilearn","nilearn","chrisfilo","2015-07-15 09:42:08","PEP8","c85891d74f0a2234f7ba9d8964e7d48ad42fbadc",""
"pull_request_commit","664","nilearn","nilearn","chrisfilo","2015-07-15 09:48:12","extracted common function","a9b7477f17726a72309cc47bac285c6f39974594",""
"pull_request_commit","664","nilearn","nilearn","GaelVaroquaux","2015-07-15 10:17:51","BUG: fix doc tests

Fix #668","f9f2d47a3d62adf194a1049b4bb8f8ba5b5aa24c",""
"pull_request_commit","664","nilearn","nilearn","chrisfilo","2015-07-15 11:44:36","Refactoring examples and docs.","4f6723041a588ee67a1ed7e73d8f132b2f01756d",""
"pull_request_commit","664","nilearn","nilearn","chrisfilo","2015-07-15 11:48:09","revert t map import","b5282b330b8f0ff66da2042e5a3d3b497883d139",""
"pull_request_commit","664","nilearn","nilearn","chrisfilo","2015-07-15 12:36:15","pep and small refactoring","7d09c9c1bab3092ed103de9b65af8298bc7b436e",""
"pull_request_commit","664","nilearn","nilearn","lesteve","2015-07-15 13:50:45","Slight improvement of the 32-bit python fix

Using i8 dtype to be more explicit","d57331e10939e8472aa8b666abfdabd2970d0b8a",""
"pull_request_commit","664","nilearn","nilearn","KamalakerDadi","2015-05-16 17:48:34","Adding a 4Dplot function displaying as a contours in img_plotting using a Harvard Oxford 4D maps","b494e94e97fbb91e0a864acabbef698ec842b6ae",""
"pull_request_commit","664","nilearn","nilearn","banilo","2015-05-22 19:31:03","simple exposure of new_img_like","a6377a7a38acfc50933bf5371ec81766b7ed2f33",""
"pull_request_commit","664","nilearn","nilearn","banilo","2015-06-11 13:15:09","new_img_like: make affine optional","b22e4b2db19435f4da53ec30823b1ff6e7513fa9",""
"pull_request_commit","664","nilearn","nilearn","KamalakerDadi","2015-06-16 15:49:30","Added view_type='contours_filled' and added some validation steps
to accept correct input to ""view_type"" and added some documentation lines","c0c73e9ab355235209f11b980bb89bf5cbdaa3b7",""
"pull_request_commit","664","nilearn","nilearn","banilo","2015-06-27 08:56:00","new_img_like: niimg compat","2a04f4153bc2a6d85fd72ce375df83ea546fd9b2",""
"pull_request_commit","664","nilearn","nilearn","banilo","2015-06-29 19:08:01","added wrapper","a3b7137257c07e51027ea16659f40da9f8fea913",""
"pull_request_commit","664","nilearn","nilearn","banilo","2015-07-14 11:51:12","restore circular import","705409380f0d1f173edc66df18a548de1b048bb6",""
"pull_request_commit","664","nilearn","nilearn","banilo","2015-07-15 11:31:32","iterm","cb97842b39b1e38a55b6624ac3612a2cbbcd490e",""
"pull_request_commit","664","nilearn","nilearn","banilo","2015-07-15 14:46:10","fix im/exports","087787299045859c3a36178d756b2ae75da7ae7e",""
"pull_request_commit","664","nilearn","nilearn","banilo","2015-07-15 16:43:43","update setup.py","14711fd11cc271fad92c92e27f73b3aa5fde61ac",""
"pull_request_commit","664","nilearn","nilearn","banilo","2015-07-15 17:02:20","add missing init file","11a9de182fb8d08b4ded334057fc77af56d124f7",""
"pull_request_commit","664","nilearn","nilearn","banilo","2015-07-16 06:17:10","cosmit","5c418526f5b9037ae38fde2399fabf6a1873aecc",""
"pull_request_commit","664","nilearn","nilearn","KamalakerDadi","2015-06-18 13:54:01","Fixed new comments","d09cf268067d2694e4fe9b5e91d87f35fc6de7f5",""
"pull_request_commit","664","nilearn","nilearn","KamalakerDadi","2015-06-19 13:24:17","Added plot_prob_atlas in init file and some minute changes","df362ef2a6d4daf74afcf4f8797574b3c33d9fb1",""
"pull_request_commit","664","nilearn","nilearn","KamalakerDadi","2015-06-19 13:27:26","Added an example showing how to plot Harvard Oxford Atlas","0d1c6ff5ccf4bfac557d508981594a7aef41c2a6",""
"pull_request_commit","664","nilearn","nilearn","KamalakerDadi","2015-06-19 13:44:52","Added magic value to show a consistent behaviour with all atlas maps","71c71ae5852f725939c2e057c3433889380992eb",""
"pull_request_commit","664","nilearn","nilearn","KamalakerDadi","2015-06-19 16:26:24","Added plot_prob_atlas entry in plotting documentation","f6f96a0fe9d51daddc3c34ebd3d414eafeed6600",""
"pull_request_commit","664","nilearn","nilearn","KamalakerDadi","2015-06-23 08:48:09","Attempts to fix function threshold towards a more generic usage
and some minor documentation changes","cba0de011353226da3a7ad710178a1217bb20a33",""
"pull_request_commit","664","nilearn","nilearn","KamalakerDadi","2015-06-23 08:53:57","Removed unwanted lines","1da7e086f3136a9ffe704b54393a6d107dbdd4ba",""
"pull_request_commit","664","nilearn","nilearn","KamalakerDadi","2015-06-23 14:19:30","Changed some code in check_threshold function and addressed some comments
changing image name in plotting doc","77b5fb7770da84d7b094aa55b8b73ddfea42ad46",""
"pull_request_commit","664","nilearn","nilearn","KamalakerDadi","2015-06-26 10:58:43","Added tests and fixed some pep8 errors","493c961d463a45c0f6b2b91142a46640a2bedb8e",""
"pull_request_commit","664","nilearn","nilearn","KamalakerDadi","2015-06-29 11:59:43","Fixed almost all comments","75137ca00ef71c9758137bbb12a90c1b56ef1e51",""
"pull_request_commit","664","nilearn","nilearn","KamalakerDadi","2015-06-29 21:00:56","Attempts to fix calling add_contours only once to display both contours and fillings","8ccb8ddb3e0b71d688ea5fdd61193d3c4133e8a8",""
"pull_request_commit","664","nilearn","nilearn","KamalakerDadi","2015-07-12 09:34:22","Added the example which shows visualizing the available 4D atlas maps","823d190ab5f0afe5adac8bf9e69bb7705e2ba980",""
"pull_request_commit","664","nilearn","nilearn","KamalakerDadi","2015-07-12 11:49:54","Fixed ""if"" bug","50dcc504c503c29a2c0bd7b69e567885a05a17ae",""
"pull_request_commit","664","nilearn","nilearn","KamalakerDadi","2015-07-13 11:28:45","Added test to check the output of a score percentile in check_threshold","1300f4b6bd13a289651af1b2777a77805dad9ddc",""
"pull_request_commit","664","nilearn","nilearn","GaelVaroquaux","2015-07-14 09:24:46","ENH: tweak default for plot_prob_atlas

Also, add more atlases in the example","0eece316eb586b46356c328830f7d892a380e0f4",""
"pull_request_commit","664","nilearn","nilearn","KamalakerDadi","2015-07-14 09:55:56","Renamed plot_probabilistic_atlas to plot_overlay and changed
documentation related to plot_probabilistic_atlas","c96c180b4a62565077a5eced56dce2a91a7de650",""
"pull_request_commit","664","nilearn","nilearn","chrisfilo","2015-07-15 12:44:54","initial circleCI file","ebca443eb112422e6ce11382480a38e1e256f7d5",""
"pull_request_commit","664","nilearn","nilearn","chrisfilo","2015-07-15 13:01:20","added dependencies","8d0b01ec5e92bb8019a1ec3c295409a8fc18f01c",""
"pull_request_commit","664","nilearn","nilearn","KamalakerDadi","2015-07-16 07:50:05","Adderessed some recent comments","ea0339d726f29a131512db027589132cdeca7270",""
"pull_request_commit","664","nilearn","nilearn","GaelVaroquaux","2015-07-16 08:06:10","MAINT: have 'make doc' not build example

This is a change of defaults in the Makefile","66a50a41077fb3fad35b17929a91aa2a07731b64",""
"pull_request_commit","664","nilearn","nilearn","AlexandreAbraham","2015-07-16 08:11:06","Use new_img_like everywhere.","c396f0f178aa015090f108443bc00c789072c74c",""
"pull_request_commit","664","nilearn","nilearn","GaelVaroquaux","2015-07-16 08:35:11","MAINT: now minimum requirement for sklearn is 0.13","3fad1ec519d244a9ef110c8f5ef5f5a2a0d2c43f",""
"pull_request_commit","664","nilearn","nilearn","banilo","2015-07-16 08:58:33","integrated Loics comment","45fabe6934625f42294822af3ac4f50d153a9b17",""
"pull_request_commit","664","nilearn","nilearn","GaelVaroquaux","2015-07-16 09:26:53","MAINT: examples are not run by default for docs

Make it really sure that examples are not run by default when building
docs

Related to sphinx-gallery-#46","4013d0efbffa14e77085aa1bf2d37e2d1869dd81",""
"pull_request_commit","664","nilearn","nilearn","GaelVaroquaux","2015-07-16 10:48:12","MAINT: actually make doc not run examples

Fix the error in 84d2ca7","b1dc5bd9bf4305378cb31fa5bb0fff5efeeca12d",""
"pull_request_commit","664","nilearn","nilearn","chrisfilo","2015-07-15 13:07:43","sklearn -> scikit-learn","2685729591dd08470f981d5ebb9d4f4675aed1df",""
"pull_request_commit","664","nilearn","nilearn","chrisfilo","2015-07-15 13:30:36","added penv","cd6cab7135bffcfaeaa7b719fbfe0d457fc422d3",""
"pull_request_commit","664","nilearn","nilearn","chrisfilo","2015-07-15 13:47:16","simplify","71095e7b77489502be0285f3d4ca8b510a107f2f",""
"pull_request_commit","664","nilearn","nilearn","chrisfilo","2015-07-15 14:40:59","install yourself!","d3fc704452c781ddfc24fa8fe3beb33ffec733fd",""
"pull_request_commit","664","nilearn","nilearn","chrisfilo","2015-07-15 15:13:20","added missing dependency","1e3f9751d62c3f2fac20276e11497f6bb4d6015a",""
"pull_request_commit","664","nilearn","nilearn","chrisfilo","2015-07-15 15:19:49","adde Pillow dependency","cc6f752c5891be9f1266bdee23d16ec34381df2b",""
"pull_request_commit","664","nilearn","nilearn","chrisfilo","2015-07-15 15:27:48","added cache","66d88711a78ed1b08e8652c223911ff4b3ab38f9",""
"pull_request_commit","664","nilearn","nilearn","chrisfilo","2015-07-16 06:25:30","fixed make commands","472df769703448df5826929764cb14e9de35fb0d",""
"pull_request_commit","664","nilearn","nilearn","chrisfilo","2015-07-16 07:57:47","move make doc to dependencies to allow caching; catch failing examples","5598c6818ab34698acaa73751092af6d900b73a3",""
"pull_request_commit","664","nilearn","nilearn","chrisfilo","2015-07-16 09:00:32","Add artifact collection.","69b364d47ec411b9716325a4432b9e2db535b2b1",""
"pull_request_commit","664","nilearn","nilearn","chrisfilo","2015-07-16 09:10:49","cleanup","cc192d66c53b07c3d1db67e996d488d9cd776c22",""
"pull_request_commit","664","nilearn","nilearn","chrisfilo","2015-07-16 10:19:59","fixed log parsing","b5d4291deed991cc19767c04c3e3ee84300595fa",""
"pull_request_commit","664","nilearn","nilearn","chrisfilo","2015-07-16 10:47:20","added log to the artifacts","20bbe42c9b714d9cc2770615cf68ffb53b41bcb3",""
"pull_request_commit","664","nilearn","nilearn","banilo","2015-06-27 03:33:29","double-checked manipulation docs","3fc6ddc8119f6964a242870a1de9f22dc3af3ae1",""
"pull_request_commit","664","nilearn","nilearn","banilo","2015-07-16 08:34:00","cosmit","e16cbc6b76005a6ce13175c355ae19a02681a854",""
"pull_request_commit","664","nilearn","nilearn","chrisfilo","2015-07-16 11:10:57","fixed stderr redirect","d0270271c6f0f92f87e434a0cc3afdc0db6b006e",""
"pull_request_commit","664","nilearn","nilearn","KamalakerDadi","2015-07-16 12:11:55","Addressed all the comments at maximum","8e957ba59a82afee60dde6df1ecf52cbaf0ad9be",""
"pull_request_commit","664","nilearn","nilearn","chrisfilo","2015-07-16 12:15:53","debug run","caf73fdcdf832594dcbbdbf508fe22ad243e29f1",""
"pull_request_commit","664","nilearn","nilearn","KamalakerDadi","2015-07-16 12:30:48","Added threshold doc correction","92afe38289c6e658e42b7aa7f931c0ddf7c83aea",""
"pull_request_commit","664","nilearn","nilearn","chrisfilo","2015-07-16 12:40:40","Revert ""debug run""

This reverts commit 7ef94d1cbd19881080a45364e2d78e0b0fde9185.","49664c8879368e8e2dcb167a53295b44b13d0a69",""
"pull_request_commit","664","nilearn","nilearn","banilo","2015-07-16 12:53:53","integrate Loics comments","800d6d3d5e37eaa22f750808a88cac236a2bcea5",""
"pull_request_commit","664","nilearn","nilearn","KamalakerDadi","2015-07-16 13:14:53","Final fix related to documentation in plotting and references","552b20837ff62ac38d5b2f139cfcb15cda7df96f",""
"pull_request_commit","664","nilearn","nilearn","chrisfilo","2015-07-16 13:33:43","Intentionally breaking one of the examples","62fa5567dd76d91151a3cce53a513a3b531d6d6a",""
"pull_request_commit","664","nilearn","nilearn","chrisfilo","2015-07-16 13:50:17","Revert ""Intentionally breaking one of the examples""

This reverts commit c0b0fe0049078a7cc8bfca2b361e40c6acf7a82a.","fca6c31903e1ae0a2f5dca8674c3d519bca108b9",""
"pull_request_commit","664","nilearn","nilearn","amadeus.kanan@gmail.com","2015-08-04 20:49:58","param to grab coords from hemispheres for laterlized atlases","3d8565db4994e559887450e95195390b6993a5ff",""
"pull_request_commit","664","nilearn","nilearn","juhuntenburg","2015-07-13 16:54:37","adding example using destrieux atlas","ae0d19d59ffb5de8754f031b3de0ecded54f2e87",""
"pull_request_commit","664","nilearn","nilearn","juhuntenburg","2015-07-14 09:25:48","simplifying code, reducing subjects","49cd7322ae8637678ef02ff41805b4c5f76929a9",""
"pull_request_commit","664","nilearn","nilearn","amadeus.kanan@gmail.com","2015-07-14 09:46:49","added get_parcellation_coordinates function","9a698a48707484ae6b315d1f89dfd8f3de82cfce",""
"pull_request_commit","664","nilearn","nilearn","amadeus.kanan@gmail.com","2015-07-14 13:53:08","fixed to return dictionary with label regions and coords","4cc1dbdae0698291733155b31f550a34f3a66888",""
"pull_request_commit","664","nilearn","nilearn","amadeus.kanan@gmail.com","2015-07-14 14:19:01","return labels and coords as separate lists","033150c8bf6dc33c5d00380d8a82021bcd525f14",""
"pull_request_commit","664","nilearn","nilearn","amadeus.kanan@gmail.com","2015-07-14 17:15:11","added background_label parameter and now transforming coords out of loop","9fd27da1cbcff8a5577d1a4d5bc31b5c707a81a8",""
"pull_request_commit","664","nilearn","nilearn","juhuntenburg","2015-07-15 08:56:59","improving descriptions","9d0daac1d716f5134a55bbbdfec08b7691252780",""
"pull_request_commit","664","nilearn","nilearn","amadeus.kanan@gmail.com","2015-07-15 12:32:31","referenced functions for prob and parcel atlas cut_coords","7a3b0f90af3c35cb0085e96ad862ded9a26b72b2",""
"pull_request_commit","664","nilearn","nilearn","amadeus.kanan@gmail.com","2015-07-16 07:45:41","added find atlas cut_coords narrative","f9a5d3738fc774ea25ad73ef41a54fcec1c0fcf6",""
"pull_request_commit","664","nilearn","nilearn","amadeus.kanan@gmail.com","2015-07-16 07:48:06","added find atlas cut_coords see also","8488097f1b05839412e0ed46b585c47bd2b960fb",""
"pull_request_commit","664","nilearn","nilearn","amadeus.kanan@gmail.com","2015-07-16 08:02:32","find atlas cut_coords to init","592e2c1b6d1f3834ecf0377e00e7000315a28f25",""
"pull_request_commit","664","nilearn","nilearn","amadeus.kanan@gmail.com","2015-07-16 08:07:47","removed redundancies, takes largest connect component","2fe81eaadc0dd275efb73284fafc255dda0f5d7c",""
"pull_request_commit","664","nilearn","nilearn","amadeus.kanan@gmail.com","2015-07-16 13:30:34","renamed parcellation func","3c6113d6246cb105bb1bce22ac00b6797c4d97bc",""
"pull_request_commit","664","nilearn","nilearn","amadeus.kanan@gmail.com","2015-07-16 13:31:31","simplified narrative with bullets","ca7d98de0d2c20345d5996ebe5e64655918f6f75",""
"pull_request_commit","664","nilearn","nilearn","amadeus.kanan@gmail.com","2015-07-16 13:33:37","coord grab fixed to go with new label_return param","60060132823ea3fbeebcc215ccfd91db8d36f8ed",""
"pull_request_commit","664","nilearn","nilearn","amadeus.kanan@gmail.com","2015-07-16 13:35:10","seealso fix","17770a26c25879068062a82a395ef2e49f765e66",""
"pull_request_commit","664","nilearn","nilearn","amadeus.kanan@gmail.com","2015-07-16 14:10:53","return_label_names param, renamed func,  label_count corrected, pep8","67dc9d4058f3aa8f2870c6bb87d52fe482a98484",""
"pull_request_commit","664","nilearn","nilearn","amadeus.kanan@gmail.com","2015-07-16 14:35:05","docstring","0f99989ba8ed927b813ec5d0cf84b6d69bd4aa7e",""
"pull_request_commit","664","nilearn","nilearn","amadeus.kanan@gmail.com","2015-07-16 14:57:30","tests for find_probabolistic_atlas_cut_coords","53af90b8333d4c2b98b46343ee71a64e6a3227f9",""
"pull_request_commit","664","nilearn","nilearn","amadeus.kanan@gmail.com","2015-07-16 16:16:19","indent","66eb60538c4f2fbaaee4c0c02da73f5cadad1c39",""
"pull_request_commit","664","nilearn","nilearn","amadeus.kanan@gmail.com","2015-07-17 10:13:37","fixes bug in taking largest component and check image, tests amened and passed","ea860450a265ec2337f115defc33c24638c1737c",""
"pull_request_commit","664","nilearn","nilearn","amadeus.kanan@gmail.com","2015-07-17 12:51:50","plots connectomes instead of mats with computed parcel cut coords","c6eeaebfaa872b284769c0d8e51705ba2418293c",""
"pull_request_commit","664","nilearn","nilearn","amadeus.kanan@gmail.com","2015-07-17 15:32:30","pep8","c12e6d59b038d1b99d910410ade39f55209594c8",""
"pull_request_commit","664","nilearn","nilearn","amadeus.kanan@gmail.com","2015-08-04 20:49:58","param to grab coords from hemispheres for laterlized atlases","4c6d295f6284573650d0d0d0969bd3707305f639",""
"pull_request_commit","664","nilearn","nilearn","amadeus.kanan@gmail.com","2015-08-04 21:35:57","param to grab coords from hemispheres for laterlized atlases","4efae7a624125ec8a2265758e17c52fc04bc69b8",""
"pull_request_commit","664","nilearn","nilearn","amadeus.kanan@gmail.com","2015-08-04 22:00:02","Conflicts","8145e994199afbbd416b9f9efc84b66d3531148d",""
"pull_request_commit","664","nilearn","nilearn","amadeus.kanan@gmail.com","2015-08-04 22:38:08","case 2. needs revision.","14976af95dea4034755db8672e9e88f93328c849",""
