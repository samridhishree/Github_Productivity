"rectype","issueid","project_owner","project_name","actor","time","text","action","title"
"issue_title","37","idan","oauthlib","ib-lundgren","2012-05-14 11:10:00","Been brewing quite a big batch of updates to Server...

Server is now adhering very strictly to the spec.
- parameters are only supplied in one source which may be the URI query, the Authorization header or the body and there may not be duplicated params
- all parameters are validated, i.e. client key in database. _just noticed redir uri validation is missing, will add commit later this week._
- the supplied signature is verified, either against a recalculated one or using public key verification

In addition a number of good security practices where added:
- per request ability to require resource owner, realm and verifier params
- default enforcement of HTTPS, configurable using property
- very strict whitelisting checks of all input parameters ensuring they only contain safe characters and are of a certain length, checks can be overloaded in inheriting classes or configured using properties. Used to prevent SQL & OS Command injection, file traversal attacks etc.
- timing attacks are mitigated using near constant time request verification, achieved using dummy values and constant time string comparison (see common.safe_compare)

Note that I also added 3 new verification methods to signature.py and modified the sign_rsa_sha1 to use PyCrypto again. Changed to PyCrypto since python-rsa could not even load a properly formatted public key.
","start issue","Securing server"
"issue_closed","37","idan","oauthlib","ib-lundgren","2012-06-25 12:36:52","","closed issue","Securing server"
"pull_request_title","37","idan","oauthlib","ib-lundgren","2012-05-14 11:10:00","Been brewing quite a big batch of updates to Server...

Server is now adhering very strictly to the spec.
- parameters are only supplied in one source which may be the URI query, the Authorization header or the body and there may not be duplicated params
- all parameters are validated, i.e. client key in database. _just noticed redir uri validation is missing, will add commit later this week._
- the supplied signature is verified, either against a recalculated one or using public key verification

In addition a number of good security practices where added:
- per request ability to require resource owner, realm and verifier params
- default enforcement of HTTPS, configurable using property
- very strict whitelisting checks of all input parameters ensuring they only contain safe characters and are of a certain length, checks can be overloaded in inheriting classes or configured using properties. Used to prevent SQL & OS Command injection, file traversal attacks etc.
- timing attacks are mitigated using near constant time request verification, achieved using dummy values and constant time string comparison (see common.safe_compare)

Note that I also added 3 new verification methods to signature.py and modified the sign_rsa_sha1 to use PyCrypto again. Changed to PyCrypto since python-rsa could not even load a properly formatted public key.
","1228458caf9e2d1e96a823878296c26be6600f43","Securing server"
"issue_comment","37","idan","oauthlib","travisbot","2012-05-14 11:10:37","This pull request [fails](http://travis-ci.org/idangazit/oauthlib/builds/1326006) (merged bc143a14 into c151c9cc).
","",""
"issue_comment","37","idan","oauthlib","travisbot","2012-05-18 22:15:20","This pull request [fails](http://travis-ci.org/idangazit/oauthlib/builds/1371238) (merged de41905d into c151c9cc).
","",""
"issue_comment","37","idan","oauthlib","travisbot","2012-05-18 22:22:01","This pull request [passes](http://travis-ci.org/idangazit/oauthlib/builds/1371303) (merged 1228458c into c151c9cc).
","",""
"pull_request_commit","37","idan","oauthlib","ib-lundgren","2012-05-14 10:26:24","safe_compare for strings","c1b11fc6e001436145a11111d8d05a9ea39cbb50",""
"pull_request_commit","37","idan","oauthlib","ib-lundgren","2012-05-14 10:27:03","hardened server","1d3f39866b5c6565a7ccbad2b25db2bd09d11393",""
"pull_request_commit","37","idan","oauthlib","ib-lundgren","2012-05-14 10:27:37","New and updated server tests","bb036532d43dd8cea81955e5e67aaf3a73f85d17",""
"pull_request_commit","37","idan","oauthlib","ib-lundgren","2012-05-14 10:28:11","Verification methods with pycrypto","bc143a14871fb8ded1ca59b3cc15c582e9c409c3",""
"pull_request_commit","37","idan","oauthlib","ib-lundgren","2012-05-18 22:09:29","Validate callbacks","8b3785d009336bc18a88be3114f376800e5ac4e7",""
"pull_request_commit","37","idan","oauthlib","ib-lundgren","2012-05-18 22:12:28","Requirements fix","de41905da949a8fc72413607d13ca3daead3a19a",""
"pull_request_commit","37","idan","oauthlib","ib-lundgren","2012-05-18 22:20:59","Py2.6 .format fix","1228458caf9e2d1e96a823878296c26be6600f43",""
